{
  "name": "AST_RRHH_HORAS_LOGISTICA",
  "compatibilityLevel": 1400,
  "model": {
    "name": "Modelo",
    "culture": "es-ES",
    "dataSources": [
      {
        "name": "AXINDB22V1",
        "connectionString": "Provider=IBMDADB2.DB2COPY1;Data Source=INDITEX;Persist Security Info=True;User ID=;Location=AXINDB22V1",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "Others"
          }
        ]
      },
      {
        "name": "AXINDB26V1",
        "connectionString": "Provider=IBMDADB2.DB2COPY1;Data Source=INDITEX;Persist Security Info=True;User ID=;Location=AXINDB26V1",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "Others"
          }
        ]
      },
      {
        "name": "AXINMETA4SQLV1",
        "connectionString": "Data Source=AXINSQLM4V1;Initial Catalog=PeopleNet;Persist Security Info=True;User ID=",
        "impersonationMode": "impersonateServiceAccount",
        "provider": "System.Data.SqlClient",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlServer"
          }
        ]
      },
      {
        "name": "AXINDB26FINV1",
        "connectionString": "Provider=IBMDADB2.DB2COPY1;Data Source=INDITEX;Persist Security Info=True;User ID=;Location=AXINDB26FINV1",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "Others"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "COSTE",
        "columns": [
          {
            "name": "ID_EMPRESA_GRUPO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMPRESA_GRUPO"
          },
          {
            "name": "COSTE_SALARIAL_ALMACEN_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COSTE_SALARIAL_ALMACEN_RAW"
          },
          {
            "name": "COSTE_SALARIAL_ESTRUCTURA_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COSTE_SALARIAL_ESTRUCTURA_RAW"
          },
          {
            "name": "COSTE_SS_ALMACEN_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COSTE_SS_ALMACEN_RAW"
          },
          {
            "name": "COSTE_SS_ESTRUCTURA_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COSTE_SS_ESTRUCTURA_RAW"
          },
          {
            "type": "calculated",
            "name": "COSTE_SALARIAL_RAW",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "[COSTE_SALARIAL_ALMACEN_RAW]+[COSTE_SALARIAL_ESTRUCTURA_RAW]"
          },
          {
            "type": "calculated",
            "name": "COSTE_SS_RAW",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "[COSTE_SS_ALMACEN_RAW]+[COSTE_SS_ESTRUCTURA_RAW]"
          },
          {
            "name": "FECHA",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FECHA"
          },
          {
            "name": "ID_ESTRUCTURA_ALMACEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_ESTRUCTURA_ALMACEN"
          },
          {
            "name": "ID_DIVSEC",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_DIVSEC"
          },
          {
            "name": "DIVORG",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DIVORG"
          },
          {
            "name": "SECORG",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SECORG"
          },
          {
            "type": "calculated",
            "name": "DIVSEC",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "right([ID_DIVSEC],4)"
          },
          {
            "name": "NOCTURNIDAD_ALMACEN_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "NOCTURNIDAD_ALMACEN_RAW"
          },
          {
            "name": "HORAS_EXTRA_ALMACEN_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_EXTRA_ALMACEN_RAW"
          },
          {
            "name": "SABADOS_DOMINGOS_FESTIVOS_ALMACEN_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SABADOS_DOMINGOS_FESTIVOS_ALMACEN_RAW"
          },
          {
            "name": "DESEMPENO_ALMACEN_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DESEMPENO_ALMACEN_RAW"
          },
          {
            "name": "ABSENTISMO_ALMACEN_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ABSENTISMO_ALMACEN_RAW"
          },
          {
            "name": "OTROS_CONCEPTOS_ALMACEN_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "OTROS_CONCEPTOS_ALMACEN_RAW"
          },
          {
            "name": "IMPPE23_ALMACEN_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "IMPPE23_ALMACEN_RAW"
          },
          {
            "name": "IMPPE23_ESTRUCTURA_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "IMPPE23_ESTRUCTURA_RAW"
          }
        ],
        "partitions": [
          {
            "name": "COSTE",
            "source": {
              "type": "query",
              "query": "WITH tmeses (ANOMES,\nANO,\nMES,\nFECHADESDE,\nFECHA_INICIO ,\nFECHA_FIN) AS (\nSELECT\n\tCAST(YEAR( DATE(FECHA_HASTA)) AS CHAR(4))|| RIGHT('0' || RTRIM(CAST(CAST(MONTH(DATE(FECHA_HASTA)) AS CHAR(2)) AS VARCHAR(2))),\n\t2) AS ANOMES,\n\tYEAR( DATE(FECHA_HASTA)) AS ANO,\n\tMONTH(DATE(FECHA_HASTA)) AS MES,\n\tDATE(FECHA_DESDE) AS FECHADESDE,\n\tDATE(FECHA_HASTA) AS FECHA_INICIO,\n\t(DATE(FECHA_HASTA) + 1 MONTH) -1 DAY AS FECHA_FIN\nFROM\n\t(\n\t\tSELECT CAST('01/01/2013' AS VARCHAR(10)) FECHA_DESDE,\n\t\tCAST('01/01/2050' AS VARCHAR(10)) AS FECHA_HASTA\n\tFROM\n\t\tsysibm.sysdummy1 ) A\nUNION ALL\nSELECT\n\tCAST(YEAR(FECHA_INICIO - 1 MONTH) AS CHAR(4))|| RIGHT('0' || RTRIM(CAST(CAST(MONTH(FECHA_INICIO - 1 MONTH) AS CHAR(2)) AS VARCHAR(2))),\n\t2) AS ANOMES,\n\tYEAR(FECHA_INICIO - 1 MONTH) AS ANO,\n\tMONTH(FECHA_INICIO - 1 MONTH) AS MES,\n\tFECHADESDE AS FECHADESDE,\n\tFECHA_INICIO -1 MONTH AS FECHA_INICIO,\n\tFECHA_INICIO -1 DAY AS FECHA_FIN\nFROM\n\ttmeses\nWHERE\n\tFECHA_INICIO - 1 MONTH >= FECHADESDE ),\n----------------------------------------------------------   \n--TABLA EMPRESA_GRUPO_DIVISION_SECCION HARDCODED   \n----------------------------------------------------------   \n EMPRESA_GRUPO_DIVISION_SECCION (ID_EMPRESA_GRUPO_DIVISION_SECCION ,\nID_EMPRESA_GRUPO ,\nNOMBRE_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION ,\nNOM_DIVSEC ) AS (\nSELECT\n\tID_DIVSEC,\n\tID_EMPRESA_GRUPO,\n\tEMPRESA_GRUPO,\n\tDIVISION,\n\tSECCION,\n\tNOM_DIVSEC\nFROM\n\t(\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'991304' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [1304]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t5 AS SECCION,\n\t\t'991305' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [1305]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'998525' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'998537' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [8537]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t41 AS ID_EMPRESA_GRUPO,\n\t\t'PULL & BEAR LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'418525' AS ID_DIVSEC,\n\t\t'PULL & BEAR LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\n\t\t\n\t\t\nUNION\n\tSELECT\n\t\t41 AS ID_EMPRESA_GRUPO,\n\t\t'PULL & BEAR LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'418537' AS ID_DIVSEC,\n\t\t'PULL & BEAR LOGISTICA [8537]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\n\t\t\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t03 AS DIVISION,\n\t\t17 AS SECCION,\n\t\t'1890317' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [0317]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t03 AS SECCION,\n\t\t'1891303' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [1303]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'1898525' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t5 AS DIVISION,\n\t\t6 AS SECCION,\n\t\t'370506' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [0506]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t5 AS SECCION,\n\t\t'371305' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [1305]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t28 AS DIVISION,\n\t\t4 AS SECCION,\n\t\t'372804' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [2804]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'378525' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'378537' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [8537]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t9 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t18 AS SECCION,\n\t\t'91318' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [1318]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t32 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA HOME LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'328525' AS ID_DIVSEC,\n\t\t'ZARA HOME LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'431304' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [1304]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t05 AS SECCION,\n\t\t'431305' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [1305]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'438525' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'438537' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [8537]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'141300' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1300]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t12 AS SECCION,\n\t\t'141312' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1312]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t09 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'140900' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1312]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'268525' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t26 AS SECCION,\n\t\t'268526' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8526]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t27 AS SECCION,\n\t\t'268527' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8527]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t28 AS SECCION,\n\t\t'268528' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8528]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t29 AS SECCION,\n\t\t'268529' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8529]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'261300' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [1300]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t63 AS DIVISION,\n\t\t08 AS SECCION,\n\t\t'266308' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [6308]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t12 AS ID_EMPRESA_GRUPO,\n\t\t'LEFTIES LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t19 AS SECCION,\n\t\t'121319' AS ID_DIVSEC,\n\t\t'LEFTIES LOGISTICA [1319]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t23 AS ID_EMPRESA_GRUPO,\n\t\t'OYSHO LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t0 AS SECCION,\n\t\t'231300' AS ID_DIVSEC,\n\t\t'OYSHO LOGISTICA [1300]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t01 AS SECCION,\n\t\t'611301' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [1301]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'611304' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [1304]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'618525' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t357 AS ID_EMPRESA_GRUPO,\n\t\t'TORDERA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'3578525' AS ID_DIVSEC,\n\t\t'TORDERA LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\t--ATG   \n\n\t\tSELECT 68 AS ID_EMPRESA_GRUPO,\n\t\t'FASHION LOGISTICS FORWARDERS' AS EMPRESA_GRUPO,\n\t\t00 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'680000' AS ID_DIVSEC,\n\t\t'FASHION LOGISTICS FORWARDERS []' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t330 AS ID_EMPRESA_GRUPO,\n\t\t'INDITEX LOGISTICA' AS EMPRESA_GRUPO,\n\t\t00 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'3300000' AS ID_DIVSEC,\n\t\t'INDITEX LOGISTICA []' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\t--ATG   \n\n\t\tSELECT 20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t51 AS DIVISION,\n\t\t73 AS SECCION,\n\t\t'205173' AS ID_DIVSEC,\n\t\t'TEMPE [205173]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t30 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'203000' AS ID_DIVSEC,\n\t\t'TEMPE [203000]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t51 AS DIVISION,\n\t\t34 AS SECCION,\n\t\t'205134' AS ID_DIVSEC,\n\t\t'TEMPE [205134]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t50 AS DIVISION,\n\t\t41 AS SECCION,\n\t\t'205041' AS ID_DIVSEC,\n\t\t'TEMPE [205041]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t398 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA CABANILLAS' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'3988525' AS ID_DIVSEC,\n\t\t'ALMACEN PAQUETE [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tSYSIBM.SYSDUMMY1 EG\nUNION\n\tSELECT\n\t\t64 AS ID_EMPRESA_GRUPO,\n\t\t'INDIPUNT' AS EMPRESA_GRUPO,\n\t\t91 AS DIVISION,\n\t\t15 AS SECCION,\n\t\t'649115' AS ID_DIVSEC,\n\t\t'INDIPUNT [9115]' AS NOM_DIVSEC\n\tFROM\n\t\tSYSIBM.SYSDUMMY1 EG ) Q_UNION ) ,\nEMPRESASFILTRO (ID_EMPRESA,\nDIVISION,\nSECCION) AS (\nSELECT\n\tDISTINCT ID_EMPRESA_GRUPO,\n\tDIVISION,\n\tSECCION\nFROM\n\tEMPRESA_GRUPO_DIVISION_SECCION ) ,\n----------------------------------------------------------   \n--TABLA DIVSEC MAESTRA   \n----------------------------------------------------------   \n DIVSEC_MAESTRA (ID_EMPRESA_GRUPO ,\nNOMBRE_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION ,\nID_DIVSEC ,\nNOM_DIVSEC) AS (\nSELECT\n\tid_empresa AS ID_EMPRESA_GRUPO,\n\tNULL AS NOMBRE_EMPRESA_GRUPO,\n\tNULL AS DIVISION,\n\tNULL AS SECCION,\n\tNULL AS ID_DIVSEC,\n\tNULL AS NOM_DIVSEC\nFROM\n\tempresasFiltro\nUNION ALL\nSELECT\n\t9 AS ID_EMPRESA_GRUPO,\n\tNULL AS NOMBRE_EMPRESA_GRUPO,\n\t13 AS DIVISION,\n\t18 AS SECCION,\n\t'91318' AS ID_DIVSEC,\n\t'PLATAFORMA LOGISTICA MECO' NOM_DIVSEC\nFROM\n\tEMPRESASFILTRO\nWHERE\n\tID_EMPRESA = 37 ),\n/*Se crea una tabla temporal con las tuplas posibles de consulta: AÑO-EMPRESA-DIVISION*/\n/*Esto se hace para acceder con el nuevo indice a la tabla RRHH.CONCEPTO_EMPLEADO_SALARIO*/\ntanos_divisiones(ANO ,\nMES ,\nEMPRESA) AS (\nSELECT\n\tANO,\n\tMES,\n\tID_EMPRESA\nFROM\n\ttmeses m,\n\tempresasFiltro d\nGROUP BY\n\tANO,\n\tMES,\n\tID_EMPRESA ),\ntanos_divisiones_Absent(ANO ,\nMES ,\nEMPRESA,\nDIVISION,\nSECCION ) AS (\nSELECT\n\tANO,\n\tMES,\n\tID_EMPRESA ,\n\tDIVISION,\n\tSECCION\nFROM\n\ttmeses m,\n\tempresasFiltro d\nGROUP BY\n\tANO,\n\tMES,\n\tID_EMPRESA,\n\tDIVISION,\n\tSECCION ),\n/*Código añadido para contemplar Logistica MECO, cuyo código empresa es diferente para oficinas que almacen*/\ntanos_divisiones_excepcion (ANO ,\nMES ,\nEMPRESA_FILTRO ,\nEMPRESA ,\nDIVISION ) AS (\nSELECT\n\tANO,\n\tMES,\n\tEMPRESA AS EMPRESA_FILTRO,\n\t9 AS EMPRESA,\n\tdm.DIVISION\nFROM\n\ttanos_divisiones t\nINNER JOIN EMPRESA_GRUPO_DIVISION_SECCION dm ON\n\tdm.ID_EMPRESA_GRUPO = 9\nWHERE\n\tEMPRESA = 37\nGROUP BY\n\tANO,\n\tMES,\n\tEMPRESA,\n\tDIVISION ),\n--Calculo SalarioBruto                                 \n agrupaSalarioBruto(ANO ,\nMES ,\nEMPRESA_FILTRO ,\nEMPRESA ,\nDIVISION ,\nSECCION ,\nID_CONCEPTO_SALARIO ,\nIMPORTE ) AS (\nSELECT\n\tes.ANO,\n\tes.MES,\n\tes.ID_EMPRESA_GRUPO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO,\n\tSUM(es.IMPORTE)\nFROM\n\tRRHH.CONCEPTO_EMPRESA_SALARIO ES\nINNER JOIN tanos_divisiones ad ON\n\tad.ANO = ES.ANO\n\tAND ad.MES = ES.MES\n\tAND ES.ID_EMPRESA_GRUPO = ad.EMPRESA\nGROUP BY\n\tes.ANO,\n\tes.MES,\n\tes.ID_EMPRESA_GRUPO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO\nUNION ALL\nSELECT\n\tes.ANO,\n\tes.MES,\n\tad.EMPRESA_FILTRO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO,\n\tSUM(es.IMPORTE)\nFROM\n\tRRHH.CONCEPTO_EMPRESA_SALARIO ES\nINNER JOIN tanos_divisiones_excepcion ad ON\n\tad.ANO = ES.ANO\n\tAND ad.MES = ES.MES\n\tAND ES.ID_EMPRESA_GRUPO = ad.EMPRESA\n\tAND ES.DIVISION = ad.DIVISION\nGROUP BY\n\tes.ANO,\n\tes.MES,\n\tad.EMPRESA_FILTRO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO\nUNION\nSELECT\n\tes.ANO,\n\tes.MES,\n\tes.ID_EMPRESA_GRUPO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO,\n\tSUM(DOUBLE(decrypt_char(ES.IMPORTE, 'ee6u7xjgRsRR6g8dRQfLuHkF+4FGUlpy6naR0Ck66wYWX2uoe')))\nFROM\n\tRRHH.CONCEPTO_EMPLEADO_COSTE_ABSENTISMO ES\nINNER JOIN tanos_divisiones_Absent ad ON\n\tad.ANO = ES.ANO\n\tAND ad.MES = ES.MES\n\tAND ES.ID_EMPRESA_GRUPO = ad.EMPRESA\n\tAND ES.DIVISION = ad.DIVISION\n\tAND ES.SECCION = ad.SECCION\nGROUP BY\n\tes.ANO,\n\tes.MES,\n\tes.ID_EMPRESA_GRUPO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO\nUNION\nSELECT\n\tes.ANO,\n\tes.MES,\n\tad.EMPRESA_FILTRO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO,\n\tSUM(DOUBLE(decrypt_char(ES.IMPORTE, 'ee6u7xjgRsRR6g8dRQfLuHkF+4FGUlpy6naR0Ck66wYWX2uoe')))\nFROM\n\tRRHH.CONCEPTO_EMPLEADO_COSTE_ABSENTISMO es\nINNER JOIN tanos_divisiones_excepcion ad ON\n\tad.ANO = ES.ANO\n\tAND ad.MES = ES.MES\n\tAND ES.ID_EMPRESA_GRUPO = ad.EMPRESA\n\tAND ES.DIVISION = ad.DIVISION\nGROUP BY\n\tes.ANO,\n\tes.MES,\n\tad.EMPRESA_FILTRO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO ),\n/*Tabla temporal en la que se vuelcan los registros con los que se va a trabajar */\nagrupaSalario(ANO ,\nMES ,\nID_EMPRESA_FILTRO ,\nID_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION ,\nID_DIVSEC ,\nID_CONCEPTO_SALARIO ,\nIMPORTE,\nDIVORG,\nSECORG ) AS (\nSELECT\n\tES.ANO,\n\tES.MES,\n\tES.EMPRESA_FILTRO AS ID_EMPRESA_FILTRO,\n\tES.EMPRESA AS ID_EMPRESA_GRUPO,\n\tEF.DIVISION,\n\tEF.SECCION,\n\tEF.ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\tES.ID_CONCEPTO_SALARIO,\n\tES.IMPORTE,\n\tES.DIVISION,\n\tES.SECCION\nFROM\n\tagrupaSalarioBruto ES\nLEFT JOIN EMPRESA_GRUPO_DIVISION_SECCION EF ON\n\tES.EMPRESA = EF.ID_EMPRESA_GRUPO\n\tAND ES.DIVISION = EF.DIVISION\n\tAND ES.SECCION = EF.SECCION\nWHERE\n\tES.EMPRESA <> 9\nUNION ALL\nSELECT\n\tES.ANO,\n\tES.MES,\n\tES.EMPRESA_FILTRO AS ID_EMPRESA_FILTRO,\n\t37 AS ID_EMPRESA_GRUPO,\n\tNULL AS DIVISION,\n\tNULL AS SECCION,\n\tNULL AS ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\tES.ID_CONCEPTO_SALARIO,\n\tES.IMPORTE,\n\tES.DIVISION,\n\tES.SECCION\nFROM\n\tagrupaSalarioBruto ES\nINNER JOIN EMPRESA_GRUPO_DIVISION_SECCION EF ON\n\tES.EMPRESA = EF.ID_EMPRESA_GRUPO\n\tAND ES.DIVISION = EF.DIVISION\n\tAND ES.SECCION = EF.SECCION\nWHERE\n\tES.EMPRESA = 9\n\tAND ES.EMPRESA_FILTRO <> 9 ),\n-----------------------------------------------------------------------------------------------------------------------   \n--ESTRUCTURA INDICADORES (1 NIVEL)   \n-----------------------------------------------------------------------------------------------------------------------   \n ESTRUCTURA_INDICADORES (ID_CONCEPTO ,\nID_UNIDAD_ORGANIZATIVA ,\nORDER_H1 ,\nCONCEPTO_H1 ,\nID_CONCEPTO_SALARIO_CONCEPTO_INFORME ,\nID_CONCEPTO_SALARIO ,\nSIGNO ,\nID_UO ,\nANO ,\nMES ,\nID_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION,\nDIVORG,\nSECORG )\n--ESTRUCTURA CONCEPTOS   \n AS (\nSELECT\n\tCI.ID_CONCEPTO_INFORME AS ID_CONCEPTO,\n\tCI.ID_UNIDAD_ORGANIZATIVA,\n\tORDEN AS ORDER_H1,\n\tCASE\n\t\tWHEN CI.DESCRIPCION = 'GASTO SALARIAL' THEN 'COSTE_SALARIAL_TOTAL_EMPRESA'\n\t\tWHEN CI.DESCRIPCION = 'GASTO SEGURIDAD SOCIAL' THEN 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA'\n\t\tELSE CI.DESCRIPCION\n\tEND AS CONCEPTO_H1,\n\tCSCI.ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tCSCI.ID_CONCEPTO_SALARIO,\n\tCSCI.SIGNO,\n\tUO.DESCRIPCION,\n\tQ_ES.ANO,\n\tQ_ES.MES,\n\tQ_ES.ID_EMPRESA_GRUPO,\n\tQ_ES.DIVISION,\n\tQ_ES.SECCION,\n\tQ_ES.DIVORG,\n\tQ_ES.SECORG\nFROM\n\tRRHH.CONCEPTO_INFORME CI\nLEFT JOIN RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME CSCI ON\n\tCI.ID_CONCEPTO_INFORME = CSCI.ID_CONCEPTO_INFORME\nINNER JOIN RRHH.UNIDAD_ORGANIZATIVA UO ON\n\tCI.ID_UNIDAD_ORGANIZATIVA = UO.ID_UNIDAD_ORGANIZATIVA\n\tAND CI.ID_UNIDAD_ORGANIZATIVA = 1\n\t--ESTRUCTURA   \nCROSS JOIN (\n\tSELECT\n\t\tDISTINCT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tDIVISION,\n\t\tSECCION,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tagrupASalario\n\tWHERE\n\t\tSECCION IS NULL\n\t\tOR ID_EMPRESA_GRUPO = 9) AS Q_ES\nINNER JOIN EMPRESASFiltro ON\n\tID_INFORME = Q_ES.ID_EMPRESA_GRUPO\nWHERE\n\tORDEN < 10\n\tAND ID_EMPRESA <> 9\nUNION\n--ALMACEN CONCEPTOS   \n-----------------------------------------------------------------------------------------------------------   \n\n\tSELECT CI.ID_CONCEPTO_INFORME AS ID_CONCEPTO,\n\tCI.ID_UNIDAD_ORGANIZATIVA,\n\tORDEN AS ORDER_H1,\n\tCASE\n\t\tWHEN CI.DESCRIPCION = 'GASTO SALARIAL' THEN 'COSTE_SALARIAL_TOTAL_EMPRESA'\n\t\tWHEN CI.DESCRIPCION = 'GASTO SEGURIDAD SOCIAL' THEN 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA'\n\t\tELSE CI.DESCRIPCION\n\tEND AS CONCEPTO_H1,\n\tCSCI.ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tCSCI.ID_CONCEPTO_SALARIO,\n\tCSCI.SIGNO,\n\tUO.DESCRIPCION,\n\tQ_ES.ANO,\n\tQ_ES.MES,\n\tQ_ES.ID_EMPRESA_GRUPO,\n\tQ_ES.DIVISION,\n\tQ_ES.SECCION,\n\tQ_ES.DIVORG,\n\tQ_ES.SECORG\nFROM\n\tRRHH.CONCEPTO_INFORME CI\nLEFT JOIN RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME CSCI ON\n\tCI.ID_CONCEPTO_INFORME = CSCI.ID_CONCEPTO_INFORME\nINNER JOIN RRHH.UNIDAD_ORGANIZATIVA UO ON\n\tCI.ID_UNIDAD_ORGANIZATIVA = UO.ID_UNIDAD_ORGANIZATIVA\n\tAND CI.ID_UNIDAD_ORGANIZATIVA = 2\n\t--ALMACEN   \nCROSS JOIN (\n\tSELECT\n\t\tDISTINCT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tDIVISION,\n\t\tSECCION,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tagrupASalario\n\tWHERE\n\t\tSECCION IS NOT NULL\n\t\tAND ID_EMPRESA_GRUPO <> 9) AS Q_ES\nINNER JOIN empresASFiltro ON\n\tID_INFORME = Q_ES.ID_EMPRESA_GRUPO\nWHERE\n\tORDEN<10\n\tAND ID_EMPRESA <> 9\nUNION\n--3 NIVELES         \n\n\tSELECT H1.ID_CONCEPTO_INFORME AS ID_CONCEPTO,\n\tH1.ID_UNIDAD_ORGANIZATIVA,\n\tH1.ORDEN AS ORDER_H1,\n\tCASE\n\t\tWHEN H1.DESCRIPCION = 'GASTO SALARIAL' THEN 'COSTE_SALARIAL_TOTAL_EMPRESA'\n\t\tWHEN H1.DESCRIPCION = 'GASTO SEGURIDAD SOCIAL' THEN 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA'\n\t\tELSE H1.DESCRIPCION\n\tEND AS CONCEPTO_H1,\n\tCSCI.ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tCSCI.ID_CONCEPTO_SALARIO,\n\tCSCI.SIGNO,\n\tUO.DESCRIPCION,\n\tQ_ES.ANO,\n\tQ_ES.MES,\n\tQ_ES.ID_EMPRESA_GRUPO,\n\tQ_ES.DIVISION,\n\tQ_ES.SECCION,\n\tQ_ES.DIVORG,\n\tQ_ES.SECORG\nFROM\n\tRRHH.CONCEPTO_INFORME H1\nINNER JOIN RRHH.CONCEPTO_INFORME H2 ON\n\tH1.ID_CONCEPTO_INFORME = H2.ID_CONCEPTO_INFORME_RELACIONADO\nINNER JOIN RRHH.CONCEPTO_INFORME H3 ON\n\tH2.ID_CONCEPTO_INFORME = H3.ID_CONCEPTO_INFORME_RELACIONADO\nLEFT JOIN RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME CSCI ON\n\tH3.ID_CONCEPTO_INFORME = CSCI.ID_CONCEPTO_INFORME\nINNER JOIN RRHH.UNIDAD_ORGANIZATIVA UO ON\n\tH3.ID_UNIDAD_ORGANIZATIVA = UO.ID_UNIDAD_ORGANIZATIVA\n\tAND UO.ID_UNIDAD_ORGANIZATIVA = 2\n\t--SOLO ALMACEN         \nCROSS JOIN (\n\tSELECT\n\t\tDISTINCT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tDIVISION,\n\t\tSECCION,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tagrupASalario\n\tWHERE\n\t\tSECCION IS NOT NULL\n\t\tAND ID_EMPRESA_GRUPO <> 9) AS Q_ES\nINNER JOIN empresASFiltro ON\n\tH1.ID_INFORME = Q_ES.ID_EMPRESA_GRUPO\nWHERE\n\tH2.ORDEN>10\n\tAND H2.ORDEN<1000\n\tAND H3.ORDEN>1000\n\tAND H2.DESCRIPCION <> 'NUMERO'\n\tAND H3.DESCRIPCION <> 'Nº RESALTAS'\n\tAND H2.DESCRIPCION <> 'Nº RESALTAS'\nUNION\n--2 NIVELES         \n\n\tSELECT H1.ID_CONCEPTO_INFORME AS ID_CONCEPTO,\n\tH1.ID_UNIDAD_ORGANIZATIVA,\n\tH1.ORDEN AS ORDER_H1,\n\tCASE\n\t\tWHEN H1.DESCRIPCION = 'GASTO SALARIAL' THEN 'COSTE_SALARIAL_TOTAL_EMPRESA'\n\t\tWHEN H1.DESCRIPCION = 'GASTO SEGURIDAD SOCIAL' THEN 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA'\n\t\tELSE H1.DESCRIPCION\n\tEND AS CONCEPTO_H1,\n\tCSCI.ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tCSCI.ID_CONCEPTO_SALARIO,\n\tCSCI.SIGNO,\n\tUO.DESCRIPCION,\n\tQ_ES.ANO,\n\tQ_ES.MES,\n\tQ_ES.ID_EMPRESA_GRUPO,\n\tQ_ES.DIVISION,\n\tQ_ES.SECCION,\n\tQ_ES.DIVORG,\n\tQ_ES.SECORG\nFROM\n\tRRHH.CONCEPTO_INFORME H1\nINNER JOIN RRHH.CONCEPTO_INFORME H2 ON\n\tH1.ID_CONCEPTO_INFORME = H2.ID_CONCEPTO_INFORME_RELACIONADO\nLEFT JOIN RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME CSCI ON\n\tH2.ID_CONCEPTO_INFORME = CSCI.ID_CONCEPTO_INFORME\nINNER JOIN RRHH.UNIDAD_ORGANIZATIVA UO ON\n\tH2.ID_UNIDAD_ORGANIZATIVA = UO.ID_UNIDAD_ORGANIZATIVA\n\tAND UO.ID_UNIDAD_ORGANIZATIVA = 2\n\t--SOLO ALMACEN         \nCROSS JOIN (\n\tSELECT\n\t\tDISTINCT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tDIVISION,\n\t\tSECCION,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tagrupASalario\n\tWHERE\n\t\tSECCION IS NOT NULL\n\t\tAND ID_EMPRESA_GRUPO <> 9) AS Q_ES\nINNER JOIN empresASFiltro ON\n\tH1.ID_INFORME = Q_ES.ID_EMPRESA_GRUPO\nWHERE\n\tH1.ORDEN<100\n\tAND H2.ORDEN>1000\n\tAND H2.DESCRIPCION <> 'NUMERO'\n\tAND H2.DESCRIPCION <> 'Nº RESALTAS'\n\t--Se añade el concepto IMPPE13 para ALMACEN, no existe en la tabla RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME pero se necesita restar de COSTE_SALARIAL_ALMACEN\nUNION\nSELECT\n\t-1 AS ID_CONCEPTO,\n\t2 AS ID_UNIDAD_ORGANIZATIVA,\n\t-1 AS ORDER_H1,\n\t'IMPPE13' AS CONCEPTO_H1,\n\t-1 AS ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tS.ID_CONCEPTO_SALARIO,\n\t1 AS SIGNO,\n\t'ALMACEN' AS DESCRIPCION,\n\tS.ANO,\n\tS.MES,\n\tS.ID_EMPRESA_GRUPO,\n\tS.DIVISION,\n\tS.SECCION,\n\tS.DIVORG,\n\tS.SECORG\nFROM\n\tagrupASalario S\nINNER JOIN empresASFiltro F ON\n\tF.ID_EMPRESA = S.ID_EMPRESA_GRUPO\nWHERE\n\tS.SECCION IS NOT NULL\n\tAND S.ID_EMPRESA_GRUPO <> 9\n\tAND S.ID_CONCEPTO_SALARIO = 128\n\t--Se añade el concepto IMPPE23, no existe en la tabla RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME pero se necesita restar de COSTE_SALARIAL_ESTRUCTURA\nUNION\nSELECT\n\t-1 AS ID_CONCEPTO,\n\t2 AS ID_UNIDAD_ORGANIZATIVA,\n\t-1 AS ORDER_H1,\n\t'IMPPE23' AS CONCEPTO_H1,\n\t-1 AS ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tS.ID_CONCEPTO_SALARIO,\n\t1 AS SIGNO,\n\t'ALMACEN' AS DESCRIPCION,\n\tS.ANO,\n\tS.MES,\n\tS.ID_EMPRESA_GRUPO,\n\tS.DIVISION,\n\tS.SECCION,\n\tS.DIVORG,\n\tS.SECORG\nFROM\n\tagrupASalario S\nINNER JOIN empresASFiltro F ON\n\tF.ID_EMPRESA = S.ID_EMPRESA_GRUPO\nWHERE\n\tS.SECCION IS NOT NULL\n\tAND S.ID_EMPRESA_GRUPO <> 9\n\tAND S.ID_CONCEPTO_SALARIO = 104\nUNION\nSELECT\n\t-1 AS ID_CONCEPTO,\n\t1 AS ID_UNIDAD_ORGANIZATIVA,\n\t-1 AS ORDER_H1,\n\t'IMPPE23' AS CONCEPTO_H1,\n\t-1 AS ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tS.ID_CONCEPTO_SALARIO,\n\t1 AS SIGNO,\n\t'ESTRUCTURA' AS DESCRIPCION,\n\tS.ANO,\n\tS.MES,\n\tS.ID_EMPRESA_GRUPO,\n\tS.DIVISION,\n\tS.SECCION,\n\tS.DIVORG,\n\tS.SECORG\nFROM\n\tagrupASalario S\nINNER JOIN empresASFiltro F ON\n\tF.ID_EMPRESA = S.ID_EMPRESA_GRUPO\nWHERE\n\t(S.SECCION IS NULL\n\tOR S.ID_EMPRESA_GRUPO = 9)\n\tAND S.ID_CONCEPTO_SALARIO = 104 ),\n-----------------------------------------------------------------------------------------------------------------------   \n--DATOS   \n-----------------------------------------------------------------------------------------------------------------------   \n DETALLE_DIVSEC (ANO ,\nMES ,\nANOMES ,\nID_EMPRESA_GRUPO ,\nNOMBRE_EMPRESA_GRUPO ,\nID_DIVSEC ,\nNOM_DIVSEC ,\nID_UO ,\nORDER_H1 ,\nCONCEPTO_H1 ,\nVALOR,\nDIVORG,\nSECORG ) AS (\nSELECT\n\tEI.ANO,\n\tEI.MES,\n\tCAST(EI.ANO AS CHAR(4))|| RIGHT('0' || RTRIM(CAST(CAST(EI.MES AS CHAR(2)) AS VARCHAR(2))),\n\t2) AS ANOMES,\n\tEI.ID_EMPRESA_GRUPO,\n\tDM.NOMBRE_EMPRESA_GRUPO,\n\tDM.ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\tDM.NOM_DIVSEC,\n\tEI.ID_UO,\n\tEI.ORDER_H1,\n\tEI.CONCEPTO_H1,\n\tSUM(EI.SIGNO * ES.IMPORTE) AS VALOR ,\n\tEI.DIVORG,\n\tEI.SECORG\nFROM\n\tESTRUCTURA_INDICADORES EI\nLEFT JOIN agrupASalario ES ON\n\tEI.ANO = ES.ANO\n\tAND EI.MES = ES.MES\n\tAND EI.ID_EMPRESA_GRUPO = ES.ID_EMPRESA_GRUPO\n\tAND COALESCE(EI.DIVORG,\n\t0) = COALESCE(ES.DIVORG,\n\t0)\n\tAND COALESCE(EI.SECORG,\n\t0) = COALESCE(ES.SECORG,\n\t0)\n\tAND EI.ID_CONCEPTO_SALARIO = ES.ID_CONCEPTO_SALARIO\n\t--INNER JOIN MAESTROS.EMPRESA_GRUPO E ON EI.ID_EMPRESA_GRUPO = E.ID_EMPRESA_GRUPO   \nLEFT JOIN EMPRESA_GRUPO_DIVISION_SECCION DM ON\n\tEI.ID_EMPRESA_GRUPO = DM.ID_EMPRESA_GRUPO\n\tAND COALESCE(EI.DIVISION,\n\t0) = COALESCE(DM.DIVISION,\n\t0)\n\tAND COALESCE(EI.SECCION,\n\t0) = COALESCE(DM.SECCION,\n\t0)\nWHERE\n\t(ei.ID_UO = 'ALMACEN'\n\tAND NOT ID_EMPRESA_GRUPO_DIVISION_SECCION IS NULL)\n\tOR (ei.ID_UO = 'ESTRUCTURA')\nGROUP BY\n\tEI.ANO,\n\tEI.MES,\n\tCAST(EI.ANO AS CHAR(4))|| RIGHT('0' || RTRIM(CAST(CAST(EI.MES AS CHAR(2)) AS VARCHAR(2))),\n\t2),\n\tDM.ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\tDM.NOM_DIVSEC,\n\tEI.ID_EMPRESA_GRUPO,\n\tDM.NOMBRE_EMPRESA_GRUPO,\n\tEI.ID_UO,\n\tEI.CONCEPTO_H1,\n\tEI.ORDER_H1,\n\tEI.DIVORG,\n\tEI.SECORG ),\nDETALLE_DIVSEC_VALOR (ANO ,\nMES ,\nID_EMPRESA_GRUPO,\nID_DIVSEC ,\nID_UO ,\nCOSTE_SALARIAL_TOTAL_EMPRESA ,\nTOTAL_SEGURIDAD_SOCIAL_EMPRESA,\nNOCTURNIDAD,\nHORAS_EXTRA,\nSABADOS_DOMINGOS_FESTIVOS,\nDESEMPENO,\nABSENTISMO,\nIMPPE23,\nIMPPE13,\nOTROS_CONCEPTOS,\nDIVORG,\nSECORG ) AS (\nSELECT\n\tANO,\n\tMES,\n\tID_EMPRESA_GRUPO,\n\tID_DIVSEC,\n\tID_UO,\n\tSUM(COSTE_SALARIAL_TOTAL_EMPRESA) AS COSTE_SALARIAL_TOTAL_EMPRESA,\n\tSUM(TOTAL_SEGURIDAD_SOCIAL_EMPRESA) AS TOTAL_SEGURIDAD_SOCIAL_EMPRESA,\n\tSUM(NOCTURNIDAD) AS NOCTURNIDAD,\n\tSUM(HORAS_EXTRA) AS HORAS_EXTRA,\n\tSUM(SABADOS_DOMINGOS_FESTIVOS) AS SABADOS_DOMINGOS_FESTIVOS,\n\tSUM(DESEMPENO) AS DESEMPENO,\n\tSUM(ABSENTISMO) AS ABSENTISMO,\n\tSUM(IMPPE23) AS IMPPE23,\n\tSUM(IMPPE13) AS IMPPE13,\n\tSUM(OTROS_CONCEPTOS) AS OTROS_CONCEPTOS,\n\tQ.DIVORG,\n\tQ.SECORG\nFROM\n\t(\n\t\tSELECT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tID_UO,\n\t\tID_DIVSEC,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'COSTE_SALARIAL_TOTAL_EMPRESA' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS COSTE_SALARIAL_TOTAL_EMPRESA ,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS TOTAL_SEGURIDAD_SOCIAL_EMPRESA,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'NOCTURNIDAD' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS NOCTURNIDAD,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'HORAS EXTRA' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS HORAS_EXTRA,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'SÁBADOS, DOMINGOS Y FESTIVOS' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS SABADOS_DOMINGOS_FESTIVOS,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'DESEMPEÑO' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS DESEMPENO,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'ABSENTISMO' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS ABSENTISMO,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'IMPPE23' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS IMPPE23,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'IMPPE13' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS IMPPE13,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'OTROS CONCEPTOS' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS OTROS_CONCEPTOS,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tDETALLE_DIVSEC ) AS Q\nGROUP BY\n\tANO,\n\tMES,\n\tID_EMPRESA_GRUPO,\n\tID_DIVSEC,\n\tID_UO,\n\tQ.DIVORG,\n\tQ.SECORG ) SELECT\n\tDATE(DATE(DDV.ANO || '-' || RIGHT('0' || DDV.MES,\n\t2) || '-01' ) + 1 MONTH) - 1 DAY AS FECHA,\n\tDDV.ID_EMPRESA_GRUPO,\n\tCONCAT(DDV.ID_EMPRESA_GRUPO,\n\tCONCAT(RIGHT(CONCAT('00',\n\tDDV.DIVORG),\n\t2),\n\tRIGHT(CONCAT('00',\n\tDDV.SECORG),\n\t2))) AS ID_DIVSEC ,\n\tDDV.DIVORG,\n\tDDV.SECORG,\n\tCASE\n\t\tWHEN EGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION IS NOT NULL THEN 1\n\t\t--almacen\n\t\tELSE 2\n\t\t--estructura\n\tEND AS ID_ESTRUCTURA_ALMACEN,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.COSTE_SALARIAL_TOTAL_EMPRESA))-SUM(DECODE(DDV.ID_UO, 'ALMACEN', COALESCE(DDV.IMPPE23, 0), 0))-SUM(DECODE(DDV.ID_UO, 'ALMACEN', COALESCE(DDV.IMPPE13, 0), 0)) AS COSTE_SALARIAL_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ESTRUCTURA', DDV.COSTE_SALARIAL_TOTAL_EMPRESA))-SUM(DECODE(DDV.ID_UO, 'ESTRUCTURA', COALESCE(DDV.IMPPE23, 0), 0)) AS COSTE_SALARIAL_ESTRUCTURA_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.TOTAL_SEGURIDAD_SOCIAL_EMPRESA)) AS COSTE_SS_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ESTRUCTURA', DDV.TOTAL_SEGURIDAD_SOCIAL_EMPRESA)) AS COSTE_SS_ESTRUCTURA_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.NOCTURNIDAD)) AS NOCTURNIDAD_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.HORAS_EXTRA)) AS HORAS_EXTRA_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.SABADOS_DOMINGOS_FESTIVOS)) AS SABADOS_DOMINGOS_FESTIVOS_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.DESEMPENO))AS DESEMPENO_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.ABSENTISMO)) AS ABSENTISMO_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.IMPPE23)) AS IMPPE23_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ESTRUCTURA', DDV.IMPPE23)) AS IMPPE23_ESTRUCTURA_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.OTROS_CONCEPTOS)) AS OTROS_CONCEPTOS_ALMACEN_RAW\nFROM\n\tDETALLE_DIVSEC_VALOR AS DDV\nLEFT JOIN EMPRESA_GRUPO_DIVISION_SECCION AS EGDS ON\n\tEGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION = CONCAT(DDV.ID_EMPRESA_GRUPO,\n\tCONCAT(RIGHT(CONCAT('00',\n\tDDV.DIVORG),\n\t2),\n\tRIGHT(CONCAT('00',\n\tDDV.SECORG),\n\t2)))\nGROUP BY\n\tDATE(DATE(DDV.ANO || '-' || RIGHT('0' || DDV.MES,\n\t2) || '-01' ) + 1 MONTH) - 1 DAY,\n\tDDV.ID_EMPRESA_GRUPO,\n\tCONCAT(DDV.ID_EMPRESA_GRUPO,\n\tCONCAT(RIGHT(CONCAT('00',\n\tDDV.DIVORG),\n\t2),\n\tRIGHT(CONCAT('00',\n\tDDV.SECORG),\n\t2))),\n\tDDV.DIVORG,\n\tDDV.SECORG,\n\tCASE\n\t\tWHEN EGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION IS NOT NULL THEN 1\n\t\t--almacen\n\t\tELSE 2\n\t\t--estructura\n\tEND WITH UR;",
              "dataSource": "AXINDB26V1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>WITH tmeses (ANOMES,\nANO,\nMES,\nFECHADESDE,\nFECHA_INICIO ,\nFECHA_FIN) AS (\nSELECT\n\tCAST(YEAR( DATE(FECHA_HASTA)) AS CHAR(4))|| RIGHT('0' || RTRIM(CAST(CAST(MONTH(DATE(FECHA_HASTA)) AS CHAR(2)) AS VARCHAR(2))),\n\t2) AS ANOMES,\n\tYEAR( DATE(FECHA_HASTA)) AS ANO,\n\tMONTH(DATE(FECHA_HASTA)) AS MES,\n\tDATE(FECHA_DESDE) AS FECHADESDE,\n\tDATE(FECHA_HASTA) AS FECHA_INICIO,\n\t(DATE(FECHA_HASTA) + 1 MONTH) -1 DAY AS FECHA_FIN\nFROM\n\t(\n\t\tSELECT CAST('01/01/2013' AS VARCHAR(10)) FECHA_DESDE,\n\t\tCAST('01/01/2050' AS VARCHAR(10)) AS FECHA_HASTA\n\tFROM\n\t\tsysibm.sysdummy1 ) A\nUNION ALL\nSELECT\n\tCAST(YEAR(FECHA_INICIO - 1 MONTH) AS CHAR(4))|| RIGHT('0' || RTRIM(CAST(CAST(MONTH(FECHA_INICIO - 1 MONTH) AS CHAR(2)) AS VARCHAR(2))),\n\t2) AS ANOMES,\n\tYEAR(FECHA_INICIO - 1 MONTH) AS ANO,\n\tMONTH(FECHA_INICIO - 1 MONTH) AS MES,\n\tFECHADESDE AS FECHADESDE,\n\tFECHA_INICIO -1 MONTH AS FECHA_INICIO,\n\tFECHA_INICIO -1 DAY AS FECHA_FIN\nFROM\n\ttmeses\nWHERE\n\tFECHA_INICIO - 1 MONTH >= FECHADESDE ),\n----------------------------------------------------------   \n--TABLA EMPRESA_GRUPO_DIVISION_SECCION HARDCODED   \n----------------------------------------------------------   \n EMPRESA_GRUPO_DIVISION_SECCION (ID_EMPRESA_GRUPO_DIVISION_SECCION ,\nID_EMPRESA_GRUPO ,\nNOMBRE_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION ,\nNOM_DIVSEC ) AS (\nSELECT\n\tID_DIVSEC,\n\tID_EMPRESA_GRUPO,\n\tEMPRESA_GRUPO,\n\tDIVISION,\n\tSECCION,\n\tNOM_DIVSEC\nFROM\n\t(\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'991304' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [1304]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t5 AS SECCION,\n\t\t'991305' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [1305]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'998525' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'998537' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [8537]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t41 AS ID_EMPRESA_GRUPO,\n\t\t'PULL & BEAR LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'418525' AS ID_DIVSEC,\n\t\t'PULL & BEAR LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\n\t\t\n\t\t\nUNION\n\tSELECT\n\t\t41 AS ID_EMPRESA_GRUPO,\n\t\t'PULL & BEAR LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'418537' AS ID_DIVSEC,\n\t\t'PULL & BEAR LOGISTICA [8537]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\n\t\t\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t03 AS DIVISION,\n\t\t17 AS SECCION,\n\t\t'1890317' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [0317]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t03 AS SECCION,\n\t\t'1891303' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [1303]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'1898525' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t5 AS DIVISION,\n\t\t6 AS SECCION,\n\t\t'370506' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [0506]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t5 AS SECCION,\n\t\t'371305' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [1305]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t28 AS DIVISION,\n\t\t4 AS SECCION,\n\t\t'372804' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [2804]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'378525' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'378537' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [8537]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t9 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t18 AS SECCION,\n\t\t'91318' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [1318]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t32 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA HOME LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'328525' AS ID_DIVSEC,\n\t\t'ZARA HOME LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'431304' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [1304]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t05 AS SECCION,\n\t\t'431305' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [1305]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'438525' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'438537' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [8537]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'141300' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1300]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t12 AS SECCION,\n\t\t'141312' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1312]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t09 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'140900' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1312]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'268525' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t26 AS SECCION,\n\t\t'268526' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8526]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t27 AS SECCION,\n\t\t'268527' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8527]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t28 AS SECCION,\n\t\t'268528' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8528]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t29 AS SECCION,\n\t\t'268529' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8529]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'261300' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [1300]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t63 AS DIVISION,\n\t\t08 AS SECCION,\n\t\t'266308' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [6308]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t12 AS ID_EMPRESA_GRUPO,\n\t\t'LEFTIES LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t19 AS SECCION,\n\t\t'121319' AS ID_DIVSEC,\n\t\t'LEFTIES LOGISTICA [1319]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t23 AS ID_EMPRESA_GRUPO,\n\t\t'OYSHO LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t0 AS SECCION,\n\t\t'231300' AS ID_DIVSEC,\n\t\t'OYSHO LOGISTICA [1300]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t01 AS SECCION,\n\t\t'611301' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [1301]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'611304' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [1304]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'618525' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t357 AS ID_EMPRESA_GRUPO,\n\t\t'TORDERA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'3578525' AS ID_DIVSEC,\n\t\t'TORDERA LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\t--ATG   \n\n\t\tSELECT 68 AS ID_EMPRESA_GRUPO,\n\t\t'FASHION LOGISTICS FORWARDERS' AS EMPRESA_GRUPO,\n\t\t00 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'680000' AS ID_DIVSEC,\n\t\t'FASHION LOGISTICS FORWARDERS []' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t330 AS ID_EMPRESA_GRUPO,\n\t\t'INDITEX LOGISTICA' AS EMPRESA_GRUPO,\n\t\t00 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'3300000' AS ID_DIVSEC,\n\t\t'INDITEX LOGISTICA []' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\t--ATG   \n\n\t\tSELECT 20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t51 AS DIVISION,\n\t\t73 AS SECCION,\n\t\t'205173' AS ID_DIVSEC,\n\t\t'TEMPE [205173]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t30 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'203000' AS ID_DIVSEC,\n\t\t'TEMPE [203000]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t51 AS DIVISION,\n\t\t34 AS SECCION,\n\t\t'205134' AS ID_DIVSEC,\n\t\t'TEMPE [205134]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t50 AS DIVISION,\n\t\t41 AS SECCION,\n\t\t'205041' AS ID_DIVSEC,\n\t\t'TEMPE [205041]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t398 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA CABANILLAS' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'3988525' AS ID_DIVSEC,\n\t\t'ALMACEN PAQUETE [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tSYSIBM.SYSDUMMY1 EG\nUNION\n\tSELECT\n\t\t64 AS ID_EMPRESA_GRUPO,\n\t\t'INDIPUNT' AS EMPRESA_GRUPO,\n\t\t91 AS DIVISION,\n\t\t15 AS SECCION,\n\t\t'649115' AS ID_DIVSEC,\n\t\t'INDIPUNT [9115]' AS NOM_DIVSEC\n\tFROM\n\t\tSYSIBM.SYSDUMMY1 EG ) Q_UNION ) ,\nEMPRESASFILTRO (ID_EMPRESA,\nDIVISION,\nSECCION) AS (\nSELECT\n\tDISTINCT ID_EMPRESA_GRUPO,\n\tDIVISION,\n\tSECCION\nFROM\n\tEMPRESA_GRUPO_DIVISION_SECCION ) ,\n----------------------------------------------------------   \n--TABLA DIVSEC MAESTRA   \n----------------------------------------------------------   \n DIVSEC_MAESTRA (ID_EMPRESA_GRUPO ,\nNOMBRE_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION ,\nID_DIVSEC ,\nNOM_DIVSEC) AS (\nSELECT\n\tid_empresa AS ID_EMPRESA_GRUPO,\n\tNULL AS NOMBRE_EMPRESA_GRUPO,\n\tNULL AS DIVISION,\n\tNULL AS SECCION,\n\tNULL AS ID_DIVSEC,\n\tNULL AS NOM_DIVSEC\nFROM\n\tempresasFiltro\nUNION ALL\nSELECT\n\t9 AS ID_EMPRESA_GRUPO,\n\tNULL AS NOMBRE_EMPRESA_GRUPO,\n\t13 AS DIVISION,\n\t18 AS SECCION,\n\t'91318' AS ID_DIVSEC,\n\t'PLATAFORMA LOGISTICA MECO' NOM_DIVSEC\nFROM\n\tEMPRESASFILTRO\nWHERE\n\tID_EMPRESA = 37 ),\n/*Se crea una tabla temporal con las tuplas posibles de consulta: AÑO-EMPRESA-DIVISION*/\n/*Esto se hace para acceder con el nuevo indice a la tabla RRHH.CONCEPTO_EMPLEADO_SALARIO*/\ntanos_divisiones(ANO ,\nMES ,\nEMPRESA) AS (\nSELECT\n\tANO,\n\tMES,\n\tID_EMPRESA\nFROM\n\ttmeses m,\n\tempresasFiltro d\nGROUP BY\n\tANO,\n\tMES,\n\tID_EMPRESA ),\ntanos_divisiones_Absent(ANO ,\nMES ,\nEMPRESA,\nDIVISION,\nSECCION ) AS (\nSELECT\n\tANO,\n\tMES,\n\tID_EMPRESA ,\n\tDIVISION,\n\tSECCION\nFROM\n\ttmeses m,\n\tempresasFiltro d\nGROUP BY\n\tANO,\n\tMES,\n\tID_EMPRESA,\n\tDIVISION,\n\tSECCION ),\n/*Código añadido para contemplar Logistica MECO, cuyo código empresa es diferente para oficinas que almacen*/\ntanos_divisiones_excepcion (ANO ,\nMES ,\nEMPRESA_FILTRO ,\nEMPRESA ,\nDIVISION ) AS (\nSELECT\n\tANO,\n\tMES,\n\tEMPRESA AS EMPRESA_FILTRO,\n\t9 AS EMPRESA,\n\tdm.DIVISION\nFROM\n\ttanos_divisiones t\nINNER JOIN EMPRESA_GRUPO_DIVISION_SECCION dm ON\n\tdm.ID_EMPRESA_GRUPO = 9\nWHERE\n\tEMPRESA = 37\nGROUP BY\n\tANO,\n\tMES,\n\tEMPRESA,\n\tDIVISION ),\n--Calculo SalarioBruto                                 \n agrupaSalarioBruto(ANO ,\nMES ,\nEMPRESA_FILTRO ,\nEMPRESA ,\nDIVISION ,\nSECCION ,\nID_CONCEPTO_SALARIO ,\nIMPORTE ) AS (\nSELECT\n\tes.ANO,\n\tes.MES,\n\tes.ID_EMPRESA_GRUPO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO,\n\tSUM(es.IMPORTE)\nFROM\n\tRRHH.CONCEPTO_EMPRESA_SALARIO ES\nINNER JOIN tanos_divisiones ad ON\n\tad.ANO = ES.ANO\n\tAND ad.MES = ES.MES\n\tAND ES.ID_EMPRESA_GRUPO = ad.EMPRESA\nGROUP BY\n\tes.ANO,\n\tes.MES,\n\tes.ID_EMPRESA_GRUPO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO\nUNION ALL\nSELECT\n\tes.ANO,\n\tes.MES,\n\tad.EMPRESA_FILTRO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO,\n\tSUM(es.IMPORTE)\nFROM\n\tRRHH.CONCEPTO_EMPRESA_SALARIO ES\nINNER JOIN tanos_divisiones_excepcion ad ON\n\tad.ANO = ES.ANO\n\tAND ad.MES = ES.MES\n\tAND ES.ID_EMPRESA_GRUPO = ad.EMPRESA\n\tAND ES.DIVISION = ad.DIVISION\nGROUP BY\n\tes.ANO,\n\tes.MES,\n\tad.EMPRESA_FILTRO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO\nUNION\nSELECT\n\tes.ANO,\n\tes.MES,\n\tes.ID_EMPRESA_GRUPO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO,\n\tSUM(DOUBLE(decrypt_char(ES.IMPORTE, 'ee6u7xjgRsRR6g8dRQfLuHkF+4FGUlpy6naR0Ck66wYWX2uoe')))\nFROM\n\tRRHH.CONCEPTO_EMPLEADO_COSTE_ABSENTISMO ES\nINNER JOIN tanos_divisiones_Absent ad ON\n\tad.ANO = ES.ANO\n\tAND ad.MES = ES.MES\n\tAND ES.ID_EMPRESA_GRUPO = ad.EMPRESA\n\tAND ES.DIVISION = ad.DIVISION\n\tAND ES.SECCION = ad.SECCION\nGROUP BY\n\tes.ANO,\n\tes.MES,\n\tes.ID_EMPRESA_GRUPO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO\nUNION\nSELECT\n\tes.ANO,\n\tes.MES,\n\tad.EMPRESA_FILTRO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO,\n\tSUM(DOUBLE(decrypt_char(ES.IMPORTE, 'ee6u7xjgRsRR6g8dRQfLuHkF+4FGUlpy6naR0Ck66wYWX2uoe')))\nFROM\n\tRRHH.CONCEPTO_EMPLEADO_COSTE_ABSENTISMO es\nINNER JOIN tanos_divisiones_excepcion ad ON\n\tad.ANO = ES.ANO\n\tAND ad.MES = ES.MES\n\tAND ES.ID_EMPRESA_GRUPO = ad.EMPRESA\n\tAND ES.DIVISION = ad.DIVISION\nGROUP BY\n\tes.ANO,\n\tes.MES,\n\tad.EMPRESA_FILTRO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO ),\n/*Tabla temporal en la que se vuelcan los registros con los que se va a trabajar */\nagrupaSalario(ANO ,\nMES ,\nID_EMPRESA_FILTRO ,\nID_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION ,\nID_DIVSEC ,\nID_CONCEPTO_SALARIO ,\nIMPORTE,\nDIVORG,\nSECORG ) AS (\nSELECT\n\tES.ANO,\n\tES.MES,\n\tES.EMPRESA_FILTRO AS ID_EMPRESA_FILTRO,\n\tES.EMPRESA AS ID_EMPRESA_GRUPO,\n\tEF.DIVISION,\n\tEF.SECCION,\n\tEF.ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\tES.ID_CONCEPTO_SALARIO,\n\tES.IMPORTE,\n\tES.DIVISION,\n\tES.SECCION\nFROM\n\tagrupaSalarioBruto ES\nLEFT JOIN EMPRESA_GRUPO_DIVISION_SECCION EF ON\n\tES.EMPRESA = EF.ID_EMPRESA_GRUPO\n\tAND ES.DIVISION = EF.DIVISION\n\tAND ES.SECCION = EF.SECCION\nWHERE\n\tES.EMPRESA <> 9\nUNION ALL\nSELECT\n\tES.ANO,\n\tES.MES,\n\tES.EMPRESA_FILTRO AS ID_EMPRESA_FILTRO,\n\t37 AS ID_EMPRESA_GRUPO,\n\tNULL AS DIVISION,\n\tNULL AS SECCION,\n\tNULL AS ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\tES.ID_CONCEPTO_SALARIO,\n\tES.IMPORTE,\n\tES.DIVISION,\n\tES.SECCION\nFROM\n\tagrupaSalarioBruto ES\nINNER JOIN EMPRESA_GRUPO_DIVISION_SECCION EF ON\n\tES.EMPRESA = EF.ID_EMPRESA_GRUPO\n\tAND ES.DIVISION = EF.DIVISION\n\tAND ES.SECCION = EF.SECCION\nWHERE\n\tES.EMPRESA = 9\n\tAND ES.EMPRESA_FILTRO <> 9 ),\n-----------------------------------------------------------------------------------------------------------------------   \n--ESTRUCTURA INDICADORES (1 NIVEL)   \n-----------------------------------------------------------------------------------------------------------------------   \n ESTRUCTURA_INDICADORES (ID_CONCEPTO ,\nID_UNIDAD_ORGANIZATIVA ,\nORDER_H1 ,\nCONCEPTO_H1 ,\nID_CONCEPTO_SALARIO_CONCEPTO_INFORME ,\nID_CONCEPTO_SALARIO ,\nSIGNO ,\nID_UO ,\nANO ,\nMES ,\nID_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION,\nDIVORG,\nSECORG )\n--ESTRUCTURA CONCEPTOS   \n AS (\nSELECT\n\tCI.ID_CONCEPTO_INFORME AS ID_CONCEPTO,\n\tCI.ID_UNIDAD_ORGANIZATIVA,\n\tORDEN AS ORDER_H1,\n\tCASE\n\t\tWHEN CI.DESCRIPCION = 'GASTO SALARIAL' THEN 'COSTE_SALARIAL_TOTAL_EMPRESA'\n\t\tWHEN CI.DESCRIPCION = 'GASTO SEGURIDAD SOCIAL' THEN 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA'\n\t\tELSE CI.DESCRIPCION\n\tEND AS CONCEPTO_H1,\n\tCSCI.ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tCSCI.ID_CONCEPTO_SALARIO,\n\tCSCI.SIGNO,\n\tUO.DESCRIPCION,\n\tQ_ES.ANO,\n\tQ_ES.MES,\n\tQ_ES.ID_EMPRESA_GRUPO,\n\tQ_ES.DIVISION,\n\tQ_ES.SECCION,\n\tQ_ES.DIVORG,\n\tQ_ES.SECORG\nFROM\n\tRRHH.CONCEPTO_INFORME CI\nLEFT JOIN RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME CSCI ON\n\tCI.ID_CONCEPTO_INFORME = CSCI.ID_CONCEPTO_INFORME\nINNER JOIN RRHH.UNIDAD_ORGANIZATIVA UO ON\n\tCI.ID_UNIDAD_ORGANIZATIVA = UO.ID_UNIDAD_ORGANIZATIVA\n\tAND CI.ID_UNIDAD_ORGANIZATIVA = 1\n\t--ESTRUCTURA   \nCROSS JOIN (\n\tSELECT\n\t\tDISTINCT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tDIVISION,\n\t\tSECCION,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tagrupASalario\n\tWHERE\n\t\tSECCION IS NULL\n\t\tOR ID_EMPRESA_GRUPO = 9) AS Q_ES\nINNER JOIN EMPRESASFiltro ON\n\tID_INFORME = Q_ES.ID_EMPRESA_GRUPO\nWHERE\n\tORDEN < 10\n\tAND ID_EMPRESA <> 9\nUNION\n--ALMACEN CONCEPTOS   \n-----------------------------------------------------------------------------------------------------------   \n\n\tSELECT CI.ID_CONCEPTO_INFORME AS ID_CONCEPTO,\n\tCI.ID_UNIDAD_ORGANIZATIVA,\n\tORDEN AS ORDER_H1,\n\tCASE\n\t\tWHEN CI.DESCRIPCION = 'GASTO SALARIAL' THEN 'COSTE_SALARIAL_TOTAL_EMPRESA'\n\t\tWHEN CI.DESCRIPCION = 'GASTO SEGURIDAD SOCIAL' THEN 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA'\n\t\tELSE CI.DESCRIPCION\n\tEND AS CONCEPTO_H1,\n\tCSCI.ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tCSCI.ID_CONCEPTO_SALARIO,\n\tCSCI.SIGNO,\n\tUO.DESCRIPCION,\n\tQ_ES.ANO,\n\tQ_ES.MES,\n\tQ_ES.ID_EMPRESA_GRUPO,\n\tQ_ES.DIVISION,\n\tQ_ES.SECCION,\n\tQ_ES.DIVORG,\n\tQ_ES.SECORG\nFROM\n\tRRHH.CONCEPTO_INFORME CI\nLEFT JOIN RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME CSCI ON\n\tCI.ID_CONCEPTO_INFORME = CSCI.ID_CONCEPTO_INFORME\nINNER JOIN RRHH.UNIDAD_ORGANIZATIVA UO ON\n\tCI.ID_UNIDAD_ORGANIZATIVA = UO.ID_UNIDAD_ORGANIZATIVA\n\tAND CI.ID_UNIDAD_ORGANIZATIVA = 2\n\t--ALMACEN   \nCROSS JOIN (\n\tSELECT\n\t\tDISTINCT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tDIVISION,\n\t\tSECCION,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tagrupASalario\n\tWHERE\n\t\tSECCION IS NOT NULL\n\t\tAND ID_EMPRESA_GRUPO <> 9) AS Q_ES\nINNER JOIN empresASFiltro ON\n\tID_INFORME = Q_ES.ID_EMPRESA_GRUPO\nWHERE\n\tORDEN<10\n\tAND ID_EMPRESA <> 9\nUNION\n--3 NIVELES         \n\n\tSELECT H1.ID_CONCEPTO_INFORME AS ID_CONCEPTO,\n\tH1.ID_UNIDAD_ORGANIZATIVA,\n\tH1.ORDEN AS ORDER_H1,\n\tCASE\n\t\tWHEN H1.DESCRIPCION = 'GASTO SALARIAL' THEN 'COSTE_SALARIAL_TOTAL_EMPRESA'\n\t\tWHEN H1.DESCRIPCION = 'GASTO SEGURIDAD SOCIAL' THEN 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA'\n\t\tELSE H1.DESCRIPCION\n\tEND AS CONCEPTO_H1,\n\tCSCI.ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tCSCI.ID_CONCEPTO_SALARIO,\n\tCSCI.SIGNO,\n\tUO.DESCRIPCION,\n\tQ_ES.ANO,\n\tQ_ES.MES,\n\tQ_ES.ID_EMPRESA_GRUPO,\n\tQ_ES.DIVISION,\n\tQ_ES.SECCION,\n\tQ_ES.DIVORG,\n\tQ_ES.SECORG\nFROM\n\tRRHH.CONCEPTO_INFORME H1\nINNER JOIN RRHH.CONCEPTO_INFORME H2 ON\n\tH1.ID_CONCEPTO_INFORME = H2.ID_CONCEPTO_INFORME_RELACIONADO\nINNER JOIN RRHH.CONCEPTO_INFORME H3 ON\n\tH2.ID_CONCEPTO_INFORME = H3.ID_CONCEPTO_INFORME_RELACIONADO\nLEFT JOIN RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME CSCI ON\n\tH3.ID_CONCEPTO_INFORME = CSCI.ID_CONCEPTO_INFORME\nINNER JOIN RRHH.UNIDAD_ORGANIZATIVA UO ON\n\tH3.ID_UNIDAD_ORGANIZATIVA = UO.ID_UNIDAD_ORGANIZATIVA\n\tAND UO.ID_UNIDAD_ORGANIZATIVA = 2\n\t--SOLO ALMACEN         \nCROSS JOIN (\n\tSELECT\n\t\tDISTINCT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tDIVISION,\n\t\tSECCION,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tagrupASalario\n\tWHERE\n\t\tSECCION IS NOT NULL\n\t\tAND ID_EMPRESA_GRUPO <> 9) AS Q_ES\nINNER JOIN empresASFiltro ON\n\tH1.ID_INFORME = Q_ES.ID_EMPRESA_GRUPO\nWHERE\n\tH2.ORDEN>10\n\tAND H2.ORDEN<1000\n\tAND H3.ORDEN>1000\n\tAND H2.DESCRIPCION <> 'NUMERO'\n\tAND H3.DESCRIPCION <> 'Nº RESALTAS'\n\tAND H2.DESCRIPCION <> 'Nº RESALTAS'\nUNION\n--2 NIVELES         \n\n\tSELECT H1.ID_CONCEPTO_INFORME AS ID_CONCEPTO,\n\tH1.ID_UNIDAD_ORGANIZATIVA,\n\tH1.ORDEN AS ORDER_H1,\n\tCASE\n\t\tWHEN H1.DESCRIPCION = 'GASTO SALARIAL' THEN 'COSTE_SALARIAL_TOTAL_EMPRESA'\n\t\tWHEN H1.DESCRIPCION = 'GASTO SEGURIDAD SOCIAL' THEN 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA'\n\t\tELSE H1.DESCRIPCION\n\tEND AS CONCEPTO_H1,\n\tCSCI.ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tCSCI.ID_CONCEPTO_SALARIO,\n\tCSCI.SIGNO,\n\tUO.DESCRIPCION,\n\tQ_ES.ANO,\n\tQ_ES.MES,\n\tQ_ES.ID_EMPRESA_GRUPO,\n\tQ_ES.DIVISION,\n\tQ_ES.SECCION,\n\tQ_ES.DIVORG,\n\tQ_ES.SECORG\nFROM\n\tRRHH.CONCEPTO_INFORME H1\nINNER JOIN RRHH.CONCEPTO_INFORME H2 ON\n\tH1.ID_CONCEPTO_INFORME = H2.ID_CONCEPTO_INFORME_RELACIONADO\nLEFT JOIN RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME CSCI ON\n\tH2.ID_CONCEPTO_INFORME = CSCI.ID_CONCEPTO_INFORME\nINNER JOIN RRHH.UNIDAD_ORGANIZATIVA UO ON\n\tH2.ID_UNIDAD_ORGANIZATIVA = UO.ID_UNIDAD_ORGANIZATIVA\n\tAND UO.ID_UNIDAD_ORGANIZATIVA = 2\n\t--SOLO ALMACEN         \nCROSS JOIN (\n\tSELECT\n\t\tDISTINCT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tDIVISION,\n\t\tSECCION,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tagrupASalario\n\tWHERE\n\t\tSECCION IS NOT NULL\n\t\tAND ID_EMPRESA_GRUPO <> 9) AS Q_ES\nINNER JOIN empresASFiltro ON\n\tH1.ID_INFORME = Q_ES.ID_EMPRESA_GRUPO\nWHERE\n\tH1.ORDEN<100\n\tAND H2.ORDEN>1000\n\tAND H2.DESCRIPCION <> 'NUMERO'\n\tAND H2.DESCRIPCION <> 'Nº RESALTAS'\n\t--Se añade el concepto IMPPE13 para ALMACEN, no existe en la tabla RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME pero se necesita restar de COSTE_SALARIAL_ALMACEN\nUNION\nSELECT\n\t-1 AS ID_CONCEPTO,\n\t2 AS ID_UNIDAD_ORGANIZATIVA,\n\t-1 AS ORDER_H1,\n\t'IMPPE13' AS CONCEPTO_H1,\n\t-1 AS ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tS.ID_CONCEPTO_SALARIO,\n\t1 AS SIGNO,\n\t'ALMACEN' AS DESCRIPCION,\n\tS.ANO,\n\tS.MES,\n\tS.ID_EMPRESA_GRUPO,\n\tS.DIVISION,\n\tS.SECCION,\n\tS.DIVORG,\n\tS.SECORG\nFROM\n\tagrupASalario S\nINNER JOIN empresASFiltro F ON\n\tF.ID_EMPRESA = S.ID_EMPRESA_GRUPO\nWHERE\n\tS.SECCION IS NOT NULL\n\tAND S.ID_EMPRESA_GRUPO <> 9\n\tAND S.ID_CONCEPTO_SALARIO = 128\n\t--Se añade el concepto IMPPE23, no existe en la tabla RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME pero se necesita restar de COSTE_SALARIAL_ESTRUCTURA\nUNION\nSELECT\n\t-1 AS ID_CONCEPTO,\n\t2 AS ID_UNIDAD_ORGANIZATIVA,\n\t-1 AS ORDER_H1,\n\t'IMPPE23' AS CONCEPTO_H1,\n\t-1 AS ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tS.ID_CONCEPTO_SALARIO,\n\t1 AS SIGNO,\n\t'ALMACEN' AS DESCRIPCION,\n\tS.ANO,\n\tS.MES,\n\tS.ID_EMPRESA_GRUPO,\n\tS.DIVISION,\n\tS.SECCION,\n\tS.DIVORG,\n\tS.SECORG\nFROM\n\tagrupASalario S\nINNER JOIN empresASFiltro F ON\n\tF.ID_EMPRESA = S.ID_EMPRESA_GRUPO\nWHERE\n\tS.SECCION IS NOT NULL\n\tAND S.ID_EMPRESA_GRUPO <> 9\n\tAND S.ID_CONCEPTO_SALARIO = 104\nUNION\nSELECT\n\t-1 AS ID_CONCEPTO,\n\t1 AS ID_UNIDAD_ORGANIZATIVA,\n\t-1 AS ORDER_H1,\n\t'IMPPE23' AS CONCEPTO_H1,\n\t-1 AS ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tS.ID_CONCEPTO_SALARIO,\n\t1 AS SIGNO,\n\t'ESTRUCTURA' AS DESCRIPCION,\n\tS.ANO,\n\tS.MES,\n\tS.ID_EMPRESA_GRUPO,\n\tS.DIVISION,\n\tS.SECCION,\n\tS.DIVORG,\n\tS.SECORG\nFROM\n\tagrupASalario S\nINNER JOIN empresASFiltro F ON\n\tF.ID_EMPRESA = S.ID_EMPRESA_GRUPO\nWHERE\n\t(S.SECCION IS NULL\n\tOR S.ID_EMPRESA_GRUPO = 9)\n\tAND S.ID_CONCEPTO_SALARIO = 104 ),\n-----------------------------------------------------------------------------------------------------------------------   \n--DATOS   \n-----------------------------------------------------------------------------------------------------------------------   \n DETALLE_DIVSEC (ANO ,\nMES ,\nANOMES ,\nID_EMPRESA_GRUPO ,\nNOMBRE_EMPRESA_GRUPO ,\nID_DIVSEC ,\nNOM_DIVSEC ,\nID_UO ,\nORDER_H1 ,\nCONCEPTO_H1 ,\nVALOR,\nDIVORG,\nSECORG ) AS (\nSELECT\n\tEI.ANO,\n\tEI.MES,\n\tCAST(EI.ANO AS CHAR(4))|| RIGHT('0' || RTRIM(CAST(CAST(EI.MES AS CHAR(2)) AS VARCHAR(2))),\n\t2) AS ANOMES,\n\tEI.ID_EMPRESA_GRUPO,\n\tDM.NOMBRE_EMPRESA_GRUPO,\n\tDM.ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\tDM.NOM_DIVSEC,\n\tEI.ID_UO,\n\tEI.ORDER_H1,\n\tEI.CONCEPTO_H1,\n\tSUM(EI.SIGNO * ES.IMPORTE) AS VALOR ,\n\tEI.DIVORG,\n\tEI.SECORG\nFROM\n\tESTRUCTURA_INDICADORES EI\nLEFT JOIN agrupASalario ES ON\n\tEI.ANO = ES.ANO\n\tAND EI.MES = ES.MES\n\tAND EI.ID_EMPRESA_GRUPO = ES.ID_EMPRESA_GRUPO\n\tAND COALESCE(EI.DIVORG,\n\t0) = COALESCE(ES.DIVORG,\n\t0)\n\tAND COALESCE(EI.SECORG,\n\t0) = COALESCE(ES.SECORG,\n\t0)\n\tAND EI.ID_CONCEPTO_SALARIO = ES.ID_CONCEPTO_SALARIO\n\t--INNER JOIN MAESTROS.EMPRESA_GRUPO E ON EI.ID_EMPRESA_GRUPO = E.ID_EMPRESA_GRUPO   \nLEFT JOIN EMPRESA_GRUPO_DIVISION_SECCION DM ON\n\tEI.ID_EMPRESA_GRUPO = DM.ID_EMPRESA_GRUPO\n\tAND COALESCE(EI.DIVISION,\n\t0) = COALESCE(DM.DIVISION,\n\t0)\n\tAND COALESCE(EI.SECCION,\n\t0) = COALESCE(DM.SECCION,\n\t0)\nWHERE\n\t(ei.ID_UO = 'ALMACEN'\n\tAND NOT ID_EMPRESA_GRUPO_DIVISION_SECCION IS NULL)\n\tOR (ei.ID_UO = 'ESTRUCTURA')\nGROUP BY\n\tEI.ANO,\n\tEI.MES,\n\tCAST(EI.ANO AS CHAR(4))|| RIGHT('0' || RTRIM(CAST(CAST(EI.MES AS CHAR(2)) AS VARCHAR(2))),\n\t2),\n\tDM.ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\tDM.NOM_DIVSEC,\n\tEI.ID_EMPRESA_GRUPO,\n\tDM.NOMBRE_EMPRESA_GRUPO,\n\tEI.ID_UO,\n\tEI.CONCEPTO_H1,\n\tEI.ORDER_H1,\n\tEI.DIVORG,\n\tEI.SECORG ),\nDETALLE_DIVSEC_VALOR (ANO ,\nMES ,\nID_EMPRESA_GRUPO,\nID_DIVSEC ,\nID_UO ,\nCOSTE_SALARIAL_TOTAL_EMPRESA ,\nTOTAL_SEGURIDAD_SOCIAL_EMPRESA,\nNOCTURNIDAD,\nHORAS_EXTRA,\nSABADOS_DOMINGOS_FESTIVOS,\nDESEMPENO,\nABSENTISMO,\nIMPPE23,\nIMPPE13,\nOTROS_CONCEPTOS,\nDIVORG,\nSECORG ) AS (\nSELECT\n\tANO,\n\tMES,\n\tID_EMPRESA_GRUPO,\n\tID_DIVSEC,\n\tID_UO,\n\tSUM(COSTE_SALARIAL_TOTAL_EMPRESA) AS COSTE_SALARIAL_TOTAL_EMPRESA,\n\tSUM(TOTAL_SEGURIDAD_SOCIAL_EMPRESA) AS TOTAL_SEGURIDAD_SOCIAL_EMPRESA,\n\tSUM(NOCTURNIDAD) AS NOCTURNIDAD,\n\tSUM(HORAS_EXTRA) AS HORAS_EXTRA,\n\tSUM(SABADOS_DOMINGOS_FESTIVOS) AS SABADOS_DOMINGOS_FESTIVOS,\n\tSUM(DESEMPENO) AS DESEMPENO,\n\tSUM(ABSENTISMO) AS ABSENTISMO,\n\tSUM(IMPPE23) AS IMPPE23,\n\tSUM(IMPPE13) AS IMPPE13,\n\tSUM(OTROS_CONCEPTOS) AS OTROS_CONCEPTOS,\n\tQ.DIVORG,\n\tQ.SECORG\nFROM\n\t(\n\t\tSELECT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tID_UO,\n\t\tID_DIVSEC,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'COSTE_SALARIAL_TOTAL_EMPRESA' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS COSTE_SALARIAL_TOTAL_EMPRESA ,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS TOTAL_SEGURIDAD_SOCIAL_EMPRESA,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'NOCTURNIDAD' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS NOCTURNIDAD,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'HORAS EXTRA' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS HORAS_EXTRA,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'SÁBADOS, DOMINGOS Y FESTIVOS' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS SABADOS_DOMINGOS_FESTIVOS,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'DESEMPEÑO' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS DESEMPENO,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'ABSENTISMO' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS ABSENTISMO,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'IMPPE23' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS IMPPE23,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'IMPPE13' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS IMPPE13,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'OTROS CONCEPTOS' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS OTROS_CONCEPTOS,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tDETALLE_DIVSEC ) AS Q\nGROUP BY\n\tANO,\n\tMES,\n\tID_EMPRESA_GRUPO,\n\tID_DIVSEC,\n\tID_UO,\n\tQ.DIVORG,\n\tQ.SECORG ) SELECT\n\tDATE(DATE(DDV.ANO || '-' || RIGHT('0' || DDV.MES,\n\t2) || '-01' ) + 1 MONTH) - 1 DAY AS FECHA,\n\tDDV.ID_EMPRESA_GRUPO,\n\tCONCAT(DDV.ID_EMPRESA_GRUPO,\n\tCONCAT(RIGHT(CONCAT('00',\n\tDDV.DIVORG),\n\t2),\n\tRIGHT(CONCAT('00',\n\tDDV.SECORG),\n\t2))) AS ID_DIVSEC ,\n\tDDV.DIVORG,\n\tDDV.SECORG,\n\tCASE\n\t\tWHEN EGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION IS NOT NULL THEN 1\n\t\t--almacen\n\t\tELSE 2\n\t\t--estructura\n\tEND AS ID_ESTRUCTURA_ALMACEN,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.COSTE_SALARIAL_TOTAL_EMPRESA))-SUM(DECODE(DDV.ID_UO, 'ALMACEN', COALESCE(DDV.IMPPE23, 0), 0))-SUM(DECODE(DDV.ID_UO, 'ALMACEN', COALESCE(DDV.IMPPE13, 0), 0)) AS COSTE_SALARIAL_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ESTRUCTURA', DDV.COSTE_SALARIAL_TOTAL_EMPRESA))-SUM(DECODE(DDV.ID_UO, 'ESTRUCTURA', COALESCE(DDV.IMPPE23, 0), 0)) AS COSTE_SALARIAL_ESTRUCTURA_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.TOTAL_SEGURIDAD_SOCIAL_EMPRESA)) AS COSTE_SS_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ESTRUCTURA', DDV.TOTAL_SEGURIDAD_SOCIAL_EMPRESA)) AS COSTE_SS_ESTRUCTURA_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.NOCTURNIDAD)) AS NOCTURNIDAD_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.HORAS_EXTRA)) AS HORAS_EXTRA_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.SABADOS_DOMINGOS_FESTIVOS)) AS SABADOS_DOMINGOS_FESTIVOS_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.DESEMPENO))AS DESEMPENO_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.ABSENTISMO)) AS ABSENTISMO_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.IMPPE23)) AS IMPPE23_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ESTRUCTURA', DDV.IMPPE23)) AS IMPPE23_ESTRUCTURA_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.OTROS_CONCEPTOS)) AS OTROS_CONCEPTOS_ALMACEN_RAW\nFROM\n\tDETALLE_DIVSEC_VALOR AS DDV\nLEFT JOIN EMPRESA_GRUPO_DIVISION_SECCION AS EGDS ON\n\tEGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION = CONCAT(DDV.ID_EMPRESA_GRUPO,\n\tCONCAT(RIGHT(CONCAT('00',\n\tDDV.DIVORG),\n\t2),\n\tRIGHT(CONCAT('00',\n\tDDV.SECORG),\n\t2)))\nGROUP BY\n\tDATE(DATE(DDV.ANO || '-' || RIGHT('0' || DDV.MES,\n\t2) || '-01' ) + 1 MONTH) - 1 DAY,\n\tDDV.ID_EMPRESA_GRUPO,\n\tCONCAT(DDV.ID_EMPRESA_GRUPO,\n\tCONCAT(RIGHT(CONCAT('00',\n\tDDV.DIVORG),\n\t2),\n\tRIGHT(CONCAT('00',\n\tDDV.SECORG),\n\t2))),\n\tDDV.DIVORG,\n\tDDV.SECORG,\n\tCASE\n\t\tWHEN EGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION IS NOT NULL THEN 1\n\t\t--almacen\n\t\tELSE 2\n\t\t--estructura\n\tEND WITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "COSTE_SALARIAL_TOTAL",
            "description": "Sumatorio del coste salarial total",
            "expression": "SUM([COSTE_SALARIAL_RAW])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "COSTE_SS_TOTAL",
            "description": "Sumatorio del coste de la Seg Social total",
            "expression": "SUM([COSTE_SS_RAW])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "COSTE_SALARIAL_ALMACEN",
            "description": "Sumatorio del coste salarial del almacen total",
            "expression": "SUM([COSTE_SALARIAL_ALMACEN_RAW])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "COSTE_SS_ALMACEN",
            "description": "Sumatorio del coste de la seg social de almacen",
            "expression": "SUM([COSTE_SS_ALMACEN_RAW])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "COSTE_SALARIAL_TOTAL_ACUM",
            "expression": "IF(ISBLANK([COSTE_SALARIAL_TOTAL]),BLANK(),TOTALYTD([COSTE_SALARIAL_TOTAL],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "COSTE_SS_ALMACEN_ACUM",
            "expression": "IF(ISBLANK([COSTE_SS_ALMACEN]),BLANK(),TOTALYTD([COSTE_SS_ALMACEN],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "COSTE_SALARIAL_ALMACEN_ACUM",
            "expression": "IF(ISBLANK([COSTE_SALARIAL_ALMACEN]),BLANK(),TOTALYTD([COSTE_SALARIAL_ALMACEN],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "COSTE_SS_TOTAL_ACUM",
            "expression": "IF(ISBLANK([COSTE_SS_TOTAL]),BLANK(),TOTALYTD([COSTE_SS_TOTAL],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "COSTE_SS_TOTAL_AA",
            "expression": "CALCULATE([COSTE_SS_TOTAL],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "COSTE_SS_ALMACEN_AA",
            "expression": "CALCULATE([COSTE_SS_ALMACEN],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "COSTE_SALARIAL_TOTAL_AA",
            "expression": "CALCULATE([COSTE_SALARIAL_TOTAL],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "COSTE_SALARIAL_ALMACEN_AA",
            "expression": "CALCULATE([COSTE_SALARIAL_ALMACEN],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "COSTE_SALARIAL_TOTAL_ACUMAA",
            "expression": "CALCULATE([COSTE_SALARIAL_TOTAL_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_SS_TOTAL_ACUMAA",
            "expression": "CALCULATE([COSTE_SS_TOTAL_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_SALARIAL_ALMACEN_ACUMAA",
            "expression": "CALCULATE([COSTE_SALARIAL_ALMACEN_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_SS_ALMACEN_ACUMAA",
            "expression": "CALCULATE([COSTE_SS_ALMACEN_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_SALARIAL_TOTAL_DACUMAA",
            "expression": "IF(OR(ISBLANK([COSTE_SALARIAL_TOTAL_ACUM]),[COSTE_SALARIAL_TOTAL_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_SALARIAL_TOTAL_ACUMAA]),[COSTE_SALARIAL_TOTAL_ACUMAA]=0),BLANK(),([COSTE_SALARIAL_TOTAL_ACUM]-[COSTE_SALARIAL_TOTAL_ACUMAA])/[COSTE_SALARIAL_TOTAL_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_SS_TOTAL_DACUMAA",
            "expression": "IF(OR(ISBLANK([COSTE_SS_TOTAL_ACUM]),[COSTE_SS_TOTAL_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_SS_TOTAL_ACUMAA]),[COSTE_SS_TOTAL_ACUMAA]=0),BLANK(),([COSTE_SS_TOTAL_ACUM]-[COSTE_SS_TOTAL_ACUMAA])/[COSTE_SS_TOTAL_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_SALARIAL_ALMACEN_DACUMAA",
            "expression": "IF(OR(ISBLANK([COSTE_SALARIAL_ALMACEN_ACUM]),[COSTE_SALARIAL_ALMACEN_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_SALARIAL_ALMACEN_ACUMAA]),[COSTE_SALARIAL_ALMACEN_ACUMAA]=0),BLANK(),([COSTE_SALARIAL_ALMACEN_ACUM]-[COSTE_SALARIAL_ALMACEN_ACUMAA])/[COSTE_SALARIAL_ALMACEN_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_SS_ALMACEN_DACUMAA",
            "expression": "IF(OR(ISBLANK([COSTE_SS_ALMACEN_ACUM]),[COSTE_SS_ALMACEN_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_SS_ALMACEN_ACUMAA]),[COSTE_SS_ALMACEN_ACUMAA]=0),BLANK(),([COSTE_SS_ALMACEN_ACUM]-[COSTE_SS_ALMACEN_ACUMAA])/[COSTE_SS_ALMACEN_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_SALARIAL_TOTAL_DAA",
            "expression": "IF(OR(ISBLANK([COSTE_SALARIAL_TOTAL]),[COSTE_SALARIAL_TOTAL]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_SALARIAL_TOTAL_AA]),[COSTE_SALARIAL_TOTAL_AA]=0),BLANK(),([COSTE_SALARIAL_TOTAL]-[COSTE_SALARIAL_TOTAL_AA])/[COSTE_SALARIAL_TOTAL_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "COSTE_SS_TOTAL_DAA",
            "expression": "IF(OR(ISBLANK([COSTE_SS_TOTAL]),[COSTE_SS_TOTAL]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_SS_TOTAL_AA]),[COSTE_SS_TOTAL_AA]=0),BLANK(),([COSTE_SS_TOTAL]-[COSTE_SS_TOTAL_AA])/[COSTE_SS_TOTAL_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "COSTE_SALARIAL_ALMACEN_DAA",
            "expression": "IF(OR(ISBLANK([COSTE_SALARIAL_ALMACEN]),[COSTE_SALARIAL_ALMACEN]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_SALARIAL_ALMACEN_AA]),[COSTE_SALARIAL_ALMACEN_AA]=0),BLANK(),([COSTE_SALARIAL_ALMACEN]-[COSTE_SALARIAL_ALMACEN_AA])/[COSTE_SALARIAL_ALMACEN_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "COSTE_SS_ALMACEN_DAA",
            "expression": "IF(OR(ISBLANK([COSTE_SS_ALMACEN]),[COSTE_SS_ALMACEN]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_SS_ALMACEN_AA]),[COSTE_SS_ALMACEN_AA]=0),BLANK(),([COSTE_SS_ALMACEN]-[COSTE_SS_ALMACEN_AA])/[COSTE_SS_ALMACEN_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "COSTE_SALARIAL_TOTAL_CIERRE",
            "expression": "CALCULATE([COSTE_SALARIAL_TOTAL],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "COSTE_SS_TOTAL_CIERRE",
            "expression": "CALCULATE([COSTE_SS_TOTAL],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "COSTE_SALARIAL_ALMACEN_CIERRE",
            "expression": "CALCULATE([COSTE_SALARIAL_ALMACEN],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "COSTE_SS_ALMACEN_CIERRE",
            "expression": "CALCULATE([COSTE_SS_ALMACEN],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "COSTE_SALARIAL_TOTAL_DCIERRE",
            "expression": "IF(OR(ISBLANK([COSTE_SALARIAL_TOTAL_ACUM]),[COSTE_SALARIAL_TOTAL_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_SALARIAL_TOTAL_CIERRE]),[COSTE_SALARIAL_TOTAL_CIERRE]=0),BLANK(),([COSTE_SALARIAL_TOTAL_ACUM]-[COSTE_SALARIAL_TOTAL_CIERRE])/[COSTE_SALARIAL_TOTAL_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "COSTE_SS_TOTAL_DCIERRE",
            "expression": "IF(OR(ISBLANK([COSTE_SS_TOTAL_ACUM]),[COSTE_SS_TOTAL_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_SS_TOTAL_CIERRE]),[COSTE_SS_TOTAL_CIERRE]=0),BLANK(),([COSTE_SS_TOTAL_ACUM]-[COSTE_SS_TOTAL_CIERRE])/[COSTE_SS_TOTAL_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "COSTE_SALARIAL_ALMACEN_DCIERRE",
            "expression": "IF(OR(ISBLANK([COSTE_SALARIAL_ALMACEN_ACUM]),[COSTE_SALARIAL_ALMACEN_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_SALARIAL_ALMACEN_CIERRE]),[COSTE_SALARIAL_ALMACEN_CIERRE]=0),BLANK(),([COSTE_SALARIAL_ALMACEN_ACUM]-[COSTE_SALARIAL_ALMACEN_CIERRE])/[COSTE_SALARIAL_ALMACEN_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "COSTE_SS_ALMACEN_DCIERRE",
            "expression": "IF(OR(ISBLANK([COSTE_SS_ALMACEN_ACUM]),[COSTE_SS_ALMACEN_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_SS_ALMACEN_CIERRE]),[COSTE_SS_ALMACEN_CIERRE]=0),BLANK(),([COSTE_SS_ALMACEN_ACUM]-[COSTE_SS_ALMACEN_CIERRE])/[COSTE_SS_ALMACEN_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "COSTE_HORA",
            "description": "Coste salarial de almacen / horas reales",
            "expression": "IF(\n\t\t\t\t\t\t\t\t\t\tOR(ISBLANK([HORAS_REALES]),[HORAS_REALES]=0)\n\t\t\t\t\t\t\t\t\t\t,BLANK(),\n\t\t\t\t\t\t\t\t\t\t([COSTE_SALARIAL_ALMACEN]) /[HORAS_REALES])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "COSTE_HORA_AA",
            "expression": "IF(\n\t\t\t\t\t\t\t\t\t\tOR(ISBLANK([HORAS_REALES_AA]),[HORAS_REALES_AA]=0)\n\t\t\t\t\t\t\t\t\t\t,BLANK(),\n\t\t\t\t\t\t\t\t\t\t([COSTE_SALARIAL_ALMACEN_AA]) /[HORAS_REALES_AA])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "COSTE_HORA_DAA",
            "expression": "IF(OR(ISBLANK([COSTE_HORA]),[COSTE_HORA]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_HORA_AA]),[COSTE_HORA_AA]=0),BLANK(),([COSTE_HORA]-[COSTE_HORA_AA])/[COSTE_HORA_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "COSTE_HORA_ACUM",
            "expression": "IF(\n\t\t\t\t\t\t\t\t\t\tOR(ISBLANK([HORAS_REALES_ACUM]),[HORAS_REALES_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\t([COSTE_SALARIAL_ALMACEN_ACUM])/[HORAS_REALES_ACUM])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "COSTE_HORA_ACUMAA",
            "expression": "IF(\n\t\t\t\t\t\t\t\t\t\tOR(ISBLANK([HORAS_REALES_ACUMAA]),[HORAS_REALES_ACUMAA]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\t([COSTE_SALARIAL_ALMACEN_ACUMAA])/[HORAS_REALES_ACUMAA])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_HORA_DACUMAA",
            "expression": "IF(OR(ISBLANK([COSTE_HORA_ACUM]),[COSTE_HORA_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_HORA_ACUMAA]),[COSTE_HORA_ACUMAA]=0),BLANK(),([COSTE_HORA_ACUM]-[COSTE_HORA_ACUMAA])/[COSTE_HORA_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_HORA_CIERRE",
            "expression": "CALCULATE([COSTE_HORA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "COSTE_HORA_DCIERRE",
            "expression": "IF(OR(ISBLANK([COSTE_HORA_ACUM]),[COSTE_HORA_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_HORA_CIERRE]),[COSTE_HORA_CIERRE]=0),BLANK(),([COSTE_HORA_ACUM]-[COSTE_HORA_CIERRE])/[COSTE_HORA_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "COSTE_NOCTURNIDAD",
            "description": "Sumatorio del coste de nocturnidad en almacen",
            "expression": "SUM([NOCTURNIDAD_ALMACEN_RAW])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "COSTE_HORAS_EXTRA",
            "description": "Sumatorio del coste de horas extra en almacen",
            "expression": "SUM([HORAS_EXTRA_ALMACEN_RAW])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "COSTE_SABADOS_DOMINGOS_FESTIVOS",
            "description": "Sumatorio del coste los sabados/domingos y festivos en almacen",
            "expression": "SUM([SABADOS_DOMINGOS_FESTIVOS_ALMACEN_RAW])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "COSTE_DESEMPEÑO",
            "description": "Sumatorio del coste desempeño en almacen",
            "expression": "SUM([DESEMPENO_ALMACEN_RAW])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "COSTE_ABSENTISMO",
            "description": "Sumatorio del coste absentismo en almacen",
            "expression": "SUM([ABSENTISMO_ALMACEN_RAW])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "COSTE_OTROS_CONCEPTOS",
            "description": "Sumatorio de coste de otros conceptos en almacen",
            "expression": "SUM([OTROS_CONCEPTOS_ALMACEN_RAW])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "COSTE_NOCTURNIDAD_AA",
            "expression": "CALCULATE([COSTE_NOCTURNIDAD],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "COSTE_NOCTURNIDAD_DAA",
            "expression": "IF(OR(ISBLANK([COSTE_NOCTURNIDAD]),[COSTE_NOCTURNIDAD]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_NOCTURNIDAD_AA]),[COSTE_NOCTURNIDAD_AA]=0),BLANK(),([COSTE_NOCTURNIDAD]-[COSTE_NOCTURNIDAD_AA])/[COSTE_NOCTURNIDAD_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "COSTE_NOCTURNIDAD_ACUM",
            "expression": "IF(ISBLANK([COSTE_NOCTURNIDAD]),BLANK(),TOTALYTD([COSTE_NOCTURNIDAD],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "COSTE_NOCTURNIDAD_ACUMAA",
            "expression": "CALCULATE([COSTE_NOCTURNIDAD_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_NOCTURNIDAD_DACUMAA",
            "expression": "IF(OR(ISBLANK([COSTE_NOCTURNIDAD_ACUM]),[COSTE_NOCTURNIDAD_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_NOCTURNIDAD_ACUMAA]),[COSTE_NOCTURNIDAD_ACUMAA]=0),BLANK(),([COSTE_NOCTURNIDAD_ACUM]-[COSTE_NOCTURNIDAD_ACUMAA])/[COSTE_NOCTURNIDAD_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_NOCTURNIDAD_CIERRE",
            "expression": "CALCULATE([COSTE_NOCTURNIDAD],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "COSTE_NOCTURNIDAD_DCIERRE",
            "expression": "IF(OR(ISBLANK([COSTE_NOCTURNIDAD_ACUM]),[COSTE_NOCTURNIDAD_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_NOCTURNIDAD_CIERRE]),[COSTE_NOCTURNIDAD_CIERRE]=0),BLANK(),([COSTE_NOCTURNIDAD_ACUM]-[COSTE_NOCTURNIDAD_CIERRE])/[COSTE_NOCTURNIDAD_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "COSTE_HORAS_EXTRA_AA",
            "expression": "CALCULATE([COSTE_HORAS_EXTRA],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "COSTE_HORAS_EXTRA_DAA",
            "expression": "IF(OR(ISBLANK([COSTE_HORAS_EXTRA]),[COSTE_HORAS_EXTRA]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_HORAS_EXTRA_AA]),[COSTE_HORAS_EXTRA_AA]=0),BLANK(),([COSTE_HORAS_EXTRA]-[COSTE_HORAS_EXTRA_AA])/[COSTE_HORAS_EXTRA_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "COSTE_HORAS_EXTRA_ACUM",
            "expression": "IF(ISBLANK([COSTE_HORAS_EXTRA]),BLANK(),TOTALYTD([COSTE_HORAS_EXTRA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "COSTE_HORAS_EXTRA_ACUMAA",
            "expression": "CALCULATE([COSTE_HORAS_EXTRA_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_HORAS_EXTRA_CIERRE",
            "expression": "CALCULATE([COSTE_HORAS_EXTRA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "COSTE_HORAS_EXTRA_DACUMAA",
            "expression": "IF(OR(ISBLANK([COSTE_HORAS_EXTRA_ACUM]),[COSTE_HORAS_EXTRA_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_HORAS_EXTRA_ACUMAA]),[COSTE_HORAS_EXTRA_ACUMAA]=0),BLANK(),([COSTE_HORAS_EXTRA_ACUM]-[COSTE_HORAS_EXTRA_ACUMAA])/[COSTE_HORAS_EXTRA_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_HORAS_EXTRA_DCIERRE",
            "expression": "IF(OR(ISBLANK([COSTE_HORAS_EXTRA_ACUM]),[COSTE_HORAS_EXTRA_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_HORAS_EXTRA_CIERRE]),[COSTE_HORAS_EXTRA_CIERRE]=0),BLANK(),([COSTE_HORAS_EXTRA_ACUM]-[COSTE_HORAS_EXTRA_CIERRE])/[COSTE_HORAS_EXTRA_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "COSTE_SABADOS_DOMINGOS_FESTIVOS_AA",
            "expression": "CALCULATE([COSTE_SABADOS_DOMINGOS_FESTIVOS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "COSTE_SABADOS_DOMINGOS_FESTIVOS_DAA",
            "expression": "IF(OR(ISBLANK([COSTE_SABADOS_DOMINGOS_FESTIVOS]),[COSTE_SABADOS_DOMINGOS_FESTIVOS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_SABADOS_DOMINGOS_FESTIVOS_AA]),[COSTE_SABADOS_DOMINGOS_FESTIVOS_AA]=0),BLANK(),([COSTE_SABADOS_DOMINGOS_FESTIVOS]-[COSTE_SABADOS_DOMINGOS_FESTIVOS_AA])/[COSTE_SABADOS_DOMINGOS_FESTIVOS_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "COSTE_SABADOS_DOMINGOS_FESTIVOS_ACUM",
            "expression": "IF(ISBLANK([COSTE_SABADOS_DOMINGOS_FESTIVOS]),BLANK(),TOTALYTD([COSTE_SABADOS_DOMINGOS_FESTIVOS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "COSTE_SABADOS_DOMINGOS_FESTIVOS_ACUMAA",
            "expression": "CALCULATE([COSTE_SABADOS_DOMINGOS_FESTIVOS_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_SABADOS_DOMINGOS_FESTIVOS_DACUMAA",
            "expression": "IF(OR(ISBLANK([COSTE_SABADOS_DOMINGOS_FESTIVOS_ACUM]),[COSTE_SABADOS_DOMINGOS_FESTIVOS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_SABADOS_DOMINGOS_FESTIVOS_ACUMAA]),[COSTE_SABADOS_DOMINGOS_FESTIVOS_ACUMAA]=0),BLANK(),([COSTE_SABADOS_DOMINGOS_FESTIVOS_ACUM]-[COSTE_SABADOS_DOMINGOS_FESTIVOS_ACUMAA])/[COSTE_SABADOS_DOMINGOS_FESTIVOS_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_SABADOS_DOMINGOS_FESTIVOS_CIERRE",
            "expression": "CALCULATE([COSTE_SABADOS_DOMINGOS_FESTIVOS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "COSTE_SABADOS_DOMINGOS_FESTIVOS_DCIERRE",
            "expression": "IF(OR(ISBLANK([COSTE_SABADOS_DOMINGOS_FESTIVOS_ACUM]),[COSTE_SABADOS_DOMINGOS_FESTIVOS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_SABADOS_DOMINGOS_FESTIVOS_CIERRE]),[COSTE_SABADOS_DOMINGOS_FESTIVOS_CIERRE]=0),BLANK(),([COSTE_SABADOS_DOMINGOS_FESTIVOS_ACUM]-[COSTE_SABADOS_DOMINGOS_FESTIVOS_CIERRE])/[COSTE_SABADOS_DOMINGOS_FESTIVOS_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "COSTE_DESEMPEÑO_AA",
            "expression": "CALCULATE([COSTE_DESEMPEÑO],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "COSTE_DESEMPEÑO_DAA",
            "expression": "IF(OR(ISBLANK([COSTE_DESEMPEÑO]),[COSTE_DESEMPEÑO]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_DESEMPEÑO_AA]),[COSTE_DESEMPEÑO_AA]=0),BLANK(),([COSTE_DESEMPEÑO]-[COSTE_DESEMPEÑO_AA])/[COSTE_DESEMPEÑO_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "COSTE_DESEMPEÑO_ACUM",
            "expression": "IF(ISBLANK([COSTE_DESEMPEÑO]),BLANK(),TOTALYTD([COSTE_DESEMPEÑO],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "COSTE_DESEMPEÑO_ACUMAA",
            "expression": "CALCULATE([COSTE_DESEMPEÑO_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_DESEMPEÑO_DACUMAA",
            "expression": "IF(OR(ISBLANK([COSTE_DESEMPEÑO_ACUM]),[COSTE_DESEMPEÑO_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_DESEMPEÑO_ACUMAA]),[COSTE_DESEMPEÑO_ACUMAA]=0),BLANK(),([COSTE_DESEMPEÑO_ACUM]-[COSTE_DESEMPEÑO_ACUMAA])/[COSTE_DESEMPEÑO_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_DESEMPEÑO_CIERRE",
            "expression": "CALCULATE([COSTE_DESEMPEÑO],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "COSTE_DESEMPEÑO_DCIERRE",
            "expression": "IF(OR(ISBLANK([COSTE_DESEMPEÑO_ACUM]),[COSTE_DESEMPEÑO_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_DESEMPEÑO_CIERRE]),[COSTE_DESEMPEÑO_CIERRE]=0),BLANK(),([COSTE_DESEMPEÑO_ACUM]-[COSTE_DESEMPEÑO_CIERRE])/[COSTE_DESEMPEÑO_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "COSTE_ABSENTISMO_AA",
            "expression": "CALCULATE([COSTE_ABSENTISMO],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "COSTE_ABSENTISMO_DAA",
            "expression": "IF(OR(ISBLANK([COSTE_ABSENTISMO]),[COSTE_ABSENTISMO]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_ABSENTISMO_AA]),[COSTE_ABSENTISMO_AA]=0),BLANK(),([COSTE_ABSENTISMO]-[COSTE_ABSENTISMO_AA])/[COSTE_ABSENTISMO_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "COSTE_ABSENTISMO_ACUM",
            "expression": "IF(ISBLANK([COSTE_ABSENTISMO]),BLANK(),TOTALYTD([COSTE_ABSENTISMO],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "COSTE_ABSENTISMO_ACUMAA",
            "expression": "CALCULATE([COSTE_ABSENTISMO_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_ABSENTISMO_DACUMAA",
            "expression": "IF(OR(ISBLANK([COSTE_ABSENTISMO_ACUM]),[COSTE_ABSENTISMO_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_ABSENTISMO_ACUMAA]),[COSTE_ABSENTISMO_ACUMAA]=0),BLANK(),([COSTE_ABSENTISMO_ACUM]-[COSTE_ABSENTISMO_ACUMAA])/[COSTE_ABSENTISMO_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_ABSENTISMO_CIERRE",
            "expression": "CALCULATE([COSTE_ABSENTISMO],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "COSTE_ABSENTISMO_DCIERRE",
            "expression": "IF(OR(ISBLANK([COSTE_ABSENTISMO_ACUM]),[COSTE_ABSENTISMO_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_ABSENTISMO_CIERRE]),[COSTE_ABSENTISMO_CIERRE]=0),BLANK(),([COSTE_ABSENTISMO_ACUM]-[COSTE_ABSENTISMO_CIERRE])/[COSTE_ABSENTISMO_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "COSTE_OTROS_CONCEPTOS_AA",
            "expression": "CALCULATE([COSTE_OTROS_CONCEPTOS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "COSTE_OTROS_CONCEPTOS_DAA",
            "expression": "IF(OR(ISBLANK([COSTE_OTROS_CONCEPTOS]),[COSTE_OTROS_CONCEPTOS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_OTROS_CONCEPTOS_AA]),[COSTE_OTROS_CONCEPTOS_AA]=0),BLANK(),([COSTE_OTROS_CONCEPTOS]-[COSTE_OTROS_CONCEPTOS_AA])/[COSTE_OTROS_CONCEPTOS_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "COSTE_OTROS_CONCEPTOS_ACUM",
            "expression": "IF(ISBLANK([COSTE_OTROS_CONCEPTOS]),BLANK(),TOTALYTD([COSTE_OTROS_CONCEPTOS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "COSTE_OTROS_CONCEPTOS_ACUMAA",
            "expression": "CALCULATE([COSTE_OTROS_CONCEPTOS_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_OTROS_CONCEPTOS_DACUMAA",
            "expression": "IF(OR(ISBLANK([COSTE_OTROS_CONCEPTOS_ACUM]),[COSTE_OTROS_CONCEPTOS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_OTROS_CONCEPTOS_ACUMAA]),[COSTE_OTROS_CONCEPTOS_ACUMAA]=0),BLANK(),([COSTE_OTROS_CONCEPTOS_ACUM]-[COSTE_OTROS_CONCEPTOS_ACUMAA])/[COSTE_OTROS_CONCEPTOS_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_OTROS_CONCEPTOS_CIERRE",
            "expression": "CALCULATE([COSTE_OTROS_CONCEPTOS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "COSTE_OTROS_CONCEPTOS_DCIERRE",
            "expression": "IF(OR(ISBLANK([COSTE_OTROS_CONCEPTOS_ACUM]),[COSTE_OTROS_CONCEPTOS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_OTROS_CONCEPTOS_CIERRE]),[COSTE_OTROS_CONCEPTOS_CIERRE]=0),BLANK(),([COSTE_OTROS_CONCEPTOS_ACUM]-[COSTE_OTROS_CONCEPTOS_CIERRE])/[COSTE_OTROS_CONCEPTOS_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "COSTE_ALMACEN",
            "description": "Sumatorio del coste de almacen",
            "expression": " [IMPORTE]",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "COSTE_ALMACEN_AA",
            "expression": " [IMPORTE_AA]",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "COSTE_ALMACEN_ACUM",
            "expression": " [IMPORTE_ACUM]",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "COSTE_ALMACEN_DAA",
            "expression": " [IMPORTE_DAA]",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "COSTE_ALMACEN_DACUMAA",
            "expression": " [IMPORTE_DACUMAA]",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_ALMACEN_ACUMAA",
            "expression": " [IMPORTE_ACUMAA]",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_ALMACEN_CIERRE",
            "expression": " [IMPORTE_CIERRE]",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "COSTE_ALMACEN_DCIERRE",
            "expression": " [IMPORTE_DCIERRE]",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "COSTE_HORA_ALMACEN",
            "description": "Coste de almacen / Numero de horas reales",
            "expression": " DIVIDE([COSTE_ALMACEN], [HORAS_REALES])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "COSTE_HORA_ALMACEN_AA",
            "expression": "CALCULATE([COSTE_HORA_ALMACEN],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "COSTE_HORA_ALMACEN_DAA",
            "expression": "IF(OR(ISBLANK([COSTE_HORA_ALMACEN_AA]),[COSTE_HORA_ALMACEN]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_HORA_ALMACEN_AA]),[COSTE_HORA_ALMACEN_AA]=0),BLANK(),([COSTE_HORA_ALMACEN]-[COSTE_HORA_ALMACEN_AA])/[COSTE_HORA_ALMACEN_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "COSTE_HORA_ALMACEN_ACUM",
            "expression": "IF(ISBLANK([COSTE_HORA_ALMACEN]),BLANK(),TOTALYTD([COSTE_HORA_ALMACEN],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "COSTE_HORA_ALMACEN_ACUMAA",
            "expression": "CALCULATE([COSTE_HORA_ALMACEN_ACUM], DATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_HORA_ALMACEN_DACUMAA",
            "expression": "IF(OR(ISBLANK([COSTE_HORA_ALMACEN_ACUM]),[COSTE_HORA_ALMACEN_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_HORA_ALMACEN_ACUMAA]),[COSTE_HORA_ALMACEN_ACUMAA]=0),BLANK(),([COSTE_HORA_ALMACEN_ACUM]-[COSTE_HORA_ALMACEN_ACUMAA])/[COSTE_HORA_ALMACEN_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "COSTE_HORA_ALMACEN_CIERRE",
            "expression": "CALCULATE([COSTE_HORA_ALMACEN],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "COSTE_HORA_ALMACEN_DCIERRE",
            "expression": "IF(OR(ISBLANK([COSTE_HORA_ALMACEN_ACUM]),[COSTE_HORA_ALMACEN_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([COSTE_HORA_ALMACEN_CIERRE]),[COSTE_HORA_ALMACEN_CIERRE]=0),BLANK(),([COSTE_HORA_ALMACEN_ACUM]-[COSTE_HORA_ALMACEN_CIERRE])/[COSTE_HORA_ALMACEN_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "PPTO_COSTE",
            "description": "Coste de presupuesto calculado en el simulador a nivel de empresa y mes",
            "expression": " SUM(PRESUPUESTO_EMPRESA[COSTE_MES])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "PPTO_COSTE_CONCEPTO",
            "description": "Coste de presupuesto calculado en el simulador a nivel de empresa, mes y grupo de conceptos de as400",
            "expression": "SUM(PRESUPUESTO_EMPRESA_CONCEPTOS[COSTE_MES_CONCEPTO])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "PPTO_COSTE_HORA",
            "description": "Coste/hora ppto calculado en el simulador",
            "expression": " DIVIDE([PPTO_COSTE], [PPTO_HORAS_EFECTIVAS])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "PPTO_COSTE_HORA_CONCEPTO",
            "description": "Se calcula dividiendo el coste ppto a nivel de concepto entre las horas efectivas para esa empresa/mes",
            "expression": " DIVIDE([PPTO_COSTE_CONCEPTO], [PPTO_HORAS_EFECTIVAS])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "PPTO_COSTE_PERIODIFICADO",
            "description": "coste ppto periodificado calculado en el simulador a nivel de empresa/mes",
            "expression": " SUM(PRESUPUESTO_EMPRESA[COSTE_PERIODIFICADO_MES])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "PPTO_COSTE_AA",
            "expression": "CALCULATE([PPTO_COSTE],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "PPTO_COSTE_CONCEPTO_AA",
            "expression": "CALCULATE([PPTO_COSTE_CONCEPTO],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "PPTO_COSTE_HORA_AA",
            "expression": "CALCULATE([PPTO_COSTE_HORA],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "PPTO_COSTE_HORA_CONCEPTO_AA",
            "expression": "CALCULATE([PPTO_COSTE_HORA_CONCEPTO],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "PPTO_COSTE_PERIODIFICADO_AA",
            "expression": "CALCULATE([PPTO_COSTE_PERIODIFICADO],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "PPTO_COSTE_ACUM",
            "expression": "IF(ISBLANK([PPTO_COSTE]),BLANK(),TOTALYTD([PPTO_COSTE],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "PPTO_COSTE_CONCEPTO_ACUM",
            "expression": "IF(ISBLANK([PPTO_COSTE_CONCEPTO]),BLANK(),TOTALYTD([PPTO_COSTE_CONCEPTO],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "PPTO_COSTE_HORA_ACUM",
            "expression": "IF(ISBLANK([PPTO_COSTE_HORA]),BLANK(),TOTALYTD([PPTO_COSTE_HORA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "PPTO_COSTE_HORA_CONCEPTO_ACUM",
            "expression": "IF(ISBLANK([PPTO_COSTE_HORA_CONCEPTO]),BLANK(),TOTALYTD([PPTO_COSTE_HORA_CONCEPTO],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "PPTO_COSTE_PERIODIFICADO_ACUM",
            "expression": "IF(ISBLANK([PPTO_COSTE_PERIODIFICADO]),BLANK(),TOTALYTD([PPTO_COSTE_PERIODIFICADO],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "PPTO_COSTE_ACUMAA",
            "expression": "CALCULATE([PPTO_COSTE_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUMAA"
          },
          {
            "name": "PPTO_COSTE_CONCEPTO_ACUMAA",
            "expression": "CALCULATE([PPTO_COSTE_CONCEPTO_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUMAA"
          },
          {
            "name": "PPTO_COSTE_HORA_ACUMAA",
            "expression": "CALCULATE([PPTO_COSTE_HORA_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUMAA"
          },
          {
            "name": "PPTO_COSTE_HORA_CONCEPTO_ACUMAA",
            "expression": "CALCULATE([PPTO_COSTE_HORA_CONCEPTO_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUMAA"
          },
          {
            "name": "PPTO_COSTE_PERIODIFICADO_ACUMAA",
            "expression": "CALCULATE([PPTO_COSTE_PERIODIFICADO_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUMAA"
          },
          {
            "name": "PPTO_COSTE_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_ACUM]),[PPTO_COSTE_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_ACUMAA]),[PPTO_COSTE_ACUMAA]=0),BLANK(),([PPTO_COSTE_ACUM]-[PPTO_COSTE_ACUMAA])/[PPTO_COSTE_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "PPTO_COSTE_CONCEPTO_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_CONCEPTO_ACUM]),[PPTO_COSTE_CONCEPTO_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_CONCEPTO_ACUMAA]),[PPTO_COSTE_CONCEPTO_ACUMAA]=0),BLANK(),([PPTO_COSTE_CONCEPTO_ACUM]-[PPTO_COSTE_CONCEPTO_ACUMAA])/[PPTO_COSTE_CONCEPTO_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "PPTO_COSTE_HORA_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_HORA_ACUM]),[PPTO_COSTE_HORA_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_HORA_ACUMAA]),[PPTO_COSTE_HORA_ACUMAA]=0),BLANK(),([PPTO_COSTE_HORA_ACUM]-[PPTO_COSTE_HORA_ACUMAA])/[PPTO_COSTE_HORA_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "PPTO_COSTE_HORA_CONCEPTO_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_HORA_CONCEPTO_ACUM]),[PPTO_COSTE_HORA_CONCEPTO_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_HORA_CONCEPTO_ACUMAA]),[PPTO_COSTE_HORA_CONCEPTO_ACUMAA]=0),BLANK(),([PPTO_COSTE_HORA_CONCEPTO_ACUM]-[PPTO_COSTE_HORA_CONCEPTO_ACUMAA])/[PPTO_COSTE_HORA_CONCEPTO_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "PPTO_COSTE_PERIODIFICADO_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_PERIODIFICADO_ACUM]),[PPTO_COSTE_PERIODIFICADO_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_PERIODIFICADO_ACUMAA]),[PPTO_COSTE_PERIODIFICADO_ACUMAA]=0),BLANK(),([PPTO_COSTE_PERIODIFICADO_ACUM]-[PPTO_COSTE_PERIODIFICADO_ACUMAA])/[PPTO_COSTE_PERIODIFICADO_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "PPTO_COSTE_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE]),[PPTO_COSTE]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_AA]),[PPTO_COSTE_AA]=0),BLANK(),([PPTO_COSTE]-[PPTO_COSTE_AA])/[PPTO_COSTE_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "PPTO_COSTE_CONCEPTO_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_CONCEPTO]),[PPTO_COSTE_CONCEPTO]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_CONCEPTO_AA]),[PPTO_COSTE_CONCEPTO_AA]=0),BLANK(),([PPTO_COSTE_CONCEPTO]-[PPTO_COSTE_CONCEPTO_AA])/[PPTO_COSTE_CONCEPTO_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "PPTO_COSTE_HORA_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_HORA]),[PPTO_COSTE_HORA]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_HORA_AA]),[PPTO_COSTE_HORA_AA]=0),BLANK(),([PPTO_COSTE_HORA]-[PPTO_COSTE_HORA_AA])/[PPTO_COSTE_HORA_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "PPTO_COSTE_HORA_CONCEPTO_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_HORA_CONCEPTO]),[PPTO_COSTE_HORA_CONCEPTO]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_HORA_CONCEPTO_AA]),[PPTO_COSTE_HORA_CONCEPTO_AA]=0),BLANK(),([PPTO_COSTE_HORA_CONCEPTO]-[PPTO_COSTE_HORA_CONCEPTO_AA])/[PPTO_COSTE_HORA_CONCEPTO_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "PPTO_COSTE_PERIODIFICADO_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_PERIODIFICADO]),[PPTO_COSTE_PERIODIFICADO]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_PERIODIFICADO_AA]),[PPTO_COSTE_PERIODIFICADO_AA]=0),BLANK(),([PPTO_COSTE_PERIODIFICADO]-[PPTO_COSTE_PERIODIFICADO_AA])/[PPTO_COSTE_PERIODIFICADO_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "PPTO_COSTE_CIERRE",
            "expression": "CALCULATE([PPTO_COSTE],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "PPTO_COSTE_CONCEPTO_CIERRE",
            "expression": "CALCULATE([PPTO_COSTE_CONCEPTO],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "PPTO_COSTE_HORA_CIERRE",
            "expression": "CALCULATE([PPTO_COSTE_HORA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "PPTO_COSTE_HORA_CONCEPTO_CIERRE",
            "expression": "CALCULATE([PPTO_COSTE_HORA_CONCEPTO],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "PPTO_COSTE_PERIODIFICADO_CIERRE",
            "expression": "CALCULATE([PPTO_COSTE_PERIODIFICADO],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "PPTO_COSTE_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_ACUM]),[PPTO_COSTE_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_CIERRE]),[PPTO_COSTE_CIERRE]=0),BLANK(),([PPTO_COSTE_ACUM]-[PPTO_COSTE_CIERRE])/[PPTO_COSTE_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "PPTO_COSTE_HORA_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_HORA_ACUM]),[PPTO_COSTE_HORA_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_HORA_CIERRE]),[PPTO_COSTE_HORA_CIERRE]=0),BLANK(),([PPTO_COSTE_HORA_ACUM]-[PPTO_COSTE_HORA_CIERRE])/[PPTO_COSTE_HORA_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "PPTO_COSTE_CONCEPTO_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_CONCEPTO_ACUM]),[PPTO_COSTE_CONCEPTO_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_CONCEPTO_CIERRE]),[PPTO_COSTE_CONCEPTO_CIERRE]=0),BLANK(),([PPTO_COSTE_CONCEPTO_ACUM]-[PPTO_COSTE_CONCEPTO_CIERRE])/[PPTO_COSTE_CONCEPTO_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "PPTO_COSTE_HORA_CONCEPTO_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_HORA_CONCEPTO_ACUM]),[PPTO_COSTE_HORA_CONCEPTO_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_HORA_CONCEPTO_CIERRE]),[PPTO_COSTE_HORA_CONCEPTO_CIERRE]=0),BLANK(),([PPTO_COSTE_HORA_CONCEPTO_ACUM]-[PPTO_COSTE_HORA_CONCEPTO_CIERRE])/[PPTO_COSTE_HORA_CONCEPTO_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "PPTO_COSTE_PERIODIFICADO_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_PERIODIFICADO_ACUM]),[PPTO_COSTE_PERIODIFICADO_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_PERIODIFICADO_CIERRE]),[PPTO_COSTE_PERIODIFICADO_CIERRE]=0),BLANK(),([PPTO_COSTE_PERIODIFICADO_ACUM]-[PPTO_COSTE_PERIODIFICADO_CIERRE])/[PPTO_COSTE_PERIODIFICADO_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "PPTO_COSTE_CONCEPTO_SS",
            "expression": "SUM(PRESUPUESTO_EMPRESA_CONCEPTOS[COSTE_MES_CONCEPTO_SS])",
            "formatString": "#,0.00",
            "displayFolder": "COSTE"
          },
          {
            "name": "PPTO_COSTE_CONCEPTO_SS_AA",
            "expression": "CALCULATE([PPTO_HORAS_TEORICAS_INDEFINIDOS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "PPTO_COSTE_CONCEPTO_SS_ACUM",
            "expression": "IF(ISBLANK([PPTO_COSTE_CONCEPTO_SS]),BLANK(),TOTALYTD([PPTO_COSTE_CONCEPTO_SS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_ACUMAA"
          },
          {
            "name": "PPTO_COSTE_CONCEPTO_SS_ACUMAA",
            "expression": "CALCULATE([PPTO_COSTE_CONCEPTO_SS_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "PPTO_COSTE_CONCEPTO_SS_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_CONCEPTO_SS_ACUM]),[PPTO_COSTE_CONCEPTO_SS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_CONCEPTO_SS_ACUMAA]),[PPTO_COSTE_CONCEPTO_SS_ACUMAA]=0),BLANK(),([PPTO_COSTE_CONCEPTO_SS_ACUM]-[PPTO_COSTE_CONCEPTO_SS_ACUMAA])/[PPTO_COSTE_CONCEPTO_SS_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "PPTO_COSTE_CONCEPTO_SS_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_CONCEPTO_SS]),[PPTO_COSTE_CONCEPTO_SS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_CONCEPTO_SS_AA]),[PPTO_COSTE_CONCEPTO_SS_AA]=0),BLANK(),([PPTO_COSTE_CONCEPTO_SS]-[PPTO_COSTE_CONCEPTO_SS_AA])/[PPTO_COSTE_CONCEPTO_SS_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "PPTO_COSTE_CONCEPTO_SS_CIERRE",
            "expression": "CALCULATE([PPTO_COSTE_CONCEPTO_SS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "0.00",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "PPTO_COSTE_CONCEPTO_SS_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_COSTE_CONCEPTO_SS_ACUM]),[PPTO_COSTE_CONCEPTO_SS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_COSTE_CONCEPTO_SS_CIERRE]),[PPTO_COSTE_CONCEPTO_SS_CIERRE]=0),BLANK(),([PPTO_COSTE_CONCEPTO_SS_ACUM]-[PPTO_COSTE_CONCEPTO_SS_CIERRE])/[PPTO_COSTE_CONCEPTO_SS_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "PPTO_%DIFF_COSTE_HORA",
            "expression": " IF(ISBLANK([COSTE_HORA]),BLANK(),DIVIDE([COSTE_HORA],[PPTO_COSTE_HORA])-1)",
            "displayFolder": "COSTE"
          },
          {
            "name": "PPTO_%DIFF_COSTE_HORA_CONCEPTO",
            "expression": " IF(ISBLANK([COSTE_HORA_ALMACEN]),BLANK(),DIVIDE([COSTE_HORA_ALMACEN],[PPTO_COSTE_HORA_CONCEPTO])-1)",
            "displayFolder": "COSTE"
          },
          {
            "name": "PPTO_%DIFF_COSTE_HORA_ACUM",
            "expression": "IF(ISBLANK([PPTO_%DIFF_COSTE_HORA]),BLANK(),TOTALYTD([PPTO_%DIFF_COSTE_HORA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "PPTO_%DIFF_COSTE_HORA_ACUMAA",
            "expression": "CALCULATE([PPTO_%DIFF_COSTE_HORA_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_ACUMAA"
          },
          {
            "name": "PPTO_%DIFF_COSTE_HORA_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_%DIFF_COSTE_HORA_ACUM]),[PPTO_%DIFF_COSTE_HORA_ACUM]=0),BLANK(),\n\tIF(OR(ISBLANK([PPTO_%DIFF_COSTE_HORA_ACUMAA]),[PPTO_%DIFF_COSTE_HORA_ACUMAA]=0),BLANK(),([PPTO_%DIFF_COSTE_HORA_ACUM]-[PPTO_%DIFF_COSTE_HORA_ACUMAA])/[PPTO_%DIFF_COSTE_HORA_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "PPTO_%DIFF_COSTE_HORA_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_%DIFF_COSTE_HORA]),[PPTO_%DIFF_COSTE_HORA]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_%DIFF_COSTE_HORA_AA]),[PPTO_%DIFF_COSTE_HORA_AA]=0),BLANK(),([PPTO_%DIFF_COSTE_HORA]-[PPTO_%DIFF_COSTE_HORA_AA])/[PPTO_%DIFF_COSTE_HORA_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "PPTO_%DIFF_COSTE_HORA_CIERRE",
            "expression": "CALCULATE([PPTO_%DIFF_COSTE_HORA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\")) ",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "PPTO_%DIFF_COSTE_HORA_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_%DIFF_COSTE_HORA_ACUM]),[PPTO_%DIFF_COSTE_HORA_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_%DIFF_COSTE_HORA_CIERRE]),[PPTO_%DIFF_COSTE_HORA_CIERRE]=0),BLANK(),([PPTO_%DIFF_COSTE_HORA_ACUM]-[PPTO_%DIFF_COSTE_HORA_CIERRE])/[PPTO_%DIFF_COSTE_HORA_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "PPTO_%DIFF_COSTE_HORA_AA",
            "expression": "CALCULATE([PPTO_%DIFF_COSTE_HORA],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "PPTO_%DIFF_COSTE_HORA_CONCEPTO_AA",
            "expression": "CALCULATE([PPTO_%DIFF_COSTE_HORA_CONCEPTO],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "PPTO_%DIFF_COSTE_HORA_CONCEPTO_ACUM",
            "expression": "IF(ISBLANK([PPTO_%DIFF_COSTE_HORA_CONCEPTO]),BLANK(),TOTALYTD([PPTO_%DIFF_COSTE_HORA_CONCEPTO],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "PPTO_%DIFF_COSTE_HORA_CONCEPTO_ACUMAA",
            "expression": "CALCULATE([PPTO_%DIFF_COSTE_HORA_CONCEPTO_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_ACUMAA"
          },
          {
            "name": "PPTO_%DIFF_COSTE_HORA_CONCEPTO_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_%DIFF_COSTE_HORA_CONCEPTO_ACUM]),[PPTO_%DIFF_COSTE_HORA_CONCEPTO_ACUM]=0),BLANK(),\n\tIF(OR(ISBLANK([PPTO_%DIFF_COSTE_HORA_CONCEPTO_ACUMAA]),[PPTO_%DIFF_COSTE_HORA_CONCEPTO_ACUMAA]=0),BLANK(),([PPTO_%DIFF_COSTE_HORA_CONCEPTO_ACUM]-[PPTO_%DIFF_COSTE_HORA_CONCEPTO_ACUMAA])/[PPTO_%DIFF_COSTE_HORA_CONCEPTO_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "PPTO_%DIFF_COSTE_HORA_CONCEPTO_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_%DIFF_COSTE_HORA_CONCEPTO]),[PPTO_%DIFF_COSTE_HORA_CONCEPTO]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_%DIFF_COSTE_HORA_CONCEPTO_AA]),[PPTO_%DIFF_COSTE_HORA_CONCEPTO_AA]=0),BLANK(),([PPTO_%DIFF_COSTE_HORA_CONCEPTO]-[PPTO_%DIFF_COSTE_HORA_CONCEPTO_AA])/[PPTO_%DIFF_COSTE_HORA_CONCEPTO_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "PPTO_%DIFF_COSTE_HORA_CONCEPTO_CIERRE",
            "expression": "CALCULATE([PPTO_%DIFF_COSTE_HORA_CONCEPTO],PREVIOUSYEAR(FECHA[FECHA],\"1/31\")) ",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "PPTO_%DIFF_COSTE_HORA_CONCEPTO_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_%DIFF_COSTE_HORA_CONCEPTO_ACUM]),[PPTO_%DIFF_COSTE_HORA_CONCEPTO_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_%DIFF_COSTE_HORA_CONCEPTO_CIERRE]),[PPTO_%DIFF_COSTE_HORA_CONCEPTO_CIERRE]=0),BLANK(),([PPTO_%DIFF_COSTE_HORA_CONCEPTO_ACUM]-[PPTO_%DIFF_COSTE_HORA_CONCEPTO_CIERRE])/[PPTO_%DIFF_COSTE_HORA_CONCEPTO_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "PPTO_%DIFF_REAL",
            "description": "Cálculado como: (coste_almacen / PPTO_COSTE) -1",
            "expression": " IF(ISBLANK([COSTE_ALMACEN]),BLANK(),DIVIDE([COSTE_ALMACEN],[PPTO_COSTE])-1)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE"
          },
          {
            "name": "PPTO_%DIFF_REAL_CONCEPTO",
            "description": "Cálculado como: (coste_almacen_concepto / PPTO_COSTE_concepto) -1",
            "expression": " IF(ISBLANK([COSTE_ALMACEN]),BLANK(),DIVIDE([COSTE_ALMACEN],[PPTO_COSTE_CONCEPTO])-1)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE"
          },
          {
            "name": "PPTO_%DIFF_REAL_AA",
            "expression": "CALCULATE([PPTO_%DIFF_REAL],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "PPTO_%DIFF_REAL_CONCEPTO_AA",
            "expression": "CALCULATE([PPTO_%DIFF_REAL_CONCEPTO],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_AA"
          },
          {
            "name": "PPTO_%DIFF_REAL_ACUM",
            "expression": "IF(ISBLANK([PPTO_%DIFF_REAL]),BLANK(),TOTALYTD([PPTO_%DIFF_REAL],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "PPTO_%DIFF_REAL_CONCEPTO_ACUM",
            "expression": "IF(ISBLANK([PPTO_%DIFF_REAL_CONCEPTO]),BLANK(),TOTALYTD([PPTO_%DIFF_REAL_CONCEPTO],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_ACUM"
          },
          {
            "name": "PPTO_%DIFF_REAL_ACUMAA",
            "expression": "CALCULATE([PPTO_%DIFF_REAL_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_ACUMAA"
          },
          {
            "name": "PPTO_%DIFF_REAL_CONCEPTO_ACUMAA",
            "expression": "CALCULATE([PPTO_%DIFF_REAL_CONCEPTO_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_ACUMAA"
          },
          {
            "name": "PPTO_%DIFF_REAL_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_%DIFF_REAL_ACUM]),[PPTO_%DIFF_REAL_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_%DIFF_REAL_ACUMAA]),[PPTO_%DIFF_REAL_ACUMAA]=0),BLANK(),([PPTO_%DIFF_REAL_ACUM]-[PPTO_%DIFF_REAL_ACUMAA])/[PPTO_%DIFF_REAL_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "PPTO_%DIFF_REAL_CONCEPTO_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_%DIFF_REAL_CONCEPTO_ACUM]),[PPTO_%DIFF_REAL_CONCEPTO_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_%DIFF_REAL_CONCEPTO_ACUMAA]),[PPTO_%DIFF_REAL_CONCEPTO_ACUMAA]=0),BLANK(),([PPTO_%DIFF_REAL_CONCEPTO_ACUM]-[PPTO_%DIFF_REAL_CONCEPTO_ACUMAA])/[PPTO_%DIFF_REAL_CONCEPTO_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DACUMAA"
          },
          {
            "name": "PPTO_%DIFF_REAL_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_%DIFF_REAL]),[PPTO_%DIFF_REAL]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_%DIFF_REAL_AA]),[PPTO_%DIFF_REAL_AA]=0),BLANK(),([PPTO_%DIFF_REAL]-[PPTO_%DIFF_REAL_AA])/[PPTO_%DIFF_REAL_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "PPTO_%DIFF_REAL_CONCEPTO_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_%DIFF_REAL_CONCEPTO]),[PPTO_%DIFF_REAL_CONCEPTO]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_%DIFF_REAL_CONCEPTO_AA]),[PPTO_%DIFF_REAL_CONCEPTO_AA]=0),BLANK(),([PPTO_%DIFF_REAL_CONCEPTO]-[PPTO_%DIFF_REAL_CONCEPTO_AA])/[PPTO_%DIFF_REAL_CONCEPTO_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DAA"
          },
          {
            "name": "PPTO_%DIFF_REAL_CIERRE",
            "expression": "CALCULATE([PPTO_%DIFF_REAL],PREVIOUSYEAR(FECHA[FECHA],\"1/31\")) ",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "PPTO_%DIFF_REAL_CONCEPTO_CIERRE",
            "expression": "CALCULATE([PPTO_%DIFF_REAL_CONCEPTO],PREVIOUSYEAR(FECHA[FECHA],\"1/31\")) ",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_CIERRE"
          },
          {
            "name": "PPTO_%DIFF_REAL_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_%DIFF_REAL_ACUM]),[PPTO_%DIFF_REAL_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_%DIFF_REAL_CIERRE]),[PPTO_%DIFF_REAL_CIERRE]=0),BLANK(),([PPTO_%DIFF_REAL_ACUM]-[PPTO_%DIFF_REAL_CIERRE])/[PPTO_%DIFF_REAL_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "PPTO_%DIFF_REAL_CONCEPTO_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_%DIFF_REAL_CONCEPTO_ACUM]),[PPTO_%DIFF_REAL_CONCEPTO_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_%DIFF_REAL_CONCEPTO_CIERRE]),[PPTO_%DIFF_REAL_CONCEPTO_CIERRE]=0),BLANK(),([PPTO_%DIFF_REAL_CONCEPTO_ACUM]-[PPTO_%DIFF_REAL_CONCEPTO_CIERRE])/[PPTO_%DIFF_REAL_CONCEPTO_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "COSTE_DCIERRE"
          },
          {
            "name": "PPTO_COSTE_HORA_CONCEPTO_SS",
            "expression": " DIVIDE([PPTO_COSTE_CONCEPTO_SS], [PPTO_HORAS_EFECTIVAS])",
            "isHidden": true,
            "displayFolder": "COSTE"
          }
        ],
        "annotations": [
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>WITH tmeses (ANOMES,\nANO,\nMES,\nFECHADESDE,\nFECHA_INICIO ,\nFECHA_FIN) AS (\nSELECT\n\tCAST(YEAR( DATE(FECHA_HASTA)) AS CHAR(4))|| RIGHT('0' || RTRIM(CAST(CAST(MONTH(DATE(FECHA_HASTA)) AS CHAR(2)) AS VARCHAR(2))),\n\t2) AS ANOMES,\n\tYEAR( DATE(FECHA_HASTA)) AS ANO,\n\tMONTH(DATE(FECHA_HASTA)) AS MES,\n\tDATE(FECHA_DESDE) AS FECHADESDE,\n\tDATE(FECHA_HASTA) AS FECHA_INICIO,\n\t(DATE(FECHA_HASTA) + 1 MONTH) -1 DAY AS FECHA_FIN\nFROM\n\t(\n\t\tSELECT CAST('01/01/2013' AS VARCHAR(10)) FECHA_DESDE,\n\t\tCAST('01/01/2050' AS VARCHAR(10)) AS FECHA_HASTA\n\tFROM\n\t\tsysibm.sysdummy1 ) A\nUNION ALL\nSELECT\n\tCAST(YEAR(FECHA_INICIO - 1 MONTH) AS CHAR(4))|| RIGHT('0' || RTRIM(CAST(CAST(MONTH(FECHA_INICIO - 1 MONTH) AS CHAR(2)) AS VARCHAR(2))),\n\t2) AS ANOMES,\n\tYEAR(FECHA_INICIO - 1 MONTH) AS ANO,\n\tMONTH(FECHA_INICIO - 1 MONTH) AS MES,\n\tFECHADESDE AS FECHADESDE,\n\tFECHA_INICIO -1 MONTH AS FECHA_INICIO,\n\tFECHA_INICIO -1 DAY AS FECHA_FIN\nFROM\n\ttmeses\nWHERE\n\tFECHA_INICIO - 1 MONTH >= FECHADESDE ),\n----------------------------------------------------------   \n--TABLA EMPRESA_GRUPO_DIVISION_SECCION HARDCODED   \n----------------------------------------------------------   \n EMPRESA_GRUPO_DIVISION_SECCION (ID_EMPRESA_GRUPO_DIVISION_SECCION ,\nID_EMPRESA_GRUPO ,\nNOMBRE_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION ,\nNOM_DIVSEC ) AS (\nSELECT\n\tID_DIVSEC,\n\tID_EMPRESA_GRUPO,\n\tEMPRESA_GRUPO,\n\tDIVISION,\n\tSECCION,\n\tNOM_DIVSEC\nFROM\n\t(\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'991304' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [1304]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t5 AS SECCION,\n\t\t'991305' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [1305]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'998525' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'998537' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [8537]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t41 AS ID_EMPRESA_GRUPO,\n\t\t'PULL & BEAR LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'418525' AS ID_DIVSEC,\n\t\t'PULL & BEAR LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\n\t\t\n\t\t\nUNION\n\tSELECT\n\t\t41 AS ID_EMPRESA_GRUPO,\n\t\t'PULL & BEAR LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'418537' AS ID_DIVSEC,\n\t\t'PULL & BEAR LOGISTICA [8537]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\n\t\t\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t03 AS DIVISION,\n\t\t17 AS SECCION,\n\t\t'1890317' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [0317]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t03 AS SECCION,\n\t\t'1891303' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [1303]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'1898525' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t5 AS DIVISION,\n\t\t6 AS SECCION,\n\t\t'370506' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [0506]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t5 AS SECCION,\n\t\t'371305' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [1305]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t28 AS DIVISION,\n\t\t4 AS SECCION,\n\t\t'372804' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [2804]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'378525' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'378537' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [8537]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t9 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t18 AS SECCION,\n\t\t'91318' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [1318]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t32 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA HOME LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'328525' AS ID_DIVSEC,\n\t\t'ZARA HOME LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'431304' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [1304]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t05 AS SECCION,\n\t\t'431305' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [1305]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'438525' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'438537' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [8537]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'141300' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1300]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t12 AS SECCION,\n\t\t'141312' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1312]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t09 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'140900' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1312]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'268525' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t26 AS SECCION,\n\t\t'268526' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8526]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t27 AS SECCION,\n\t\t'268527' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8527]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t28 AS SECCION,\n\t\t'268528' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8528]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t29 AS SECCION,\n\t\t'268529' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8529]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'261300' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [1300]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t63 AS DIVISION,\n\t\t08 AS SECCION,\n\t\t'266308' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [6308]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t12 AS ID_EMPRESA_GRUPO,\n\t\t'LEFTIES LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t19 AS SECCION,\n\t\t'121319' AS ID_DIVSEC,\n\t\t'LEFTIES LOGISTICA [1319]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t23 AS ID_EMPRESA_GRUPO,\n\t\t'OYSHO LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t0 AS SECCION,\n\t\t'231300' AS ID_DIVSEC,\n\t\t'OYSHO LOGISTICA [1300]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t01 AS SECCION,\n\t\t'611301' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [1301]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'611304' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [1304]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'618525' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t357 AS ID_EMPRESA_GRUPO,\n\t\t'TORDERA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'3578525' AS ID_DIVSEC,\n\t\t'TORDERA LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\t--ATG   \n\n\t\tSELECT 68 AS ID_EMPRESA_GRUPO,\n\t\t'FASHION LOGISTICS FORWARDERS' AS EMPRESA_GRUPO,\n\t\t00 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'680000' AS ID_DIVSEC,\n\t\t'FASHION LOGISTICS FORWARDERS []' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t330 AS ID_EMPRESA_GRUPO,\n\t\t'INDITEX LOGISTICA' AS EMPRESA_GRUPO,\n\t\t00 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'3300000' AS ID_DIVSEC,\n\t\t'INDITEX LOGISTICA []' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\t--ATG   \n\n\t\tSELECT 20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t51 AS DIVISION,\n\t\t73 AS SECCION,\n\t\t'205173' AS ID_DIVSEC,\n\t\t'TEMPE [205173]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t30 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'203000' AS ID_DIVSEC,\n\t\t'TEMPE [203000]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t51 AS DIVISION,\n\t\t34 AS SECCION,\n\t\t'205134' AS ID_DIVSEC,\n\t\t'TEMPE [205134]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t50 AS DIVISION,\n\t\t41 AS SECCION,\n\t\t'205041' AS ID_DIVSEC,\n\t\t'TEMPE [205041]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t398 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA CABANILLAS' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'3988525' AS ID_DIVSEC,\n\t\t'ALMACEN PAQUETE [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tSYSIBM.SYSDUMMY1 EG\nUNION\n\tSELECT\n\t\t64 AS ID_EMPRESA_GRUPO,\n\t\t'INDIPUNT' AS EMPRESA_GRUPO,\n\t\t91 AS DIVISION,\n\t\t15 AS SECCION,\n\t\t'649115' AS ID_DIVSEC,\n\t\t'INDIPUNT [9115]' AS NOM_DIVSEC\n\tFROM\n\t\tSYSIBM.SYSDUMMY1 EG ) Q_UNION ) ,\nEMPRESASFILTRO (ID_EMPRESA,\nDIVISION,\nSECCION) AS (\nSELECT\n\tDISTINCT ID_EMPRESA_GRUPO,\n\tDIVISION,\n\tSECCION\nFROM\n\tEMPRESA_GRUPO_DIVISION_SECCION ) ,\n----------------------------------------------------------   \n--TABLA DIVSEC MAESTRA   \n----------------------------------------------------------   \n DIVSEC_MAESTRA (ID_EMPRESA_GRUPO ,\nNOMBRE_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION ,\nID_DIVSEC ,\nNOM_DIVSEC) AS (\nSELECT\n\tid_empresa AS ID_EMPRESA_GRUPO,\n\tNULL AS NOMBRE_EMPRESA_GRUPO,\n\tNULL AS DIVISION,\n\tNULL AS SECCION,\n\tNULL AS ID_DIVSEC,\n\tNULL AS NOM_DIVSEC\nFROM\n\tempresasFiltro\nUNION ALL\nSELECT\n\t9 AS ID_EMPRESA_GRUPO,\n\tNULL AS NOMBRE_EMPRESA_GRUPO,\n\t13 AS DIVISION,\n\t18 AS SECCION,\n\t'91318' AS ID_DIVSEC,\n\t'PLATAFORMA LOGISTICA MECO' NOM_DIVSEC\nFROM\n\tEMPRESASFILTRO\nWHERE\n\tID_EMPRESA = 37 ),\n/*Se crea una tabla temporal con las tuplas posibles de consulta: AÑO-EMPRESA-DIVISION*/\n/*Esto se hace para acceder con el nuevo indice a la tabla RRHH.CONCEPTO_EMPLEADO_SALARIO*/\ntanos_divisiones(ANO ,\nMES ,\nEMPRESA) AS (\nSELECT\n\tANO,\n\tMES,\n\tID_EMPRESA\nFROM\n\ttmeses m,\n\tempresasFiltro d\nGROUP BY\n\tANO,\n\tMES,\n\tID_EMPRESA ),\ntanos_divisiones_Absent(ANO ,\nMES ,\nEMPRESA,\nDIVISION,\nSECCION ) AS (\nSELECT\n\tANO,\n\tMES,\n\tID_EMPRESA ,\n\tDIVISION,\n\tSECCION\nFROM\n\ttmeses m,\n\tempresasFiltro d\nGROUP BY\n\tANO,\n\tMES,\n\tID_EMPRESA,\n\tDIVISION,\n\tSECCION ),\n/*Código añadido para contemplar Logistica MECO, cuyo código empresa es diferente para oficinas que almacen*/\ntanos_divisiones_excepcion (ANO ,\nMES ,\nEMPRESA_FILTRO ,\nEMPRESA ,\nDIVISION ) AS (\nSELECT\n\tANO,\n\tMES,\n\tEMPRESA AS EMPRESA_FILTRO,\n\t9 AS EMPRESA,\n\tdm.DIVISION\nFROM\n\ttanos_divisiones t\nINNER JOIN EMPRESA_GRUPO_DIVISION_SECCION dm ON\n\tdm.ID_EMPRESA_GRUPO = 9\nWHERE\n\tEMPRESA = 37\nGROUP BY\n\tANO,\n\tMES,\n\tEMPRESA,\n\tDIVISION ),\n--Calculo SalarioBruto                                 \n agrupaSalarioBruto(ANO ,\nMES ,\nEMPRESA_FILTRO ,\nEMPRESA ,\nDIVISION ,\nSECCION ,\nID_CONCEPTO_SALARIO ,\nIMPORTE ) AS (\nSELECT\n\tes.ANO,\n\tes.MES,\n\tes.ID_EMPRESA_GRUPO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO,\n\tSUM(es.IMPORTE)\nFROM\n\tRRHH.CONCEPTO_EMPRESA_SALARIO ES\nINNER JOIN tanos_divisiones ad ON\n\tad.ANO = ES.ANO\n\tAND ad.MES = ES.MES\n\tAND ES.ID_EMPRESA_GRUPO = ad.EMPRESA\nGROUP BY\n\tes.ANO,\n\tes.MES,\n\tes.ID_EMPRESA_GRUPO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO\nUNION ALL\nSELECT\n\tes.ANO,\n\tes.MES,\n\tad.EMPRESA_FILTRO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO,\n\tSUM(es.IMPORTE)\nFROM\n\tRRHH.CONCEPTO_EMPRESA_SALARIO ES\nINNER JOIN tanos_divisiones_excepcion ad ON\n\tad.ANO = ES.ANO\n\tAND ad.MES = ES.MES\n\tAND ES.ID_EMPRESA_GRUPO = ad.EMPRESA\n\tAND ES.DIVISION = ad.DIVISION\nGROUP BY\n\tes.ANO,\n\tes.MES,\n\tad.EMPRESA_FILTRO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO\nUNION\nSELECT\n\tes.ANO,\n\tes.MES,\n\tes.ID_EMPRESA_GRUPO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO,\n\tSUM(DOUBLE(decrypt_char(ES.IMPORTE, 'ee6u7xjgRsRR6g8dRQfLuHkF+4FGUlpy6naR0Ck66wYWX2uoe')))\nFROM\n\tRRHH.CONCEPTO_EMPLEADO_COSTE_ABSENTISMO ES\nINNER JOIN tanos_divisiones_Absent ad ON\n\tad.ANO = ES.ANO\n\tAND ad.MES = ES.MES\n\tAND ES.ID_EMPRESA_GRUPO = ad.EMPRESA\n\tAND ES.DIVISION = ad.DIVISION\n\tAND ES.SECCION = ad.SECCION\nGROUP BY\n\tes.ANO,\n\tes.MES,\n\tes.ID_EMPRESA_GRUPO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO\nUNION\nSELECT\n\tes.ANO,\n\tes.MES,\n\tad.EMPRESA_FILTRO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO,\n\tSUM(DOUBLE(decrypt_char(ES.IMPORTE, 'ee6u7xjgRsRR6g8dRQfLuHkF+4FGUlpy6naR0Ck66wYWX2uoe')))\nFROM\n\tRRHH.CONCEPTO_EMPLEADO_COSTE_ABSENTISMO es\nINNER JOIN tanos_divisiones_excepcion ad ON\n\tad.ANO = ES.ANO\n\tAND ad.MES = ES.MES\n\tAND ES.ID_EMPRESA_GRUPO = ad.EMPRESA\n\tAND ES.DIVISION = ad.DIVISION\nGROUP BY\n\tes.ANO,\n\tes.MES,\n\tad.EMPRESA_FILTRO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO ),\n/*Tabla temporal en la que se vuelcan los registros con los que se va a trabajar */\nagrupaSalario(ANO ,\nMES ,\nID_EMPRESA_FILTRO ,\nID_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION ,\nID_DIVSEC ,\nID_CONCEPTO_SALARIO ,\nIMPORTE,\nDIVORG,\nSECORG ) AS (\nSELECT\n\tES.ANO,\n\tES.MES,\n\tES.EMPRESA_FILTRO AS ID_EMPRESA_FILTRO,\n\tES.EMPRESA AS ID_EMPRESA_GRUPO,\n\tEF.DIVISION,\n\tEF.SECCION,\n\tEF.ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\tES.ID_CONCEPTO_SALARIO,\n\tES.IMPORTE,\n\tES.DIVISION,\n\tES.SECCION\nFROM\n\tagrupaSalarioBruto ES\nLEFT JOIN EMPRESA_GRUPO_DIVISION_SECCION EF ON\n\tES.EMPRESA = EF.ID_EMPRESA_GRUPO\n\tAND ES.DIVISION = EF.DIVISION\n\tAND ES.SECCION = EF.SECCION\nWHERE\n\tES.EMPRESA <> 9\nUNION ALL\nSELECT\n\tES.ANO,\n\tES.MES,\n\tES.EMPRESA_FILTRO AS ID_EMPRESA_FILTRO,\n\t37 AS ID_EMPRESA_GRUPO,\n\tNULL AS DIVISION,\n\tNULL AS SECCION,\n\tNULL AS ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\tES.ID_CONCEPTO_SALARIO,\n\tES.IMPORTE,\n\tES.DIVISION,\n\tES.SECCION\nFROM\n\tagrupaSalarioBruto ES\nINNER JOIN EMPRESA_GRUPO_DIVISION_SECCION EF ON\n\tES.EMPRESA = EF.ID_EMPRESA_GRUPO\n\tAND ES.DIVISION = EF.DIVISION\n\tAND ES.SECCION = EF.SECCION\nWHERE\n\tES.EMPRESA = 9\n\tAND ES.EMPRESA_FILTRO <> 9 ),\n-----------------------------------------------------------------------------------------------------------------------   \n--ESTRUCTURA INDICADORES (1 NIVEL)   \n-----------------------------------------------------------------------------------------------------------------------   \n ESTRUCTURA_INDICADORES (ID_CONCEPTO ,\nID_UNIDAD_ORGANIZATIVA ,\nORDER_H1 ,\nCONCEPTO_H1 ,\nID_CONCEPTO_SALARIO_CONCEPTO_INFORME ,\nID_CONCEPTO_SALARIO ,\nSIGNO ,\nID_UO ,\nANO ,\nMES ,\nID_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION,\nDIVORG,\nSECORG )\n--ESTRUCTURA CONCEPTOS   \n AS (\nSELECT\n\tCI.ID_CONCEPTO_INFORME AS ID_CONCEPTO,\n\tCI.ID_UNIDAD_ORGANIZATIVA,\n\tORDEN AS ORDER_H1,\n\tCASE\n\t\tWHEN CI.DESCRIPCION = 'GASTO SALARIAL' THEN 'COSTE_SALARIAL_TOTAL_EMPRESA'\n\t\tWHEN CI.DESCRIPCION = 'GASTO SEGURIDAD SOCIAL' THEN 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA'\n\t\tELSE CI.DESCRIPCION\n\tEND AS CONCEPTO_H1,\n\tCSCI.ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tCSCI.ID_CONCEPTO_SALARIO,\n\tCSCI.SIGNO,\n\tUO.DESCRIPCION,\n\tQ_ES.ANO,\n\tQ_ES.MES,\n\tQ_ES.ID_EMPRESA_GRUPO,\n\tQ_ES.DIVISION,\n\tQ_ES.SECCION,\n\tQ_ES.DIVORG,\n\tQ_ES.SECORG\nFROM\n\tRRHH.CONCEPTO_INFORME CI\nLEFT JOIN RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME CSCI ON\n\tCI.ID_CONCEPTO_INFORME = CSCI.ID_CONCEPTO_INFORME\nINNER JOIN RRHH.UNIDAD_ORGANIZATIVA UO ON\n\tCI.ID_UNIDAD_ORGANIZATIVA = UO.ID_UNIDAD_ORGANIZATIVA\n\tAND CI.ID_UNIDAD_ORGANIZATIVA = 1\n\t--ESTRUCTURA   \nCROSS JOIN (\n\tSELECT\n\t\tDISTINCT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tDIVISION,\n\t\tSECCION,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tagrupASalario\n\tWHERE\n\t\tSECCION IS NULL\n\t\tOR ID_EMPRESA_GRUPO = 9) AS Q_ES\nINNER JOIN EMPRESASFiltro ON\n\tID_INFORME = Q_ES.ID_EMPRESA_GRUPO\nWHERE\n\tORDEN < 10\n\tAND ID_EMPRESA <> 9\nUNION\n--ALMACEN CONCEPTOS   \n-----------------------------------------------------------------------------------------------------------   \n\n\tSELECT CI.ID_CONCEPTO_INFORME AS ID_CONCEPTO,\n\tCI.ID_UNIDAD_ORGANIZATIVA,\n\tORDEN AS ORDER_H1,\n\tCASE\n\t\tWHEN CI.DESCRIPCION = 'GASTO SALARIAL' THEN 'COSTE_SALARIAL_TOTAL_EMPRESA'\n\t\tWHEN CI.DESCRIPCION = 'GASTO SEGURIDAD SOCIAL' THEN 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA'\n\t\tELSE CI.DESCRIPCION\n\tEND AS CONCEPTO_H1,\n\tCSCI.ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tCSCI.ID_CONCEPTO_SALARIO,\n\tCSCI.SIGNO,\n\tUO.DESCRIPCION,\n\tQ_ES.ANO,\n\tQ_ES.MES,\n\tQ_ES.ID_EMPRESA_GRUPO,\n\tQ_ES.DIVISION,\n\tQ_ES.SECCION,\n\tQ_ES.DIVORG,\n\tQ_ES.SECORG\nFROM\n\tRRHH.CONCEPTO_INFORME CI\nLEFT JOIN RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME CSCI ON\n\tCI.ID_CONCEPTO_INFORME = CSCI.ID_CONCEPTO_INFORME\nINNER JOIN RRHH.UNIDAD_ORGANIZATIVA UO ON\n\tCI.ID_UNIDAD_ORGANIZATIVA = UO.ID_UNIDAD_ORGANIZATIVA\n\tAND CI.ID_UNIDAD_ORGANIZATIVA = 2\n\t--ALMACEN   \nCROSS JOIN (\n\tSELECT\n\t\tDISTINCT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tDIVISION,\n\t\tSECCION,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tagrupASalario\n\tWHERE\n\t\tSECCION IS NOT NULL\n\t\tAND ID_EMPRESA_GRUPO <> 9) AS Q_ES\nINNER JOIN empresASFiltro ON\n\tID_INFORME = Q_ES.ID_EMPRESA_GRUPO\nWHERE\n\tORDEN<10\n\tAND ID_EMPRESA <> 9\nUNION\n--3 NIVELES         \n\n\tSELECT H1.ID_CONCEPTO_INFORME AS ID_CONCEPTO,\n\tH1.ID_UNIDAD_ORGANIZATIVA,\n\tH1.ORDEN AS ORDER_H1,\n\tCASE\n\t\tWHEN H1.DESCRIPCION = 'GASTO SALARIAL' THEN 'COSTE_SALARIAL_TOTAL_EMPRESA'\n\t\tWHEN H1.DESCRIPCION = 'GASTO SEGURIDAD SOCIAL' THEN 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA'\n\t\tELSE H1.DESCRIPCION\n\tEND AS CONCEPTO_H1,\n\tCSCI.ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tCSCI.ID_CONCEPTO_SALARIO,\n\tCSCI.SIGNO,\n\tUO.DESCRIPCION,\n\tQ_ES.ANO,\n\tQ_ES.MES,\n\tQ_ES.ID_EMPRESA_GRUPO,\n\tQ_ES.DIVISION,\n\tQ_ES.SECCION,\n\tQ_ES.DIVORG,\n\tQ_ES.SECORG\nFROM\n\tRRHH.CONCEPTO_INFORME H1\nINNER JOIN RRHH.CONCEPTO_INFORME H2 ON\n\tH1.ID_CONCEPTO_INFORME = H2.ID_CONCEPTO_INFORME_RELACIONADO\nINNER JOIN RRHH.CONCEPTO_INFORME H3 ON\n\tH2.ID_CONCEPTO_INFORME = H3.ID_CONCEPTO_INFORME_RELACIONADO\nLEFT JOIN RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME CSCI ON\n\tH3.ID_CONCEPTO_INFORME = CSCI.ID_CONCEPTO_INFORME\nINNER JOIN RRHH.UNIDAD_ORGANIZATIVA UO ON\n\tH3.ID_UNIDAD_ORGANIZATIVA = UO.ID_UNIDAD_ORGANIZATIVA\n\tAND UO.ID_UNIDAD_ORGANIZATIVA = 2\n\t--SOLO ALMACEN         \nCROSS JOIN (\n\tSELECT\n\t\tDISTINCT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tDIVISION,\n\t\tSECCION,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tagrupASalario\n\tWHERE\n\t\tSECCION IS NOT NULL\n\t\tAND ID_EMPRESA_GRUPO <> 9) AS Q_ES\nINNER JOIN empresASFiltro ON\n\tH1.ID_INFORME = Q_ES.ID_EMPRESA_GRUPO\nWHERE\n\tH2.ORDEN>10\n\tAND H2.ORDEN<1000\n\tAND H3.ORDEN>1000\n\tAND H2.DESCRIPCION <> 'NUMERO'\n\tAND H3.DESCRIPCION <> 'Nº RESALTAS'\n\tAND H2.DESCRIPCION <> 'Nº RESALTAS'\nUNION\n--2 NIVELES         \n\n\tSELECT H1.ID_CONCEPTO_INFORME AS ID_CONCEPTO,\n\tH1.ID_UNIDAD_ORGANIZATIVA,\n\tH1.ORDEN AS ORDER_H1,\n\tCASE\n\t\tWHEN H1.DESCRIPCION = 'GASTO SALARIAL' THEN 'COSTE_SALARIAL_TOTAL_EMPRESA'\n\t\tWHEN H1.DESCRIPCION = 'GASTO SEGURIDAD SOCIAL' THEN 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA'\n\t\tELSE H1.DESCRIPCION\n\tEND AS CONCEPTO_H1,\n\tCSCI.ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tCSCI.ID_CONCEPTO_SALARIO,\n\tCSCI.SIGNO,\n\tUO.DESCRIPCION,\n\tQ_ES.ANO,\n\tQ_ES.MES,\n\tQ_ES.ID_EMPRESA_GRUPO,\n\tQ_ES.DIVISION,\n\tQ_ES.SECCION,\n\tQ_ES.DIVORG,\n\tQ_ES.SECORG\nFROM\n\tRRHH.CONCEPTO_INFORME H1\nINNER JOIN RRHH.CONCEPTO_INFORME H2 ON\n\tH1.ID_CONCEPTO_INFORME = H2.ID_CONCEPTO_INFORME_RELACIONADO\nLEFT JOIN RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME CSCI ON\n\tH2.ID_CONCEPTO_INFORME = CSCI.ID_CONCEPTO_INFORME\nINNER JOIN RRHH.UNIDAD_ORGANIZATIVA UO ON\n\tH2.ID_UNIDAD_ORGANIZATIVA = UO.ID_UNIDAD_ORGANIZATIVA\n\tAND UO.ID_UNIDAD_ORGANIZATIVA = 2\n\t--SOLO ALMACEN         \nCROSS JOIN (\n\tSELECT\n\t\tDISTINCT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tDIVISION,\n\t\tSECCION,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tagrupASalario\n\tWHERE\n\t\tSECCION IS NOT NULL\n\t\tAND ID_EMPRESA_GRUPO <> 9) AS Q_ES\nINNER JOIN empresASFiltro ON\n\tH1.ID_INFORME = Q_ES.ID_EMPRESA_GRUPO\nWHERE\n\tH1.ORDEN<100\n\tAND H2.ORDEN>1000\n\tAND H2.DESCRIPCION <> 'NUMERO'\n\tAND H2.DESCRIPCION <> 'Nº RESALTAS'\n\t--Se añade el concepto IMPPE13 para ALMACEN, no existe en la tabla RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME pero se necesita restar de COSTE_SALARIAL_ALMACEN\nUNION\nSELECT\n\t-1 AS ID_CONCEPTO,\n\t2 AS ID_UNIDAD_ORGANIZATIVA,\n\t-1 AS ORDER_H1,\n\t'IMPPE13' AS CONCEPTO_H1,\n\t-1 AS ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tS.ID_CONCEPTO_SALARIO,\n\t1 AS SIGNO,\n\t'ALMACEN' AS DESCRIPCION,\n\tS.ANO,\n\tS.MES,\n\tS.ID_EMPRESA_GRUPO,\n\tS.DIVISION,\n\tS.SECCION,\n\tS.DIVORG,\n\tS.SECORG\nFROM\n\tagrupASalario S\nINNER JOIN empresASFiltro F ON\n\tF.ID_EMPRESA = S.ID_EMPRESA_GRUPO\nWHERE\n\tS.SECCION IS NOT NULL\n\tAND S.ID_EMPRESA_GRUPO <> 9\n\tAND S.ID_CONCEPTO_SALARIO = 128\n\t--Se añade el concepto IMPPE23, no existe en la tabla RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME pero se necesita restar de COSTE_SALARIAL_ESTRUCTURA\nUNION\nSELECT\n\t-1 AS ID_CONCEPTO,\n\t2 AS ID_UNIDAD_ORGANIZATIVA,\n\t-1 AS ORDER_H1,\n\t'IMPPE23' AS CONCEPTO_H1,\n\t-1 AS ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tS.ID_CONCEPTO_SALARIO,\n\t1 AS SIGNO,\n\t'ALMACEN' AS DESCRIPCION,\n\tS.ANO,\n\tS.MES,\n\tS.ID_EMPRESA_GRUPO,\n\tS.DIVISION,\n\tS.SECCION,\n\tS.DIVORG,\n\tS.SECORG\nFROM\n\tagrupASalario S\nINNER JOIN empresASFiltro F ON\n\tF.ID_EMPRESA = S.ID_EMPRESA_GRUPO\nWHERE\n\tS.SECCION IS NOT NULL\n\tAND S.ID_EMPRESA_GRUPO <> 9\n\tAND S.ID_CONCEPTO_SALARIO = 104\nUNION\nSELECT\n\t-1 AS ID_CONCEPTO,\n\t1 AS ID_UNIDAD_ORGANIZATIVA,\n\t-1 AS ORDER_H1,\n\t'IMPPE23' AS CONCEPTO_H1,\n\t-1 AS ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tS.ID_CONCEPTO_SALARIO,\n\t1 AS SIGNO,\n\t'ESTRUCTURA' AS DESCRIPCION,\n\tS.ANO,\n\tS.MES,\n\tS.ID_EMPRESA_GRUPO,\n\tS.DIVISION,\n\tS.SECCION,\n\tS.DIVORG,\n\tS.SECORG\nFROM\n\tagrupASalario S\nINNER JOIN empresASFiltro F ON\n\tF.ID_EMPRESA = S.ID_EMPRESA_GRUPO\nWHERE\n\t(S.SECCION IS NULL\n\tOR S.ID_EMPRESA_GRUPO = 9)\n\tAND S.ID_CONCEPTO_SALARIO = 104 ),\n-----------------------------------------------------------------------------------------------------------------------   \n--DATOS   \n-----------------------------------------------------------------------------------------------------------------------   \n DETALLE_DIVSEC (ANO ,\nMES ,\nANOMES ,\nID_EMPRESA_GRUPO ,\nNOMBRE_EMPRESA_GRUPO ,\nID_DIVSEC ,\nNOM_DIVSEC ,\nID_UO ,\nORDER_H1 ,\nCONCEPTO_H1 ,\nVALOR,\nDIVORG,\nSECORG ) AS (\nSELECT\n\tEI.ANO,\n\tEI.MES,\n\tCAST(EI.ANO AS CHAR(4))|| RIGHT('0' || RTRIM(CAST(CAST(EI.MES AS CHAR(2)) AS VARCHAR(2))),\n\t2) AS ANOMES,\n\tEI.ID_EMPRESA_GRUPO,\n\tDM.NOMBRE_EMPRESA_GRUPO,\n\tDM.ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\tDM.NOM_DIVSEC,\n\tEI.ID_UO,\n\tEI.ORDER_H1,\n\tEI.CONCEPTO_H1,\n\tSUM(EI.SIGNO * ES.IMPORTE) AS VALOR ,\n\tEI.DIVORG,\n\tEI.SECORG\nFROM\n\tESTRUCTURA_INDICADORES EI\nLEFT JOIN agrupASalario ES ON\n\tEI.ANO = ES.ANO\n\tAND EI.MES = ES.MES\n\tAND EI.ID_EMPRESA_GRUPO = ES.ID_EMPRESA_GRUPO\n\tAND COALESCE(EI.DIVORG,\n\t0) = COALESCE(ES.DIVORG,\n\t0)\n\tAND COALESCE(EI.SECORG,\n\t0) = COALESCE(ES.SECORG,\n\t0)\n\tAND EI.ID_CONCEPTO_SALARIO = ES.ID_CONCEPTO_SALARIO\n\t--INNER JOIN MAESTROS.EMPRESA_GRUPO E ON EI.ID_EMPRESA_GRUPO = E.ID_EMPRESA_GRUPO   \nLEFT JOIN EMPRESA_GRUPO_DIVISION_SECCION DM ON\n\tEI.ID_EMPRESA_GRUPO = DM.ID_EMPRESA_GRUPO\n\tAND COALESCE(EI.DIVISION,\n\t0) = COALESCE(DM.DIVISION,\n\t0)\n\tAND COALESCE(EI.SECCION,\n\t0) = COALESCE(DM.SECCION,\n\t0)\nWHERE\n\t(ei.ID_UO = 'ALMACEN'\n\tAND NOT ID_EMPRESA_GRUPO_DIVISION_SECCION IS NULL)\n\tOR (ei.ID_UO = 'ESTRUCTURA')\nGROUP BY\n\tEI.ANO,\n\tEI.MES,\n\tCAST(EI.ANO AS CHAR(4))|| RIGHT('0' || RTRIM(CAST(CAST(EI.MES AS CHAR(2)) AS VARCHAR(2))),\n\t2),\n\tDM.ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\tDM.NOM_DIVSEC,\n\tEI.ID_EMPRESA_GRUPO,\n\tDM.NOMBRE_EMPRESA_GRUPO,\n\tEI.ID_UO,\n\tEI.CONCEPTO_H1,\n\tEI.ORDER_H1,\n\tEI.DIVORG,\n\tEI.SECORG ),\nDETALLE_DIVSEC_VALOR (ANO ,\nMES ,\nID_EMPRESA_GRUPO,\nID_DIVSEC ,\nID_UO ,\nCOSTE_SALARIAL_TOTAL_EMPRESA ,\nTOTAL_SEGURIDAD_SOCIAL_EMPRESA,\nNOCTURNIDAD,\nHORAS_EXTRA,\nSABADOS_DOMINGOS_FESTIVOS,\nDESEMPENO,\nABSENTISMO,\nIMPPE23,\nIMPPE13,\nOTROS_CONCEPTOS,\nDIVORG,\nSECORG ) AS (\nSELECT\n\tANO,\n\tMES,\n\tID_EMPRESA_GRUPO,\n\tID_DIVSEC,\n\tID_UO,\n\tSUM(COSTE_SALARIAL_TOTAL_EMPRESA) AS COSTE_SALARIAL_TOTAL_EMPRESA,\n\tSUM(TOTAL_SEGURIDAD_SOCIAL_EMPRESA) AS TOTAL_SEGURIDAD_SOCIAL_EMPRESA,\n\tSUM(NOCTURNIDAD) AS NOCTURNIDAD,\n\tSUM(HORAS_EXTRA) AS HORAS_EXTRA,\n\tSUM(SABADOS_DOMINGOS_FESTIVOS) AS SABADOS_DOMINGOS_FESTIVOS,\n\tSUM(DESEMPENO) AS DESEMPENO,\n\tSUM(ABSENTISMO) AS ABSENTISMO,\n\tSUM(IMPPE23) AS IMPPE23,\n\tSUM(IMPPE13) AS IMPPE13,\n\tSUM(OTROS_CONCEPTOS) AS OTROS_CONCEPTOS,\n\tQ.DIVORG,\n\tQ.SECORG\nFROM\n\t(\n\t\tSELECT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tID_UO,\n\t\tID_DIVSEC,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'COSTE_SALARIAL_TOTAL_EMPRESA' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS COSTE_SALARIAL_TOTAL_EMPRESA ,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS TOTAL_SEGURIDAD_SOCIAL_EMPRESA,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'NOCTURNIDAD' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS NOCTURNIDAD,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'HORAS EXTRA' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS HORAS_EXTRA,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'SÁBADOS, DOMINGOS Y FESTIVOS' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS SABADOS_DOMINGOS_FESTIVOS,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'DESEMPEÑO' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS DESEMPENO,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'ABSENTISMO' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS ABSENTISMO,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'IMPPE23' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS IMPPE23,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'IMPPE13' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS IMPPE13,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'OTROS CONCEPTOS' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS OTROS_CONCEPTOS,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tDETALLE_DIVSEC ) AS Q\nGROUP BY\n\tANO,\n\tMES,\n\tID_EMPRESA_GRUPO,\n\tID_DIVSEC,\n\tID_UO,\n\tQ.DIVORG,\n\tQ.SECORG ) SELECT\n\tDATE(DATE(DDV.ANO || '-' || RIGHT('0' || DDV.MES,\n\t2) || '-01' ) + 1 MONTH) - 1 DAY AS FECHA,\n\tDDV.ID_EMPRESA_GRUPO,\n\tCONCAT(DDV.ID_EMPRESA_GRUPO,\n\tCONCAT(RIGHT(CONCAT('00',\n\tDDV.DIVORG),\n\t2),\n\tRIGHT(CONCAT('00',\n\tDDV.SECORG),\n\t2))) AS ID_DIVSEC ,\n\tDDV.DIVORG,\n\tDDV.SECORG,\n\tCASE\n\t\tWHEN EGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION IS NOT NULL THEN 1\n\t\t--almacen\n\t\tELSE 2\n\t\t--estructura\n\tEND AS ID_ESTRUCTURA_ALMACEN,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.COSTE_SALARIAL_TOTAL_EMPRESA))-SUM(DECODE(DDV.ID_UO, 'ALMACEN', COALESCE(DDV.IMPPE23, 0), 0))-SUM(DECODE(DDV.ID_UO, 'ALMACEN', COALESCE(DDV.IMPPE13, 0), 0)) AS COSTE_SALARIAL_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ESTRUCTURA', DDV.COSTE_SALARIAL_TOTAL_EMPRESA))-SUM(DECODE(DDV.ID_UO, 'ESTRUCTURA', COALESCE(DDV.IMPPE23, 0), 0)) AS COSTE_SALARIAL_ESTRUCTURA_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.TOTAL_SEGURIDAD_SOCIAL_EMPRESA)) AS COSTE_SS_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ESTRUCTURA', DDV.TOTAL_SEGURIDAD_SOCIAL_EMPRESA)) AS COSTE_SS_ESTRUCTURA_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.NOCTURNIDAD)) AS NOCTURNIDAD_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.HORAS_EXTRA)) AS HORAS_EXTRA_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.SABADOS_DOMINGOS_FESTIVOS)) AS SABADOS_DOMINGOS_FESTIVOS_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.DESEMPENO))AS DESEMPENO_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.ABSENTISMO)) AS ABSENTISMO_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.IMPPE23)) AS IMPPE23_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ESTRUCTURA', DDV.IMPPE23)) AS IMPPE23_ESTRUCTURA_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.OTROS_CONCEPTOS)) AS OTROS_CONCEPTOS_ALMACEN_RAW\nFROM\n\tDETALLE_DIVSEC_VALOR AS DDV\nLEFT JOIN EMPRESA_GRUPO_DIVISION_SECCION AS EGDS ON\n\tEGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION = CONCAT(DDV.ID_EMPRESA_GRUPO,\n\tCONCAT(RIGHT(CONCAT('00',\n\tDDV.DIVORG),\n\t2),\n\tRIGHT(CONCAT('00',\n\tDDV.SECORG),\n\t2)))\nGROUP BY\n\tDATE(DATE(DDV.ANO || '-' || RIGHT('0' || DDV.MES,\n\t2) || '-01' ) + 1 MONTH) - 1 DAY,\n\tDDV.ID_EMPRESA_GRUPO,\n\tCONCAT(DDV.ID_EMPRESA_GRUPO,\n\tCONCAT(RIGHT(CONCAT('00',\n\tDDV.DIVORG),\n\t2),\n\tRIGHT(CONCAT('00',\n\tDDV.SECORG),\n\t2))),\n\tDDV.DIVORG,\n\tDDV.SECORG,\n\tCASE\n\t\tWHEN EGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION IS NOT NULL THEN 1\n\t\t--almacen\n\t\tELSE 2\n\t\t--estructura\n\tEND WITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "WITH tmeses (ANOMES,\nANO,\nMES,\nFECHADESDE,\nFECHA_INICIO ,\nFECHA_FIN) AS (\nSELECT\n\tCAST(YEAR( DATE(FECHA_HASTA)) AS CHAR(4))|| RIGHT('0' || RTRIM(CAST(CAST(MONTH(DATE(FECHA_HASTA)) AS CHAR(2)) AS VARCHAR(2))),\n\t2) AS ANOMES,\n\tYEAR( DATE(FECHA_HASTA)) AS ANO,\n\tMONTH(DATE(FECHA_HASTA)) AS MES,\n\tDATE(FECHA_DESDE) AS FECHADESDE,\n\tDATE(FECHA_HASTA) AS FECHA_INICIO,\n\t(DATE(FECHA_HASTA) + 1 MONTH) -1 DAY AS FECHA_FIN\nFROM\n\t(\n\t\tSELECT CAST('01/01/2013' AS VARCHAR(10)) FECHA_DESDE,\n\t\tCAST('01/01/2050' AS VARCHAR(10)) AS FECHA_HASTA\n\tFROM\n\t\tsysibm.sysdummy1 ) A\nUNION ALL\nSELECT\n\tCAST(YEAR(FECHA_INICIO - 1 MONTH) AS CHAR(4))|| RIGHT('0' || RTRIM(CAST(CAST(MONTH(FECHA_INICIO - 1 MONTH) AS CHAR(2)) AS VARCHAR(2))),\n\t2) AS ANOMES,\n\tYEAR(FECHA_INICIO - 1 MONTH) AS ANO,\n\tMONTH(FECHA_INICIO - 1 MONTH) AS MES,\n\tFECHADESDE AS FECHADESDE,\n\tFECHA_INICIO -1 MONTH AS FECHA_INICIO,\n\tFECHA_INICIO -1 DAY AS FECHA_FIN\nFROM\n\ttmeses\nWHERE\n\tFECHA_INICIO - 1 MONTH >= FECHADESDE ),\n----------------------------------------------------------   \n--TABLA EMPRESA_GRUPO_DIVISION_SECCION HARDCODED   \n----------------------------------------------------------   \n EMPRESA_GRUPO_DIVISION_SECCION (ID_EMPRESA_GRUPO_DIVISION_SECCION ,\nID_EMPRESA_GRUPO ,\nNOMBRE_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION ,\nNOM_DIVSEC ) AS (\nSELECT\n\tID_DIVSEC,\n\tID_EMPRESA_GRUPO,\n\tEMPRESA_GRUPO,\n\tDIVISION,\n\tSECCION,\n\tNOM_DIVSEC\nFROM\n\t(\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'991304' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [1304]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t5 AS SECCION,\n\t\t'991305' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [1305]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'998525' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'998537' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [8537]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t41 AS ID_EMPRESA_GRUPO,\n\t\t'PULL & BEAR LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'418525' AS ID_DIVSEC,\n\t\t'PULL & BEAR LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\n\t\t\n\t\t\nUNION\n\tSELECT\n\t\t41 AS ID_EMPRESA_GRUPO,\n\t\t'PULL & BEAR LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'418537' AS ID_DIVSEC,\n\t\t'PULL & BEAR LOGISTICA [8537]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\n\t\t\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t03 AS DIVISION,\n\t\t17 AS SECCION,\n\t\t'1890317' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [0317]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t03 AS SECCION,\n\t\t'1891303' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [1303]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'1898525' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t5 AS DIVISION,\n\t\t6 AS SECCION,\n\t\t'370506' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [0506]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t5 AS SECCION,\n\t\t'371305' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [1305]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t28 AS DIVISION,\n\t\t4 AS SECCION,\n\t\t'372804' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [2804]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'378525' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'378537' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [8537]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t9 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t18 AS SECCION,\n\t\t'91318' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [1318]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t32 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA HOME LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'328525' AS ID_DIVSEC,\n\t\t'ZARA HOME LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'431304' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [1304]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t05 AS SECCION,\n\t\t'431305' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [1305]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'438525' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'438537' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [8537]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'141300' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1300]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t12 AS SECCION,\n\t\t'141312' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1312]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t09 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'140900' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1312]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'268525' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t26 AS SECCION,\n\t\t'268526' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8526]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t27 AS SECCION,\n\t\t'268527' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8527]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t28 AS SECCION,\n\t\t'268528' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8528]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t29 AS SECCION,\n\t\t'268529' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8529]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'261300' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [1300]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t63 AS DIVISION,\n\t\t08 AS SECCION,\n\t\t'266308' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [6308]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t12 AS ID_EMPRESA_GRUPO,\n\t\t'LEFTIES LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t19 AS SECCION,\n\t\t'121319' AS ID_DIVSEC,\n\t\t'LEFTIES LOGISTICA [1319]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t23 AS ID_EMPRESA_GRUPO,\n\t\t'OYSHO LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t0 AS SECCION,\n\t\t'231300' AS ID_DIVSEC,\n\t\t'OYSHO LOGISTICA [1300]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t01 AS SECCION,\n\t\t'611301' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [1301]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'611304' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [1304]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'618525' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t357 AS ID_EMPRESA_GRUPO,\n\t\t'TORDERA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'3578525' AS ID_DIVSEC,\n\t\t'TORDERA LOGISTICA [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\t--ATG   \n\n\t\tSELECT 68 AS ID_EMPRESA_GRUPO,\n\t\t'FASHION LOGISTICS FORWARDERS' AS EMPRESA_GRUPO,\n\t\t00 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'680000' AS ID_DIVSEC,\n\t\t'FASHION LOGISTICS FORWARDERS []' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t330 AS ID_EMPRESA_GRUPO,\n\t\t'INDITEX LOGISTICA' AS EMPRESA_GRUPO,\n\t\t00 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'3300000' AS ID_DIVSEC,\n\t\t'INDITEX LOGISTICA []' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\t--ATG   \n\n\t\tSELECT 20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t51 AS DIVISION,\n\t\t73 AS SECCION,\n\t\t'205173' AS ID_DIVSEC,\n\t\t'TEMPE [205173]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t30 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'203000' AS ID_DIVSEC,\n\t\t'TEMPE [203000]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t51 AS DIVISION,\n\t\t34 AS SECCION,\n\t\t'205134' AS ID_DIVSEC,\n\t\t'TEMPE [205134]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t50 AS DIVISION,\n\t\t41 AS SECCION,\n\t\t'205041' AS ID_DIVSEC,\n\t\t'TEMPE [205041]' AS NOM_DIVSEC\n\tFROM\n\t\tsysibm.sysdummy1 EG\nUNION\n\tSELECT\n\t\t398 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA CABANILLAS' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'3988525' AS ID_DIVSEC,\n\t\t'ALMACEN PAQUETE [8525]' AS NOM_DIVSEC\n\tFROM\n\t\tSYSIBM.SYSDUMMY1 EG\nUNION\n\tSELECT\n\t\t64 AS ID_EMPRESA_GRUPO,\n\t\t'INDIPUNT' AS EMPRESA_GRUPO,\n\t\t91 AS DIVISION,\n\t\t15 AS SECCION,\n\t\t'649115' AS ID_DIVSEC,\n\t\t'INDIPUNT [9115]' AS NOM_DIVSEC\n\tFROM\n\t\tSYSIBM.SYSDUMMY1 EG ) Q_UNION ) ,\nEMPRESASFILTRO (ID_EMPRESA,\nDIVISION,\nSECCION) AS (\nSELECT\n\tDISTINCT ID_EMPRESA_GRUPO,\n\tDIVISION,\n\tSECCION\nFROM\n\tEMPRESA_GRUPO_DIVISION_SECCION ) ,\n----------------------------------------------------------   \n--TABLA DIVSEC MAESTRA   \n----------------------------------------------------------   \n DIVSEC_MAESTRA (ID_EMPRESA_GRUPO ,\nNOMBRE_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION ,\nID_DIVSEC ,\nNOM_DIVSEC) AS (\nSELECT\n\tid_empresa AS ID_EMPRESA_GRUPO,\n\tNULL AS NOMBRE_EMPRESA_GRUPO,\n\tNULL AS DIVISION,\n\tNULL AS SECCION,\n\tNULL AS ID_DIVSEC,\n\tNULL AS NOM_DIVSEC\nFROM\n\tempresasFiltro\nUNION ALL\nSELECT\n\t9 AS ID_EMPRESA_GRUPO,\n\tNULL AS NOMBRE_EMPRESA_GRUPO,\n\t13 AS DIVISION,\n\t18 AS SECCION,\n\t'91318' AS ID_DIVSEC,\n\t'PLATAFORMA LOGISTICA MECO' NOM_DIVSEC\nFROM\n\tEMPRESASFILTRO\nWHERE\n\tID_EMPRESA = 37 ),\n/*Se crea una tabla temporal con las tuplas posibles de consulta: AÑO-EMPRESA-DIVISION*/\n/*Esto se hace para acceder con el nuevo indice a la tabla RRHH.CONCEPTO_EMPLEADO_SALARIO*/\ntanos_divisiones(ANO ,\nMES ,\nEMPRESA) AS (\nSELECT\n\tANO,\n\tMES,\n\tID_EMPRESA\nFROM\n\ttmeses m,\n\tempresasFiltro d\nGROUP BY\n\tANO,\n\tMES,\n\tID_EMPRESA ),\ntanos_divisiones_Absent(ANO ,\nMES ,\nEMPRESA,\nDIVISION,\nSECCION ) AS (\nSELECT\n\tANO,\n\tMES,\n\tID_EMPRESA ,\n\tDIVISION,\n\tSECCION\nFROM\n\ttmeses m,\n\tempresasFiltro d\nGROUP BY\n\tANO,\n\tMES,\n\tID_EMPRESA,\n\tDIVISION,\n\tSECCION ),\n/*Código añadido para contemplar Logistica MECO, cuyo código empresa es diferente para oficinas que almacen*/\ntanos_divisiones_excepcion (ANO ,\nMES ,\nEMPRESA_FILTRO ,\nEMPRESA ,\nDIVISION ) AS (\nSELECT\n\tANO,\n\tMES,\n\tEMPRESA AS EMPRESA_FILTRO,\n\t9 AS EMPRESA,\n\tdm.DIVISION\nFROM\n\ttanos_divisiones t\nINNER JOIN EMPRESA_GRUPO_DIVISION_SECCION dm ON\n\tdm.ID_EMPRESA_GRUPO = 9\nWHERE\n\tEMPRESA = 37\nGROUP BY\n\tANO,\n\tMES,\n\tEMPRESA,\n\tDIVISION ),\n--Calculo SalarioBruto                                 \n agrupaSalarioBruto(ANO ,\nMES ,\nEMPRESA_FILTRO ,\nEMPRESA ,\nDIVISION ,\nSECCION ,\nID_CONCEPTO_SALARIO ,\nIMPORTE ) AS (\nSELECT\n\tes.ANO,\n\tes.MES,\n\tes.ID_EMPRESA_GRUPO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO,\n\tSUM(es.IMPORTE)\nFROM\n\tRRHH.CONCEPTO_EMPRESA_SALARIO ES\nINNER JOIN tanos_divisiones ad ON\n\tad.ANO = ES.ANO\n\tAND ad.MES = ES.MES\n\tAND ES.ID_EMPRESA_GRUPO = ad.EMPRESA\nGROUP BY\n\tes.ANO,\n\tes.MES,\n\tes.ID_EMPRESA_GRUPO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO\nUNION ALL\nSELECT\n\tes.ANO,\n\tes.MES,\n\tad.EMPRESA_FILTRO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO,\n\tSUM(es.IMPORTE)\nFROM\n\tRRHH.CONCEPTO_EMPRESA_SALARIO ES\nINNER JOIN tanos_divisiones_excepcion ad ON\n\tad.ANO = ES.ANO\n\tAND ad.MES = ES.MES\n\tAND ES.ID_EMPRESA_GRUPO = ad.EMPRESA\n\tAND ES.DIVISION = ad.DIVISION\nGROUP BY\n\tes.ANO,\n\tes.MES,\n\tad.EMPRESA_FILTRO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO\nUNION\nSELECT\n\tes.ANO,\n\tes.MES,\n\tes.ID_EMPRESA_GRUPO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO,\n\tSUM(DOUBLE(decrypt_char(ES.IMPORTE, 'ee6u7xjgRsRR6g8dRQfLuHkF+4FGUlpy6naR0Ck66wYWX2uoe')))\nFROM\n\tRRHH.CONCEPTO_EMPLEADO_COSTE_ABSENTISMO ES\nINNER JOIN tanos_divisiones_Absent ad ON\n\tad.ANO = ES.ANO\n\tAND ad.MES = ES.MES\n\tAND ES.ID_EMPRESA_GRUPO = ad.EMPRESA\n\tAND ES.DIVISION = ad.DIVISION\n\tAND ES.SECCION = ad.SECCION\nGROUP BY\n\tes.ANO,\n\tes.MES,\n\tes.ID_EMPRESA_GRUPO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO\nUNION\nSELECT\n\tes.ANO,\n\tes.MES,\n\tad.EMPRESA_FILTRO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO,\n\tSUM(DOUBLE(decrypt_char(ES.IMPORTE, 'ee6u7xjgRsRR6g8dRQfLuHkF+4FGUlpy6naR0Ck66wYWX2uoe')))\nFROM\n\tRRHH.CONCEPTO_EMPLEADO_COSTE_ABSENTISMO es\nINNER JOIN tanos_divisiones_excepcion ad ON\n\tad.ANO = ES.ANO\n\tAND ad.MES = ES.MES\n\tAND ES.ID_EMPRESA_GRUPO = ad.EMPRESA\n\tAND ES.DIVISION = ad.DIVISION\nGROUP BY\n\tes.ANO,\n\tes.MES,\n\tad.EMPRESA_FILTRO,\n\tes.ID_EMPRESA_GRUPO,\n\tes.DIVISION,\n\tes.SECCION,\n\tes.ID_CONCEPTO_SALARIO ),\n/*Tabla temporal en la que se vuelcan los registros con los que se va a trabajar */\nagrupaSalario(ANO ,\nMES ,\nID_EMPRESA_FILTRO ,\nID_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION ,\nID_DIVSEC ,\nID_CONCEPTO_SALARIO ,\nIMPORTE,\nDIVORG,\nSECORG ) AS (\nSELECT\n\tES.ANO,\n\tES.MES,\n\tES.EMPRESA_FILTRO AS ID_EMPRESA_FILTRO,\n\tES.EMPRESA AS ID_EMPRESA_GRUPO,\n\tEF.DIVISION,\n\tEF.SECCION,\n\tEF.ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\tES.ID_CONCEPTO_SALARIO,\n\tES.IMPORTE,\n\tES.DIVISION,\n\tES.SECCION\nFROM\n\tagrupaSalarioBruto ES\nLEFT JOIN EMPRESA_GRUPO_DIVISION_SECCION EF ON\n\tES.EMPRESA = EF.ID_EMPRESA_GRUPO\n\tAND ES.DIVISION = EF.DIVISION\n\tAND ES.SECCION = EF.SECCION\nWHERE\n\tES.EMPRESA <> 9\nUNION ALL\nSELECT\n\tES.ANO,\n\tES.MES,\n\tES.EMPRESA_FILTRO AS ID_EMPRESA_FILTRO,\n\t37 AS ID_EMPRESA_GRUPO,\n\tNULL AS DIVISION,\n\tNULL AS SECCION,\n\tNULL AS ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\tES.ID_CONCEPTO_SALARIO,\n\tES.IMPORTE,\n\tES.DIVISION,\n\tES.SECCION\nFROM\n\tagrupaSalarioBruto ES\nINNER JOIN EMPRESA_GRUPO_DIVISION_SECCION EF ON\n\tES.EMPRESA = EF.ID_EMPRESA_GRUPO\n\tAND ES.DIVISION = EF.DIVISION\n\tAND ES.SECCION = EF.SECCION\nWHERE\n\tES.EMPRESA = 9\n\tAND ES.EMPRESA_FILTRO <> 9 ),\n-----------------------------------------------------------------------------------------------------------------------   \n--ESTRUCTURA INDICADORES (1 NIVEL)   \n-----------------------------------------------------------------------------------------------------------------------   \n ESTRUCTURA_INDICADORES (ID_CONCEPTO ,\nID_UNIDAD_ORGANIZATIVA ,\nORDER_H1 ,\nCONCEPTO_H1 ,\nID_CONCEPTO_SALARIO_CONCEPTO_INFORME ,\nID_CONCEPTO_SALARIO ,\nSIGNO ,\nID_UO ,\nANO ,\nMES ,\nID_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION,\nDIVORG,\nSECORG )\n--ESTRUCTURA CONCEPTOS   \n AS (\nSELECT\n\tCI.ID_CONCEPTO_INFORME AS ID_CONCEPTO,\n\tCI.ID_UNIDAD_ORGANIZATIVA,\n\tORDEN AS ORDER_H1,\n\tCASE\n\t\tWHEN CI.DESCRIPCION = 'GASTO SALARIAL' THEN 'COSTE_SALARIAL_TOTAL_EMPRESA'\n\t\tWHEN CI.DESCRIPCION = 'GASTO SEGURIDAD SOCIAL' THEN 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA'\n\t\tELSE CI.DESCRIPCION\n\tEND AS CONCEPTO_H1,\n\tCSCI.ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tCSCI.ID_CONCEPTO_SALARIO,\n\tCSCI.SIGNO,\n\tUO.DESCRIPCION,\n\tQ_ES.ANO,\n\tQ_ES.MES,\n\tQ_ES.ID_EMPRESA_GRUPO,\n\tQ_ES.DIVISION,\n\tQ_ES.SECCION,\n\tQ_ES.DIVORG,\n\tQ_ES.SECORG\nFROM\n\tRRHH.CONCEPTO_INFORME CI\nLEFT JOIN RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME CSCI ON\n\tCI.ID_CONCEPTO_INFORME = CSCI.ID_CONCEPTO_INFORME\nINNER JOIN RRHH.UNIDAD_ORGANIZATIVA UO ON\n\tCI.ID_UNIDAD_ORGANIZATIVA = UO.ID_UNIDAD_ORGANIZATIVA\n\tAND CI.ID_UNIDAD_ORGANIZATIVA = 1\n\t--ESTRUCTURA   \nCROSS JOIN (\n\tSELECT\n\t\tDISTINCT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tDIVISION,\n\t\tSECCION,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tagrupASalario\n\tWHERE\n\t\tSECCION IS NULL\n\t\tOR ID_EMPRESA_GRUPO = 9) AS Q_ES\nINNER JOIN EMPRESASFiltro ON\n\tID_INFORME = Q_ES.ID_EMPRESA_GRUPO\nWHERE\n\tORDEN < 10\n\tAND ID_EMPRESA <> 9\nUNION\n--ALMACEN CONCEPTOS   \n-----------------------------------------------------------------------------------------------------------   \n\n\tSELECT CI.ID_CONCEPTO_INFORME AS ID_CONCEPTO,\n\tCI.ID_UNIDAD_ORGANIZATIVA,\n\tORDEN AS ORDER_H1,\n\tCASE\n\t\tWHEN CI.DESCRIPCION = 'GASTO SALARIAL' THEN 'COSTE_SALARIAL_TOTAL_EMPRESA'\n\t\tWHEN CI.DESCRIPCION = 'GASTO SEGURIDAD SOCIAL' THEN 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA'\n\t\tELSE CI.DESCRIPCION\n\tEND AS CONCEPTO_H1,\n\tCSCI.ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tCSCI.ID_CONCEPTO_SALARIO,\n\tCSCI.SIGNO,\n\tUO.DESCRIPCION,\n\tQ_ES.ANO,\n\tQ_ES.MES,\n\tQ_ES.ID_EMPRESA_GRUPO,\n\tQ_ES.DIVISION,\n\tQ_ES.SECCION,\n\tQ_ES.DIVORG,\n\tQ_ES.SECORG\nFROM\n\tRRHH.CONCEPTO_INFORME CI\nLEFT JOIN RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME CSCI ON\n\tCI.ID_CONCEPTO_INFORME = CSCI.ID_CONCEPTO_INFORME\nINNER JOIN RRHH.UNIDAD_ORGANIZATIVA UO ON\n\tCI.ID_UNIDAD_ORGANIZATIVA = UO.ID_UNIDAD_ORGANIZATIVA\n\tAND CI.ID_UNIDAD_ORGANIZATIVA = 2\n\t--ALMACEN   \nCROSS JOIN (\n\tSELECT\n\t\tDISTINCT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tDIVISION,\n\t\tSECCION,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tagrupASalario\n\tWHERE\n\t\tSECCION IS NOT NULL\n\t\tAND ID_EMPRESA_GRUPO <> 9) AS Q_ES\nINNER JOIN empresASFiltro ON\n\tID_INFORME = Q_ES.ID_EMPRESA_GRUPO\nWHERE\n\tORDEN<10\n\tAND ID_EMPRESA <> 9\nUNION\n--3 NIVELES         \n\n\tSELECT H1.ID_CONCEPTO_INFORME AS ID_CONCEPTO,\n\tH1.ID_UNIDAD_ORGANIZATIVA,\n\tH1.ORDEN AS ORDER_H1,\n\tCASE\n\t\tWHEN H1.DESCRIPCION = 'GASTO SALARIAL' THEN 'COSTE_SALARIAL_TOTAL_EMPRESA'\n\t\tWHEN H1.DESCRIPCION = 'GASTO SEGURIDAD SOCIAL' THEN 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA'\n\t\tELSE H1.DESCRIPCION\n\tEND AS CONCEPTO_H1,\n\tCSCI.ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tCSCI.ID_CONCEPTO_SALARIO,\n\tCSCI.SIGNO,\n\tUO.DESCRIPCION,\n\tQ_ES.ANO,\n\tQ_ES.MES,\n\tQ_ES.ID_EMPRESA_GRUPO,\n\tQ_ES.DIVISION,\n\tQ_ES.SECCION,\n\tQ_ES.DIVORG,\n\tQ_ES.SECORG\nFROM\n\tRRHH.CONCEPTO_INFORME H1\nINNER JOIN RRHH.CONCEPTO_INFORME H2 ON\n\tH1.ID_CONCEPTO_INFORME = H2.ID_CONCEPTO_INFORME_RELACIONADO\nINNER JOIN RRHH.CONCEPTO_INFORME H3 ON\n\tH2.ID_CONCEPTO_INFORME = H3.ID_CONCEPTO_INFORME_RELACIONADO\nLEFT JOIN RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME CSCI ON\n\tH3.ID_CONCEPTO_INFORME = CSCI.ID_CONCEPTO_INFORME\nINNER JOIN RRHH.UNIDAD_ORGANIZATIVA UO ON\n\tH3.ID_UNIDAD_ORGANIZATIVA = UO.ID_UNIDAD_ORGANIZATIVA\n\tAND UO.ID_UNIDAD_ORGANIZATIVA = 2\n\t--SOLO ALMACEN         \nCROSS JOIN (\n\tSELECT\n\t\tDISTINCT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tDIVISION,\n\t\tSECCION,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tagrupASalario\n\tWHERE\n\t\tSECCION IS NOT NULL\n\t\tAND ID_EMPRESA_GRUPO <> 9) AS Q_ES\nINNER JOIN empresASFiltro ON\n\tH1.ID_INFORME = Q_ES.ID_EMPRESA_GRUPO\nWHERE\n\tH2.ORDEN>10\n\tAND H2.ORDEN<1000\n\tAND H3.ORDEN>1000\n\tAND H2.DESCRIPCION <> 'NUMERO'\n\tAND H3.DESCRIPCION <> 'Nº RESALTAS'\n\tAND H2.DESCRIPCION <> 'Nº RESALTAS'\nUNION\n--2 NIVELES         \n\n\tSELECT H1.ID_CONCEPTO_INFORME AS ID_CONCEPTO,\n\tH1.ID_UNIDAD_ORGANIZATIVA,\n\tH1.ORDEN AS ORDER_H1,\n\tCASE\n\t\tWHEN H1.DESCRIPCION = 'GASTO SALARIAL' THEN 'COSTE_SALARIAL_TOTAL_EMPRESA'\n\t\tWHEN H1.DESCRIPCION = 'GASTO SEGURIDAD SOCIAL' THEN 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA'\n\t\tELSE H1.DESCRIPCION\n\tEND AS CONCEPTO_H1,\n\tCSCI.ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tCSCI.ID_CONCEPTO_SALARIO,\n\tCSCI.SIGNO,\n\tUO.DESCRIPCION,\n\tQ_ES.ANO,\n\tQ_ES.MES,\n\tQ_ES.ID_EMPRESA_GRUPO,\n\tQ_ES.DIVISION,\n\tQ_ES.SECCION,\n\tQ_ES.DIVORG,\n\tQ_ES.SECORG\nFROM\n\tRRHH.CONCEPTO_INFORME H1\nINNER JOIN RRHH.CONCEPTO_INFORME H2 ON\n\tH1.ID_CONCEPTO_INFORME = H2.ID_CONCEPTO_INFORME_RELACIONADO\nLEFT JOIN RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME CSCI ON\n\tH2.ID_CONCEPTO_INFORME = CSCI.ID_CONCEPTO_INFORME\nINNER JOIN RRHH.UNIDAD_ORGANIZATIVA UO ON\n\tH2.ID_UNIDAD_ORGANIZATIVA = UO.ID_UNIDAD_ORGANIZATIVA\n\tAND UO.ID_UNIDAD_ORGANIZATIVA = 2\n\t--SOLO ALMACEN         \nCROSS JOIN (\n\tSELECT\n\t\tDISTINCT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tDIVISION,\n\t\tSECCION,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tagrupASalario\n\tWHERE\n\t\tSECCION IS NOT NULL\n\t\tAND ID_EMPRESA_GRUPO <> 9) AS Q_ES\nINNER JOIN empresASFiltro ON\n\tH1.ID_INFORME = Q_ES.ID_EMPRESA_GRUPO\nWHERE\n\tH1.ORDEN<100\n\tAND H2.ORDEN>1000\n\tAND H2.DESCRIPCION <> 'NUMERO'\n\tAND H2.DESCRIPCION <> 'Nº RESALTAS'\n\t--Se añade el concepto IMPPE13 para ALMACEN, no existe en la tabla RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME pero se necesita restar de COSTE_SALARIAL_ALMACEN\nUNION\nSELECT\n\t-1 AS ID_CONCEPTO,\n\t2 AS ID_UNIDAD_ORGANIZATIVA,\n\t-1 AS ORDER_H1,\n\t'IMPPE13' AS CONCEPTO_H1,\n\t-1 AS ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tS.ID_CONCEPTO_SALARIO,\n\t1 AS SIGNO,\n\t'ALMACEN' AS DESCRIPCION,\n\tS.ANO,\n\tS.MES,\n\tS.ID_EMPRESA_GRUPO,\n\tS.DIVISION,\n\tS.SECCION,\n\tS.DIVORG,\n\tS.SECORG\nFROM\n\tagrupASalario S\nINNER JOIN empresASFiltro F ON\n\tF.ID_EMPRESA = S.ID_EMPRESA_GRUPO\nWHERE\n\tS.SECCION IS NOT NULL\n\tAND S.ID_EMPRESA_GRUPO <> 9\n\tAND S.ID_CONCEPTO_SALARIO = 128\n\t--Se añade el concepto IMPPE23, no existe en la tabla RRHH.CONCEPTO_SALARIO_CONCEPTO_INFORME pero se necesita restar de COSTE_SALARIAL_ESTRUCTURA\nUNION\nSELECT\n\t-1 AS ID_CONCEPTO,\n\t2 AS ID_UNIDAD_ORGANIZATIVA,\n\t-1 AS ORDER_H1,\n\t'IMPPE23' AS CONCEPTO_H1,\n\t-1 AS ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tS.ID_CONCEPTO_SALARIO,\n\t1 AS SIGNO,\n\t'ALMACEN' AS DESCRIPCION,\n\tS.ANO,\n\tS.MES,\n\tS.ID_EMPRESA_GRUPO,\n\tS.DIVISION,\n\tS.SECCION,\n\tS.DIVORG,\n\tS.SECORG\nFROM\n\tagrupASalario S\nINNER JOIN empresASFiltro F ON\n\tF.ID_EMPRESA = S.ID_EMPRESA_GRUPO\nWHERE\n\tS.SECCION IS NOT NULL\n\tAND S.ID_EMPRESA_GRUPO <> 9\n\tAND S.ID_CONCEPTO_SALARIO = 104\nUNION\nSELECT\n\t-1 AS ID_CONCEPTO,\n\t1 AS ID_UNIDAD_ORGANIZATIVA,\n\t-1 AS ORDER_H1,\n\t'IMPPE23' AS CONCEPTO_H1,\n\t-1 AS ID_CONCEPTO_SALARIO_CONCEPTO_INFORME,\n\tS.ID_CONCEPTO_SALARIO,\n\t1 AS SIGNO,\n\t'ESTRUCTURA' AS DESCRIPCION,\n\tS.ANO,\n\tS.MES,\n\tS.ID_EMPRESA_GRUPO,\n\tS.DIVISION,\n\tS.SECCION,\n\tS.DIVORG,\n\tS.SECORG\nFROM\n\tagrupASalario S\nINNER JOIN empresASFiltro F ON\n\tF.ID_EMPRESA = S.ID_EMPRESA_GRUPO\nWHERE\n\t(S.SECCION IS NULL\n\tOR S.ID_EMPRESA_GRUPO = 9)\n\tAND S.ID_CONCEPTO_SALARIO = 104 ),\n-----------------------------------------------------------------------------------------------------------------------   \n--DATOS   \n-----------------------------------------------------------------------------------------------------------------------   \n DETALLE_DIVSEC (ANO ,\nMES ,\nANOMES ,\nID_EMPRESA_GRUPO ,\nNOMBRE_EMPRESA_GRUPO ,\nID_DIVSEC ,\nNOM_DIVSEC ,\nID_UO ,\nORDER_H1 ,\nCONCEPTO_H1 ,\nVALOR,\nDIVORG,\nSECORG ) AS (\nSELECT\n\tEI.ANO,\n\tEI.MES,\n\tCAST(EI.ANO AS CHAR(4))|| RIGHT('0' || RTRIM(CAST(CAST(EI.MES AS CHAR(2)) AS VARCHAR(2))),\n\t2) AS ANOMES,\n\tEI.ID_EMPRESA_GRUPO,\n\tDM.NOMBRE_EMPRESA_GRUPO,\n\tDM.ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\tDM.NOM_DIVSEC,\n\tEI.ID_UO,\n\tEI.ORDER_H1,\n\tEI.CONCEPTO_H1,\n\tSUM(EI.SIGNO * ES.IMPORTE) AS VALOR ,\n\tEI.DIVORG,\n\tEI.SECORG\nFROM\n\tESTRUCTURA_INDICADORES EI\nLEFT JOIN agrupASalario ES ON\n\tEI.ANO = ES.ANO\n\tAND EI.MES = ES.MES\n\tAND EI.ID_EMPRESA_GRUPO = ES.ID_EMPRESA_GRUPO\n\tAND COALESCE(EI.DIVORG,\n\t0) = COALESCE(ES.DIVORG,\n\t0)\n\tAND COALESCE(EI.SECORG,\n\t0) = COALESCE(ES.SECORG,\n\t0)\n\tAND EI.ID_CONCEPTO_SALARIO = ES.ID_CONCEPTO_SALARIO\n\t--INNER JOIN MAESTROS.EMPRESA_GRUPO E ON EI.ID_EMPRESA_GRUPO = E.ID_EMPRESA_GRUPO   \nLEFT JOIN EMPRESA_GRUPO_DIVISION_SECCION DM ON\n\tEI.ID_EMPRESA_GRUPO = DM.ID_EMPRESA_GRUPO\n\tAND COALESCE(EI.DIVISION,\n\t0) = COALESCE(DM.DIVISION,\n\t0)\n\tAND COALESCE(EI.SECCION,\n\t0) = COALESCE(DM.SECCION,\n\t0)\nWHERE\n\t(ei.ID_UO = 'ALMACEN'\n\tAND NOT ID_EMPRESA_GRUPO_DIVISION_SECCION IS NULL)\n\tOR (ei.ID_UO = 'ESTRUCTURA')\nGROUP BY\n\tEI.ANO,\n\tEI.MES,\n\tCAST(EI.ANO AS CHAR(4))|| RIGHT('0' || RTRIM(CAST(CAST(EI.MES AS CHAR(2)) AS VARCHAR(2))),\n\t2),\n\tDM.ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\tDM.NOM_DIVSEC,\n\tEI.ID_EMPRESA_GRUPO,\n\tDM.NOMBRE_EMPRESA_GRUPO,\n\tEI.ID_UO,\n\tEI.CONCEPTO_H1,\n\tEI.ORDER_H1,\n\tEI.DIVORG,\n\tEI.SECORG ),\nDETALLE_DIVSEC_VALOR (ANO ,\nMES ,\nID_EMPRESA_GRUPO,\nID_DIVSEC ,\nID_UO ,\nCOSTE_SALARIAL_TOTAL_EMPRESA ,\nTOTAL_SEGURIDAD_SOCIAL_EMPRESA,\nNOCTURNIDAD,\nHORAS_EXTRA,\nSABADOS_DOMINGOS_FESTIVOS,\nDESEMPENO,\nABSENTISMO,\nIMPPE23,\nIMPPE13,\nOTROS_CONCEPTOS,\nDIVORG,\nSECORG ) AS (\nSELECT\n\tANO,\n\tMES,\n\tID_EMPRESA_GRUPO,\n\tID_DIVSEC,\n\tID_UO,\n\tSUM(COSTE_SALARIAL_TOTAL_EMPRESA) AS COSTE_SALARIAL_TOTAL_EMPRESA,\n\tSUM(TOTAL_SEGURIDAD_SOCIAL_EMPRESA) AS TOTAL_SEGURIDAD_SOCIAL_EMPRESA,\n\tSUM(NOCTURNIDAD) AS NOCTURNIDAD,\n\tSUM(HORAS_EXTRA) AS HORAS_EXTRA,\n\tSUM(SABADOS_DOMINGOS_FESTIVOS) AS SABADOS_DOMINGOS_FESTIVOS,\n\tSUM(DESEMPENO) AS DESEMPENO,\n\tSUM(ABSENTISMO) AS ABSENTISMO,\n\tSUM(IMPPE23) AS IMPPE23,\n\tSUM(IMPPE13) AS IMPPE13,\n\tSUM(OTROS_CONCEPTOS) AS OTROS_CONCEPTOS,\n\tQ.DIVORG,\n\tQ.SECORG\nFROM\n\t(\n\t\tSELECT ANO,\n\t\tMES,\n\t\tID_EMPRESA_GRUPO,\n\t\tID_UO,\n\t\tID_DIVSEC,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'COSTE_SALARIAL_TOTAL_EMPRESA' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS COSTE_SALARIAL_TOTAL_EMPRESA ,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'TOTAL_SEGURIDAD_SOCIAL_EMPRESA' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS TOTAL_SEGURIDAD_SOCIAL_EMPRESA,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'NOCTURNIDAD' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS NOCTURNIDAD,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'HORAS EXTRA' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS HORAS_EXTRA,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'SÁBADOS, DOMINGOS Y FESTIVOS' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS SABADOS_DOMINGOS_FESTIVOS,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'DESEMPEÑO' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS DESEMPENO,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'ABSENTISMO' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS ABSENTISMO,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'IMPPE23' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS IMPPE23,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'IMPPE13' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS IMPPE13,\n\t\tCASE\n\t\t\tWHEN CONCEPTO_H1 = 'OTROS CONCEPTOS' THEN VALOR\n\t\t\tELSE NULL\n\t\tEND AS OTROS_CONCEPTOS,\n\t\tDIVORG,\n\t\tSECORG\n\tFROM\n\t\tDETALLE_DIVSEC ) AS Q\nGROUP BY\n\tANO,\n\tMES,\n\tID_EMPRESA_GRUPO,\n\tID_DIVSEC,\n\tID_UO,\n\tQ.DIVORG,\n\tQ.SECORG ) SELECT\n\tDATE(DATE(DDV.ANO || '-' || RIGHT('0' || DDV.MES,\n\t2) || '-01' ) + 1 MONTH) - 1 DAY AS FECHA,\n\tDDV.ID_EMPRESA_GRUPO,\n\tCONCAT(DDV.ID_EMPRESA_GRUPO,\n\tCONCAT(RIGHT(CONCAT('00',\n\tDDV.DIVORG),\n\t2),\n\tRIGHT(CONCAT('00',\n\tDDV.SECORG),\n\t2))) AS ID_DIVSEC ,\n\tDDV.DIVORG,\n\tDDV.SECORG,\n\tCASE\n\t\tWHEN EGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION IS NOT NULL THEN 1\n\t\t--almacen\n\t\tELSE 2\n\t\t--estructura\n\tEND AS ID_ESTRUCTURA_ALMACEN,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.COSTE_SALARIAL_TOTAL_EMPRESA))-SUM(DECODE(DDV.ID_UO, 'ALMACEN', COALESCE(DDV.IMPPE23, 0), 0))-SUM(DECODE(DDV.ID_UO, 'ALMACEN', COALESCE(DDV.IMPPE13, 0), 0)) AS COSTE_SALARIAL_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ESTRUCTURA', DDV.COSTE_SALARIAL_TOTAL_EMPRESA))-SUM(DECODE(DDV.ID_UO, 'ESTRUCTURA', COALESCE(DDV.IMPPE23, 0), 0)) AS COSTE_SALARIAL_ESTRUCTURA_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.TOTAL_SEGURIDAD_SOCIAL_EMPRESA)) AS COSTE_SS_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ESTRUCTURA', DDV.TOTAL_SEGURIDAD_SOCIAL_EMPRESA)) AS COSTE_SS_ESTRUCTURA_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.NOCTURNIDAD)) AS NOCTURNIDAD_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.HORAS_EXTRA)) AS HORAS_EXTRA_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.SABADOS_DOMINGOS_FESTIVOS)) AS SABADOS_DOMINGOS_FESTIVOS_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.DESEMPENO))AS DESEMPENO_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.ABSENTISMO)) AS ABSENTISMO_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.IMPPE23)) AS IMPPE23_ALMACEN_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ESTRUCTURA', DDV.IMPPE23)) AS IMPPE23_ESTRUCTURA_RAW,\n\tSUM(DECODE(DDV.ID_UO, 'ALMACEN', DDV.OTROS_CONCEPTOS)) AS OTROS_CONCEPTOS_ALMACEN_RAW\nFROM\n\tDETALLE_DIVSEC_VALOR AS DDV\nLEFT JOIN EMPRESA_GRUPO_DIVISION_SECCION AS EGDS ON\n\tEGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION = CONCAT(DDV.ID_EMPRESA_GRUPO,\n\tCONCAT(RIGHT(CONCAT('00',\n\tDDV.DIVORG),\n\t2),\n\tRIGHT(CONCAT('00',\n\tDDV.SECORG),\n\t2)))\nGROUP BY\n\tDATE(DATE(DDV.ANO || '-' || RIGHT('0' || DDV.MES,\n\t2) || '-01' ) + 1 MONTH) - 1 DAY,\n\tDDV.ID_EMPRESA_GRUPO,\n\tCONCAT(DDV.ID_EMPRESA_GRUPO,\n\tCONCAT(RIGHT(CONCAT('00',\n\tDDV.DIVORG),\n\t2),\n\tRIGHT(CONCAT('00',\n\tDDV.SECORG),\n\t2))),\n\tDDV.DIVORG,\n\tDDV.SECORG,\n\tCASE\n\t\tWHEN EGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION IS NOT NULL THEN 1\n\t\t--almacen\n\t\tELSE 2\n\t\t--estructura\n\tEND WITH UR;"
          }
        ]
      },
      {
        "name": "ANTIGUEDAD",
        "columns": [
          {
            "name": "NUM_MESES",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "NUM_MESES"
          },
          {
            "name": "ANOS",
            "dataType": "int64",
            "sourceColumn": "ANOS"
          },
          {
            "name": "TRAMO_ANTIGUEDAD",
            "dataType": "string",
            "sourceColumn": "TRAMO_ANTIGUEDAD",
            "sortByColumn": "ID_TRAMO_ANTIGUEDAD"
          },
          {
            "name": "ID_TRAMO_ANTIGUEDAD",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TRAMO_ANTIGUEDAD"
          }
        ],
        "partitions": [
          {
            "name": "DIM_ANTIGUEDAD",
            "source": {
              "type": "query",
              "query": "WITH \nANTIGUEDAD (NUM_MESES , ANOS, ID_TRAMO_ANTIGUEDAD, TRAMO_ANTIGUEDAD ) AS ( \n        SELECT \n                50*12 AS NUM_MESES, \n                50 AS ANOS  ,\n                6 AS ID_TRAMO_ANTIGUEDAD,\n                'MÁS DE 10 AÑOS    ' AS TRAMO_ANTIGUEDAD\n        UNION ALL \n        \n        SELECT \n                NUM_MESES -1 AS NUM_MESES, \n                (NUM_MESES -1)/12 AS ANOS,\n                CASE \n                        WHEN (NUM_MESES -1) <6 THEN   1 \n                        WHEN (NUM_MESES -1) <12 THEN  2 \n                        WHEN (NUM_MESES -1) <36 THEN  3   \n                        WHEN (NUM_MESES -1) <60 THEN  4     \n                        WHEN (NUM_MESES -1) <120 THEN 5  \n                        ELSE                          6 \n                END ID_TRAMO_ANTIGUEDAD,                \n                CASE \n                        WHEN (NUM_MESES -1) <6 THEN   'MENOS DE 6 MESES  ' \n                        WHEN (NUM_MESES -1) <12 THEN  'DE 6 MESES A 1 AÑO' \n                        WHEN (NUM_MESES -1) <36 THEN  'DE 1 A 3 AÑOS     '   \n                        WHEN (NUM_MESES -1) <60 THEN  'DE 3 A 5 AÑOS     '     \n                        WHEN (NUM_MESES -1) <120 THEN 'DE 5 A 10 AÑOS    '  \n                        ELSE                          'MÁS DE 10 AÑOS    ' \n                END TRAMO_ANTIGUEDAD\n        FROM \n                ANTIGUEDAD \n        WHERE \n                NUM_MESES -1 >=0\n    )\nSELECT \n        NUM_MESES, ANOS,ID_TRAMO_ANTIGUEDAD ,RTRIM(TRAMO_ANTIGUEDAD ) AS TRAMO_ANTIGUEDAD\nFROM ANTIGUEDAD\n\nUNION ALL\nSELECT\n  -1,-1,-1,'SIN INFORMAR'\nOPTION (MAXRECURSION 1000);",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              }
            ]
          }
        ]
      },
      {
        "name": "EDAD",
        "columns": [
          {
            "name": "ANOS",
            "dataType": "int64",
            "sourceColumn": "ANOS"
          },
          {
            "name": "TRAMO_EDAD",
            "dataType": "string",
            "sourceColumn": "TRAMO_EDAD",
            "sortByColumn": "ID_TRAMO_EDAD"
          },
          {
            "name": "ID_TRAMO_EDAD",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TRAMO_EDAD"
          }
        ],
        "partitions": [
          {
            "name": "DIM_EDAD",
            "source": {
              "type": "query",
              "query": "WITH \nEDAD (ANOS ,ID_TRAMO_EDAD, TRAMO_EDAD ) AS ( \n        SELECT \n                900 AS ANOS, \n                4 AS ID_TRAMO_EDAD,\n                'MAYOR DE 45 AÑOS' AS TRAMO_EDAD\n        UNION ALL \n        \n        SELECT \n                ANOS-1 AS ANOS,\n                CASE \n                        WHEN ANOS-1<20 THEN 1\n                        WHEN ANOS-1<30 THEN 2\n                        WHEN ANOS-1<45 THEN 3\n                        ELSE                4\n                END ID_TRAMO_EDAD,\n                CASE \n                        WHEN ANOS-1<20 THEN 'MENOR DE 20 AÑOS'\n                        WHEN ANOS-1<30 THEN 'DE 20 A 29 AÑOS '\n                        WHEN ANOS-1<45 THEN 'DE 30 A 45 AÑOS '\n                        ELSE                'MAYOR DE 45 AÑOS'\n                END TRAMO_EDAD\n        FROM \n                EDAD \n        WHERE \n                ANOS -1 >=0\n    )\nSELECT \n        ANOS,ID_TRAMO_EDAD,RTRIM(TRAMO_EDAD) AS TRAMO_EDAD\nFROM \n        EDAD\n\nUNION ALL\nSELECT\n  -1,-1, 'SIN INFORMAR'\nOPTION (MAXRECURSION 901);",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              }
            ]
          }
        ]
      },
      {
        "name": "EMPRESA",
        "columns": [
          {
            "name": "ID_EMPRESA_GRUPO",
            "dataType": "int64",
            "sourceColumn": "ID_EMPRESA"
          },
          {
            "name": "EMPRESA",
            "dataType": "string",
            "sourceColumn": "EMPRESA"
          },
          {
            "name": "EMPRESA_CORTO",
            "dataType": "string",
            "sourceColumn": "EMPRESA_CORTO"
          },
          {
            "type": "calculated",
            "name": "ID_EMPRESA_GRUPO_TEXTO",
            "dataType": "string",
            "isHidden": true,
            "expression": "[ID_EMPRESA_GRUPO]"
          }
        ],
        "partitions": [
          {
            "name": "DIM_EMPRESA",
            "source": {
              "type": "query",
              "query": "SELECT \nEG.ID_EMPRESA_GRUPO AS ID_EMPRESA,\nCASE WHEN EG.DESCRIPCION IS NULL THEN TO_CHAR(EG.ID_EMPRESA_GRUPO) ELSE EG.DESCRIPCION END AS EMPRESA, \nCASE WHEN EG.DESCRIPCION_CORTA IS NULL THEN TO_CHAR(EG.ID_EMPRESA_GRUPO) ELSE EG.DESCRIPCION_CORTA END AS EMPRESA_CORTO\nFROM \n        MAESTROS.EMPRESA_GRUPO EG\n    WHERE EG.ID_EMPRESA_GRUPO  IN (99 ,41 ,189 ,37 ,32 ,43 ,14 ,26 ,12 ,23 ,61 ,357 ,68 ,330 ,20 ,398,64,506)\n  UNION ALL \nSELECT 0, 'GLOBAL COMPANY', 'EXTERNOS' from SYSIBM.SYSDUMMY1\nWITH UR;",
              "dataSource": "AXINDB22V1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT \nEG.ID_EMPRESA_GRUPO AS ID_EMPRESA,\nCASE WHEN EG.DESCRIPCION IS NULL THEN TO_CHAR(EG.ID_EMPRESA_GRUPO) ELSE EG.DESCRIPCION END AS EMPRESA, \nCASE WHEN EG.DESCRIPCION_CORTA IS NULL THEN TO_CHAR(EG.ID_EMPRESA_GRUPO) ELSE EG.DESCRIPCION_CORTA END AS EMPRESA_CORTO\nFROM \n        MAESTROS.EMPRESA_GRUPO EG\n    WHERE EG.ID_EMPRESA_GRUPO  IN (99 ,41 ,189 ,37 ,32 ,43 ,14 ,26 ,12 ,23 ,61 ,357 ,68 ,330 ,20 ,398,64,506)\n  UNION ALL \nSELECT 0, 'GLOBAL COMPANY', 'EXTERNOS' from SYSIBM.SYSDUMMY1\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT \nEG.ID_EMPRESA_GRUPO AS ID_EMPRESA,\nCASE WHEN EG.DESCRIPCION IS NULL THEN TO_CHAR(EG.ID_EMPRESA_GRUPO) ELSE EG.DESCRIPCION END AS EMPRESA, \nCASE WHEN EG.DESCRIPCION_CORTA IS NULL THEN TO_CHAR(EG.ID_EMPRESA_GRUPO) ELSE EG.DESCRIPCION_CORTA END AS EMPRESA_CORTO\nFROM \n        MAESTROS.EMPRESA_GRUPO EG\n    WHERE EG.ID_EMPRESA_GRUPO  IN (99 ,41 ,189 ,37 ,32 ,43 ,14 ,26 ,12 ,23 ,61 ,357 ,68 ,330 ,20 ,398,64,506)\n  UNION ALL \nSELECT 0, 'GLOBAL COMPANY', 'EXTERNOS' from SYSIBM.SYSDUMMY1\nWITH UR;"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT \nEG.ID_EMPRESA_GRUPO AS ID_EMPRESA,\nCASE WHEN EG.DESCRIPCION IS NULL THEN TO_CHAR(EG.ID_EMPRESA_GRUPO) ELSE EG.DESCRIPCION END AS EMPRESA, \nCASE WHEN EG.DESCRIPCION_CORTA IS NULL THEN TO_CHAR(EG.ID_EMPRESA_GRUPO) ELSE EG.DESCRIPCION_CORTA END AS EMPRESA_CORTO\nFROM \n        MAESTROS.EMPRESA_GRUPO EG\n    WHERE EG.ID_EMPRESA_GRUPO  IN (99 ,41 ,189 ,37 ,32 ,43 ,14 ,26 ,12 ,23 ,61 ,357 ,68 ,330 ,20 ,398,64,506)\n  UNION ALL \nSELECT 0, 'GLOBAL COMPANY', 'EXTERNOS' from SYSIBM.SYSDUMMY1\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "EQUIPO",
        "columns": [
          {
            "name": "ID_EQUIPO",
            "dataType": "string",
            "sourceColumn": "ID_EQUIPO"
          },
          {
            "name": "EQUIPO",
            "dataType": "string",
            "sourceColumn": "EQUIPO"
          }
        ],
        "partitions": [
          {
            "name": "DIM_EQUIPO",
            "source": {
              "type": "query",
              "query": "SELECT E. ID_EQUIPO, E.EQUIPO FROM \n(\nselect \n\t\tUPPER(T.SCO_ID_TEAM)   AS ID_EQUIPO\n       ,T.SCO_NM_TEAMESP AS EQUIPO\n\t   ,T.SCO_DT_START AS FECHA_INICIO\n\t   ,RANK() OVER (\n\t   PARTITION BY UPPER(T.SCO_ID_TEAM) ORDER BY SCO_DT_START DESC, T.SCO_NM_TEAMESP DESC) AS POSICION\nfrom\n        M4SCO_TEAMS T WITH (NOLOCK)-- TABLA DE EQUIPOS \n        INNER JOIN M4CCL_GA_RESUMEN_RH H WITH (NOLOCK) \n                ON T.ID_ORGANIZATION = H.ID_ORGANIZATION\n                AND T.SCO_ID_TEAM = H.SCO_ID_TEAM\n \n WHERE\n        H.CCL_TIPO IN ('P','T','R','C','E','A','F')\n        AND H.STD_ID_LEG_ENT  IN (99 ,41 ,189 ,37 ,32 ,43 ,14 ,26 ,12 ,23 ,61 ,357 ,68 ,330 ,20 ,398, 64,506,0)\n\n --and T.SCO_ID_TEAM like 'EV_24%' \nGROUP BY \nUPPER(T.SCO_ID_TEAM) \n,T.SCO_NM_TEAMESP,\nT.SCO_DT_START\n) E\nWHERE E.POSICION = 1",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT E. ID_EQUIPO, E.EQUIPO FROM \n(\nselect \n\t\tUPPER(T.SCO_ID_TEAM)   AS ID_EQUIPO\n       ,T.SCO_NM_TEAMESP AS EQUIPO\n\t   ,T.SCO_DT_START AS FECHA_INICIO\n\t   ,RANK() OVER (\n\t   PARTITION BY UPPER(T.SCO_ID_TEAM) ORDER BY SCO_DT_START DESC, T.SCO_NM_TEAMESP DESC) AS POSICION\nfrom\n        M4SCO_TEAMS T WITH (NOLOCK)-- TABLA DE EQUIPOS \n        INNER JOIN M4CCL_GA_RESUMEN_RH H WITH (NOLOCK) \n                ON T.ID_ORGANIZATION = H.ID_ORGANIZATION\n                AND T.SCO_ID_TEAM = H.SCO_ID_TEAM\n \n WHERE\n        H.CCL_TIPO IN ('P','T','R','C','E','A','F')\n        AND H.STD_ID_LEG_ENT  IN (99 ,41 ,189 ,37 ,32 ,43 ,14 ,26 ,12 ,23 ,61 ,357 ,68 ,330 ,20 ,398, 64,506,0)\n\n --and T.SCO_ID_TEAM like 'EV_24%' \nGROUP BY \nUPPER(T.SCO_ID_TEAM) \n,T.SCO_NM_TEAMESP,\nT.SCO_DT_START\n) E\nWHERE E.POSICION = 1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT E. ID_EQUIPO, E.EQUIPO FROM \n(\nselect \n\t\tUPPER(T.SCO_ID_TEAM)   AS ID_EQUIPO\n       ,T.SCO_NM_TEAMESP AS EQUIPO\n\t   ,T.SCO_DT_START AS FECHA_INICIO\n\t   ,RANK() OVER (\n\t   PARTITION BY UPPER(T.SCO_ID_TEAM) ORDER BY SCO_DT_START DESC, T.SCO_NM_TEAMESP DESC) AS POSICION\nfrom\n        M4SCO_TEAMS T WITH (NOLOCK)-- TABLA DE EQUIPOS \n        INNER JOIN M4CCL_GA_RESUMEN_RH H WITH (NOLOCK) \n                ON T.ID_ORGANIZATION = H.ID_ORGANIZATION\n                AND T.SCO_ID_TEAM = H.SCO_ID_TEAM\n \n WHERE\n        H.CCL_TIPO IN ('P','T','R','C','E','A','F')\n        AND H.STD_ID_LEG_ENT  IN (99 ,41 ,189 ,37 ,32 ,43 ,14 ,26 ,12 ,23 ,61 ,357 ,68 ,330 ,20 ,398, 64,506,0)\n\n --and T.SCO_ID_TEAM like 'EV_24%' \nGROUP BY \nUPPER(T.SCO_ID_TEAM) \n,T.SCO_NM_TEAMESP,\nT.SCO_DT_START\n) E\nWHERE E.POSICION = 1"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT E. ID_EQUIPO, E.EQUIPO FROM \n(\nselect \n\t\tUPPER(T.SCO_ID_TEAM)   AS ID_EQUIPO\n       ,T.SCO_NM_TEAMESP AS EQUIPO\n\t   ,T.SCO_DT_START AS FECHA_INICIO\n\t   ,RANK() OVER (\n\t   PARTITION BY UPPER(T.SCO_ID_TEAM) ORDER BY SCO_DT_START DESC, T.SCO_NM_TEAMESP DESC) AS POSICION\nfrom\n        M4SCO_TEAMS T WITH (NOLOCK)-- TABLA DE EQUIPOS \n        INNER JOIN M4CCL_GA_RESUMEN_RH H WITH (NOLOCK) \n                ON T.ID_ORGANIZATION = H.ID_ORGANIZATION\n                AND T.SCO_ID_TEAM = H.SCO_ID_TEAM\n \n WHERE\n        H.CCL_TIPO IN ('P','T','R','C','E','A','F')\n        AND H.STD_ID_LEG_ENT  IN (99 ,41 ,189 ,37 ,32 ,43 ,14 ,26 ,12 ,23 ,61 ,357 ,68 ,330 ,20 ,398, 64,506,0)\n\n --and T.SCO_ID_TEAM like 'EV_24%' \nGROUP BY \nUPPER(T.SCO_ID_TEAM) \n,T.SCO_NM_TEAMESP,\nT.SCO_DT_START\n) E\nWHERE E.POSICION = 1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "INCIDENCIA",
        "columns": [
          {
            "name": "ID_INCIDENCIA",
            "dataType": "string",
            "sourceColumn": "ID_INCIDENCIA"
          },
          {
            "name": "INCIDENCIA",
            "dataType": "string",
            "sourceColumn": "INCIDENCIA"
          },
          {
            "name": "ID_GRUPO_INCIDENCIA",
            "dataType": "double",
            "sourceColumn": "ID_GRUPO_INCIDENCIA"
          },
          {
            "name": "GRUPO_INCIDENCIA",
            "dataType": "string",
            "sourceColumn": "GRUPO_INCIDENCIA"
          },
          {
            "name": "ID_ORGANIZATION",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_ORGANIZATION"
          },
          {
            "name": "ID_ORG_INCIDENCIA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_ORG_INCIDENCIA"
          }
        ],
        "partitions": [
          {
            "name": "DIM_INCIDENCIA",
            "source": {
              "type": "query",
              "query": "-- Variable de tabla que recoge las empresas que están en GPA y las que están en GHRS.\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\n-- TOTAL AUSENCIAS \nSELECT H.ID_ORGANIZATION,\n\tH.STD_ID_LEG_ENT,\n\tH.CCL_TIPO,\n\tH.SCO_ID_INCIDENCE\nINTO #TOTAL_INCIDENCIAS\nFROM M4CCL_GA_RESUMEN_RH AS H  WITH(NOLOCK)\nINNER JOIN @empresas AS LEGENT \nON LEGENT.ID_EMPRESA = H.STD_ID_LEG_ENT\nWHERE H.CCL_TIPO IN ('P','T','R','C','E','A','F')\n    AND H.STD_ID_LEG_ENT IN (SELECT ID_EMPRESA FROM @empresas)\n\tAND H.SCO_ID_INCIDENCE IS NOT NULL\nGROUP BY H.ID_ORGANIZATION,\n\tH.STD_ID_LEG_ENT,\n\tH.CCL_TIPO,\n\tH.SCO_ID_INCIDENCE\n\n\n-- GRUPO_INCIDENCIA PARA AUSENCIAS GHRS\nSELECT ABS_TA.ID_ORGANIZATION, \n        CASE ABS_TA.ID_ORGANIZATION \n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\tEND AS ID_INCIDENCIA,\n\t\tCASE ABS_TA.ID_ORGANIZATION \n\t\t\tWHEN 'NL' THEN CAR_VAL2.CCL_TP_CARACTEESP\n\t\t\tWHEN '0001' THEN ABS_TA.CCL_NM_ABSENCEESP\n\t\t\tEND AS INCIDENCIA,\n        CAR_ABS.CCL_ID_CARACTERISTICA AS ID_GRUPO_INCIDENCIA, \n        CAR_VAL.CCL_TP_CARACTEESP AS GRUPO_INCIDENCIA,\n\t\t\n        'TA' + '#' + \n\t\tABS_TA.ID_ORGANIZATION +'#'+CAR_ABS.CCL_ID_CARACTERISTICA +'#'+ \n\t\tCASE ABS_TA.ID_ORGANIZATION\n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\tEND AS ID_ORG_INCIDENCIA\nFROM M4CCL_ABSENCES_TA AS ABS_TA WITH(NOLOCK)\t\n        LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN AS CAR_ABS WITH(NOLOCK)\n            ON ABS_TA.ID_ORGANIZATION = CAR_ABS.ID_ORGANIZATION\n            AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS.CCL_ID_ABSENCE\n            AND CAR_ABS.CCL_ID_TP_CARACTERISTICA='INC' \n        LEFT JOIN M4CCL_ABS_CARACTERISTICA_VALOR AS CAR_VAL WITH(NOLOCK)\n            ON CAR_ABS.CCL_ID_TP_CARACTERISTICA = CAR_VAL.CCL_ID_TP_CARACTERISTICA\n            AND CAR_ABS.CCL_ID_CARACTERISTICA = CAR_VAL.CCL_ID_CARACTERISTICA\n        LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN AS CAR_ABS2 WITH(NOLOCK)\n            ON ABS_TA.ID_ORGANIZATION = CAR_ABS2.ID_ORGANIZATION\n            AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS2.CCL_ID_ABSENCE\n            AND CAR_ABS2.ID_ORGANIZATION IN ('NL')\n            AND CAR_ABS2.CCL_ID_TP_CARACTERISTICA='CORP'\n        LEFT JOIN M4CCL_ABS_CARACTERISTICA_VALOR CAR_VAL2 WITH(NOLOCK)\n\t\t -- TODO. Obtenemos la descripción de la clasificación que corresponda según la organización.\n            ON CAR_VAL2.CCL_ID_TP_CARACTERISTICA = CAR_ABS2.CCL_ID_TP_CARACTERISTICA\n            AND CAR_VAL2.CCL_ID_CARACTERISTICA = CAR_ABS2.CCL_ID_CARACTERISTICA\n\nWHERE CAR_ABS.ID_ORGANIZATION IN ('NL', '0001') \n    AND ABS_TA.ID_ORGANIZATION IN ('NL', '0001')\nGROUP BY\n\tABS_TA.ID_ORGANIZATION, \n        CASE ABS_TA.ID_ORGANIZATION \n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\tEND ,\n\t\tCASE ABS_TA.ID_ORGANIZATION \n\t\t\tWHEN 'NL' THEN CAR_VAL2.CCL_TP_CARACTEESP\n\t\t\tWHEN '0001' THEN ABS_TA.CCL_NM_ABSENCEESP\n\t\t\tEND,\n        CAR_ABS.CCL_ID_CARACTERISTICA, \n        CAR_VAL.CCL_TP_CARACTEESP,\n\t\tABS_TA.ID_ORGANIZATION +'#'+CAR_ABS.CCL_ID_CARACTERISTICA +'#'+ \n\t\tCASE ABS_TA.ID_ORGANIZATION\n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\tEND\n\nUNION\n---- GRUPO_INCIDENCIA PARA PRESENCIAS GHRS\nSELECT H.ID_ORGANIZATION, \n\t\tCAST(PRES_TA.CCL_ID_INCIDENCIA AS varchar) AS ID_INCIDENCIA,\n\t\tPRES_TA.CCL_NM_INCIDENESP AS INCIDENCIA,\n        -1 AS ID_GRUPO_INCIDENCIA, \n        'NO APLICA' AS GRUPO_INCIDENCIA,\n\t\t\n        'TA' + '#' + \n\t\tH.ID_ORGANIZATION +'#'+ '-1' +'#'+ \n\t\tCAST(PRES_TA.CCL_ID_INCIDENCIA as varchar) AS ID_ORG_INCIDENCIA\nFROM \n\t\t#TOTAL_INCIDENCIAS AS H  WITH(NOLOCK)\n\t\t---- Cruce para las presencias\n\t\tLEFT JOIN M4CCL_INCIDENCIAS_TEOR_TA AS PRES_TA WITH(NOLOCK)\n\t\t    ON CAST(PRES_TA.CCL_ID_INCIDENCIA as varchar) = H.SCO_ID_INCIDENCE\n\t\t\tAND PRES_TA.ID_ORGANIZATION = H.ID_ORGANIZATION\n\nWHERE H.CCL_TIPO = 'P'\n    AND PRES_TA.ID_ORGANIZATION IN ('NL', '0001')\n\tAND PRES_TA.CCL_ID_WL = 'L'\nGROUP BY\n\tH.ID_ORGANIZATION, \n\t\tCAST(PRES_TA.CCL_ID_INCIDENCIA as varchar),\n\t\tPRES_TA.CCL_NM_INCIDENESP,\n\t\tH.ID_ORGANIZATION +'#'+ '-1'  +'#'+ \n\t\tCAST(PRES_TA.CCL_ID_INCIDENCIA as varchar)\n\nUNION\n\tSELECT \n\t'NL' AS ID_ORGANIZACION,\n\t'N/A' AS ID_INCIDENCIA,\n\t'NO APLICA' AS INCIDENCIA,\n\t-1 AS ID_GRUPO_INCIDENCIA,\n\t'NO APLICA' AS GRUPO_INCIDENCIA,\n\t'NL#-1#N/A' AS ID_ORG_INCIDENCIA\n\n DROP TABLE #TOTAL_INCIDENCIAS",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Variable de tabla que recoge las empresas que están en GPA y las que están en GHRS.\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\n-- TOTAL AUSENCIAS \nSELECT H.ID_ORGANIZATION,\n\tH.STD_ID_LEG_ENT,\n\tH.CCL_TIPO,\n\tH.SCO_ID_INCIDENCE\nINTO #TOTAL_INCIDENCIAS\nFROM M4CCL_GA_RESUMEN_RH AS H  WITH(NOLOCK)\nINNER JOIN @empresas AS LEGENT \nON LEGENT.ID_EMPRESA = H.STD_ID_LEG_ENT\nWHERE H.CCL_TIPO IN ('P','T','R','C','E','A','F')\n    AND H.STD_ID_LEG_ENT IN (SELECT ID_EMPRESA FROM @empresas)\n\tAND H.SCO_ID_INCIDENCE IS NOT NULL\nGROUP BY H.ID_ORGANIZATION,\n\tH.STD_ID_LEG_ENT,\n\tH.CCL_TIPO,\n\tH.SCO_ID_INCIDENCE\n\n\n-- GRUPO_INCIDENCIA PARA AUSENCIAS GHRS\nSELECT ABS_TA.ID_ORGANIZATION, \n        CASE ABS_TA.ID_ORGANIZATION \n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\tEND AS ID_INCIDENCIA,\n\t\tCASE ABS_TA.ID_ORGANIZATION \n\t\t\tWHEN 'NL' THEN CAR_VAL2.CCL_TP_CARACTEESP\n\t\t\tWHEN '0001' THEN ABS_TA.CCL_NM_ABSENCEESP\n\t\t\tEND AS INCIDENCIA,\n        CAR_ABS.CCL_ID_CARACTERISTICA AS ID_GRUPO_INCIDENCIA, \n        CAR_VAL.CCL_TP_CARACTEESP AS GRUPO_INCIDENCIA,\n\t\t\n        'TA' + '#' + \n\t\tABS_TA.ID_ORGANIZATION +'#'+CAR_ABS.CCL_ID_CARACTERISTICA +'#'+ \n\t\tCASE ABS_TA.ID_ORGANIZATION\n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\tEND AS ID_ORG_INCIDENCIA\nFROM M4CCL_ABSENCES_TA AS ABS_TA WITH(NOLOCK)\t\n        LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN AS CAR_ABS WITH(NOLOCK)\n            ON ABS_TA.ID_ORGANIZATION = CAR_ABS.ID_ORGANIZATION\n            AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS.CCL_ID_ABSENCE\n            AND CAR_ABS.CCL_ID_TP_CARACTERISTICA='INC' \n        LEFT JOIN M4CCL_ABS_CARACTERISTICA_VALOR AS CAR_VAL WITH(NOLOCK)\n            ON CAR_ABS.CCL_ID_TP_CARACTERISTICA = CAR_VAL.CCL_ID_TP_CARACTERISTICA\n            AND CAR_ABS.CCL_ID_CARACTERISTICA = CAR_VAL.CCL_ID_CARACTERISTICA\n        LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN AS CAR_ABS2 WITH(NOLOCK)\n            ON ABS_TA.ID_ORGANIZATION = CAR_ABS2.ID_ORGANIZATION\n            AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS2.CCL_ID_ABSENCE\n            AND CAR_ABS2.ID_ORGANIZATION IN ('NL')\n            AND CAR_ABS2.CCL_ID_TP_CARACTERISTICA='CORP'\n        LEFT JOIN M4CCL_ABS_CARACTERISTICA_VALOR CAR_VAL2 WITH(NOLOCK)\n\t\t -- TODO. Obtenemos la descripción de la clasificación que corresponda según la organización.\n            ON CAR_VAL2.CCL_ID_TP_CARACTERISTICA = CAR_ABS2.CCL_ID_TP_CARACTERISTICA\n            AND CAR_VAL2.CCL_ID_CARACTERISTICA = CAR_ABS2.CCL_ID_CARACTERISTICA\n\nWHERE CAR_ABS.ID_ORGANIZATION IN ('NL', '0001') \n    AND ABS_TA.ID_ORGANIZATION IN ('NL', '0001')\nGROUP BY\n\tABS_TA.ID_ORGANIZATION, \n        CASE ABS_TA.ID_ORGANIZATION \n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\tEND ,\n\t\tCASE ABS_TA.ID_ORGANIZATION \n\t\t\tWHEN 'NL' THEN CAR_VAL2.CCL_TP_CARACTEESP\n\t\t\tWHEN '0001' THEN ABS_TA.CCL_NM_ABSENCEESP\n\t\t\tEND,\n        CAR_ABS.CCL_ID_CARACTERISTICA, \n        CAR_VAL.CCL_TP_CARACTEESP,\n\t\tABS_TA.ID_ORGANIZATION +'#'+CAR_ABS.CCL_ID_CARACTERISTICA +'#'+ \n\t\tCASE ABS_TA.ID_ORGANIZATION\n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\tEND\n\nUNION\n---- GRUPO_INCIDENCIA PARA PRESENCIAS GHRS\nSELECT H.ID_ORGANIZATION, \n\t\tCAST(PRES_TA.CCL_ID_INCIDENCIA AS varchar) AS ID_INCIDENCIA,\n\t\tPRES_TA.CCL_NM_INCIDENESP AS INCIDENCIA,\n        -1 AS ID_GRUPO_INCIDENCIA, \n        'NO APLICA' AS GRUPO_INCIDENCIA,\n\t\t\n        'TA' + '#' + \n\t\tH.ID_ORGANIZATION +'#'+ '-1' +'#'+ \n\t\tCAST(PRES_TA.CCL_ID_INCIDENCIA as varchar) AS ID_ORG_INCIDENCIA\nFROM \n\t\t#TOTAL_INCIDENCIAS AS H  WITH(NOLOCK)\n\t\t---- Cruce para las presencias\n\t\tLEFT JOIN M4CCL_INCIDENCIAS_TEOR_TA AS PRES_TA WITH(NOLOCK)\n\t\t    ON CAST(PRES_TA.CCL_ID_INCIDENCIA as varchar) = H.SCO_ID_INCIDENCE\n\t\t\tAND PRES_TA.ID_ORGANIZATION = H.ID_ORGANIZATION\n\nWHERE H.CCL_TIPO = 'P'\n    AND PRES_TA.ID_ORGANIZATION IN ('NL', '0001')\n\tAND PRES_TA.CCL_ID_WL = 'L'\nGROUP BY\n\tH.ID_ORGANIZATION, \n\t\tCAST(PRES_TA.CCL_ID_INCIDENCIA as varchar),\n\t\tPRES_TA.CCL_NM_INCIDENESP,\n\t\tH.ID_ORGANIZATION +'#'+ '-1'  +'#'+ \n\t\tCAST(PRES_TA.CCL_ID_INCIDENCIA as varchar)\n\nUNION\n\tSELECT \n\t'NL' AS ID_ORGANIZACION,\n\t'N/A' AS ID_INCIDENCIA,\n\t'NO APLICA' AS INCIDENCIA,\n\t-1 AS ID_GRUPO_INCIDENCIA,\n\t'NO APLICA' AS GRUPO_INCIDENCIA,\n\t'NL#-1#N/A' AS ID_ORG_INCIDENCIA\n\n DROP TABLE #TOTAL_INCIDENCIAS</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "-- Variable de tabla que recoge las empresas que están en GPA y las que están en GHRS.\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\n-- TOTAL AUSENCIAS \nSELECT H.ID_ORGANIZATION,\n\tH.STD_ID_LEG_ENT,\n\tH.CCL_TIPO,\n\tH.SCO_ID_INCIDENCE\nINTO #TOTAL_INCIDENCIAS\nFROM M4CCL_GA_RESUMEN_RH AS H  WITH(NOLOCK)\nINNER JOIN @empresas AS LEGENT \nON LEGENT.ID_EMPRESA = H.STD_ID_LEG_ENT\nWHERE H.CCL_TIPO IN ('P','T','R','C','E','A','F')\n    AND H.STD_ID_LEG_ENT IN (SELECT ID_EMPRESA FROM @empresas)\n\tAND H.SCO_ID_INCIDENCE IS NOT NULL\nGROUP BY H.ID_ORGANIZATION,\n\tH.STD_ID_LEG_ENT,\n\tH.CCL_TIPO,\n\tH.SCO_ID_INCIDENCE\n\n\n-- GRUPO_INCIDENCIA PARA AUSENCIAS GHRS\nSELECT ABS_TA.ID_ORGANIZATION, \n        CASE ABS_TA.ID_ORGANIZATION \n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\tEND AS ID_INCIDENCIA,\n\t\tCASE ABS_TA.ID_ORGANIZATION \n\t\t\tWHEN 'NL' THEN CAR_VAL2.CCL_TP_CARACTEESP\n\t\t\tWHEN '0001' THEN ABS_TA.CCL_NM_ABSENCEESP\n\t\t\tEND AS INCIDENCIA,\n        CAR_ABS.CCL_ID_CARACTERISTICA AS ID_GRUPO_INCIDENCIA, \n        CAR_VAL.CCL_TP_CARACTEESP AS GRUPO_INCIDENCIA,\n\t\t\n        'TA' + '#' + \n\t\tABS_TA.ID_ORGANIZATION +'#'+CAR_ABS.CCL_ID_CARACTERISTICA +'#'+ \n\t\tCASE ABS_TA.ID_ORGANIZATION\n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\tEND AS ID_ORG_INCIDENCIA\nFROM M4CCL_ABSENCES_TA AS ABS_TA WITH(NOLOCK)\t\n        LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN AS CAR_ABS WITH(NOLOCK)\n            ON ABS_TA.ID_ORGANIZATION = CAR_ABS.ID_ORGANIZATION\n            AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS.CCL_ID_ABSENCE\n            AND CAR_ABS.CCL_ID_TP_CARACTERISTICA='INC' \n        LEFT JOIN M4CCL_ABS_CARACTERISTICA_VALOR AS CAR_VAL WITH(NOLOCK)\n            ON CAR_ABS.CCL_ID_TP_CARACTERISTICA = CAR_VAL.CCL_ID_TP_CARACTERISTICA\n            AND CAR_ABS.CCL_ID_CARACTERISTICA = CAR_VAL.CCL_ID_CARACTERISTICA\n        LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN AS CAR_ABS2 WITH(NOLOCK)\n            ON ABS_TA.ID_ORGANIZATION = CAR_ABS2.ID_ORGANIZATION\n            AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS2.CCL_ID_ABSENCE\n            AND CAR_ABS2.ID_ORGANIZATION IN ('NL')\n            AND CAR_ABS2.CCL_ID_TP_CARACTERISTICA='CORP'\n        LEFT JOIN M4CCL_ABS_CARACTERISTICA_VALOR CAR_VAL2 WITH(NOLOCK)\n\t\t -- TODO. Obtenemos la descripción de la clasificación que corresponda según la organización.\n            ON CAR_VAL2.CCL_ID_TP_CARACTERISTICA = CAR_ABS2.CCL_ID_TP_CARACTERISTICA\n            AND CAR_VAL2.CCL_ID_CARACTERISTICA = CAR_ABS2.CCL_ID_CARACTERISTICA\n\nWHERE CAR_ABS.ID_ORGANIZATION IN ('NL', '0001') \n    AND ABS_TA.ID_ORGANIZATION IN ('NL', '0001')\nGROUP BY\n\tABS_TA.ID_ORGANIZATION, \n        CASE ABS_TA.ID_ORGANIZATION \n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\tEND ,\n\t\tCASE ABS_TA.ID_ORGANIZATION \n\t\t\tWHEN 'NL' THEN CAR_VAL2.CCL_TP_CARACTEESP\n\t\t\tWHEN '0001' THEN ABS_TA.CCL_NM_ABSENCEESP\n\t\t\tEND,\n        CAR_ABS.CCL_ID_CARACTERISTICA, \n        CAR_VAL.CCL_TP_CARACTEESP,\n\t\tABS_TA.ID_ORGANIZATION +'#'+CAR_ABS.CCL_ID_CARACTERISTICA +'#'+ \n\t\tCASE ABS_TA.ID_ORGANIZATION\n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\tEND\n\nUNION\n---- GRUPO_INCIDENCIA PARA PRESENCIAS GHRS\nSELECT H.ID_ORGANIZATION, \n\t\tCAST(PRES_TA.CCL_ID_INCIDENCIA AS varchar) AS ID_INCIDENCIA,\n\t\tPRES_TA.CCL_NM_INCIDENESP AS INCIDENCIA,\n        -1 AS ID_GRUPO_INCIDENCIA, \n        'NO APLICA' AS GRUPO_INCIDENCIA,\n\t\t\n        'TA' + '#' + \n\t\tH.ID_ORGANIZATION +'#'+ '-1' +'#'+ \n\t\tCAST(PRES_TA.CCL_ID_INCIDENCIA as varchar) AS ID_ORG_INCIDENCIA\nFROM \n\t\t#TOTAL_INCIDENCIAS AS H  WITH(NOLOCK)\n\t\t---- Cruce para las presencias\n\t\tLEFT JOIN M4CCL_INCIDENCIAS_TEOR_TA AS PRES_TA WITH(NOLOCK)\n\t\t    ON CAST(PRES_TA.CCL_ID_INCIDENCIA as varchar) = H.SCO_ID_INCIDENCE\n\t\t\tAND PRES_TA.ID_ORGANIZATION = H.ID_ORGANIZATION\n\nWHERE H.CCL_TIPO = 'P'\n    AND PRES_TA.ID_ORGANIZATION IN ('NL', '0001')\n\tAND PRES_TA.CCL_ID_WL = 'L'\nGROUP BY\n\tH.ID_ORGANIZATION, \n\t\tCAST(PRES_TA.CCL_ID_INCIDENCIA as varchar),\n\t\tPRES_TA.CCL_NM_INCIDENESP,\n\t\tH.ID_ORGANIZATION +'#'+ '-1'  +'#'+ \n\t\tCAST(PRES_TA.CCL_ID_INCIDENCIA as varchar)\n\nUNION\n\tSELECT \n\t'NL' AS ID_ORGANIZACION,\n\t'N/A' AS ID_INCIDENCIA,\n\t'NO APLICA' AS INCIDENCIA,\n\t-1 AS ID_GRUPO_INCIDENCIA,\n\t'NO APLICA' AS GRUPO_INCIDENCIA,\n\t'NL#-1#N/A' AS ID_ORG_INCIDENCIA\n\n DROP TABLE #TOTAL_INCIDENCIAS"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Variable de tabla que recoge las empresas que están en GPA y las que están en GHRS.\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\n-- TOTAL AUSENCIAS \nSELECT H.ID_ORGANIZATION,\n\tH.STD_ID_LEG_ENT,\n\tH.CCL_TIPO,\n\tH.SCO_ID_INCIDENCE\nINTO #TOTAL_INCIDENCIAS\nFROM M4CCL_GA_RESUMEN_RH AS H  WITH(NOLOCK)\nINNER JOIN @empresas AS LEGENT \nON LEGENT.ID_EMPRESA = H.STD_ID_LEG_ENT\nWHERE H.CCL_TIPO IN ('P','T','R','C','E','A','F')\n    AND H.STD_ID_LEG_ENT IN (SELECT ID_EMPRESA FROM @empresas)\n\tAND H.SCO_ID_INCIDENCE IS NOT NULL\nGROUP BY H.ID_ORGANIZATION,\n\tH.STD_ID_LEG_ENT,\n\tH.CCL_TIPO,\n\tH.SCO_ID_INCIDENCE\n\n\n-- GRUPO_INCIDENCIA PARA AUSENCIAS GHRS\nSELECT ABS_TA.ID_ORGANIZATION, \n        CASE ABS_TA.ID_ORGANIZATION \n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\tEND AS ID_INCIDENCIA,\n\t\tCASE ABS_TA.ID_ORGANIZATION \n\t\t\tWHEN 'NL' THEN CAR_VAL2.CCL_TP_CARACTEESP\n\t\t\tWHEN '0001' THEN ABS_TA.CCL_NM_ABSENCEESP\n\t\t\tEND AS INCIDENCIA,\n        CAR_ABS.CCL_ID_CARACTERISTICA AS ID_GRUPO_INCIDENCIA, \n        CAR_VAL.CCL_TP_CARACTEESP AS GRUPO_INCIDENCIA,\n\t\t\n        'TA' + '#' + \n\t\tABS_TA.ID_ORGANIZATION +'#'+CAR_ABS.CCL_ID_CARACTERISTICA +'#'+ \n\t\tCASE ABS_TA.ID_ORGANIZATION\n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\tEND AS ID_ORG_INCIDENCIA\nFROM M4CCL_ABSENCES_TA AS ABS_TA WITH(NOLOCK)\t\n        LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN AS CAR_ABS WITH(NOLOCK)\n            ON ABS_TA.ID_ORGANIZATION = CAR_ABS.ID_ORGANIZATION\n            AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS.CCL_ID_ABSENCE\n            AND CAR_ABS.CCL_ID_TP_CARACTERISTICA='INC' \n        LEFT JOIN M4CCL_ABS_CARACTERISTICA_VALOR AS CAR_VAL WITH(NOLOCK)\n            ON CAR_ABS.CCL_ID_TP_CARACTERISTICA = CAR_VAL.CCL_ID_TP_CARACTERISTICA\n            AND CAR_ABS.CCL_ID_CARACTERISTICA = CAR_VAL.CCL_ID_CARACTERISTICA\n        LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN AS CAR_ABS2 WITH(NOLOCK)\n            ON ABS_TA.ID_ORGANIZATION = CAR_ABS2.ID_ORGANIZATION\n            AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS2.CCL_ID_ABSENCE\n            AND CAR_ABS2.ID_ORGANIZATION IN ('NL')\n            AND CAR_ABS2.CCL_ID_TP_CARACTERISTICA='CORP'\n        LEFT JOIN M4CCL_ABS_CARACTERISTICA_VALOR CAR_VAL2 WITH(NOLOCK)\n\t\t -- TODO. Obtenemos la descripción de la clasificación que corresponda según la organización.\n            ON CAR_VAL2.CCL_ID_TP_CARACTERISTICA = CAR_ABS2.CCL_ID_TP_CARACTERISTICA\n            AND CAR_VAL2.CCL_ID_CARACTERISTICA = CAR_ABS2.CCL_ID_CARACTERISTICA\n\nWHERE CAR_ABS.ID_ORGANIZATION IN ('NL', '0001') \n    AND ABS_TA.ID_ORGANIZATION IN ('NL', '0001')\nGROUP BY\n\tABS_TA.ID_ORGANIZATION, \n        CASE ABS_TA.ID_ORGANIZATION \n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\tEND ,\n\t\tCASE ABS_TA.ID_ORGANIZATION \n\t\t\tWHEN 'NL' THEN CAR_VAL2.CCL_TP_CARACTEESP\n\t\t\tWHEN '0001' THEN ABS_TA.CCL_NM_ABSENCEESP\n\t\t\tEND,\n        CAR_ABS.CCL_ID_CARACTERISTICA, \n        CAR_VAL.CCL_TP_CARACTEESP,\n\t\tABS_TA.ID_ORGANIZATION +'#'+CAR_ABS.CCL_ID_CARACTERISTICA +'#'+ \n\t\tCASE ABS_TA.ID_ORGANIZATION\n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\tEND\n\nUNION\n---- GRUPO_INCIDENCIA PARA PRESENCIAS GHRS\nSELECT H.ID_ORGANIZATION, \n\t\tCAST(PRES_TA.CCL_ID_INCIDENCIA AS varchar) AS ID_INCIDENCIA,\n\t\tPRES_TA.CCL_NM_INCIDENESP AS INCIDENCIA,\n        -1 AS ID_GRUPO_INCIDENCIA, \n        'NO APLICA' AS GRUPO_INCIDENCIA,\n\t\t\n        'TA' + '#' + \n\t\tH.ID_ORGANIZATION +'#'+ '-1' +'#'+ \n\t\tCAST(PRES_TA.CCL_ID_INCIDENCIA as varchar) AS ID_ORG_INCIDENCIA\nFROM \n\t\t#TOTAL_INCIDENCIAS AS H  WITH(NOLOCK)\n\t\t---- Cruce para las presencias\n\t\tLEFT JOIN M4CCL_INCIDENCIAS_TEOR_TA AS PRES_TA WITH(NOLOCK)\n\t\t    ON CAST(PRES_TA.CCL_ID_INCIDENCIA as varchar) = H.SCO_ID_INCIDENCE\n\t\t\tAND PRES_TA.ID_ORGANIZATION = H.ID_ORGANIZATION\n\nWHERE H.CCL_TIPO = 'P'\n    AND PRES_TA.ID_ORGANIZATION IN ('NL', '0001')\n\tAND PRES_TA.CCL_ID_WL = 'L'\nGROUP BY\n\tH.ID_ORGANIZATION, \n\t\tCAST(PRES_TA.CCL_ID_INCIDENCIA as varchar),\n\t\tPRES_TA.CCL_NM_INCIDENESP,\n\t\tH.ID_ORGANIZATION +'#'+ '-1'  +'#'+ \n\t\tCAST(PRES_TA.CCL_ID_INCIDENCIA as varchar)\n\nUNION\n\tSELECT \n\t'NL' AS ID_ORGANIZACION,\n\t'N/A' AS ID_INCIDENCIA,\n\t'NO APLICA' AS INCIDENCIA,\n\t-1 AS ID_GRUPO_INCIDENCIA,\n\t'NO APLICA' AS GRUPO_INCIDENCIA,\n\t'NL#-1#N/A' AS ID_ORG_INCIDENCIA\n\n DROP TABLE #TOTAL_INCIDENCIAS</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "TIPO_JORNADA",
        "columns": [
          {
            "name": "ID_TIPO_JORNADA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_JORNADA"
          },
          {
            "name": "TIPO_JORNADA",
            "dataType": "string",
            "sourceColumn": "TIPO_JORNADA"
          }
        ],
        "partitions": [
          {
            "name": "DIM_TIPO_JORNADA",
            "source": {
              "type": "query",
              "query": "SELECT 1 AS ID_TIPO_JORNADA, 'TIEMPO COMPLETO' AS TIPO_JORNADA\nUNION\nSELECT 2 AS ID_TIPO_JORNADA, 'TIEMPO PARCIAL' AS TIPO_JORNADA",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              }
            ]
          }
        ]
      },
      {
        "name": "TIPO_CONTRATO",
        "columns": [
          {
            "name": "ID_TIPO_CONTRATO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_CONTRATO"
          },
          {
            "name": "TIPO_CONTRATO",
            "dataType": "string",
            "sourceColumn": "TIPO_CONTRATO"
          }
        ],
        "partitions": [
          {
            "name": "DIM_TIPO_CONTRATO",
            "source": {
              "type": "query",
              "query": "SELECT 1 AS ID_TIPO_CONTRATO, 'INDEFINIDO' AS TIPO_CONTRATO\nUNION\nSELECT 2 AS ID_TIPO_CONTRATO, 'EVENTUAL' AS TIPO_CONTRATO",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              }
            ]
          }
        ]
      },
      {
        "name": "AREA_ALMACEN",
        "columns": [
          {
            "name": "ID_ORG_ALM",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_ORG_ALM"
          },
          {
            "name": "ID_AREA_ALMACEN",
            "dataType": "string",
            "sourceColumn": "ID_AREA_ALMACEN"
          },
          {
            "name": "AREA_ALMACEN",
            "dataType": "string",
            "sourceColumn": "AREA_ALMACEN"
          }
        ],
        "partitions": [
          {
            "name": "DIM_ALMACEN",
            "source": {
              "type": "query",
              "query": "SELECT ID_ORGANIZATION +'#' + A.CCL_ID_AR_ALM AS ID_ORG_ALM\n        ,A.CCL_ID_AR_ALM AS ID_AREA_ALMACEN            \n        ,A.CCL_NM_AR_ALM AS AREA_ALMACEN\nFROM\n        M4CCL_X_GA_AR_ALM A   WITH (NOLOCK) \n    \nGROUP BY \n        A.CCL_ID_AR_ALM             \n        ,A.CCL_NM_AR_ALM\n\t\t,ID_ORGANIZATION +'#' + A.CCL_ID_AR_ALM",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID_ORGANIZATION +'#' + A.CCL_ID_AR_ALM AS ID_ORG_ALM\n        ,A.CCL_ID_AR_ALM AS ID_AREA_ALMACEN            \n        ,A.CCL_NM_AR_ALM AS AREA_ALMACEN\nFROM\n        M4CCL_X_GA_AR_ALM A   WITH (NOLOCK) \n    \nGROUP BY \n        A.CCL_ID_AR_ALM             \n        ,A.CCL_NM_AR_ALM\n\t\t,ID_ORGANIZATION +'#' + A.CCL_ID_AR_ALM</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT ID_ORGANIZATION +'#' + A.CCL_ID_AR_ALM AS ID_ORG_ALM\n        ,A.CCL_ID_AR_ALM AS ID_AREA_ALMACEN            \n        ,A.CCL_NM_AR_ALM AS AREA_ALMACEN\nFROM\n        M4CCL_X_GA_AR_ALM A   WITH (NOLOCK) \n    \nGROUP BY \n        A.CCL_ID_AR_ALM             \n        ,A.CCL_NM_AR_ALM\n\t\t,ID_ORGANIZATION +'#' + A.CCL_ID_AR_ALM"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID_ORGANIZATION +'#' + A.CCL_ID_AR_ALM AS ID_ORG_ALM\n        ,A.CCL_ID_AR_ALM AS ID_AREA_ALMACEN            \n        ,A.CCL_NM_AR_ALM AS AREA_ALMACEN\nFROM\n        M4CCL_X_GA_AR_ALM A   WITH (NOLOCK) \n    \nGROUP BY \n        A.CCL_ID_AR_ALM             \n        ,A.CCL_NM_AR_ALM\n\t\t,ID_ORGANIZATION +'#' + A.CCL_ID_AR_ALM</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "ESTRUCTURA",
        "columns": [
          {
            "name": "ID_ESTRUCTURA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_ESTRUCTURA"
          },
          {
            "name": "ESTRUCTURA",
            "dataType": "string",
            "sourceColumn": "ESTRUCTURA"
          }
        ],
        "partitions": [
          {
            "name": "DIM_ESTRUCTURA",
            "source": {
              "type": "query",
              "query": "SELECT 1 AS ID_ESTRUCTURA, 'ALMACEN' AS ESTRUCTURA FROM SYSIBM.SYSDUMMY1\n\t\t\t\t\t\t\t\t\t\t\tUNION\n\t\t\t\t\t\t\t\t\t\t\tSELECT 2 AS ID_ESTRUCTURA, 'ESTRUCTURA' AS ESTRUCTURA FROM SYSIBM.SYSDUMMY1\nWITH UR;",
              "dataSource": "AXINDB22V1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT 1 AS ID_ESTRUCTURA, 'ALMACEN' AS ESTRUCTURA FROM SYSIBM.SYSDUMMY1\n\t\t\t\t\t\t\t\t\t\t\tUNION\n\t\t\t\t\t\t\t\t\t\t\tSELECT 2 AS ID_ESTRUCTURA, 'ESTRUCTURA' AS ESTRUCTURA FROM SYSIBM.SYSDUMMY1\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT 1 AS ID_ESTRUCTURA, 'ALMACEN' AS ESTRUCTURA FROM SYSIBM.SYSDUMMY1\n\t\t\t\t\t\t\t\t\t\t\tUNION\n\t\t\t\t\t\t\t\t\t\t\tSELECT 2 AS ID_ESTRUCTURA, 'ESTRUCTURA' AS ESTRUCTURA FROM SYSIBM.SYSDUMMY1\nWITH UR;"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT 1 AS ID_ESTRUCTURA, 'ALMACEN' AS ESTRUCTURA FROM SYSIBM.SYSDUMMY1\n\t\t\t\t\t\t\t\t\t\t\tUNION\n\t\t\t\t\t\t\t\t\t\t\tSELECT 2 AS ID_ESTRUCTURA, 'ESTRUCTURA' AS ESTRUCTURA FROM SYSIBM.SYSDUMMY1\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "PUESTO",
        "columns": [
          {
            "name": "ID_PUESTO",
            "dataType": "string",
            "sourceColumn": "ID_PUESTO"
          },
          {
            "name": "PUESTO",
            "dataType": "string",
            "sourceColumn": "PUESTO"
          },
          {
            "name": "GRUPO_PUESTO",
            "dataType": "string",
            "sourceColumn": "GRUPO_PUESTO"
          },
          {
            "name": "ID_PUESTO_HR_TYPE",
            "dataType": "string",
            "sourceColumn": "ID_PUESTO_HR_TYPE"
          }
        ],
        "partitions": [
          {
            "name": "DIM_PUESTO",
            "source": {
              "type": "query",
              "query": "SELECT JO.CODIGO_PUESTO as ID_PUESTO\n\t, JO.CODIGO_PUESTO || '#' || JO.STD_ID_HR_TYPE AS ID_PUESTO_HR_TYPE\n\t, COALESCE(JO.DESCRIPCION, 'NO CONOCIDO') as PUESTO \n\t, CASE WHEN JO.DESCRIPCION_NIVEL_PUESTO='ESTRUCTURA'  THEN 'OFICINA' ELSE JO.DESCRIPCION_NIVEL_PUESTO END AS GRUPO_PUESTO\nFROM RRHH.GRUPO_PUESTO AS JO\nWITH UR",
              "dataSource": "AXINDB22V1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT JO.CODIGO_PUESTO as ID_PUESTO\n\t, JO.CODIGO_PUESTO || '#' || JO.STD_ID_HR_TYPE AS ID_PUESTO_HR_TYPE\n\t, COALESCE(JO.DESCRIPCION, 'NO CONOCIDO') as PUESTO \n\t, CASE WHEN JO.DESCRIPCION_NIVEL_PUESTO='ESTRUCTURA'  THEN 'OFICINA' ELSE JO.DESCRIPCION_NIVEL_PUESTO END AS GRUPO_PUESTO\nFROM RRHH.GRUPO_PUESTO AS JO\nWITH UR</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT JO.CODIGO_PUESTO as ID_PUESTO\n\t, JO.CODIGO_PUESTO || '#' || JO.STD_ID_HR_TYPE AS ID_PUESTO_HR_TYPE\n\t, COALESCE(JO.DESCRIPCION, 'NO CONOCIDO') as PUESTO \n\t, CASE WHEN JO.DESCRIPCION_NIVEL_PUESTO='ESTRUCTURA'  THEN 'OFICINA' ELSE JO.DESCRIPCION_NIVEL_PUESTO END AS GRUPO_PUESTO\nFROM RRHH.GRUPO_PUESTO AS JO\nWITH UR</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT JO.CODIGO_PUESTO as ID_PUESTO\n\t, JO.CODIGO_PUESTO || '#' || JO.STD_ID_HR_TYPE AS ID_PUESTO_HR_TYPE\n\t, COALESCE(JO.DESCRIPCION, 'NO CONOCIDO') as PUESTO \n\t, CASE WHEN JO.DESCRIPCION_NIVEL_PUESTO='ESTRUCTURA'  THEN 'OFICINA' ELSE JO.DESCRIPCION_NIVEL_PUESTO END AS GRUPO_PUESTO\nFROM RRHH.GRUPO_PUESTO AS JO\nWITH UR"
          }
        ]
      },
      {
        "name": "PERSONA",
        "columns": [
          {
            "name": "ID_UNIVERSAL",
            "dataType": "string",
            "sourceColumn": "ID_PERSONA"
          },
          {
            "name": "GENERO_CORTO",
            "dataType": "string",
            "sourceColumn": "GENERO_CORTO"
          },
          {
            "name": "GENERO",
            "dataType": "string",
            "sourceColumn": "GENERO"
          },
          {
            "name": "NOMBRE_EMPLEADO",
            "dataType": "string",
            "sourceColumn": "SCO_GB_NAME"
          },
          {
            "name": "ID_LOCAL",
            "dataType": "double",
            "sourceColumn": "ID_LOCAL"
          },
          {
            "name": "DOCUMENTO",
            "dataType": "string",
            "sourceColumn": "DOCUMENTO"
          },
          {
            "name": "ID_TIPO_DOCUMENTO",
            "dataType": "string",
            "sourceColumn": "ID_TIPO_DOCUMENTO"
          },
          {
            "name": "TIPO_DOCUMENTO",
            "dataType": "string",
            "sourceColumn": "TIPO_DOCUMENTO"
          },
          {
            "name": "ID_PERSONA_LOCAL",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_PERSONA_LOCAL"
          }
        ],
        "partitions": [
          {
            "name": "DIM_PERSONA",
            "source": {
              "type": "query",
              "query": "SELECT PE.STD_ID_PERSON ||'#' ||PERIODO.CCL_ID_PERSON AS ID_PERSONA_LOCAL,\n\tPE.STD_ID_PERSON AS ID_PERSONA,\n     PERIODO.CCL_ID_PERSON AS ID_LOCAL,\n     CASE WHEN PE.STD_ID_GENDER IN ('0','1') THEN 'H' ELSE 'M' END GENERO_CORTO,\n     CASE WHEN PE.STD_ID_GENDER IN ('0','1') THEN 'HOMBRE' ELSE 'MUJER' END GENERO,\n     PE.SCO_GB_NAME, \n     PE.STD_SSN AS DOCUMENTO,\n     PE.SSP_ID_TP_DOC AS ID_TIPO_DOCUMENTO,\n     TP_DOC.SSP_NM_TP_DOCESP AS TIPO_DOCUMENTO\nFROM RRHH.M4SCO_H_HR_POS M4HRPOS\nINNER JOIN RRHH.M4SCO_POSITION M4POS  \n\tON M4HRPOS.SCO_ID_POSITION = M4POS.SCO_ID_POSITION\nINNER JOIN RRHH.STD_WORK_LOCATION LT  \n     ON M4POS.SCO_ID_WORK_LOC = LT.STD_ID_WORK_LOCAT \nINNER JOIN RRHH.M4SCO_HR_ROLE M4ROLE  \n     ON M4ROLE.ID_ORGANIZATION = M4HRPOS.ID_ORGANIZATION  \n     \tAND M4HRPOS.SCO_ID_HR = M4ROLE.SCO_ID_HR  \n         \tAND M4HRPOS.SCO_OR_HR_ROLE = M4ROLE.SCO_OR_HR_ROLE  \nINNER JOIN RRHH.STD_HR_PERIOD PERIODO  \n     ON M4ROLE.ID_ORGANIZATION = PERIODO.ID_ORGANIZATION  \n         \tAND M4ROLE.SCO_ID_HR = PERIODO.STD_ID_HR  \n         \tAND M4ROLE.SCO_OR_HR_ROLE = PERIODO.STD_OR_HR_PERIOD\nINNER JOIN RRHH.GRUPO_PUESTO JO  \n     ON JO.CODIGO_PUESTO = M4POS.SCO_ID_JOB_CODE \n     \tAND (JO.STD_ID_HR_TYPE = PERIODO.STD_ID_HR_TYPE\n\t\tOR PERIODO.STD_ID_HR_TYPE = '02')\nINNER JOIN RRHH.M4SCO_H_HR_LEGENT LEGALENTITYHR  \n     ON LEGALENTITYHR.STD_ID_HR = PERIODO.STD_ID_HR  \n         \tAND LEGALENTITYHR.STD_OR_HR_PERIOD = PERIODO.STD_OR_HR_PERIOD  \n         \tAND LEGALENTITYHR.ID_ORGANIZATION = PERIODO.ID_ORGANIZATION\nINNER JOIN  RRHH.STD_PERSON PE  \n     ON PE.STD_ID_PERSON = M4HRPOS.SCO_ID_HR\nLEFT JOIN RRHH.M4SSP_LU_TP_DOC TP_DOC\n     ON PE.SSP_ID_TP_DOC = TP_DOC.SSP_ID_TP_DOC\nWHERE\n     LEGALENTITYHR.STD_ID_LEG_ENT  IN (99 ,41 ,189 ,37  ,32 ,43 ,14 ,26 ,12 ,23 ,61 ,357 ,68 ,330 ,20 ,398, 64, 9,506,0)\nGROUP BY \n     PE.STD_ID_PERSON, PERIODO.CCL_ID_PERSON, PE.STD_ID_GENDER, PE.SCO_GB_NAME, PE.STD_SSN,PE.SSP_ID_TP_DOC,TP_DOC.SSP_NM_TP_DOCESP\n WITH UR;",
              "dataSource": "AXINDB22V1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT PE.STD_ID_PERSON ||'#' ||PERIODO.CCL_ID_PERSON AS ID_PERSONA_LOCAL,\n\tPE.STD_ID_PERSON AS ID_PERSONA,\n     PERIODO.CCL_ID_PERSON AS ID_LOCAL,\n     CASE WHEN PE.STD_ID_GENDER IN ('0','1') THEN 'H' ELSE 'M' END GENERO_CORTO,\n     CASE WHEN PE.STD_ID_GENDER IN ('0','1') THEN 'HOMBRE' ELSE 'MUJER' END GENERO,\n     PE.SCO_GB_NAME, \n     PE.STD_SSN AS DOCUMENTO,\n     PE.SSP_ID_TP_DOC AS ID_TIPO_DOCUMENTO,\n     TP_DOC.SSP_NM_TP_DOCESP AS TIPO_DOCUMENTO\nFROM RRHH.M4SCO_H_HR_POS M4HRPOS\nINNER JOIN RRHH.M4SCO_POSITION M4POS  \n\tON M4HRPOS.SCO_ID_POSITION = M4POS.SCO_ID_POSITION\nINNER JOIN RRHH.STD_WORK_LOCATION LT  \n     ON M4POS.SCO_ID_WORK_LOC = LT.STD_ID_WORK_LOCAT \nINNER JOIN RRHH.M4SCO_HR_ROLE M4ROLE  \n     ON M4ROLE.ID_ORGANIZATION = M4HRPOS.ID_ORGANIZATION  \n     \tAND M4HRPOS.SCO_ID_HR = M4ROLE.SCO_ID_HR  \n         \tAND M4HRPOS.SCO_OR_HR_ROLE = M4ROLE.SCO_OR_HR_ROLE  \nINNER JOIN RRHH.STD_HR_PERIOD PERIODO  \n     ON M4ROLE.ID_ORGANIZATION = PERIODO.ID_ORGANIZATION  \n         \tAND M4ROLE.SCO_ID_HR = PERIODO.STD_ID_HR  \n         \tAND M4ROLE.SCO_OR_HR_ROLE = PERIODO.STD_OR_HR_PERIOD\nINNER JOIN RRHH.GRUPO_PUESTO JO  \n     ON JO.CODIGO_PUESTO = M4POS.SCO_ID_JOB_CODE \n     \tAND (JO.STD_ID_HR_TYPE = PERIODO.STD_ID_HR_TYPE\n\t\tOR PERIODO.STD_ID_HR_TYPE = '02')\nINNER JOIN RRHH.M4SCO_H_HR_LEGENT LEGALENTITYHR  \n     ON LEGALENTITYHR.STD_ID_HR = PERIODO.STD_ID_HR  \n         \tAND LEGALENTITYHR.STD_OR_HR_PERIOD = PERIODO.STD_OR_HR_PERIOD  \n         \tAND LEGALENTITYHR.ID_ORGANIZATION = PERIODO.ID_ORGANIZATION\nINNER JOIN  RRHH.STD_PERSON PE  \n     ON PE.STD_ID_PERSON = M4HRPOS.SCO_ID_HR\nLEFT JOIN RRHH.M4SSP_LU_TP_DOC TP_DOC\n     ON PE.SSP_ID_TP_DOC = TP_DOC.SSP_ID_TP_DOC\nWHERE\n     LEGALENTITYHR.STD_ID_LEG_ENT  IN (99 ,41 ,189 ,37  ,32 ,43 ,14 ,26 ,12 ,23 ,61 ,357 ,68 ,330 ,20 ,398, 64, 9,506,0)\nGROUP BY \n     PE.STD_ID_PERSON, PERIODO.CCL_ID_PERSON, PE.STD_ID_GENDER, PE.SCO_GB_NAME, PE.STD_SSN,PE.SSP_ID_TP_DOC,TP_DOC.SSP_NM_TP_DOCESP\n WITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT PE.STD_ID_PERSON ||'#' ||PERIODO.CCL_ID_PERSON AS ID_PERSONA_LOCAL,\n\tPE.STD_ID_PERSON AS ID_PERSONA,\n     PERIODO.CCL_ID_PERSON AS ID_LOCAL,\n     CASE WHEN PE.STD_ID_GENDER IN ('0','1') THEN 'H' ELSE 'M' END GENERO_CORTO,\n     CASE WHEN PE.STD_ID_GENDER IN ('0','1') THEN 'HOMBRE' ELSE 'MUJER' END GENERO,\n     PE.SCO_GB_NAME, \n     PE.STD_SSN AS DOCUMENTO,\n     PE.SSP_ID_TP_DOC AS ID_TIPO_DOCUMENTO,\n     TP_DOC.SSP_NM_TP_DOCESP AS TIPO_DOCUMENTO\nFROM RRHH.M4SCO_H_HR_POS M4HRPOS\nINNER JOIN RRHH.M4SCO_POSITION M4POS  \n\tON M4HRPOS.SCO_ID_POSITION = M4POS.SCO_ID_POSITION\nINNER JOIN RRHH.STD_WORK_LOCATION LT  \n     ON M4POS.SCO_ID_WORK_LOC = LT.STD_ID_WORK_LOCAT \nINNER JOIN RRHH.M4SCO_HR_ROLE M4ROLE  \n     ON M4ROLE.ID_ORGANIZATION = M4HRPOS.ID_ORGANIZATION  \n     \tAND M4HRPOS.SCO_ID_HR = M4ROLE.SCO_ID_HR  \n         \tAND M4HRPOS.SCO_OR_HR_ROLE = M4ROLE.SCO_OR_HR_ROLE  \nINNER JOIN RRHH.STD_HR_PERIOD PERIODO  \n     ON M4ROLE.ID_ORGANIZATION = PERIODO.ID_ORGANIZATION  \n         \tAND M4ROLE.SCO_ID_HR = PERIODO.STD_ID_HR  \n         \tAND M4ROLE.SCO_OR_HR_ROLE = PERIODO.STD_OR_HR_PERIOD\nINNER JOIN RRHH.GRUPO_PUESTO JO  \n     ON JO.CODIGO_PUESTO = M4POS.SCO_ID_JOB_CODE \n     \tAND (JO.STD_ID_HR_TYPE = PERIODO.STD_ID_HR_TYPE\n\t\tOR PERIODO.STD_ID_HR_TYPE = '02')\nINNER JOIN RRHH.M4SCO_H_HR_LEGENT LEGALENTITYHR  \n     ON LEGALENTITYHR.STD_ID_HR = PERIODO.STD_ID_HR  \n         \tAND LEGALENTITYHR.STD_OR_HR_PERIOD = PERIODO.STD_OR_HR_PERIOD  \n         \tAND LEGALENTITYHR.ID_ORGANIZATION = PERIODO.ID_ORGANIZATION\nINNER JOIN  RRHH.STD_PERSON PE  \n     ON PE.STD_ID_PERSON = M4HRPOS.SCO_ID_HR\nLEFT JOIN RRHH.M4SSP_LU_TP_DOC TP_DOC\n     ON PE.SSP_ID_TP_DOC = TP_DOC.SSP_ID_TP_DOC\nWHERE\n     LEGALENTITYHR.STD_ID_LEG_ENT  IN (99 ,41 ,189 ,37  ,32 ,43 ,14 ,26 ,12 ,23 ,61 ,357 ,68 ,330 ,20 ,398, 64, 9,506,0)\nGROUP BY \n     PE.STD_ID_PERSON, PERIODO.CCL_ID_PERSON, PE.STD_ID_GENDER, PE.SCO_GB_NAME, PE.STD_SSN,PE.SSP_ID_TP_DOC,TP_DOC.SSP_NM_TP_DOCESP\n WITH UR;"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT PE.STD_ID_PERSON ||'#' ||PERIODO.CCL_ID_PERSON AS ID_PERSONA_LOCAL,\n\tPE.STD_ID_PERSON AS ID_PERSONA,\n     PERIODO.CCL_ID_PERSON AS ID_LOCAL,\n     CASE WHEN PE.STD_ID_GENDER IN ('0','1') THEN 'H' ELSE 'M' END GENERO_CORTO,\n     CASE WHEN PE.STD_ID_GENDER IN ('0','1') THEN 'HOMBRE' ELSE 'MUJER' END GENERO,\n     PE.SCO_GB_NAME, \n     PE.STD_SSN AS DOCUMENTO,\n     PE.SSP_ID_TP_DOC AS ID_TIPO_DOCUMENTO,\n     TP_DOC.SSP_NM_TP_DOCESP AS TIPO_DOCUMENTO\nFROM RRHH.M4SCO_H_HR_POS M4HRPOS\nINNER JOIN RRHH.M4SCO_POSITION M4POS  \n\tON M4HRPOS.SCO_ID_POSITION = M4POS.SCO_ID_POSITION\nINNER JOIN RRHH.STD_WORK_LOCATION LT  \n     ON M4POS.SCO_ID_WORK_LOC = LT.STD_ID_WORK_LOCAT \nINNER JOIN RRHH.M4SCO_HR_ROLE M4ROLE  \n     ON M4ROLE.ID_ORGANIZATION = M4HRPOS.ID_ORGANIZATION  \n     \tAND M4HRPOS.SCO_ID_HR = M4ROLE.SCO_ID_HR  \n         \tAND M4HRPOS.SCO_OR_HR_ROLE = M4ROLE.SCO_OR_HR_ROLE  \nINNER JOIN RRHH.STD_HR_PERIOD PERIODO  \n     ON M4ROLE.ID_ORGANIZATION = PERIODO.ID_ORGANIZATION  \n         \tAND M4ROLE.SCO_ID_HR = PERIODO.STD_ID_HR  \n         \tAND M4ROLE.SCO_OR_HR_ROLE = PERIODO.STD_OR_HR_PERIOD\nINNER JOIN RRHH.GRUPO_PUESTO JO  \n     ON JO.CODIGO_PUESTO = M4POS.SCO_ID_JOB_CODE \n     \tAND (JO.STD_ID_HR_TYPE = PERIODO.STD_ID_HR_TYPE\n\t\tOR PERIODO.STD_ID_HR_TYPE = '02')\nINNER JOIN RRHH.M4SCO_H_HR_LEGENT LEGALENTITYHR  \n     ON LEGALENTITYHR.STD_ID_HR = PERIODO.STD_ID_HR  \n         \tAND LEGALENTITYHR.STD_OR_HR_PERIOD = PERIODO.STD_OR_HR_PERIOD  \n         \tAND LEGALENTITYHR.ID_ORGANIZATION = PERIODO.ID_ORGANIZATION\nINNER JOIN  RRHH.STD_PERSON PE  \n     ON PE.STD_ID_PERSON = M4HRPOS.SCO_ID_HR\nLEFT JOIN RRHH.M4SSP_LU_TP_DOC TP_DOC\n     ON PE.SSP_ID_TP_DOC = TP_DOC.SSP_ID_TP_DOC\nWHERE\n     LEGALENTITYHR.STD_ID_LEG_ENT  IN (99 ,41 ,189 ,37  ,32 ,43 ,14 ,26 ,12 ,23 ,61 ,357 ,68 ,330 ,20 ,398, 64, 9,506,0)\nGROUP BY \n     PE.STD_ID_PERSON, PERIODO.CCL_ID_PERSON, PE.STD_ID_GENDER, PE.SCO_GB_NAME, PE.STD_SSN,PE.SSP_ID_TP_DOC,TP_DOC.SSP_NM_TP_DOCESP\n WITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "DIV_SEC",
        "columns": [
          {
            "name": "ID_DIVISION_SECCION",
            "dataType": "string",
            "sourceColumn": "ID_DIVISION_SECCION"
          },
          {
            "name": "DIVISION",
            "dataType": "string",
            "sourceColumn": "DIVISION"
          },
          {
            "name": "SECCION",
            "dataType": "string",
            "sourceColumn": "SECCION"
          },
          {
            "name": "DESC_DIVSEC",
            "dataType": "string",
            "sourceColumn": "DESC_DIVSEC"
          }
        ],
        "partitions": [
          {
            "name": "DIM_DIV_SEC",
            "source": {
              "type": "query",
              "query": "SELECT \n        CCL_COD_DIV_SECC ID_DIVISION_SECCION,\n        CCL_DIVISION DIVISION,\n        CCL_SECCION SECCION,\n        CCL_NM_DIV_SEC DESC_DIVSEC\nFROM \n        RRHH.M4CCL_DIV_SECC \nWHERE \n        ID_ORGANIZATION = '0001'\nWITH UR;",
              "dataSource": "AXINDB22V1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT \n        CCL_COD_DIV_SECC ID_DIVISION_SECCION,\n        CCL_DIVISION DIVISION,\n        CCL_SECCION SECCION,\n        CCL_NM_DIV_SEC DESC_DIVSEC\nFROM \n        RRHH.M4CCL_DIV_SECC \nWHERE \n        ID_ORGANIZATION = '0001'\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT \n        CCL_COD_DIV_SECC ID_DIVISION_SECCION,\n        CCL_DIVISION DIVISION,\n        CCL_SECCION SECCION,\n        CCL_NM_DIV_SEC DESC_DIVSEC\nFROM \n        RRHH.M4CCL_DIV_SECC \nWHERE \n        ID_ORGANIZATION = '0001'\nWITH UR;"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT \n        CCL_COD_DIV_SECC ID_DIVISION_SECCION,\n        CCL_DIVISION DIVISION,\n        CCL_SECCION SECCION,\n        CCL_NM_DIV_SEC DESC_DIVSEC\nFROM \n        RRHH.M4CCL_DIV_SECC \nWHERE \n        ID_ORGANIZATION = '0001'\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "AUX_LOGIN_SEGURIDAD",
        "isHidden": true,
        "columns": [
          {
            "name": "EMPRESA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "EMPRESA"
          },
          {
            "name": "LOGINID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LOGINID"
          }
        ],
        "partitions": [
          {
            "name": "AUX_LOGIN_SEGURIDAD",
            "source": {
              "type": "query",
              "query": "SELECT \n        VALOR as EMPRESA,\n        DESCRIPCION_USUARIO AS LOGINID\nFROM \n        APLICACION.APLICACION_USUARIO_ATRIBUTO_MULTIVALUADO_VALOR\nWHERE \n        ID_APLICACION = 'AppLanzaderaInformesRRHH'\nAND \n        DESCRIPCION_ATRIBUTO_MULTIVALUADO='empresas'\nAND\n        VALOR<>''\nORDER BY 2,1\nWITH UR;",
              "dataSource": "AXINDB22V1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT \n        VALOR as EMPRESA,\n        DESCRIPCION_USUARIO AS LOGINID\nFROM \n        APLICACION.APLICACION_USUARIO_ATRIBUTO_MULTIVALUADO_VALOR\nWHERE \n        ID_APLICACION = 'AppLanzaderaInformesRRHH'\nAND \n        DESCRIPCION_ATRIBUTO_MULTIVALUADO='empresas'\nAND\n        VALOR<>''\nORDER BY 2,1\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT \n        VALOR as EMPRESA,\n        DESCRIPCION_USUARIO AS LOGINID\nFROM \n        APLICACION.APLICACION_USUARIO_ATRIBUTO_MULTIVALUADO_VALOR\nWHERE \n        ID_APLICACION = 'AppLanzaderaInformesRRHH'\nAND \n        DESCRIPCION_ATRIBUTO_MULTIVALUADO='empresas'\nAND\n        VALOR<>''\nORDER BY 2,1\nWITH UR;"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT \n        VALOR as EMPRESA,\n        DESCRIPCION_USUARIO AS LOGINID\nFROM \n        APLICACION.APLICACION_USUARIO_ATRIBUTO_MULTIVALUADO_VALOR\nWHERE \n        ID_APLICACION = 'AppLanzaderaInformesRRHH'\nAND \n        DESCRIPCION_ATRIBUTO_MULTIVALUADO='empresas'\nAND\n        VALOR<>''\nORDER BY 2,1\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "HORAS",
        "columns": [
          {
            "name": "ANTIGUEDAD",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ANTIGUEDAD"
          },
          {
            "name": "EDAD",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "EDAD"
          },
          {
            "name": "GENERO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "GENERO"
          },
          {
            "name": "ID_TIPO_JORNADA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_JORNADA"
          },
          {
            "name": "ID_TIPO_CONTRATO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_CONTRATO"
          },
          {
            "name": "ID_EMPRESA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_EMPRESA"
          },
          {
            "name": "ID_PERSONA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_PERSONA"
          },
          {
            "name": "ID_EQUIPO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_EQUIPO"
          },
          {
            "type": "calculated",
            "name": "HORAS_COMPLEMENTARIAS_RAW_T",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF(or([FECHA]>TODAY(),[HORAS_COMPLEMENTARIAS_PONDERADAS_RAW]=0),BLANK(),[HORAS_COMPLEMENTARIAS_PONDERADAS_RAW])"
          },
          {
            "type": "calculated",
            "name": "HORAS_EXTRA_RAW_T",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF(or([FECHA]>TODAY(),[HORAS_EXTRA_PONDERADAS_RAW]=0),BLANK(),[HORAS_EXTRA_PONDERADAS_RAW])"
          },
          {
            "type": "calculated",
            "name": "HORAS_ORDINARIAS_RAW_T",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": " IF(or([FECHA]>TODAY(),[HORAS_ORDINARIAS_PONDERADAS_RAW]=0),BLANK(),[HORAS_ORDINARIAS_PONDERADAS_RAW])"
          },
          {
            "type": "calculated",
            "name": "HORAS_REALES_RAW_T",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": " IF(or([FECHA]>TODAY(),[HORAS_REALES_PONDERADAS_RAW]=0),BLANK(),[HORAS_REALES_PONDERADAS_RAW])"
          },
          {
            "type": "calculated",
            "name": "HORAS_AJUSTADAS_RAW_T",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": " IF([FECHA]>TODAY(),BLANK(),[HORAS_AJUSTADAS_PONDERADAS_RAW])"
          },
          {
            "type": "calculated",
            "name": "EMP_PLA_RAW",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF([HORAS_PLANIFICADAS_RAW]>0,1/([AGRUPACION_SIN_TURNO] * IF(ISBLANK([HORAS_TEORICAS_RAW]) || [HORAS_TEORICAS_RAW] = 0, 8 ,[HORAS_TEORICAS_RAW])) ,IF([HORAS_PLANIFICADAS_RAW]<0,-1,0))"
          },
          {
            "type": "calculated",
            "name": "EMP_AUSENT_RAW",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF(([HORAS_AUSENTISMO_RAW_AUX_PONDERADAS] )>4.5,1,0)"
          },
          {
            "name": "ID_CATEGORIA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_CATEGORIA"
          },
          {
            "name": "ID_HORAS_CONTRATADAS",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_HORAS_CONTRATADAS"
          },
          {
            "name": "ID_REDUCCION_JORNADA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_REDUCCION_JORNADA"
          },
          {
            "name": "ID_LUGAR_DE_TRABAJO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_LUGAR_DE_TRABAJO"
          },
          {
            "name": "ID_EMPRESA_EXTERNA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_EMPRESA_EXTERNA"
          },
          {
            "type": "calculated",
            "name": "EMP_VAC_SIN_PLANI_RAW",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF([HORAS_VACACIONES_RAW]>0 && (ISBLANK([HORAS_PLANIFICADAS_RAW]) || [HORAS_PLANIFICADAS_RAW] <= 0) && ISBLANK( [FECHA_INICIO_TURNO] ),1,0)"
          },
          {
            "type": "calculated",
            "name": "EMP_VAC_RAW",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF([HORAS_VACACIONES_RAW]>0 && ISBLANK( [FECHA_INICIO_TURNO] ),1,0)"
          },
          {
            "name": "IdInternalTipoTurno",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "IdInternalTipoTurno"
          },
          {
            "name": "MOD_REF_INDIVIDUAL",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "MOD_REF_INDIVIDUAL"
          },
          {
            "name": "MOD_REF_EQUIPO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "MOD_REF_EQUIPO"
          },
          {
            "name": "ID_TIPO_PERSONA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_PERSONA"
          },
          {
            "name": "DIVISION_SECCION",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "DIVISION_SECCION"
          },
          {
            "type": "calculated",
            "name": "HORAS_ABSENTISMO_RAW_T",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "if([HORAS_ABSENTISMO_RAW]>0,[HORAS_ABSENTISMO_RAW])"
          },
          {
            "type": "calculated",
            "name": "HORAS_AUSENTISMO_RAW_T",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "[HORAS_AUSENTISMO_RAW]"
          },
          {
            "type": "calculated",
            "name": "EMP_PLAW_RAW_T",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF([EMP_PLA_RAW]<= 0, BLANK(),[EMP_PLA_RAW])"
          },
          {
            "name": "ID_PUESTO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_PUESTO"
          },
          {
            "name": "ID_UNIDAD_ORGANIZATIVA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_UNIDAD_ORGANIZATIVA"
          },
          {
            "name": "ID_NIVEL_ESTUDIOS",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_NIVEL_ESTUDIOS"
          },
          {
            "name": "ID_ROL_EQUIPO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_ROL_EQUIPO"
          },
          {
            "name": "ID_LOCAL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ID_LOCAL"
          },
          {
            "name": "ID_PERSONA_LOCAL",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_PERSONA_LOCAL"
          },
          {
            "name": "ID_ORGANIZATION",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_ORGANIZATION"
          },
          {
            "name": "ID_PUESTO_HR_TYPE",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_PUESTO_HR_TYPE"
          },
          {
            "name": "ID_MODELO_REFERENCIA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_MODELO_REFERENCIA"
          },
          {
            "name": "AGRUPACION_SIN_TURNO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "AGRUPACION_SIN_TURNO"
          },
          {
            "name": "FECHA",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FECHA",
            "formatString": "General Date"
          },
          {
            "name": "ID_ALMACEN",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_ALMACEN"
          },
          {
            "name": "ID_GRUPO_INCIDENCIA",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ID_GRUPO_INCIDENCIA"
          },
          {
            "name": "ID_INCIDENCIA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_INCIDENCIA"
          },
          {
            "name": "ID_AUSENCIA",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ID_AUSENCIA"
          },
          {
            "name": "ID_ORG_AUSENCIA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_ORG_AUSENCIA"
          },
          {
            "name": "ID_ORG_INCIDENCIA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_ORG_INCIDENCIA"
          },
          {
            "name": "HORAS_PRESENCIA_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_PRESENCIA_RAW"
          },
          {
            "name": "HORAS_TEORICAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_TEORICAS_RAW"
          },
          {
            "name": "HORAS_DESCANSO_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_DESCANSO_RAW"
          },
          {
            "name": "HORAS_PLANIFICADAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_PLANIFICADAS_RAW"
          },
          {
            "name": "HORAS_REALES_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_REALES_RAW"
          },
          {
            "name": "HORAS_COMPLEMENTARIAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_COMPLEMENTARIAS_RAW"
          },
          {
            "name": "HORAS_EXTRA_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_EXTRA_RAW"
          },
          {
            "name": "HORAS_ORDINARIAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_ORDINARIAS_RAW"
          },
          {
            "name": "HORAS_ABSENTISMO_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_ABSENTISMO_RAW"
          },
          {
            "name": "HORAS_AUSENTISMO_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_AUSENTISMO_RAW"
          },
          {
            "name": "HORAS_INCIDENCIA_AUSENCIA_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_INCIDENCIA_AUSENCIA_RAW"
          },
          {
            "name": "HORAS_AJUSTADAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_AJUSTADAS_RAW"
          },
          {
            "name": "PORC_GUARDA_LEGAL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "PORC_GUARDA_LEGAL"
          },
          {
            "name": "PORC_TIEMPO_PARCIAL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "PORC_TIEMPO_PARCIAL"
          },
          {
            "name": "CCL_ID_TURNO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CCL_ID_TURNO"
          },
          {
            "name": "FECHA_INICIO_REAL",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_INICIO_REAL",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "HORA_INICIO_REAL",
            "dataType": "string",
            "sourceColumn": "HORA_INICIO_REAL"
          },
          {
            "name": "FECHA_INICIO_TURNO",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_INICIO_TURNO",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "HORA_INICIO_TURNO",
            "dataType": "string",
            "sourceColumn": "HORA_INICIO_TURNO"
          },
          {
            "name": "FECHA_FIN_TURNO",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_FIN_TURNO",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "HORA_FIN_TURNO",
            "dataType": "string",
            "sourceColumn": "HORA_FIN_TURNO"
          },
          {
            "name": "FECHA_FIN_REAL",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_FIN_REAL",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "HORA_FIN_REAL",
            "dataType": "string",
            "sourceColumn": "HORA_FIN_REAL"
          },
          {
            "name": "HORAS_INCIDENCIA_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_INCIDENCIA_RAW"
          },
          {
            "name": "HORAS_VACACIONES_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_VACACIONES_RAW"
          },
          {
            "name": "HORAS_FALTAN_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_FALTAN_RAW"
          },
          {
            "name": "CLASIFICACION_HORAS_PLANIFICADAS",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CLASIFICACION_HORAS_PLANIFICADAS"
          },
          {
            "name": "ID_EQUIPO_PER",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_EQUIPO_PER"
          },
          {
            "name": "HORAS_DESCANSO_RAW_NL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_DESCANSO_RAW_NL"
          },
          {
            "type": "calculated",
            "name": "HORAS_ABSENTISMO_RAW_AJUSTADAS",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF([HORAS_ABSENTISMO_PONDERADAS_RAW]>=4, [HORAS_ABSENTISMO_PONDERADAS_RAW] - [HORAS_DESCANSO_PLAN_AUX_PONDERADAS],[HORAS_ABSENTISMO_PONDERADAS_RAW])"
          },
          {
            "type": "calculated",
            "name": "HORAS_AUSENTISMO_RAW_AJUSTADAS",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF([HORAS_AUSENTISMO_RAW_PONDERADAS]>=4,[HORAS_AUSENTISMO_RAW_PONDERADAS] - [HORAS_DESCANSO_PLAN_AUX_PONDERADAS],[HORAS_AUSENTISMO_RAW_PONDERADAS])"
          },
          {
            "type": "calculated",
            "name": "HORAS_INCIDENCIA_RAW_AJUSTADAS",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF([HORAS_INCIDENCIA_PONDERADAS_RAW]>=4, [HORAS_INCIDENCIA_PONDERADAS_RAW] - [HORAS_DESCANSO_PLAN_AUX_PONDERADAS], [HORAS_INCIDENCIA_PONDERADAS_RAW])"
          },
          {
            "name": "HORAS_DESCANSO_PLANIFICADAS_NL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_DESCANSO_PLANIFICADAS_NL"
          },
          {
            "name": "HORAS_DESCANSO_PLAN_AUX",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_DESCANSO_PLAN_AUX"
          },
          {
            "name": "HORAS_AUSENTISMO_RAW_AUX",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_AUSENTISMO_RAW_AUX"
          },
          {
            "name": "CCL_ID_UNIDAD_NEG",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CCL_ID_UNIDAD_NEG"
          },
          {
            "name": "ID_PERSONA_FECHA",
            "dataType": "string",
            "sourceColumn": "ID_PERSONA_FECHA"
          },
          {
            "name": "ID_ORG_ALM",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_ORG_ALM"
          },
          {
            "name": "ID_TAREA",
            "dataType": "double",
            "sourceColumn": "ID_TAREA"
          },
          {
            "name": "ID_TERMINAL",
            "dataType": "double",
            "sourceColumn": "ID_TERMINAL"
          },
          {
            "name": "ID_ZONA",
            "dataType": "string",
            "sourceColumn": "ID_ZONA"
          },
          {
            "name": "ID_TAREA_ORGANIZATION",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_TAREA_ORGANIZATION"
          },
          {
            "name": "TRAMO_PORC_REDUCCION",
            "dataType": "int64",
            "sourceColumn": "TRAMO_PORC_REDUCCION"
          },
          {
            "name": "CCL_CK_ESCENARIO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CCL_CK_ESCENARIO"
          },
          {
            "name": "HORA_INICIO_TAR",
            "dataType": "dateTime",
            "sourceColumn": "HORA_INICIO_TAR"
          },
          {
            "name": "HORA_FIN_TAR",
            "dataType": "dateTime",
            "sourceColumn": "HORA_FIN_TAR"
          },
          {
            "name": "ID_HORA",
            "dataType": "int64",
            "sourceColumn": "ID_HORA"
          },
          {
            "name": "HORA",
            "dataType": "string",
            "sourceColumn": "HORA"
          },
          {
            "name": "FECHA_HORA_DESGLOSE",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_HORA_DESGLOSE"
          },
          {
            "name": "HORAS_REALES_PONDERADAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_REALES_PONDERADAS_RAW"
          },
          {
            "name": "HORAS_PRESENCIA_PONDERADAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_PRESENCIA_PONDERADAS_RAW"
          },
          {
            "name": "HORAS_TEORICAS_PONDERADAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_TEORICAS_PONDERADAS_RAW"
          },
          {
            "name": "HORAS_DESCANSO_PONDERADAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_DESCANSO_PONDERADAS_RAW"
          },
          {
            "name": "HORAS_DESCANSO_PLANIFICADAS_NL_PONDERADAS",
            "dataType": "double",
            "sourceColumn": "HORAS_DESCANSO_PLANIFICADAS_NL_PONDERADAS"
          },
          {
            "name": "HORAS_DESCANSO_RAW_NL_PONDERADAS",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_DESCANSO_RAW_NL_PONDERADAS"
          },
          {
            "name": "HORAS_PLANIFICADAS_PONDERADAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_PLANIFICADAS_PONDERADAS_RAW"
          },
          {
            "name": "HORAS_COMPLEMENTARIAS_PONDERADAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_COMPLEMENTARIAS_PONDERADAS_RAW"
          },
          {
            "name": "HORAS_EXTRA_PONDERADAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_EXTRA_PONDERADAS_RAW"
          },
          {
            "name": "HORAS_ORDINARIAS_PONDERADAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_ORDINARIAS_PONDERADAS_RAW"
          },
          {
            "name": "HORAS_ABSENTISMO_PONDERADAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_ABSENTISMO_PONDERADAS_RAW"
          },
          {
            "name": "HORAS_DESCANSO_PLAN_AUX_PONDERADAS",
            "dataType": "double",
            "sourceColumn": "HORAS_DESCANSO_PLAN_AUX_PONDERADAS"
          },
          {
            "name": "HORAS_AUSENTISMO_RAW_AUX_PONDERADAS",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_AUSENTISMO_RAW_AUX_PONDERADAS"
          },
          {
            "name": "HORAS_AUSENTISMO_RAW_PONDERADAS",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_AUSENTISMO_RAW_PONDERADAS"
          },
          {
            "name": "HORAS_INCIDENCIA_AUSENCIA_PONDERADAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_INCIDENCIA_AUSENCIA_PONDERADAS_RAW"
          },
          {
            "name": "HORAS_AJUSTADAS_PONDERADAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_AJUSTADAS_PONDERADAS_RAW"
          },
          {
            "name": "HORAS_FALTAN_PONDERADAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_FALTAN_PONDERADAS_RAW"
          },
          {
            "name": "HORAS_INCIDENCIA_PONDERADAS_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HORAS_INCIDENCIA_PONDERADAS_RAW"
          },
          {
            "name": "FECHA_DESGLOSE",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_DESGLOSE",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "PLANTILLA_PLANIFICADA_PONDERADAS_RAW",
            "dataType": "string",
            "sourceColumn": "PLANTILLA_PLANIFICADA_PONDERADAS_RAW"
          },
          {
            "name": "PLANTILLA_AUSENTISMO_PONDERADAS_RAW",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PLANTILLA_AUSENTISMO_PONDERADAS_RAW"
          },
          {
            "name": "PLANTILLA_AUSENTISMO_DIA_PONDERADAS_RAW",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PLANTILLA_AUSENTISMO_DIA_PONDERADAS_RAW"
          },
          {
            "name": "PLANTILLA_AUSENTISMO_DESGLOSE_PONDERADAS_RAW",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PLANTILLA_AUSENTISMO_DESGLOSE_PONDERADAS_RAW"
          },
          {
            "name": "HORAS_VACACIONES_PONDERADAS_RAW",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "HORAS_VACACIONES_PONDERADAS_RAW"
          },
          {
            "name": "ID_TIPO_FESTIVO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_FESTIVO"
          },
          {
            "name": "ID_EQ_ORG",
            "dataType": "string",
            "sourceColumn": "ID_EQ_ORG"
          },
          {
            "name": "ID_AGRUPACION_OPERATIVA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_AGRUPACION_OPERATIVA"
          }
        ],
        "partitions": [
          {
            "name": "BASE",
            "source": {
              "type": "query",
              "query": "DECLARE @FechaIni DATE = '2022-09-27';\nDECLARE @FechaFin DATE = '2022-09-28';\n\n\n\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\nWITH cal AS (\n       SELECT CAST(@FechaIni AS DATE) AS FECHA        \n       \n       UNION ALL           \n       SELECT DATEADD(Day,1,FECHA)\n       FROM cal\n       WHERE DATEADD(Day,1,FECHA) < CAST(@FechaFin AS DATE)\n)            \n\nSELECT FECHA        \nINTO #CAL           \nFROM cal            \nOPTION (MAXRECURSION 0);          \nCREATE INDEX IDXFECHA ON #CAL(FECHA);\n\nWITH NIVEL_ESTUDIOS AS (          \n       SELECT c.FECHA,\n             HNIV.STD_ID_HR,            \n             CASE WHEN LEV.STD_ID_DIP_LEVEL in ('01','02') THEN 1         \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('03') THEN 2            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('11') THEN 3            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('04','09') THEN 4              \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('05','10') THEN 5              \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('06','07','08') THEN 6               \n                    ELSE 0              \n             END AS ID_DIP_LEVEL,              \n             ROW_NUMBER() OVER (PARTITION BY HNIV.STD_ID_HR, c.FECHA ORDER BY CASE WHEN LEV.STD_ID_DIP_LEVEL in ('01','02') THEN 1            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('03') THEN 2            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('11') THEN 3            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('04','09') THEN 4              \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('05','10') THEN 5              \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('06','07','08') THEN 6               \n                    ELSE 0              \n             END DESC, STD_DT_START DESC ) AS NUMERO        \n\n       FROM STD_HR_ACAD_BACKGR HNIV WITH (NOLOCK) \n\t   INNER JOIN #CAL c WITH(NOLOCK)\n             ON HNIV.STD_DT_START<=c.FECHA\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\n       LEFT JOIN STD_LU_EDU_DIPLOMA DIP WITH (NOLOCK)        \n             ON DIP.STD_ID_DIPLOMA=HNIV.STD_ID_DIPLOMA \n       LEFT JOIN STD_LU_EDU_DIP_LEV LEV WITH (NOLOCK)        \n             ON LEV.STD_ID_DIP_LEVEL=DIP.STD_ID_DIP_LEVEL  \n                   \n)             \n             \nSELECT FECHA\n       , STD_ID_HR\n       , ID_DIP_LEVEL\n       , NUMERO            \n       INTO #NIVEL_ESTUDIOS\nFROM NIVEL_ESTUDIOS WITH(NOLOCK)\nOPTION (MAXRECURSION 0);          \nCREATE INDEX IDXNEST ON #NIVEL_ESTUDIOS(FECHA, STD_ID_HR, ID_DIP_LEVEL, NUMERO);\n\n\nSELECT ID_ORGANIZATION, CCL_DT_FECHA, CCL_TIPO, STD_ID_LEG_ENT, SCO_ID_HR  , SCO_OR_HR_PER, CCL_ID_AR_ALM, SCO_ID_TEAM, SCO_ID_INCIDENCE, CCL_HORAS, CCL_HORA_INICIO, CCL_HORA_FIN, CCL_HORA_INICIO_TUR, CCL_ID_TASK, GLB_ID_TERMINAL\nINTO #GA_RESUMEN \nFROM M4CCL_GA_RESUMEN_RH AS RESUMEN_RH WITH (NOLOCK)  \nWHERE    RESUMEN_RH.CCL_DT_FECHA>=@FechaIni and RESUMEN_RH.CCL_DT_FECHA<@FechaFin and \nSTD_ID_LEG_ENT IN ('14','23','26','32','37','41','43','61','99','189','398','506','12','20','64','68','330','357') AND   RESUMEN_RH.CCL_TIPO IN ('P','T','R','C','E','A','J', 'F','V','D')  \n\t\t\t \nCREATE NONCLUSTERED INDEX  IDXM4CCL_GA_RESUMEN_RH ON #GA_RESUMEN(ID_ORGANIZATION, SCO_ID_HR, SCO_OR_HR_PER, CCL_DT_FECHA);\n\n\nSELECT STD_ID_HR, STD_OR_HR_PERIOD, ID_ORGANIZATION, STD_DT_START, STD_DT_END, SSP_FEC_ANTIGUEDAD, CCL_ID_PERSON, STD_ID_EXTERN_ORG, STD_ID_HR_TYPE\nINTO #HR_PERIOD\nFROM STD_HR_PERIOD AS HR_PERIOD WITH (NOLOCK)      \nWHERE \n\tHR_PERIOD.ID_ORGANIZATION IN ('NL','0001') AND\n             (HR_PERIOD.STD_ID_HR_TYPE='01' OR HR_PERIOD.STD_ID_HR_TYPE='06' OR HR_PERIOD.STD_ID_HR_TYPE='02')      \nCREATE NONCLUSTERED INDEX  IDXSTD_HR_PERIOD ON #HR_PERIOD(ID_ORGANIZATION, STD_ID_HR, STD_OR_HR_PERIOD);\n\n\nSELECT H.SCO_ID_HR, H.CCL_DT_FECHA,\n                    SUM(CASE WHEN (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='D') THEN H.CCL_HORAS \n                    ELSE 0  \n                    END) AS HORAS_DESCANSO_PLANIFICADAS_NL \n                    , \n                    SUM(\n                    CASE WHEN                           \n                           CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NOT NULL) \n                           OR (H.ID_ORGANIZATION='NL' and H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4))\n                           THEN H.CCL_HORAS\n                    ELSE 0 END \n             = \n             CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA IS NOT NULL)\n                    OR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4,-1,13))\n                    THEN H.CCL_HORAS\n                    ELSE 0  END              \n             THEN\n             CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NOT NULL) \n                    OR (H.ID_ORGANIZATION='NL' and H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4))\n                    THEN H.CCL_HORAS\n                    ELSE 0 \n             END \n             ELSE (\n             CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NOT NULL) \n                    OR (H.ID_ORGANIZATION='NL' and H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4))\n                    THEN H.CCL_HORAS\n                    ELSE 0 END \n                    +\n                    CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA IS NOT NULL)\n                    OR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4,-1,13))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n                    THEN H.CCL_HORAS\n                    ELSE 0 END\n                    )             \n             END\n\t\n             ) AS HORAS_AUSENTISMO_RAW_AUX\n\t\t\t \n             , SUM(CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA IS NOT NULL)  \n                    OR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4,-1,13))\n                    THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_INCIDENCIA_AUSENCIA_RAW_AUX\n                                                                                                                                                                                                                                             \n                    ,MIN(CASE WHEN CCL_TIPO='R' THEN CAST(CAST(H.CCL_HORA_INICIO AS DATE) AS nvarchar) ELSE NULL END) AS FECHA_INICIO_REAL\n                    , MIN(CASE WHEN CCL_TIPO='R' THEN CAST(CAST(H.CCL_HORA_INICIO AS TIME(0)) AS nvarchar) ELSE NULL END) AS HORA_INICIO_REAL\n                    , MIN(CAST(CAST(H.CCL_HORA_INICIO_TUR AS DATE) AS nvarchar)) AS FECHA_INICIO_TURNO\n                    , MIN(CAST(CAST(H.CCL_HORA_INICIO_TUR AS TIME(0)) AS nvarchar)) AS HORA_INICIO_TURNO\n                    , MAX(CAST(CAST(CASE WHEN H.CCL_TIPO in ('T','P') THEN H.CCL_HORA_FIN ELSE NULL END AS DATE) AS nvarchar)) AS FECHA_FIN_TURNO\n                    , MAX(CAST(CAST(CASE WHEN H.CCL_TIPO in ('T','P') THEN H.CCL_HORA_FIN ELSE NULL END AS TIME(0)) AS nvarchar)) AS HORA_FIN_TURNO \n                    , MAX(CASE WHEN CCL_TIPO ='R' THEN CAST(CAST(H.CCL_HORA_FIN AS DATE) AS nvarchar) ELSE NULL END )AS FECHA_FIN_REAL\n                    , cast(CAST(MAX(CASE WHEN CCL_TIPO = 'R' THEN H.CCL_HORA_FIN  ELSE NULL END) AS time(0)) AS NVARCHAR) AS HORA_FIN_REAL\n                    ,SUM(CASE WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN (H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NULL AND H.ID_ORGANIZATION='0001') THEN -H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_PLANIFICADAS_RAW  \nINTO #EMPLEADO_DIA\n       FROM  M4CCL_GA_RESUMEN_RH H  WITH (NOLOCK) \n       \n       LEFT JOIN @empresas AS LEGENT \n        ON LEGENT.ID_EMPRESA = H.STD_ID_LEG_ENT\t\t\t\t \n\n       LEFT JOIN M4CCL_TA_INFORMES_ABS RGI_TA WITH (NOLOCK) \n             ON RGI_TA.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n             AND CAST(RGI_TA.CCL_ID_ABSENCE AS NVARCHAR) = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n             AND RGI_TA.CCL_ID_INFORME=1   \t\t\t\t\t  \n             \n       LEFT JOIN M4CCL_GA_GR_INF_ABS GRI_TA WITH (NOLOCK)\n             ON GRI_TA.ID_ORGANIZATION = RGI_TA.ID_ORGANIZATION\n             AND GRI_TA.CCL_ID_GR_ABS = RGI_TA.CCL_ID_GR_ABS\n\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\n\t LEFT JOIN M4CCL_GA_INFORMES_ABS RGI_GA WITH (NOLOCK) \n             ON RGI_GA.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n             AND CAST(RGI_GA.SCO_ID_INCIDENCE AS NVARCHAR) = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n             AND RGI_GA.CCL_ID_INFORME=1  \t\t\t\t \n\n     \n\n       LEFT JOIN M4CCL_GA_INFORMES_ABS RGI2 WITH (NOLOCK) \n             ON RGI2.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n                    AND RGI2.SCO_ID_INCIDENCE = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n            AND RGI2.CCL_ID_INFORME in (28)  \n\n       LEFT JOIN M4CCL_GA_GR_INF_ABS GRI2 WITH(NOLOCK)\n             ON GRI2.ID_ORGANIZATION = RGI2.ID_ORGANIZATION\n                    AND GRI2.CCL_ID_GR_ABS = RGI2.CCL_ID_GR_ABS\t\n                    \n       LEFT JOIN M4CCL_ABSENCES_TA ABS_TA WITH(NOLOCK)\n             ON cast(ABS_TA.CCL_ID_ABSENCE as varchar) = H.SCO_ID_INCIDENCE\n                    AND  H.ID_ORGANIZATION = ABS_TA.ID_ORGANIZATION \n                    AND  H.ID_ORGANIZATION IN ('NL', '0001')\t\t\t\t\t\t\t\t\t   \n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS WITH(NOLOCK)\n             ON ABS_TA.ID_ORGANIZATION = CAR_ABS.ID_ORGANIZATION\n                    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS.CCL_ID_ABSENCE\n                    AND  H.ID_ORGANIZATION= ABS_TA.ID_ORGANIZATION\n                    AND CAR_ABS.CCL_ID_TP_CARACTERISTICA = 'INC' \n                    AND ABS_TA.ID_ORGANIZATION IN ('NL', '0001')                    \n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_VALOR CAR_VAL WITH(NOLOCK)\n             ON CAR_ABS.CCL_ID_TP_CARACTERISTICA = CAR_VAL.CCL_ID_TP_CARACTERISTICA\n                    AND CAR_ABS.CCL_ID_CARACTERISTICA = CAR_VAL.CCL_ID_CARACTERISTICA\n        WHERE CCL_DT_FECHA>=@FechaIni and H.CCL_DT_FECHA<@FechaFin\n        and H.ID_ORGANIZATION in ('NL','0001')\n        AND CCL_TIPO IN ('P','T','R','C','E','A','J', 'F','V','D')\n        GROUP BY  H.SCO_ID_HR, H.CCL_DT_FECHA\nCREATE NONCLUSTERED INDEX IDXEMPLEADO_DIA ON #EMPLEADO_DIA(SCO_ID_HR, CCL_DT_FECHA);\n\nWITH HORAS AS (SELECT 0 AS ID_HORA,'00:00' AS HORA UNION ALL SELECT 1, '01:00' UNION ALL SELECT 2, '02:00' UNION ALL SELECT 3, '03:00' UNION ALL SELECT 4, '04:00'\nUNION ALL SELECT 5, '05:00' UNION ALL SELECT 6, '06:00' UNION ALL SELECT 7, '07:00' UNION ALL SELECT 8, '08:00' UNION ALL SELECT 9, '09:00' UNION ALL SELECT 10, '10:00'\nUNION ALL SELECT 11, '11:00' UNION ALL SELECT 12, '12:00' UNION ALL SELECT 13, '13:00' UNION ALL SELECT 14, '14:00' UNION ALL SELECT 15, '15:00' UNION ALL\nSELECT 16, '16:00' UNION ALL SELECT 17, '17:00' UNION ALL SELECT 18, '18:00' UNION ALL SELECT 19, '19:00' UNION ALL SELECT 20, '20:00' UNION ALL SELECT 21, '21:00'\nUNION ALL SELECT 22, '22:00' UNION ALL SELECT 23, '23:00'\n)\n\t\t\nSELECT TABLA.*,  \nCASE\n\tWHEN (DATEPART(HOUR, TABLA.HORA_INICIO_TAR) <= DATEPART(HOUR, TABLA.HORA_FIN_TAR)) AND ((TABLA.ID_HORA >= DATEPART(HOUR, TABLA.HORA_INICIO_TAR) AND  TABLA.ID_HORA < DATEPART(HOUR, TABLA.HORA_FIN_TAR)) \n\t\t\tOR (TABLA.ID_HORA = DATEPART(HOUR, TABLA.HORA_FIN_TAR) AND DATEPART(MINUTE, TABLA.HORA_FIN_TAR)>0)) THEN  CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\tWHEN DATEPART(HOUR, TABLA.HORA_INICIO_TAR) > DATEPART(HOUR, TABLA.HORA_FIN_TAR) AND ((TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_INICIO_TAR) >=0) \n\t\tOR (TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_FIN_TAR)<0) OR (TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_FIN_TAR)= 0 AND DATEPART(MINUTE, TABLA.HORA_FIN_TAR)>0)) THEN \n\t\tCASE WHEN (CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime) >=  TABLA.HORA_INICIO_TAR AND \n\t\t\t\tCAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime) < CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', '23:59') AS datetime) \n\t\t\t\t\tOR DATEPART(HOUR, CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)) = DATEPART(HOUR, TABLA.HORA_INICIO_TAR)) \n\t\t\t\t\t\tTHEN CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\t\t\tELSE CAST(CONCAT(CAST(CAST(TABLA.HORA_FIN_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\t\tEND\nELSE ''\nEND as FECHA_HORA_DESGLOSE,\n\ncast (CASE\n\tWHEN (DATEPART(HOUR, TABLA.HORA_INICIO_TAR) <= DATEPART(HOUR, TABLA.HORA_FIN_TAR)) AND ((TABLA.ID_HORA >= DATEPART(HOUR, TABLA.HORA_INICIO_TAR) AND  TABLA.ID_HORA < DATEPART(HOUR, TABLA.HORA_FIN_TAR)) \n\t\t\tOR (TABLA.ID_HORA = DATEPART(HOUR, TABLA.HORA_FIN_TAR) AND DATEPART(MINUTE, TABLA.HORA_FIN_TAR)>0)) THEN  CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\tWHEN DATEPART(HOUR, TABLA.HORA_INICIO_TAR) > DATEPART(HOUR, TABLA.HORA_FIN_TAR) AND ((TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_INICIO_TAR) >=0) \n\t\tOR (TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_FIN_TAR)<0) OR (TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_FIN_TAR)= 0 AND DATEPART(MINUTE, TABLA.HORA_FIN_TAR)>0)) THEN \n\t\tCASE WHEN (CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime) >=  TABLA.HORA_INICIO_TAR AND \n\t\t\t\tCAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime) < CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', '23:59') AS datetime) \n\t\t\t\t\tOR DATEPART(HOUR, CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)) = DATEPART(HOUR, TABLA.HORA_INICIO_TAR)) \n\t\t\t\t\t\tTHEN CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\t\t\tELSE CAST(CONCAT(CAST(CAST(TABLA.HORA_FIN_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\t\tEND\nELSE ''\nEND AS DATE)  as FECHA_DESGLOSE,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_REALES_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) \n\n AS HORAS_REALES_PONDERADAS_RAW,\n\t\t\t\t\t\t\n\nCAST((CASE \n\tWHEN TABLA.HORAS_PRESENCIA_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_PRESENCIA_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_TEORICAS_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_TEORICAS_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_DESCANSO_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_DESCANSO_PONDERADAS_RAW,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_DESCANSO_PLANIFICADAS_NL > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_DESCANSO_PLANIFICADAS_NL_PONDERADAS,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_DESCANSO_RAW_NL > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_DESCANSO_RAW_NL_PONDERADAS,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_PLANIFICADAS_RAW <> 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE  (DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE (60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END  \n\t\t\tEND        \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) ELSE DATEPART(MINUTE , TABLA.HORA_FIN_TAR) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN 60 ELSE 60  * -1 END \n\t\tEND \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_PLANIFICADAS_PONDERADAS_RAW,\n\nCASE \n\tWHEN TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN\n\t\tID_PERSONA_FECHA\t\t  \nELSE null END AS PLANTILLA_PLANIFICADA_PONDERADAS_RAW,\n\nCASE \n\tWHEN TABLA.HORAS_VACACIONES_RAW > 0 THEN\n\t\tID_PERSONA_FECHA\t\t  \nELSE null END AS HORAS_VACACIONES_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_COMPLEMENTARIAS_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_COMPLEMENTARIAS_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_EXTRA_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) * (TABLA.HORAS_EXTRA_RAW /  NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0) ) AS HORAS_EXTRA_PONDERADAS_RAW,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_ORDINARIAS_RAW <> 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE  (DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE (60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END  \n\t\t\tEND        \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) ELSE DATEPART(MINUTE , TABLA.HORA_FIN_TAR) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN 60 ELSE 60  * -1 END \n\t\tEND \t\t  \n\tEND\nELSE 0 END) *  CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN (TABLA.HORAS_ORDINARIAS_RAW / (NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0))) ELSE (TABLA.HORAS_ORDINARIAS_RAW / (NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0))) * -1 END / 60.0 AS NUMERIC(7, 5)) AS HORAS_ORDINARIAS_PONDERADAS_RAW,\n\n\n \n\n\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_ABSENTISMO_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_ABSENTISMO_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_DESCANSO_PLAN_AUX > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_DESCANSO_PLAN_AUX_PONDERADAS,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW_AUX > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_AUSENTISMO_RAW_AUX_PONDERADAS,\n\n\n(CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW_AUX > 4.5 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  ID_PERSONA_FECHA\t\n\t\t\t  ELSE ID_PERSONA_FECHA\t END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN ID_PERSONA_FECHA\t\n\t\t\t  ELSE ID_PERSONA_FECHA END \t\t  \n\tEND\nELSE NULL END)  AS PLANTILLA_AUSENTISMO_PONDERADAS_RAW,\n\n(CASE WHEN CAST((CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW_AUX > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) > 0 and HORAS_AUSENTISMO_RAW > 0  THEN ID_PERSONA_FECHA ELSE NULL END) AS PLANTILLA_AUSENTISMO_DESGLOSE_PONDERADAS_RAW,\n\n(CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW_AUX > 4.5 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  ID_PERSONA_FECHA\t\n\t\t\t  ELSE ID_PERSONA_FECHA\t END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN ID_PERSONA_FECHA\t\n\t\t\t  ELSE ID_PERSONA_FECHA END \t\t  \n\tEND\nELSE NULL END)  AS PLANTILLA_AUSENTISMO_DIA_PONDERADAS_RAW,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_AUSENTISMO_RAW_PONDERADAS,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_INCIDENCIA_AUSENCIA_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_INCIDENCIA_AUSENCIA_PONDERADAS_RAW,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_AJUSTADAS_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_AJUSTADAS_PONDERADAS_RAW,\n\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_FALTAN_RAW <> 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE  (DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE (60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END  \n\t\t\tEND        \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) ELSE DATEPART(MINUTE , TABLA.HORA_FIN_TAR) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN 60 ELSE 60  * -1 END \n\t\tEND \t\t  \n\tEND\nELSE 0 END)  *  CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN (TABLA.HORAS_FALTAN_RAW / (NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0))) ELSE (TABLA.HORAS_FALTAN_RAW / (NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0))) * -1 END / 60.0 AS NUMERIC(7, 5)) AS HORAS_FALTAN_PONDERADAS_RAW,\n\n\n \n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_INCIDENCIA_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_INCIDENCIA_PONDERADAS_RAW\n\n\n,CASE \n\tWHEN CAL_REP.SCO_DT_DAY IS NULL THEN '000'\n\tELSE CAL_REP.SCO_ID_DAYCALEN_TY\nEND as ID_TIPO_FESTIVO\n\n\n\n FROM (\n\nSELECT * \nFROM ( \n             \n       SELECT \n            COUNT(*) OVER (PARTITION BY H.CCL_DT_FECHA ,PE.STD_ID_PERSON, CASE \n            WHEN SUM(CASE \n                    WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN (H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NULL AND H.ID_ORGANIZATION='0001') OR \n                                                (H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IS NULL AND H.ID_ORGANIZATION='NL') THEN -H.CCL_HORAS \n                    ELSE 0 \n            END) > 0 then 1\n            WHEN SUM(CASE \n                    WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS \n                    WHEN (H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS  IS NULL AND H.ID_ORGANIZATION='0001') OR \n                            (H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IS NULL AND H.ID_ORGANIZATION='NL') THEN -H.CCL_HORAS \n                    ELSE 0 \n            END) < 0 then -1\n            else 0 \n            end) AS AGRUPACION_SIN_TURNO,\n\n\t\t\tCASE WHEN H.ID_ORGANIZATION='0001' THEN COALESCE(GRI_TA.CCL_ID_GR_ABS ,-1) \n               WHEN H.ID_ORGANIZATION='NL' THEN COALESCE(CAR_VAL.CCL_ID_CARACTERISTICA,-1) END AS ID_GRUPO_INCIDENCIA\n\n             , SUM(CASE WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN (H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS  IS NULL AND H.ID_ORGANIZATION='0001') THEN -H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_PLANIFICADAS_RAW\n             , SUM(CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS  IS NOT NULL) \n                    OR (H.ID_ORGANIZATION='NL' and H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4)) THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_AUSENTISMO_RAW\n\n             ,CASE WHEN SUM(CASE WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NULL THEN -H.CCL_HORAS ELSE 0 END) > 0 then 1\n                    WHEN SUM(CASE WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NULL THEN -H.CCL_HORAS ELSE 0 END) < 0 then -1\n                    else 0 \n             end as CLASIFICACION_HORAS_PLANIFICADAS\n\n              , 'TA' + '#' + H.ID_ORGANIZATION+'#'+ CAST(COALESCE(CAR_ABS.CCL_ID_CARACTERISTICA,-1) AS varchar) \n\t\t\t\t+ '#' \n\t\t\t\t+ CASE H.ID_ORGANIZATION \n\t\t\t\t\t\tWHEN 'NL' THEN COALESCE(CAST(CAR_ABS2.CCL_ID_CARACTERISTICA AS varchar), 'N/A')\n\t\t\t\t\t\tELSE COALESCE(CAST(H.SCO_ID_INCIDENCE AS varchar),'N/A')\n\t\t\t\t\t\tEND\n\t\t\t\tAS ID_ORG_INCIDENCIA\n\n             , SUM(\n\t\t\t\tCASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA IS NOT NULL)  \n\t\t\t\t\t\t\tOR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4,-1,13))\n\t\t\t\tTHEN H.CCL_HORAS\n\t\t\t\tELSE 0 END\n\t\t\t ) AS HORAS_INCIDENCIA_AUSENCIA_RAW\n\n             , H.ID_ORGANIZATION\n             , CASE WHEN CCL_CK_ESCENARIO = 2 THEN H.CCL_ID_TASK ELSE NULL END AS ID_TAREA\n             ,CCL_CK_ESCENARIO\n             ,  H.GLB_ID_TERMINAL AS ID_TERMINAL\n             , TERMINALES.GLB_ID_ZONA AS ID_ZONA\n             ,  CASE WHEN CCL_CK_ESCENARIO = 2 THEN CAST( H.CCL_ID_TASK AS VARCHAR) ELSE NULL END + '#' + H.ID_ORGANIZATION AS ID_TAREA_ORGANIZATION\n             , H.CCL_DT_FECHA AS FECHA\n        , DATEDIFF(MM, PR.SSP_FEC_ANTIGUEDAD, H.CCL_DT_FECHA) AS ANTIGUEDAD\n        , DATEDIFF(MM, PE.STD_DT_BIRTH, H.CCL_DT_FECHA)/12 AS EDAD\n        , CASE WHEN PE.STD_ID_GENDER IN ('0','1') THEN 'H' ELSE 'M' END GENERO\n        , CASE WHEN CZ.CCL_TIEMPO_PARCIAL = 0 THEN 1 ELSE 2 END ID_TIPO_JORNADA\n        , CASE WHEN CZ.SSP_NO_DEFINIDO = 'S' THEN 1 ELSE 2 END AS ID_TIPO_CONTRATO\n        , A.CCL_ID_AR_ALM AS ID_ALMACEN \n             , H.ID_ORGANIZATION + '#'+A.CCL_ID_AR_ALM AS ID_ORG_ALM\n             , hceco.CCL_COD_DIV_SECC AS DIVISION_SECCION         \n        , pos.SCO_ID_WORK_LOC AS ID_LUGAR_DE_TRABAJO\n             , pos.SCO_ID_JOB_CODE as ID_PUESTO\n             , CONCAT(pos.SCO_ID_JOB_CODE, '#', PR.STD_ID_HR_TYPE) AS ID_PUESTO_HR_TYPE\n        , CASE WHEN REPLACE(PR.STD_ID_HR_TYPE,'.','') IN ('02','06') AND hrole.CCL_ID_CAMPO='EMPR_FUNC2' THEN hrole.CCL_CADENA \n                    ELSE CASE WHEN REPLACE(PR.STD_ID_HR_TYPE,'.','') IN ('02','06') THEN cast(SUBSTRING(hrole.CCL_CADENA,3,3) as int) \n                           ELSE\n                                  CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) =9 AND REPLACE(hceco.CCL_DIVISION,'.','') =13 AND REPLACE(hceco.CCL_SECCION,'.','')=18 THEN 37\n                                  ELSE (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) \n                           END \n                    END \n             END AS ID_EMPRESA\n        , PR.STD_ID_EXTERN_ORG AS ID_EMPRESA_EXTERNA\n             , PE.STD_ID_PERSON + '#' +  CAST(CAST(H.CCL_DT_FECHA AS DATE) AS VARCHAR) AS ID_PERSONA_FECHA\n             , PE.STD_ID_PERSON AS ID_PERSONA\n             , PR.CCL_ID_PERSON AS ID_LOCAL\n             , cast(PE.STD_ID_PERSON as varchar) +'#' +cast(PR.CCL_ID_PERSON as varchar) as ID_PERSONA_LOCAL\n        , T.SCO_ID_TEAM AS ID_EQUIPO\n\n        , CASE WHEN H.ID_ORGANIZATION='0001' THEN COALESCE(H.SCO_ID_INCIDENCE,'N/A')\n                    WHEN H.ID_ORGANIZATION='NL' THEN COALESCE(cast(CAR_ABS2.CCL_ID_CARACTERISTICA as varchar),'N/A') END AS ID_INCIDENCIA\n        , ABS_TA.CCL_ID_ABSENCE AS ID_AUSENCIA\n        , 'TA' + '#' + H.ID_ORGANIZATION+'#'+cast(ABS_TA.CCL_ID_ABSENCE as varchar) AS ID_ORG_AUSENCIA\n\t\t\t  \n             , SUM(CASE WHEN H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_PRESENCIA_RAW   \n             , SUM(CASE WHEN H.CCL_TIPO='T' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_TEORICAS_RAW   \n             , SUM(CASE WHEN (GETDATE() >= H.CCL_DT_FECHA AND H.CCL_ID_TASK='66' AND H.CCL_TIPO='R') THEN H.CCL_HORAS \n                    WHEN (GETDATE() < H.CCL_DT_FECHA AND H.CCL_TIPO='D') THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_DESCANSO_RAW   \n             , SUM(CASE    WHEN (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='D') THEN H.CCL_HORAS \n                    ELSE 0  \n             END) AS HORAS_DESCANSO_PLANIFICADAS_NL \n\n             , SUM(CASE WHEN (H.ID_ORGANIZATION='NL' AND GETDATE() >= H.CCL_DT_FECHA AND H.CCL_ID_TASK IN ('66','112') AND H.CCL_TIPO='R') THEN H.CCL_HORAS  \n                                  ELSE 0  \n                    END) AS HORAS_DESCANSO_RAW_NL \n\n             , SUM(CASE WHEN H.CCL_TIPO='R' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_REALES_RAW\n             , SUM(CASE WHEN H.CCL_TIPO='C' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_COMPLEMENTARIAS_RAW        \n             , SUM(CASE WHEN H.CCL_TIPO='E' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_EXTRA_RAW       \n             , SUM(CASE WHEN H.CCL_TIPO='R' THEN H.CCL_HORAS\n                    WHEN H.CCL_TIPO='C' OR H.CCL_TIPO='E' THEN -H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_ORDINARIAS_RAW    \n             , SUM(CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND H.SCO_ID_INCIDENCE IN('600','800','1','607','807','5','606','806','608','808','14')) \n             OR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA='2') THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_ABSENTISMO_RAW\n             ,EMPLEADO_DIA.HORAS_DESCANSO_PLANIFICADAS_NL AS HORAS_DESCANSO_PLAN_AUX\n             ,CASE WHEN EMPLEADO_DIA.HORAS_AUSENTISMO_RAW_AUX >= 4 THEN EMPLEADO_DIA.HORAS_AUSENTISMO_RAW_AUX - EMPLEADO_DIA.HORAS_DESCANSO_PLANIFICADAS_NL\n             ELSE EMPLEADO_DIA.HORAS_AUSENTISMO_RAW_AUX END AS HORAS_AUSENTISMO_RAW_AUX \n             , SUM(CASE WHEN H.CCL_TIPO='J' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_AJUSTADAS_RAW\n             , COALESCE(GL.SSP_PORC_GLEGAL,0) AS PORC_GUARDA_LEGAL \n             , COALESCE(JP.SSP_VALOR_COEF_T_P,100) AS PORC_TIEMPO_PARCIAL\n             , CAST(ROUND(COALESCE(GL.SSP_PORC_GLEGAL,0), 0, 1) AS INTEGER) AS TRAMO_PORC_REDUCCION\n             , CASE WHEN COALESCE(GL.SSP_PORC_GLEGAL,0)>0 THEN 1 ELSE 2 END AS ID_REDUCCION_JORNADA  \n             , TURNO.CCL_ID_TURNO\n             ,  EMPLEADO_DIA.FECHA_INICIO_REAL  AS FECHA_INICIO_REAL\n             ,  EMPLEADO_DIA.HORA_INICIO_REAL AS HORA_INICIO_REAL\n             , CASE WHEN SUM(EMPLEADO_DIA.HORAS_PLANIFICADAS_RAW) = 0 THEN NULL ELSE EMPLEADO_DIA.FECHA_INICIO_TURNO END AS FECHA_INICIO_TURNO\n             , CASE WHEN SUM(EMPLEADO_DIA.HORAS_PLANIFICADAS_RAW)= 0 THEN NULL ELSE EMPLEADO_DIA.HORA_INICIO_TURNO END AS HORA_INICIO_TURNO\n             , CASE WHEN SUM(EMPLEADO_DIA.HORAS_PLANIFICADAS_RAW)= 0 THEN NULL ELSE EMPLEADO_DIA.FECHA_FIN_TURNO END AS FECHA_FIN_TURNO\n             , CASE WHEN SUM(EMPLEADO_DIA.HORAS_PLANIFICADAS_RAW) = 0 THEN NULL ELSE EMPLEADO_DIA.HORA_FIN_TURNO END AS HORA_FIN_TURNO\n             , EMPLEADO_DIA.FECHA_FIN_REAL \n             , EMPLEADO_DIA.HORA_FIN_REAL\n\t\t\t , H.CCL_HORA_INICIO as HORA_INICIO_TAR\n\t\t\t , H.CCL_HORA_FIN as HORA_FIN_TAR\n             , SUM(CASE WHEN H.SCO_ID_INCIDENCE IS NOT NULL AND H.CCL_TIPO = 'A' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_INCIDENCIA_RAW\n             , cate.SSP_ID_CATEGORIA AS ID_CATEGORIA \n             , CAST(HTTH.CCL_ID_TP_HORA AS VARCHAR) +'#'+ CAST(HTTH.CCL_HOR_TM_PARC AS VARCHAR) AS ID_HORAS_CONTRATADAS \n             , SUM(CASE WHEN H.CCL_TIPO='V' THEN H.CCL_HORAS ELSE 0 END) AS HORAS_VACACIONES_RAW \n             , SUM(CASE WHEN H.CCL_TIPO='F' THEN H.CCL_HORAS ELSE 0 END) AS HORAS_FALTAN_RAW\n             , TUI.SCO_ID_REF_MOD AS MOD_REF_INDIVIDUAL      \n             , EQ.SCO_ID_TEAM AS ID_EQUIPO_PER \n             , EQ.SCO_ID_TEAM_ROLE AS ID_ROL_EQUIPO    \n             , TUT.CCL_ID_MOD_REF AS MOD_REF_EQUIPO\n             , TPT.IDDimensionTipoTurno AS IdInternalTipoTurno\n             , PR.STD_ID_HR_TYPE AS ID_TIPO_PERSONA\n\t\t\t , CASE WHEN COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) IS NULL OR  COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT) IS NULL THEN '-1'\n\t\t\t\tELSE COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) + '#' + \n                COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT) END AS ID_EQ_ORG                                                                                                                                      \n             , W.STD_ID_WORK_UNIT AS ID_UNIDAD_ORGANIZATIVA \n             , COALESCE(NIVEL_EST.ID_DIP_LEVEL,0) as ID_NIVEL_ESTUDIOS \n             , COALESCE(TUI.SCO_ID_REF_MOD ,TUT.CCL_ID_MOD_REF) AS ID_MODELO_REFERENCIA\n             , unineg.CCL_ID_UNIDAD_NEG\n\t\t\t , C.CCL_ID_CARACTERISTICA AS ID_AGRUPACION_OPERATIVA\n       FROM #GA_RESUMEN as H WITH (NOLOCK) \n \n       INNER JOIN  #HR_PERIOD PR WITH(NOLOCK)\n            ON PR.STD_ID_HR = H.SCO_ID_HR COLLATE Latin1_General_CS_AS   \n            AND PR.STD_OR_HR_PERIOD = H.SCO_OR_HR_PER\n            AND PR.ID_ORGANIZATION = H.ID_ORGANIZATION\n            AND PR.STD_DT_START <=H.CCL_DT_FECHA \n            AND PR.STD_DT_END >= H.CCL_DT_FECHA \n\t     AND H.STD_ID_LEG_ENT IN ('14','23','26','32','37','41','43','61','99','189','398','506','12','20','64','68','330','357')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \n\t\t\n\n\t\t\t     -- and PR.CCL_ID_PERSON = '65687' --spb\n\n\t\t\t\t\t\t\t  \n\t\t\t\t  \n       INNER JOIN M4SCO_H_HR_POS AS hrpos WITH (NOLOCK)\n             ON PR.ID_ORGANIZATION = hrpos.ID_ORGANIZATION \n                    AND PR.STD_ID_HR =  hrpos.SCO_ID_HR \n                    AND PR.STD_OR_HR_PERIOD = hrpos.SCO_OR_HR_ROLE\n                    AND hrpos.SCO_DT_START <=H.CCL_DT_FECHA \n                    AND  hrpos.SCO_DT_END >= H.CCL_DT_FECHA  \n  \n       INNER JOIN M4SCO_POSITION AS pos WITH (NOLOCK)\n             ON hrpos.SCO_ID_POSITION =  pos.SCO_ID_POSITION \n                    AND pos.SCO_DT_START <=H.CCL_DT_FECHA \n                    AND pos.SCO_DT_END >= H.CCL_DT_FECHA\n\n       INNER JOIN M4CCL_H_OR_UNI_NEG AS unineg WITH (NOLOCK)              \n\t\t   ON unineg.SCO_ID_POSITION =pos.SCO_ID_POSITION            \n\t\t   AND H.CCL_DT_FECHA BETWEEN unineg.CCL_DT_START AND unineg.CCL_DT_END  \n  \n       INNER JOIN STD_PERSON PE WITH (NOLOCK)   \n             ON H.SCO_ID_HR COLLATE Latin1_General_CS_AS =PE.STD_ID_PERSON\n  \n       INNER JOIN M4SCO_H_HR_LEGENT legalEntityHR  WITH (NOLOCK)\n            ON legalEntityHR.STD_ID_HR = PR.STD_ID_HR  \n            AND legalEntityHR.STD_OR_HR_PERIOD = PR.STD_OR_HR_PERIOD  \n            AND legalEntityHR.ID_ORGANIZATION = PR.ID_ORGANIZATION\n            AND legalEntityHR.DT_START <= H.CCL_DT_FECHA\n            AND legalEntityHR.DT_END >= H.CCL_DT_FECHA\n  \n       INNER JOIN M4SSP_H_CENT_COS ceco  WITH (NOLOCK)\n            ON PR.ID_ORGANIZATION = ceco.ID_ORGANIZATION  \n            AND PR.STD_ID_HR = ceco.SCO_ID_HR  \n            AND PR.STD_OR_HR_PERIOD  = ceco.SCO_OR_HR_ROLE\n            AND ceco.SSP_FEC_INICIO <= H.CCL_DT_FECHA\n            AND ceco.SSP_FEC_FIN >= H.CCL_DT_FECHA\n\n       INNER JOIN M4SSP_H_CONTRATOS CO WITH (NOLOCK)  \n             ON CO.ID_ORGANIZATION=H.ID_ORGANIZATION COLLATE Latin1_General_CS_AS \n                    AND CO.SSP_ID_HR=H.SCO_ID_HR COLLATE Latin1_General_CS_AS \n            AND CO.SSP_OR_HR_PERIOD=H.SCO_OR_HR_PER   \n                    AND CO.SSP_FEC_INI_CONTRA<=H.CCL_DT_FECHA \n            AND CO.SSP_FEC_FIN_CONTRA >= H.CCL_DT_FECHA  \n                    \n       INNER JOIN M4CCL_H_CENT_COS hceco  WITH (NOLOCK)\n             ON hceco.ID_ORGANIZATION  =PR.ID_ORGANIZATION \n            AND hceco.SCO_ID_HR  =PR.STD_ID_HR\n            AND  PR.STD_OR_HR_PERIOD  = hceco.SCO_OR_HR_ROLE  \n            AND hceco.SSP_FEC_INICIO =ceco.SSP_FEC_INICIO\n             \n       INNER JOIN STD_WORK_UNIT AS W WITH (NOLOCK) \n             ON W.STD_ID_WORK_UNIT = pos.SCO_ID_WORK_UNIT\n   \n       INNER JOIN M4SSP_CONTRATO_INT CZ WITH (NOLOCK)  \n        ON CZ.SSP_ID_CONT_INTERN=CO.SSP_ID_CONT_INTERN         \n        \n       INNER JOIN M4SCO_TEAMS T WITH (NOLOCK)\n        ON T.ID_ORGANIZATION = H.ID_ORGANIZATION COLLATE Latin1_General_CS_AS \n                    AND T.SCO_ID_TEAM = H.SCO_ID_TEAM COLLATE Latin1_General_CS_AS \n\n       LEFT JOIN @empresas AS LEGENT \n        ON LEGENT.ID_EMPRESA = H.STD_ID_LEG_ENT\n    \n       LEFT JOIN M4CCL_X_GA_AR_ALM A WITH (NOLOCK)   \n             ON A.ID_ORGANIZATION = H.ID_ORGANIZATION COLLATE Latin1_General_CS_AS \n                    AND A.CCL_ID_AR_ALM = H.CCL_ID_AR_ALM COLLATE Latin1_General_CS_AS \n\n       LEFT JOIN M4CCL_TA_INFORMES_ABS RGI_TA WITH (NOLOCK) \n             ON RGI_TA.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n             AND CAST(RGI_TA.CCL_ID_ABSENCE AS NVARCHAR) = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n            AND RGI_TA.CCL_ID_INFORME = 1 \n\n       LEFT JOIN M4CCL_GA_GR_INF_ABS GRI_TA WITH (NOLOCK)\n             ON GRI_TA.ID_ORGANIZATION = RGI_TA.ID_ORGANIZATION\n                    AND GRI_TA.CCL_ID_GR_ABS = RGI_TA.CCL_ID_GR_ABS\n\n\t\tLEFT JOIN M4CCL_GA_INFORMES_ABS RGI_GA WITH (NOLOCK) \n             ON RGI_GA.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n             AND CAST(RGI_GA.SCO_ID_INCIDENCE AS NVARCHAR) = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n             AND RGI_GA.CCL_ID_INFORME = 1 \n\n       LEFT JOIN M4CCL_GA_INFORMES_ABS RGI2 WITH (NOLOCK) \n             ON RGI2.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n                    AND RGI2.SCO_ID_INCIDENCE = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n            AND RGI2.CCL_ID_INFORME in (28)  \n\n       LEFT JOIN M4CCL_GA_GR_INF_ABS GRI2 WITH (NOLOCK)\n             ON GRI2.ID_ORGANIZATION = RGI2.ID_ORGANIZATION\n                    AND GRI2.CCL_ID_GR_ABS = RGI2.CCL_ID_GR_ABS                                                                    \n\n       LEFT JOIN M4CCL_ABSENCES_TA ABS_TA With (Nolock)\n             ON cast(ABS_TA.CCL_ID_ABSENCE as varchar) = H.SCO_ID_INCIDENCE\n                    AND  H.ID_ORGANIZATION = ABS_TA.ID_ORGANIZATION \n                    AND  H.ID_ORGANIZATION IN ('NL', '0001')\n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS With (Nolock)\n             ON ABS_TA.ID_ORGANIZATION = CAR_ABS.ID_ORGANIZATION\n                    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS.CCL_ID_ABSENCE\n                    AND  H.ID_ORGANIZATION= ABS_TA.ID_ORGANIZATION\n                    AND ABS_TA.ID_ORGANIZATION IN ('NL', '0001')\n                    AND CAR_ABS.CCL_ID_TP_CARACTERISTICA='INC' \n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_VALOR CAR_VAL With (Nolock)\n             ON CAR_ABS.CCL_ID_TP_CARACTERISTICA = CAR_VAL.CCL_ID_TP_CARACTERISTICA\n                    AND CAR_ABS.CCL_ID_CARACTERISTICA = CAR_VAL.CCL_ID_CARACTERISTICA\n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS2 With (Nolock)\n             ON ABS_TA.ID_ORGANIZATION = CAR_ABS2.ID_ORGANIZATION\n                    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS2.CCL_ID_ABSENCE\n                    AND  H.ID_ORGANIZATION= ABS_TA.ID_ORGANIZATION\n                    AND ABS_TA.ID_ORGANIZATION='NL' \n                    AND CAR_ABS2.CCL_ID_TP_CARACTERISTICA='CORP' \n\n       LEFT JOIN M4CCL_H_GA_HOR_TURNOS TURNO WITH (NOLOCK) \n             ON H.ID_ORGANIZATION=TURNO.ID_ORGANIZATION \n                    and  H.STD_ID_LEG_ENT=TURNO.STD_ID_LEG_ENT\n                    AND 1 = CASE WHEN CAST(TURNO.CCL_HORA_INICIO AS TIME) > CAST(TURNO.CCL_HORA_FIN AS TIME)\n                           THEN CASE WHEN (CAST(H.CCL_HORA_INICIO_TUR AS TIME) BETWEEN \n                                  CASE WHEN TURNO.CCL_OPERACION_HI = '>' \n                                        THEN CAST(DATEADD(ss,1,TURNO.CCL_HORA_INICIO) AS TIME)\n                                        ELSE CAST(TURNO.CCL_HORA_INICIO AS TIME) \n                                  END AND CAST('23:59:59' AS TIME)\n                                  OR CAST(H.CCL_HORA_INICIO_TUR AS TIME) BETWEEN CAST('00:00:00' AS TIME) \n                                  AND CASE WHEN TURNO.CCL_OPERACION_HF = '<'\n                                        THEN CAST(DATEADD(ss,-1,TURNO.CCL_HORA_FIN) AS TIME) \n                                        ELSE CAST(TURNO.CCL_HORA_FIN AS TIME)\n                                  END) THEN 1\n                                  ELSE 0\n                           END \n                           ELSE CASE WHEN CAST(H.CCL_HORA_INICIO_TUR AS TIME) BETWEEN \n                                  CASE WHEN TURNO.CCL_OPERACION_HI = '>' \n                                        THEN CAST(DATEADD(ss,1,TURNO.CCL_HORA_INICIO) AS TIME)\n                                        ELSE CAST(TURNO.CCL_HORA_INICIO AS TIME) \n                                  END \n                                  AND CASE WHEN TURNO.CCL_OPERACION_HF = '<'\n                                        THEN CAST(DATEADD(ss,-1,TURNO.CCL_HORA_FIN) AS TIME) \n                                        ELSE CAST(TURNO.CCL_HORA_FIN AS TIME)\n                                  END\n                                  THEN 1\n                                  ELSE 0\n                           END \n                    END\n                    \n       LEFT JOIN M4SSP_H_PORC_GLEGA GL WITH (NOLOCK) \n             ON GL.ID_ORGANIZATION=PR.ID_ORGANIZATION \n                    AND GL.STD_ID_HR=PR.STD_ID_HR \n                    AND GL.STD_OR_HR_PERIOD=PR.STD_OR_HR_PERIOD \n                    AND GL.SSP_DT_START<=GETDATE() \n                    AND GL.SSP_DT_END>=GETDATE() \n \n       LEFT JOIN M4SSP_H_PORC_JORN JP WITH (NOLOCK) \n             ON JP.ID_ORGANIZATION=PR.ID_ORGANIZATION \n                    AND JP.SSP_ID_HR=PR.STD_ID_HR \n                    AND JP.SSP_OR_HR_PERIOD=PR.STD_OR_HR_PERIOD \n                    AND JP.SSP_FEC_INI_CONTRA=CO.SSP_FEC_INI_CONTRA \n                    AND JP.SSP_FEC_INI_JORN_P<=GETDATE() AND JP.SSP_FEC_FIN_JORN_P>=GETDATE() \n \n       LEFT JOIN M4SSP_H_CATEGORIA cate WITH (NOLOCK)  \n             ON cate.ID_ORGANIZATION = PR.ID_ORGANIZATION \n                    AND cate.SCO_ID_HR = PR.STD_ID_HR\n                    AND cate.SCO_OR_HR_ROLE = PR.STD_OR_HR_PERIOD\n                    AND cate.SSP_FEC_INICIO <= H.CCL_DT_FECHA\n                    AND cate.SSP_FEC_FIN >= H.CCL_DT_FECHA                                                                  \n \n       LEFT JOIN M4CCL_H_HOR_TM_PAR AS HTTH WITH (NOLOCK) \n             ON HTTH.ID_ORGANIZATION = PR.ID_ORGANIZATION \n                    AND HTTH.SCO_ID_HR = PR.STD_ID_HR \n                    AND HTTH.SCO_OR_HR_ROLE = PR.STD_OR_HR_PERIOD\n                    AND HTTH.DT_START <= H.CCL_DT_FECHA\n                    AND HTTH.DT_END >= H.CCL_DT_FECHA                                                               \n\n       LEFT JOIN M4GLB_HISTORICOS_ROLE AS hrole WITH (NOLOCK)\n             ON hrole.ID_ORGANIZATION = PR.ID_ORGANIZATION\n                    AND hrole.SCO_ID_HR = PR.STD_ID_HR  \n                    AND hrole.SCO_OR_HR_ROLE = PR.STD_OR_HR_PERIOD \n                    AND hrole.DT_START <= H.CCL_DT_FECHA\n                    AND hrole.DT_END >= H.CCL_DT_FECHA\n                    AND hrole.CCL_ID_CAMPO IN ( 'EMPR_FUNC', 'EMPR_FUNC2') \n  \n       LEFT JOIN M4SCO_HR_THEOR_TIM TUI WITH (NOLOCK) \n             ON TUI.ID_ORGANIZATION=PR.ID_ORGANIZATION      \n                    AND TUI.STD_ID_HR=PR.STD_ID_HR    \n                    AND TUI.STD_OR_HR_PERIOD=PR.STD_OR_HR_PERIOD   \n                    AND TUI.DT_START <= H.CCL_DT_FECHA      \n                    AND TUI.DT_END >= H.CCL_DT_FECHA  \n  \n       LEFT JOIN M4SCO_H_HR_TEAMS EQ WITH (NOLOCK)    \n             ON EQ.ID_ORGANIZATION=PR.ID_ORGANIZATION \n                    AND EQ.SCO_ID_HR=PR.STD_ID_HR     \n                    AND EQ.SCO_OR_ROLE=PR.STD_OR_HR_PERIOD \n                    AND EQ.SCO_DT_START <= H.CCL_DT_FECHA   \n                    AND EQ.SCO_DT_END >= H.CCL_DT_FECHA\n                    And EQ.CCL_ID_LEG_ENT=legalEntityHR.STD_ID_LEG_ENT\n  \n       LEFT JOIN M4CCL_H_GT_MR_TEAM TUT WITH (NOLOCK)        \n             ON TUT.ID_ORGANIZATION=PR.ID_ORGANIZATION      \n                    AND TUT.CCL_ID_TEAM = EQ.SCO_ID_TEAM    \n                    AND TUT.CCL_DT_START <= H.CCL_DT_FECHA \n                    AND TUT.CCL_DT_END >= H.CCL_DT_FECHA \n                    And TUT.CCL_ID_LEG_ENT=legalEntityHR.STD_ID_LEG_ENT\n  \n       LEFT JOIN (\n             SELECT DENSE_RANK() OVER (ORDER BY SCO_ID_REF_MOD) AS IDDimensionTipoTurno, \n                    SCO_ID_REF_MOD,NM_REF_MODESP,Md.CCL_ID_TP_TURNO,MT.CCL_NM_TP_TURNESP\n   \n             FROM  M4SCO_REF_MOD Md  WITH (NOLOCK) \n             inner join M4CCL_X_GA_TP_TUR MT  WITH (NOLOCK)\n                    on Md.CCL_ID_TP_TURNO=MT.CCL_ID_TP_TURNO\n       ) AS TPT \n             on TPT.SCO_ID_REF_MOD=isnull(TUI.SCO_ID_REF_MOD ,TUT.CCL_ID_MOD_REF)\n  \n       LEFT JOIN M4GLB_H_HR_TEAMS_ORG EXCEP_EMPL WITH(NOLOCK)\n             ON EXCEP_EMPL.ID_ORGANIZATION = PR.ID_ORGANIZATION\n                    AND EXCEP_EMPL.SCO_ID_HR = PR.STD_ID_HR  \n                    AND EXCEP_EMPL.SCO_OR_ROLE = PR.STD_OR_HR_PERIOD\n                    AND EXCEP_EMPL.SCO_DT_START <= H.CCL_DT_FECHA    \n                    AND EXCEP_EMPL.SCO_DT_END >= H.CCL_DT_FECHA  \n\t\t\t\t\t\n       LEFT JOIN M4CCL_H_GA_EM_EQUI AS EMPRESA_EQUIPO_AGOP WITH (NOLOCK)\n        ON EMPRESA_EQUIPO_AGOP.ID_ORGANIZATION = PR.ID_ORGANIZATION\n        AND EMPRESA_EQUIPO_AGOP.CCL_ID_LEG_ENT = COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT)                                                                                                                      \n        AND  EQ.SCO_ID_TEAM = EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM\n        AND EMPRESA_EQUIPO_AGOP.CCL_DT_START <= H.CCL_DT_FECHA    \n        AND EMPRESA_EQUIPO_AGOP.CCL_DT_END >= H.CCL_DT_FECHA \n \n       LEFT JOIN #NIVEL_ESTUDIOS as NIVEL_EST WITH (NOLOCK)         \n             ON NIVEL_EST.STD_ID_HR = PR.STD_ID_HR          \n                    AND NIVEL_EST.FECHA=H.CCL_DT_FECHA             \n                    AND NIVEL_EST.NUMERO=1     \n\n       LEFT JOIN #EMPLEADO_DIA AS EMPLEADO_DIA\n       ON EMPLEADO_DIA.CCL_DT_FECHA = H.CCL_DT_FECHA\n       AND EMPLEADO_DIA.SCO_ID_HR = H.SCO_ID_HR\n\n       LEFT JOIN M4GLB_H_GA_TERMINAL_ZONA AS TERMINALES WITH(NOLOCK)\n       ON TERMINALES.GLB_ID_TERMINAL =  H.GLB_ID_TERMINAL\n       AND TERMINALES.ID_ORGANIZATION=H.ID_ORGANIZATION      \n       LEFT JOIN M4CCL_X_GA_CONEX AS CONEX WITH(NOLOCK)\n       ON CONEX.CCL_ID_LEG_ENT = H.STD_ID_LEG_ENT\n       AND CONEX.ID_ORGANIZATION = H.ID_ORGANIZATION  \n\t\t\n\t\tLEFT JOIN M4CCL_TASKS_L_CARACT C\n\t\tON H.ID_ORGANIZATION = C.ID_ORGANIZATION \n\t\tAND H.STD_ID_LEG_ENT = C.CCL_ID_LEG_ENT \n\t\tAND pos.SCO_ID_WORK_LOC = C.CCL_ID_WL \n\t\tAND CASE WHEN CCL_CK_ESCENARIO = 2 THEN H.CCL_ID_TASK ELSE NULL END = C.CCL_ID_TASK \n\t\tAND H.CCL_ID_AR_ALM = C.CCL_ID_AREA \n\t\tAND TERMINALES.GLB_ID_ZONA = C.CCL_ID_ZONA \n\t\tAND C.CCL_ID_TP_CARACTERISTICA = 'AO'\n\t\t\n       WHERE PR.ID_ORGANIZATION IN ('NL','0001') AND\n             (PR.STD_ID_HR_TYPE='01' OR PR.STD_ID_HR_TYPE='06' OR PR.STD_ID_HR_TYPE='02') AND  \n             H.CCL_TIPO IN ('P','T','R','C','E','A','J', 'F','V','D') and \n             H.CCL_DT_FECHA>=@FechaIni and H.CCL_DT_FECHA<@FechaFin \n             and (CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))=0 THEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))\n                    ELSE CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))<>0 AND REPLACE(PR.STD_ID_HR_TYPE,'.','') IN ('02','06') THEN cast(SUBSTRING(hrole.CCL_CADENA,3,3) as int) \n                           ELSE\n                                  CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) =9 AND REPLACE(hceco.CCL_DIVISION,'.','') =13 AND REPLACE(hceco.CCL_SECCION,'.','') = 18 THEN 37\n                                  ELSE (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) \n                           END \n                    END\n             END) IN ('14','23','26','32','37','41','43','61','99','189','398','506','12','20','64','68','330','357','0')\n\n       GROUP BY H.ID_ORGANIZATION \n             , H.CCL_DT_FECHA\n             , H.CCL_ID_TASK\n             , CAST( H.CCL_ID_TASK AS VARCHAR) +'#' + H.ID_ORGANIZATION \n             ,  H.GLB_ID_TERMINAL\n             , TERMINALES.GLB_ID_ZONA\n        , PR.SSP_FEC_ANTIGUEDAD\n        , PE.STD_DT_BIRTH\n        , PE.STD_ID_GENDER  \n        , CZ.CCL_TIEMPO_PARCIAL \n        , CZ.SSP_NO_DEFINIDO         \n        , A.CCL_ID_AR_ALM  \n             , hceco.CCL_COD_DIV_SECC          \n        , pos.SCO_ID_WORK_LOC\n             , pos.SCO_ID_JOB_CODE\n        , CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))=0 THEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))\n                    ELSE CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))<>0 AND REPLACE(PR.STD_ID_HR_TYPE,'.','') IN ('02','06') THEN cast(SUBSTRING(hrole.CCL_CADENA,3,3) as int) \n                           ELSE\n                                  CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) =9 AND REPLACE(hceco.CCL_DIVISION,'.','') =13 AND REPLACE(hceco.CCL_SECCION,'.','') = 18 THEN 37\n                                  ELSE (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) \n                           END \n            END\n             END\n        , PE.STD_ID_PERSON \n             , PR.CCL_ID_PERSON\n             , cast(PE.STD_ID_PERSON as varchar) +'#' +cast(PR.CCL_ID_PERSON as varchar)\n        , T.SCO_ID_TEAM       \n        , PR.STD_ID_EXTERN_ORG \n        , A.CCL_ID_AR_ALM \n        , T.SCO_ID_TEAM   \n        , GRI_TA.CCL_ID_GR_ABS\n         ,CASE WHEN H.ID_ORGANIZATION='0001' THEN COALESCE(GRI_TA.CCL_ID_GR_ABS,-1) \n               WHEN H.ID_ORGANIZATION='NL' THEN COALESCE(CAR_VAL.CCL_ID_CARACTERISTICA,-1) \n           END\n        , CASE WHEN H.ID_ORGANIZATION='0001' THEN COALESCE(H.SCO_ID_INCIDENCE,'N/A')\n               WHEN H.ID_ORGANIZATION='NL' THEN COALESCE(cast(CAR_ABS2.CCL_ID_CARACTERISTICA as varchar),'N/A') \n          END                                                                                                                              \n             , ABS_TA.CCL_ID_ABSENCE \n             , GL.SSP_PORC_GLEGAL  \n             , JP.SSP_VALOR_COEF_T_P\n             , TURNO.CCL_ID_TURNO\n             , H.CCL_HORA_INICIO\n             , H.CCL_HORA_INICIO_TUR\n             , H.CCL_HORA_FIN\n             , cate.SSP_ID_CATEGORIA\n             , HTTH.CCL_ID_TP_HORA \n             , HTTH.CCL_HOR_TM_PARC\n             , TUI.SCO_ID_REF_MOD   \n             , EQ.SCO_ID_TEAM\n             , EQ.SCO_ID_TEAM_ROLE       \n             , TUT.CCL_ID_MOD_REF \n             , TPT.IDDimensionTipoTurno \n             , PR.STD_ID_HR_TYPE\n             , W.STD_ID_WORK_UNIT\n             ,  CASE WHEN COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) IS NULL OR  COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT) IS NULL  THEN '-1'\n                    ELSE COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) + '#' + \n                     COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT) END\n             , EMPRESA_EQUIPO_AGOP.CCL_ID_LEG_ENT\n             , EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM\n             , NIVEL_EST.ID_DIP_LEVEL\n             , EMPLEADO_DIA.FECHA_INICIO_REAL\n             , EMPLEADO_DIA.HORA_INICIO_REAL\n             , EMPLEADO_DIA.FECHA_INICIO_TURNO\n             , EMPLEADO_DIA.HORA_INICIO_TURNO\n             , EMPLEADO_DIA.FECHA_FIN_TURNO\n             , EMPLEADO_DIA.HORA_FIN_TURNO \n             , EMPLEADO_DIA.FECHA_FIN_REAL\n             , EMPLEADO_DIA.HORA_FIN_REAL\n             , hrole.CCL_CADENA\n             , legalEntityHR.STD_ID_LEG_ENT\n             , hceco.CCL_SECCION\n             , hceco.CCL_DIVISION\n             , hrole.CCL_CADENA  \n             , hrole.CCL_ID_CAMPO\n             , EMPLEADO_DIA.HORAS_DESCANSO_PLANIFICADAS_NL\n             , EMPLEADO_DIA.HORAS_AUSENTISMO_RAW_AUX\n             , cast(SUBSTRING(hrole.CCL_CADENA,3,3) as int) \n             , unineg.CCL_ID_UNIDAD_NEG\n             , CCL_CK_ESCENARIO\n             , GRI2.CCL_ID_GR_ABS\n             , CAR_ABS2.CCL_ID_CARACTERISTICA\n             , CAR_ABS.CCL_ID_CARACTERISTICA\n             , CAR_VAL.CCL_ID_CARACTERISTICA\n             , H.SCO_ID_INCIDENCE\n\t\t\t, 'TA' + '#' + H.ID_ORGANIZATION+'#'+cast(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\t,C.CCL_ID_CARACTERISTICA\n) AS datos\nLEFT JOIN HORAS WITH (NOLOCK)\nON \n CASE WHEN  (datos.HORA_INICIO_TURNO IS NOT NULL AND datos.HORA_FIN_TURNO IS NOT NULL  ) OR -- TEORICAS O PRESENCIAS (Y AUSENCIAS)\n\t\t(datos.HORA_INICIO_REAL IS NOT NULL AND datos.HORA_FIN_REAL IS NOT NULL AND datos.HORAS_FALTAN_RAW = 0)  -- EXTRAS, AJUSTADAS, COMPLEMENTARIAS\n\t\t OR (datos.HORA_INICIO_TAR IS NOT NULL AND datos.HORA_FIN_TAR IS NOT NULL ) -- \n\t\tTHEN \n   CASE\n\t\tWHEN (DATEPART(HOUR, datos.HORA_INICIO_TAR) <= DATEPART(HOUR, datos.HORA_FIN_TAR)) AND ((HORAS.ID_HORA >= DATEPART(HOUR, datos.HORA_INICIO_TAR) AND  HORAS.ID_HORA < DATEPART(HOUR, datos.HORA_FIN_TAR)) OR (HORAS.ID_HORA = DATEPART(HOUR, datos.HORA_FIN_TAR) AND DATEPART(MINUTE, datos.HORA_FIN_TAR)>0)) THEN 1\n\t\tWHEN DATEPART(HOUR, datos.HORA_INICIO_TAR) > DATEPART(HOUR, datos.HORA_FIN_TAR) AND ((HORAS.ID_HORA - DATEPART(HOUR, datos.HORA_INICIO_TAR) >=0) OR (HORAS.ID_HORA - DATEPART(HOUR, datos.HORA_FIN_TAR)<0) OR (HORAS.ID_HORA - DATEPART(HOUR, datos.HORA_FIN_TAR)= 0 AND DATEPART(MINUTE, datos.HORA_FIN_TAR)>0)) THEN 1\t   \n   ELSE 0\n   END \n ELSE NULL \n\t\n END = 1\n   \n) TABLA\nLEFT JOIN M4CCL_H_GT_CAL_WLC AS WC WITH (NOLOCK)\n\tON TABLA.ID_ORGANIZATION = WC.ID_ORGANIZATION\n\tAND TABLA.ID_LUGAR_DE_TRABAJO = WC.CCL_ID_WORK_LOCAT\n\tAND TABLA.FECHA BETWEEN WC.CCL_DT_START AND WC.CCL_DT_END\nLEFT JOIN M4SCO_CALENDAR_REP AS CAL_REP WITH (NOLOCK)\n\tON WC.CCL_ID_CALENDAR = CAL_REP.SCO_ID_CALENDAR\n\tAND TABLA.FECHA = CAL_REP.SCO_DT_DAY\n\tAND CAL_REP.SCO_ID_DAYCALEN_TY <> 'AP06' AND CAL_REP.SCO_ID_DAYCALEN_TY <> 'AP07'\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t   \n\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t\t\t\nDROP TABLE  #CAL;\nDROP TABLE  #NIVEL_ESTUDIOS;\nDROP TABLE  #GA_RESUMEN;\nDROP TABLE  #HR_PERIOD;\nDROP TABLE  #EMPLEADO_DIA;",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @FechaIni DATE = '2022-09-27';\nDECLARE @FechaFin DATE = '2022-09-28';\n\n\n\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\nWITH cal AS (\n       SELECT CAST(@FechaIni AS DATE) AS FECHA        \n       \n       UNION ALL           \n       SELECT DATEADD(Day,1,FECHA)\n       FROM cal\n       WHERE DATEADD(Day,1,FECHA) < CAST(@FechaFin AS DATE)\n)            \n\nSELECT FECHA        \nINTO #CAL           \nFROM cal            \nOPTION (MAXRECURSION 0);          \nCREATE INDEX IDXFECHA ON #CAL(FECHA);\n\nWITH NIVEL_ESTUDIOS AS (          \n       SELECT c.FECHA,\n             HNIV.STD_ID_HR,            \n             CASE WHEN LEV.STD_ID_DIP_LEVEL in ('01','02') THEN 1         \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('03') THEN 2            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('11') THEN 3            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('04','09') THEN 4              \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('05','10') THEN 5              \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('06','07','08') THEN 6               \n                    ELSE 0              \n             END AS ID_DIP_LEVEL,              \n             ROW_NUMBER() OVER (PARTITION BY HNIV.STD_ID_HR, c.FECHA ORDER BY CASE WHEN LEV.STD_ID_DIP_LEVEL in ('01','02') THEN 1            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('03') THEN 2            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('11') THEN 3            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('04','09') THEN 4              \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('05','10') THEN 5              \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('06','07','08') THEN 6               \n                    ELSE 0              \n             END DESC, STD_DT_START DESC ) AS NUMERO        \n\n       FROM STD_HR_ACAD_BACKGR HNIV WITH (NOLOCK) \n\t   INNER JOIN #CAL c WITH(NOLOCK)\n             ON HNIV.STD_DT_START<=c.FECHA\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\n       LEFT JOIN STD_LU_EDU_DIPLOMA DIP WITH (NOLOCK)        \n             ON DIP.STD_ID_DIPLOMA=HNIV.STD_ID_DIPLOMA \n       LEFT JOIN STD_LU_EDU_DIP_LEV LEV WITH (NOLOCK)        \n             ON LEV.STD_ID_DIP_LEVEL=DIP.STD_ID_DIP_LEVEL  \n                   \n)             \n             \nSELECT FECHA\n       , STD_ID_HR\n       , ID_DIP_LEVEL\n       , NUMERO            \n       INTO #NIVEL_ESTUDIOS\nFROM NIVEL_ESTUDIOS WITH(NOLOCK)\nOPTION (MAXRECURSION 0);          \nCREATE INDEX IDXNEST ON #NIVEL_ESTUDIOS(FECHA, STD_ID_HR, ID_DIP_LEVEL, NUMERO);\n\n\nSELECT ID_ORGANIZATION, CCL_DT_FECHA, CCL_TIPO, STD_ID_LEG_ENT, SCO_ID_HR  , SCO_OR_HR_PER, CCL_ID_AR_ALM, SCO_ID_TEAM, SCO_ID_INCIDENCE, CCL_HORAS, CCL_HORA_INICIO, CCL_HORA_FIN, CCL_HORA_INICIO_TUR, CCL_ID_TASK, GLB_ID_TERMINAL\nINTO #GA_RESUMEN \nFROM M4CCL_GA_RESUMEN_RH AS RESUMEN_RH WITH (NOLOCK)  \nWHERE    RESUMEN_RH.CCL_DT_FECHA>=@FechaIni and RESUMEN_RH.CCL_DT_FECHA<@FechaFin and \nSTD_ID_LEG_ENT IN ('14','23','26','32','37','41','43','61','99','189','398','506','12','20','64','68','330','357') AND   RESUMEN_RH.CCL_TIPO IN ('P','T','R','C','E','A','J', 'F','V','D')  \n\t\t\t \nCREATE NONCLUSTERED INDEX  IDXM4CCL_GA_RESUMEN_RH ON #GA_RESUMEN(ID_ORGANIZATION, SCO_ID_HR, SCO_OR_HR_PER, CCL_DT_FECHA);\n\n\nSELECT STD_ID_HR, STD_OR_HR_PERIOD, ID_ORGANIZATION, STD_DT_START, STD_DT_END, SSP_FEC_ANTIGUEDAD, CCL_ID_PERSON, STD_ID_EXTERN_ORG, STD_ID_HR_TYPE\nINTO #HR_PERIOD\nFROM STD_HR_PERIOD AS HR_PERIOD WITH (NOLOCK)      \nWHERE \n\tHR_PERIOD.ID_ORGANIZATION IN ('NL','0001') AND\n             (HR_PERIOD.STD_ID_HR_TYPE='01' OR HR_PERIOD.STD_ID_HR_TYPE='06' OR HR_PERIOD.STD_ID_HR_TYPE='02')      \nCREATE NONCLUSTERED INDEX  IDXSTD_HR_PERIOD ON #HR_PERIOD(ID_ORGANIZATION, STD_ID_HR, STD_OR_HR_PERIOD);\n\n\nSELECT H.SCO_ID_HR, H.CCL_DT_FECHA,\n                    SUM(CASE WHEN (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='D') THEN H.CCL_HORAS \n                    ELSE 0  \n                    END) AS HORAS_DESCANSO_PLANIFICADAS_NL \n                    , \n                    SUM(\n                    CASE WHEN                           \n                           CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NOT NULL) \n                           OR (H.ID_ORGANIZATION='NL' and H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4))\n                           THEN H.CCL_HORAS\n                    ELSE 0 END \n             = \n             CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA IS NOT NULL)\n                    OR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4,-1,13))\n                    THEN H.CCL_HORAS\n                    ELSE 0  END              \n             THEN\n             CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NOT NULL) \n                    OR (H.ID_ORGANIZATION='NL' and H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4))\n                    THEN H.CCL_HORAS\n                    ELSE 0 \n             END \n             ELSE (\n             CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NOT NULL) \n                    OR (H.ID_ORGANIZATION='NL' and H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4))\n                    THEN H.CCL_HORAS\n                    ELSE 0 END \n                    +\n                    CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA IS NOT NULL)\n                    OR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4,-1,13))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n                    THEN H.CCL_HORAS\n                    ELSE 0 END\n                    )             \n             END\n\t\n             ) AS HORAS_AUSENTISMO_RAW_AUX\n\t\t\t \n             , SUM(CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA IS NOT NULL)  \n                    OR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4,-1,13))\n                    THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_INCIDENCIA_AUSENCIA_RAW_AUX\n                                                                                                                                                                                                                                             \n                    ,MIN(CASE WHEN CCL_TIPO='R' THEN CAST(CAST(H.CCL_HORA_INICIO AS DATE) AS nvarchar) ELSE NULL END) AS FECHA_INICIO_REAL\n                    , MIN(CASE WHEN CCL_TIPO='R' THEN CAST(CAST(H.CCL_HORA_INICIO AS TIME(0)) AS nvarchar) ELSE NULL END) AS HORA_INICIO_REAL\n                    , MIN(CAST(CAST(H.CCL_HORA_INICIO_TUR AS DATE) AS nvarchar)) AS FECHA_INICIO_TURNO\n                    , MIN(CAST(CAST(H.CCL_HORA_INICIO_TUR AS TIME(0)) AS nvarchar)) AS HORA_INICIO_TURNO\n                    , MAX(CAST(CAST(CASE WHEN H.CCL_TIPO in ('T','P') THEN H.CCL_HORA_FIN ELSE NULL END AS DATE) AS nvarchar)) AS FECHA_FIN_TURNO\n                    , MAX(CAST(CAST(CASE WHEN H.CCL_TIPO in ('T','P') THEN H.CCL_HORA_FIN ELSE NULL END AS TIME(0)) AS nvarchar)) AS HORA_FIN_TURNO \n                    , MAX(CASE WHEN CCL_TIPO ='R' THEN CAST(CAST(H.CCL_HORA_FIN AS DATE) AS nvarchar) ELSE NULL END )AS FECHA_FIN_REAL\n                    , cast(CAST(MAX(CASE WHEN CCL_TIPO = 'R' THEN H.CCL_HORA_FIN  ELSE NULL END) AS time(0)) AS NVARCHAR) AS HORA_FIN_REAL\n                    ,SUM(CASE WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN (H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NULL AND H.ID_ORGANIZATION='0001') THEN -H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_PLANIFICADAS_RAW  \nINTO #EMPLEADO_DIA\n       FROM  M4CCL_GA_RESUMEN_RH H  WITH (NOLOCK) \n       \n       LEFT JOIN @empresas AS LEGENT \n        ON LEGENT.ID_EMPRESA = H.STD_ID_LEG_ENT\t\t\t\t \n\n       LEFT JOIN M4CCL_TA_INFORMES_ABS RGI_TA WITH (NOLOCK) \n             ON RGI_TA.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n             AND CAST(RGI_TA.CCL_ID_ABSENCE AS NVARCHAR) = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n             AND RGI_TA.CCL_ID_INFORME=1   \t\t\t\t\t  \n             \n       LEFT JOIN M4CCL_GA_GR_INF_ABS GRI_TA WITH (NOLOCK)\n             ON GRI_TA.ID_ORGANIZATION = RGI_TA.ID_ORGANIZATION\n             AND GRI_TA.CCL_ID_GR_ABS = RGI_TA.CCL_ID_GR_ABS\n\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\n\t LEFT JOIN M4CCL_GA_INFORMES_ABS RGI_GA WITH (NOLOCK) \n             ON RGI_GA.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n             AND CAST(RGI_GA.SCO_ID_INCIDENCE AS NVARCHAR) = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n             AND RGI_GA.CCL_ID_INFORME=1  \t\t\t\t \n\n     \n\n       LEFT JOIN M4CCL_GA_INFORMES_ABS RGI2 WITH (NOLOCK) \n             ON RGI2.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n                    AND RGI2.SCO_ID_INCIDENCE = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n            AND RGI2.CCL_ID_INFORME in (28)  \n\n       LEFT JOIN M4CCL_GA_GR_INF_ABS GRI2 WITH(NOLOCK)\n             ON GRI2.ID_ORGANIZATION = RGI2.ID_ORGANIZATION\n                    AND GRI2.CCL_ID_GR_ABS = RGI2.CCL_ID_GR_ABS\t\n                    \n       LEFT JOIN M4CCL_ABSENCES_TA ABS_TA WITH(NOLOCK)\n             ON cast(ABS_TA.CCL_ID_ABSENCE as varchar) = H.SCO_ID_INCIDENCE\n                    AND  H.ID_ORGANIZATION = ABS_TA.ID_ORGANIZATION \n                    AND  H.ID_ORGANIZATION IN ('NL', '0001')\t\t\t\t\t\t\t\t\t   \n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS WITH(NOLOCK)\n             ON ABS_TA.ID_ORGANIZATION = CAR_ABS.ID_ORGANIZATION\n                    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS.CCL_ID_ABSENCE\n                    AND  H.ID_ORGANIZATION= ABS_TA.ID_ORGANIZATION\n                    AND CAR_ABS.CCL_ID_TP_CARACTERISTICA = 'INC' \n                    AND ABS_TA.ID_ORGANIZATION IN ('NL', '0001')                    \n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_VALOR CAR_VAL WITH(NOLOCK)\n             ON CAR_ABS.CCL_ID_TP_CARACTERISTICA = CAR_VAL.CCL_ID_TP_CARACTERISTICA\n                    AND CAR_ABS.CCL_ID_CARACTERISTICA = CAR_VAL.CCL_ID_CARACTERISTICA\n        WHERE CCL_DT_FECHA>=@FechaIni and H.CCL_DT_FECHA<@FechaFin\n        and H.ID_ORGANIZATION in ('NL','0001')\n        AND CCL_TIPO IN ('P','T','R','C','E','A','J', 'F','V','D')\n        GROUP BY  H.SCO_ID_HR, H.CCL_DT_FECHA\nCREATE NONCLUSTERED INDEX IDXEMPLEADO_DIA ON #EMPLEADO_DIA(SCO_ID_HR, CCL_DT_FECHA);\n\nWITH HORAS AS (SELECT 0 AS ID_HORA,'00:00' AS HORA UNION ALL SELECT 1, '01:00' UNION ALL SELECT 2, '02:00' UNION ALL SELECT 3, '03:00' UNION ALL SELECT 4, '04:00'\nUNION ALL SELECT 5, '05:00' UNION ALL SELECT 6, '06:00' UNION ALL SELECT 7, '07:00' UNION ALL SELECT 8, '08:00' UNION ALL SELECT 9, '09:00' UNION ALL SELECT 10, '10:00'\nUNION ALL SELECT 11, '11:00' UNION ALL SELECT 12, '12:00' UNION ALL SELECT 13, '13:00' UNION ALL SELECT 14, '14:00' UNION ALL SELECT 15, '15:00' UNION ALL\nSELECT 16, '16:00' UNION ALL SELECT 17, '17:00' UNION ALL SELECT 18, '18:00' UNION ALL SELECT 19, '19:00' UNION ALL SELECT 20, '20:00' UNION ALL SELECT 21, '21:00'\nUNION ALL SELECT 22, '22:00' UNION ALL SELECT 23, '23:00'\n)\n\t\t\nSELECT TABLA.*,  \nCASE\n\tWHEN (DATEPART(HOUR, TABLA.HORA_INICIO_TAR) <= DATEPART(HOUR, TABLA.HORA_FIN_TAR)) AND ((TABLA.ID_HORA >= DATEPART(HOUR, TABLA.HORA_INICIO_TAR) AND  TABLA.ID_HORA < DATEPART(HOUR, TABLA.HORA_FIN_TAR)) \n\t\t\tOR (TABLA.ID_HORA = DATEPART(HOUR, TABLA.HORA_FIN_TAR) AND DATEPART(MINUTE, TABLA.HORA_FIN_TAR)>0)) THEN  CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\tWHEN DATEPART(HOUR, TABLA.HORA_INICIO_TAR) > DATEPART(HOUR, TABLA.HORA_FIN_TAR) AND ((TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_INICIO_TAR) >=0) \n\t\tOR (TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_FIN_TAR)<0) OR (TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_FIN_TAR)= 0 AND DATEPART(MINUTE, TABLA.HORA_FIN_TAR)>0)) THEN \n\t\tCASE WHEN (CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime) >=  TABLA.HORA_INICIO_TAR AND \n\t\t\t\tCAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime) < CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', '23:59') AS datetime) \n\t\t\t\t\tOR DATEPART(HOUR, CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)) = DATEPART(HOUR, TABLA.HORA_INICIO_TAR)) \n\t\t\t\t\t\tTHEN CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\t\t\tELSE CAST(CONCAT(CAST(CAST(TABLA.HORA_FIN_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\t\tEND\nELSE ''\nEND as FECHA_HORA_DESGLOSE,\n\ncast (CASE\n\tWHEN (DATEPART(HOUR, TABLA.HORA_INICIO_TAR) <= DATEPART(HOUR, TABLA.HORA_FIN_TAR)) AND ((TABLA.ID_HORA >= DATEPART(HOUR, TABLA.HORA_INICIO_TAR) AND  TABLA.ID_HORA < DATEPART(HOUR, TABLA.HORA_FIN_TAR)) \n\t\t\tOR (TABLA.ID_HORA = DATEPART(HOUR, TABLA.HORA_FIN_TAR) AND DATEPART(MINUTE, TABLA.HORA_FIN_TAR)>0)) THEN  CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\tWHEN DATEPART(HOUR, TABLA.HORA_INICIO_TAR) > DATEPART(HOUR, TABLA.HORA_FIN_TAR) AND ((TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_INICIO_TAR) >=0) \n\t\tOR (TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_FIN_TAR)<0) OR (TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_FIN_TAR)= 0 AND DATEPART(MINUTE, TABLA.HORA_FIN_TAR)>0)) THEN \n\t\tCASE WHEN (CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime) >=  TABLA.HORA_INICIO_TAR AND \n\t\t\t\tCAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime) < CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', '23:59') AS datetime) \n\t\t\t\t\tOR DATEPART(HOUR, CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)) = DATEPART(HOUR, TABLA.HORA_INICIO_TAR)) \n\t\t\t\t\t\tTHEN CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\t\t\tELSE CAST(CONCAT(CAST(CAST(TABLA.HORA_FIN_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\t\tEND\nELSE ''\nEND AS DATE)  as FECHA_DESGLOSE,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_REALES_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) \n\n AS HORAS_REALES_PONDERADAS_RAW,\n\t\t\t\t\t\t\n\nCAST((CASE \n\tWHEN TABLA.HORAS_PRESENCIA_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_PRESENCIA_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_TEORICAS_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_TEORICAS_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_DESCANSO_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_DESCANSO_PONDERADAS_RAW,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_DESCANSO_PLANIFICADAS_NL > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_DESCANSO_PLANIFICADAS_NL_PONDERADAS,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_DESCANSO_RAW_NL > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_DESCANSO_RAW_NL_PONDERADAS,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_PLANIFICADAS_RAW <> 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE  (DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE (60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END  \n\t\t\tEND        \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) ELSE DATEPART(MINUTE , TABLA.HORA_FIN_TAR) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN 60 ELSE 60  * -1 END \n\t\tEND \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_PLANIFICADAS_PONDERADAS_RAW,\n\nCASE \n\tWHEN TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN\n\t\tID_PERSONA_FECHA\t\t  \nELSE null END AS PLANTILLA_PLANIFICADA_PONDERADAS_RAW,\n\nCASE \n\tWHEN TABLA.HORAS_VACACIONES_RAW > 0 THEN\n\t\tID_PERSONA_FECHA\t\t  \nELSE null END AS HORAS_VACACIONES_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_COMPLEMENTARIAS_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_COMPLEMENTARIAS_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_EXTRA_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) * (TABLA.HORAS_EXTRA_RAW /  NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0) ) AS HORAS_EXTRA_PONDERADAS_RAW,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_ORDINARIAS_RAW <> 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE  (DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE (60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END  \n\t\t\tEND        \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) ELSE DATEPART(MINUTE , TABLA.HORA_FIN_TAR) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN 60 ELSE 60  * -1 END \n\t\tEND \t\t  \n\tEND\nELSE 0 END) *  CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN (TABLA.HORAS_ORDINARIAS_RAW / (NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0))) ELSE (TABLA.HORAS_ORDINARIAS_RAW / (NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0))) * -1 END / 60.0 AS NUMERIC(7, 5)) AS HORAS_ORDINARIAS_PONDERADAS_RAW,\n\n\n \n\n\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_ABSENTISMO_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_ABSENTISMO_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_DESCANSO_PLAN_AUX > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_DESCANSO_PLAN_AUX_PONDERADAS,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW_AUX > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_AUSENTISMO_RAW_AUX_PONDERADAS,\n\n\n(CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW_AUX > 4.5 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  ID_PERSONA_FECHA\t\n\t\t\t  ELSE ID_PERSONA_FECHA\t END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN ID_PERSONA_FECHA\t\n\t\t\t  ELSE ID_PERSONA_FECHA END \t\t  \n\tEND\nELSE NULL END)  AS PLANTILLA_AUSENTISMO_PONDERADAS_RAW,\n\n(CASE WHEN CAST((CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW_AUX > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) > 0 and HORAS_AUSENTISMO_RAW > 0  THEN ID_PERSONA_FECHA ELSE NULL END) AS PLANTILLA_AUSENTISMO_DESGLOSE_PONDERADAS_RAW,\n\n(CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW_AUX > 4.5 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  ID_PERSONA_FECHA\t\n\t\t\t  ELSE ID_PERSONA_FECHA\t END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN ID_PERSONA_FECHA\t\n\t\t\t  ELSE ID_PERSONA_FECHA END \t\t  \n\tEND\nELSE NULL END)  AS PLANTILLA_AUSENTISMO_DIA_PONDERADAS_RAW,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_AUSENTISMO_RAW_PONDERADAS,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_INCIDENCIA_AUSENCIA_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_INCIDENCIA_AUSENCIA_PONDERADAS_RAW,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_AJUSTADAS_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_AJUSTADAS_PONDERADAS_RAW,\n\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_FALTAN_RAW <> 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE  (DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE (60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END  \n\t\t\tEND        \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) ELSE DATEPART(MINUTE , TABLA.HORA_FIN_TAR) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN 60 ELSE 60  * -1 END \n\t\tEND \t\t  \n\tEND\nELSE 0 END)  *  CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN (TABLA.HORAS_FALTAN_RAW / (NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0))) ELSE (TABLA.HORAS_FALTAN_RAW / (NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0))) * -1 END / 60.0 AS NUMERIC(7, 5)) AS HORAS_FALTAN_PONDERADAS_RAW,\n\n\n \n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_INCIDENCIA_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_INCIDENCIA_PONDERADAS_RAW\n\n\n,CASE \n\tWHEN CAL_REP.SCO_DT_DAY IS NULL THEN '000'\n\tELSE CAL_REP.SCO_ID_DAYCALEN_TY\nEND as ID_TIPO_FESTIVO\n\n\n\n FROM (\n\nSELECT * \nFROM ( \n             \n       SELECT \n            COUNT(*) OVER (PARTITION BY H.CCL_DT_FECHA ,PE.STD_ID_PERSON, CASE \n            WHEN SUM(CASE \n                    WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN (H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NULL AND H.ID_ORGANIZATION='0001') OR \n                                                (H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IS NULL AND H.ID_ORGANIZATION='NL') THEN -H.CCL_HORAS \n                    ELSE 0 \n            END) > 0 then 1\n            WHEN SUM(CASE \n                    WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS \n                    WHEN (H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS  IS NULL AND H.ID_ORGANIZATION='0001') OR \n                            (H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IS NULL AND H.ID_ORGANIZATION='NL') THEN -H.CCL_HORAS \n                    ELSE 0 \n            END) < 0 then -1\n            else 0 \n            end) AS AGRUPACION_SIN_TURNO,\n\n\t\t\tCASE WHEN H.ID_ORGANIZATION='0001' THEN COALESCE(GRI_TA.CCL_ID_GR_ABS ,-1) \n               WHEN H.ID_ORGANIZATION='NL' THEN COALESCE(CAR_VAL.CCL_ID_CARACTERISTICA,-1) END AS ID_GRUPO_INCIDENCIA\n\n             , SUM(CASE WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN (H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS  IS NULL AND H.ID_ORGANIZATION='0001') THEN -H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_PLANIFICADAS_RAW\n             , SUM(CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS  IS NOT NULL) \n                    OR (H.ID_ORGANIZATION='NL' and H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4)) THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_AUSENTISMO_RAW\n\n             ,CASE WHEN SUM(CASE WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NULL THEN -H.CCL_HORAS ELSE 0 END) > 0 then 1\n                    WHEN SUM(CASE WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NULL THEN -H.CCL_HORAS ELSE 0 END) < 0 then -1\n                    else 0 \n             end as CLASIFICACION_HORAS_PLANIFICADAS\n\n              , 'TA' + '#' + H.ID_ORGANIZATION+'#'+ CAST(COALESCE(CAR_ABS.CCL_ID_CARACTERISTICA,-1) AS varchar) \n\t\t\t\t+ '#' \n\t\t\t\t+ CASE H.ID_ORGANIZATION \n\t\t\t\t\t\tWHEN 'NL' THEN COALESCE(CAST(CAR_ABS2.CCL_ID_CARACTERISTICA AS varchar), 'N/A')\n\t\t\t\t\t\tELSE COALESCE(CAST(H.SCO_ID_INCIDENCE AS varchar),'N/A')\n\t\t\t\t\t\tEND\n\t\t\t\tAS ID_ORG_INCIDENCIA\n\n             , SUM(\n\t\t\t\tCASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA IS NOT NULL)  \n\t\t\t\t\t\t\tOR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4,-1,13))\n\t\t\t\tTHEN H.CCL_HORAS\n\t\t\t\tELSE 0 END\n\t\t\t ) AS HORAS_INCIDENCIA_AUSENCIA_RAW\n\n             , H.ID_ORGANIZATION\n             , CASE WHEN CCL_CK_ESCENARIO = 2 THEN H.CCL_ID_TASK ELSE NULL END AS ID_TAREA\n             ,CCL_CK_ESCENARIO\n             ,  H.GLB_ID_TERMINAL AS ID_TERMINAL\n             , TERMINALES.GLB_ID_ZONA AS ID_ZONA\n             ,  CASE WHEN CCL_CK_ESCENARIO = 2 THEN CAST( H.CCL_ID_TASK AS VARCHAR) ELSE NULL END + '#' + H.ID_ORGANIZATION AS ID_TAREA_ORGANIZATION\n             , H.CCL_DT_FECHA AS FECHA\n        , DATEDIFF(MM, PR.SSP_FEC_ANTIGUEDAD, H.CCL_DT_FECHA) AS ANTIGUEDAD\n        , DATEDIFF(MM, PE.STD_DT_BIRTH, H.CCL_DT_FECHA)/12 AS EDAD\n        , CASE WHEN PE.STD_ID_GENDER IN ('0','1') THEN 'H' ELSE 'M' END GENERO\n        , CASE WHEN CZ.CCL_TIEMPO_PARCIAL = 0 THEN 1 ELSE 2 END ID_TIPO_JORNADA\n        , CASE WHEN CZ.SSP_NO_DEFINIDO = 'S' THEN 1 ELSE 2 END AS ID_TIPO_CONTRATO\n        , A.CCL_ID_AR_ALM AS ID_ALMACEN \n             , H.ID_ORGANIZATION + '#'+A.CCL_ID_AR_ALM AS ID_ORG_ALM\n             , hceco.CCL_COD_DIV_SECC AS DIVISION_SECCION         \n        , pos.SCO_ID_WORK_LOC AS ID_LUGAR_DE_TRABAJO\n             , pos.SCO_ID_JOB_CODE as ID_PUESTO\n             , CONCAT(pos.SCO_ID_JOB_CODE, '#', PR.STD_ID_HR_TYPE) AS ID_PUESTO_HR_TYPE\n        , CASE WHEN REPLACE(PR.STD_ID_HR_TYPE,'.','') IN ('02','06') AND hrole.CCL_ID_CAMPO='EMPR_FUNC2' THEN hrole.CCL_CADENA \n                    ELSE CASE WHEN REPLACE(PR.STD_ID_HR_TYPE,'.','') IN ('02','06') THEN cast(SUBSTRING(hrole.CCL_CADENA,3,3) as int) \n                           ELSE\n                                  CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) =9 AND REPLACE(hceco.CCL_DIVISION,'.','') =13 AND REPLACE(hceco.CCL_SECCION,'.','')=18 THEN 37\n                                  ELSE (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) \n                           END \n                    END \n             END AS ID_EMPRESA\n        , PR.STD_ID_EXTERN_ORG AS ID_EMPRESA_EXTERNA\n             , PE.STD_ID_PERSON + '#' +  CAST(CAST(H.CCL_DT_FECHA AS DATE) AS VARCHAR) AS ID_PERSONA_FECHA\n             , PE.STD_ID_PERSON AS ID_PERSONA\n             , PR.CCL_ID_PERSON AS ID_LOCAL\n             , cast(PE.STD_ID_PERSON as varchar) +'#' +cast(PR.CCL_ID_PERSON as varchar) as ID_PERSONA_LOCAL\n        , T.SCO_ID_TEAM AS ID_EQUIPO\n\n        , CASE WHEN H.ID_ORGANIZATION='0001' THEN COALESCE(H.SCO_ID_INCIDENCE,'N/A')\n                    WHEN H.ID_ORGANIZATION='NL' THEN COALESCE(cast(CAR_ABS2.CCL_ID_CARACTERISTICA as varchar),'N/A') END AS ID_INCIDENCIA\n        , ABS_TA.CCL_ID_ABSENCE AS ID_AUSENCIA\n        , 'TA' + '#' + H.ID_ORGANIZATION+'#'+cast(ABS_TA.CCL_ID_ABSENCE as varchar) AS ID_ORG_AUSENCIA\n\t\t\t  \n             , SUM(CASE WHEN H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_PRESENCIA_RAW   \n             , SUM(CASE WHEN H.CCL_TIPO='T' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_TEORICAS_RAW   \n             , SUM(CASE WHEN (GETDATE() >= H.CCL_DT_FECHA AND H.CCL_ID_TASK='66' AND H.CCL_TIPO='R') THEN H.CCL_HORAS \n                    WHEN (GETDATE() < H.CCL_DT_FECHA AND H.CCL_TIPO='D') THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_DESCANSO_RAW   \n             , SUM(CASE    WHEN (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='D') THEN H.CCL_HORAS \n                    ELSE 0  \n             END) AS HORAS_DESCANSO_PLANIFICADAS_NL \n\n             , SUM(CASE WHEN (H.ID_ORGANIZATION='NL' AND GETDATE() >= H.CCL_DT_FECHA AND H.CCL_ID_TASK IN ('66','112') AND H.CCL_TIPO='R') THEN H.CCL_HORAS  \n                                  ELSE 0  \n                    END) AS HORAS_DESCANSO_RAW_NL \n\n             , SUM(CASE WHEN H.CCL_TIPO='R' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_REALES_RAW\n             , SUM(CASE WHEN H.CCL_TIPO='C' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_COMPLEMENTARIAS_RAW        \n             , SUM(CASE WHEN H.CCL_TIPO='E' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_EXTRA_RAW       \n             , SUM(CASE WHEN H.CCL_TIPO='R' THEN H.CCL_HORAS\n                    WHEN H.CCL_TIPO='C' OR H.CCL_TIPO='E' THEN -H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_ORDINARIAS_RAW    \n             , SUM(CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND H.SCO_ID_INCIDENCE IN('600','800','1','607','807','5','606','806','608','808','14')) \n             OR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA='2') THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_ABSENTISMO_RAW\n             ,EMPLEADO_DIA.HORAS_DESCANSO_PLANIFICADAS_NL AS HORAS_DESCANSO_PLAN_AUX\n             ,CASE WHEN EMPLEADO_DIA.HORAS_AUSENTISMO_RAW_AUX >= 4 THEN EMPLEADO_DIA.HORAS_AUSENTISMO_RAW_AUX - EMPLEADO_DIA.HORAS_DESCANSO_PLANIFICADAS_NL\n             ELSE EMPLEADO_DIA.HORAS_AUSENTISMO_RAW_AUX END AS HORAS_AUSENTISMO_RAW_AUX \n             , SUM(CASE WHEN H.CCL_TIPO='J' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_AJUSTADAS_RAW\n             , COALESCE(GL.SSP_PORC_GLEGAL,0) AS PORC_GUARDA_LEGAL \n             , COALESCE(JP.SSP_VALOR_COEF_T_P,100) AS PORC_TIEMPO_PARCIAL\n             , CAST(ROUND(COALESCE(GL.SSP_PORC_GLEGAL,0), 0, 1) AS INTEGER) AS TRAMO_PORC_REDUCCION\n             , CASE WHEN COALESCE(GL.SSP_PORC_GLEGAL,0)>0 THEN 1 ELSE 2 END AS ID_REDUCCION_JORNADA  \n             , TURNO.CCL_ID_TURNO\n             ,  EMPLEADO_DIA.FECHA_INICIO_REAL  AS FECHA_INICIO_REAL\n             ,  EMPLEADO_DIA.HORA_INICIO_REAL AS HORA_INICIO_REAL\n             , CASE WHEN SUM(EMPLEADO_DIA.HORAS_PLANIFICADAS_RAW) = 0 THEN NULL ELSE EMPLEADO_DIA.FECHA_INICIO_TURNO END AS FECHA_INICIO_TURNO\n             , CASE WHEN SUM(EMPLEADO_DIA.HORAS_PLANIFICADAS_RAW)= 0 THEN NULL ELSE EMPLEADO_DIA.HORA_INICIO_TURNO END AS HORA_INICIO_TURNO\n             , CASE WHEN SUM(EMPLEADO_DIA.HORAS_PLANIFICADAS_RAW)= 0 THEN NULL ELSE EMPLEADO_DIA.FECHA_FIN_TURNO END AS FECHA_FIN_TURNO\n             , CASE WHEN SUM(EMPLEADO_DIA.HORAS_PLANIFICADAS_RAW) = 0 THEN NULL ELSE EMPLEADO_DIA.HORA_FIN_TURNO END AS HORA_FIN_TURNO\n             , EMPLEADO_DIA.FECHA_FIN_REAL \n             , EMPLEADO_DIA.HORA_FIN_REAL\n\t\t\t , H.CCL_HORA_INICIO as HORA_INICIO_TAR\n\t\t\t , H.CCL_HORA_FIN as HORA_FIN_TAR\n             , SUM(CASE WHEN H.SCO_ID_INCIDENCE IS NOT NULL AND H.CCL_TIPO = 'A' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_INCIDENCIA_RAW\n             , cate.SSP_ID_CATEGORIA AS ID_CATEGORIA \n             , CAST(HTTH.CCL_ID_TP_HORA AS VARCHAR) +'#'+ CAST(HTTH.CCL_HOR_TM_PARC AS VARCHAR) AS ID_HORAS_CONTRATADAS \n             , SUM(CASE WHEN H.CCL_TIPO='V' THEN H.CCL_HORAS ELSE 0 END) AS HORAS_VACACIONES_RAW \n             , SUM(CASE WHEN H.CCL_TIPO='F' THEN H.CCL_HORAS ELSE 0 END) AS HORAS_FALTAN_RAW\n             , TUI.SCO_ID_REF_MOD AS MOD_REF_INDIVIDUAL      \n             , EQ.SCO_ID_TEAM AS ID_EQUIPO_PER \n             , EQ.SCO_ID_TEAM_ROLE AS ID_ROL_EQUIPO    \n             , TUT.CCL_ID_MOD_REF AS MOD_REF_EQUIPO\n             , TPT.IDDimensionTipoTurno AS IdInternalTipoTurno\n             , PR.STD_ID_HR_TYPE AS ID_TIPO_PERSONA\n\t\t\t , CASE WHEN COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) IS NULL OR  COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT) IS NULL THEN '-1'\n\t\t\t\tELSE COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) + '#' + \n                COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT) END AS ID_EQ_ORG                                                                                                                                      \n             , W.STD_ID_WORK_UNIT AS ID_UNIDAD_ORGANIZATIVA \n             , COALESCE(NIVEL_EST.ID_DIP_LEVEL,0) as ID_NIVEL_ESTUDIOS \n             , COALESCE(TUI.SCO_ID_REF_MOD ,TUT.CCL_ID_MOD_REF) AS ID_MODELO_REFERENCIA\n             , unineg.CCL_ID_UNIDAD_NEG\n\t\t\t , C.CCL_ID_CARACTERISTICA AS ID_AGRUPACION_OPERATIVA\n       FROM #GA_RESUMEN as H WITH (NOLOCK) \n \n       INNER JOIN  #HR_PERIOD PR WITH(NOLOCK)\n            ON PR.STD_ID_HR = H.SCO_ID_HR COLLATE Latin1_General_CS_AS   \n            AND PR.STD_OR_HR_PERIOD = H.SCO_OR_HR_PER\n            AND PR.ID_ORGANIZATION = H.ID_ORGANIZATION\n            AND PR.STD_DT_START <=H.CCL_DT_FECHA \n            AND PR.STD_DT_END >= H.CCL_DT_FECHA \n\t     AND H.STD_ID_LEG_ENT IN ('14','23','26','32','37','41','43','61','99','189','398','506','12','20','64','68','330','357')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \n\t\t\n\n\t\t\t     -- and PR.CCL_ID_PERSON = '65687' --spb\n\n\t\t\t\t\t\t\t  \n\t\t\t\t  \n       INNER JOIN M4SCO_H_HR_POS AS hrpos WITH (NOLOCK)\n             ON PR.ID_ORGANIZATION = hrpos.ID_ORGANIZATION \n                    AND PR.STD_ID_HR =  hrpos.SCO_ID_HR \n                    AND PR.STD_OR_HR_PERIOD = hrpos.SCO_OR_HR_ROLE\n                    AND hrpos.SCO_DT_START <=H.CCL_DT_FECHA \n                    AND  hrpos.SCO_DT_END >= H.CCL_DT_FECHA  \n  \n       INNER JOIN M4SCO_POSITION AS pos WITH (NOLOCK)\n             ON hrpos.SCO_ID_POSITION =  pos.SCO_ID_POSITION \n                    AND pos.SCO_DT_START <=H.CCL_DT_FECHA \n                    AND pos.SCO_DT_END >= H.CCL_DT_FECHA\n\n       INNER JOIN M4CCL_H_OR_UNI_NEG AS unineg WITH (NOLOCK)              \n\t\t   ON unineg.SCO_ID_POSITION =pos.SCO_ID_POSITION            \n\t\t   AND H.CCL_DT_FECHA BETWEEN unineg.CCL_DT_START AND unineg.CCL_DT_END  \n  \n       INNER JOIN STD_PERSON PE WITH (NOLOCK)   \n             ON H.SCO_ID_HR COLLATE Latin1_General_CS_AS =PE.STD_ID_PERSON\n  \n       INNER JOIN M4SCO_H_HR_LEGENT legalEntityHR  WITH (NOLOCK)\n            ON legalEntityHR.STD_ID_HR = PR.STD_ID_HR  \n            AND legalEntityHR.STD_OR_HR_PERIOD = PR.STD_OR_HR_PERIOD  \n            AND legalEntityHR.ID_ORGANIZATION = PR.ID_ORGANIZATION\n            AND legalEntityHR.DT_START <= H.CCL_DT_FECHA\n            AND legalEntityHR.DT_END >= H.CCL_DT_FECHA\n  \n       INNER JOIN M4SSP_H_CENT_COS ceco  WITH (NOLOCK)\n            ON PR.ID_ORGANIZATION = ceco.ID_ORGANIZATION  \n            AND PR.STD_ID_HR = ceco.SCO_ID_HR  \n            AND PR.STD_OR_HR_PERIOD  = ceco.SCO_OR_HR_ROLE\n            AND ceco.SSP_FEC_INICIO <= H.CCL_DT_FECHA\n            AND ceco.SSP_FEC_FIN >= H.CCL_DT_FECHA\n\n       INNER JOIN M4SSP_H_CONTRATOS CO WITH (NOLOCK)  \n             ON CO.ID_ORGANIZATION=H.ID_ORGANIZATION COLLATE Latin1_General_CS_AS \n                    AND CO.SSP_ID_HR=H.SCO_ID_HR COLLATE Latin1_General_CS_AS \n            AND CO.SSP_OR_HR_PERIOD=H.SCO_OR_HR_PER   \n                    AND CO.SSP_FEC_INI_CONTRA<=H.CCL_DT_FECHA \n            AND CO.SSP_FEC_FIN_CONTRA >= H.CCL_DT_FECHA  \n                    \n       INNER JOIN M4CCL_H_CENT_COS hceco  WITH (NOLOCK)\n             ON hceco.ID_ORGANIZATION  =PR.ID_ORGANIZATION \n            AND hceco.SCO_ID_HR  =PR.STD_ID_HR\n            AND  PR.STD_OR_HR_PERIOD  = hceco.SCO_OR_HR_ROLE  \n            AND hceco.SSP_FEC_INICIO =ceco.SSP_FEC_INICIO\n             \n       INNER JOIN STD_WORK_UNIT AS W WITH (NOLOCK) \n             ON W.STD_ID_WORK_UNIT = pos.SCO_ID_WORK_UNIT\n   \n       INNER JOIN M4SSP_CONTRATO_INT CZ WITH (NOLOCK)  \n        ON CZ.SSP_ID_CONT_INTERN=CO.SSP_ID_CONT_INTERN         \n        \n       INNER JOIN M4SCO_TEAMS T WITH (NOLOCK)\n        ON T.ID_ORGANIZATION = H.ID_ORGANIZATION COLLATE Latin1_General_CS_AS \n                    AND T.SCO_ID_TEAM = H.SCO_ID_TEAM COLLATE Latin1_General_CS_AS \n\n       LEFT JOIN @empresas AS LEGENT \n        ON LEGENT.ID_EMPRESA = H.STD_ID_LEG_ENT\n    \n       LEFT JOIN M4CCL_X_GA_AR_ALM A WITH (NOLOCK)   \n             ON A.ID_ORGANIZATION = H.ID_ORGANIZATION COLLATE Latin1_General_CS_AS \n                    AND A.CCL_ID_AR_ALM = H.CCL_ID_AR_ALM COLLATE Latin1_General_CS_AS \n\n       LEFT JOIN M4CCL_TA_INFORMES_ABS RGI_TA WITH (NOLOCK) \n             ON RGI_TA.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n             AND CAST(RGI_TA.CCL_ID_ABSENCE AS NVARCHAR) = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n            AND RGI_TA.CCL_ID_INFORME = 1 \n\n       LEFT JOIN M4CCL_GA_GR_INF_ABS GRI_TA WITH (NOLOCK)\n             ON GRI_TA.ID_ORGANIZATION = RGI_TA.ID_ORGANIZATION\n                    AND GRI_TA.CCL_ID_GR_ABS = RGI_TA.CCL_ID_GR_ABS\n\n\t\tLEFT JOIN M4CCL_GA_INFORMES_ABS RGI_GA WITH (NOLOCK) \n             ON RGI_GA.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n             AND CAST(RGI_GA.SCO_ID_INCIDENCE AS NVARCHAR) = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n             AND RGI_GA.CCL_ID_INFORME = 1 \n\n       LEFT JOIN M4CCL_GA_INFORMES_ABS RGI2 WITH (NOLOCK) \n             ON RGI2.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n                    AND RGI2.SCO_ID_INCIDENCE = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n            AND RGI2.CCL_ID_INFORME in (28)  \n\n       LEFT JOIN M4CCL_GA_GR_INF_ABS GRI2 WITH (NOLOCK)\n             ON GRI2.ID_ORGANIZATION = RGI2.ID_ORGANIZATION\n                    AND GRI2.CCL_ID_GR_ABS = RGI2.CCL_ID_GR_ABS                                                                    \n\n       LEFT JOIN M4CCL_ABSENCES_TA ABS_TA With (Nolock)\n             ON cast(ABS_TA.CCL_ID_ABSENCE as varchar) = H.SCO_ID_INCIDENCE\n                    AND  H.ID_ORGANIZATION = ABS_TA.ID_ORGANIZATION \n                    AND  H.ID_ORGANIZATION IN ('NL', '0001')\n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS With (Nolock)\n             ON ABS_TA.ID_ORGANIZATION = CAR_ABS.ID_ORGANIZATION\n                    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS.CCL_ID_ABSENCE\n                    AND  H.ID_ORGANIZATION= ABS_TA.ID_ORGANIZATION\n                    AND ABS_TA.ID_ORGANIZATION IN ('NL', '0001')\n                    AND CAR_ABS.CCL_ID_TP_CARACTERISTICA='INC' \n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_VALOR CAR_VAL With (Nolock)\n             ON CAR_ABS.CCL_ID_TP_CARACTERISTICA = CAR_VAL.CCL_ID_TP_CARACTERISTICA\n                    AND CAR_ABS.CCL_ID_CARACTERISTICA = CAR_VAL.CCL_ID_CARACTERISTICA\n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS2 With (Nolock)\n             ON ABS_TA.ID_ORGANIZATION = CAR_ABS2.ID_ORGANIZATION\n                    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS2.CCL_ID_ABSENCE\n                    AND  H.ID_ORGANIZATION= ABS_TA.ID_ORGANIZATION\n                    AND ABS_TA.ID_ORGANIZATION='NL' \n                    AND CAR_ABS2.CCL_ID_TP_CARACTERISTICA='CORP' \n\n       LEFT JOIN M4CCL_H_GA_HOR_TURNOS TURNO WITH (NOLOCK) \n             ON H.ID_ORGANIZATION=TURNO.ID_ORGANIZATION \n                    and  H.STD_ID_LEG_ENT=TURNO.STD_ID_LEG_ENT\n                    AND 1 = CASE WHEN CAST(TURNO.CCL_HORA_INICIO AS TIME) > CAST(TURNO.CCL_HORA_FIN AS TIME)\n                           THEN CASE WHEN (CAST(H.CCL_HORA_INICIO_TUR AS TIME) BETWEEN \n                                  CASE WHEN TURNO.CCL_OPERACION_HI = '>' \n                                        THEN CAST(DATEADD(ss,1,TURNO.CCL_HORA_INICIO) AS TIME)\n                                        ELSE CAST(TURNO.CCL_HORA_INICIO AS TIME) \n                                  END AND CAST('23:59:59' AS TIME)\n                                  OR CAST(H.CCL_HORA_INICIO_TUR AS TIME) BETWEEN CAST('00:00:00' AS TIME) \n                                  AND CASE WHEN TURNO.CCL_OPERACION_HF = '<'\n                                        THEN CAST(DATEADD(ss,-1,TURNO.CCL_HORA_FIN) AS TIME) \n                                        ELSE CAST(TURNO.CCL_HORA_FIN AS TIME)\n                                  END) THEN 1\n                                  ELSE 0\n                           END \n                           ELSE CASE WHEN CAST(H.CCL_HORA_INICIO_TUR AS TIME) BETWEEN \n                                  CASE WHEN TURNO.CCL_OPERACION_HI = '>' \n                                        THEN CAST(DATEADD(ss,1,TURNO.CCL_HORA_INICIO) AS TIME)\n                                        ELSE CAST(TURNO.CCL_HORA_INICIO AS TIME) \n                                  END \n                                  AND CASE WHEN TURNO.CCL_OPERACION_HF = '<'\n                                        THEN CAST(DATEADD(ss,-1,TURNO.CCL_HORA_FIN) AS TIME) \n                                        ELSE CAST(TURNO.CCL_HORA_FIN AS TIME)\n                                  END\n                                  THEN 1\n                                  ELSE 0\n                           END \n                    END\n                    \n       LEFT JOIN M4SSP_H_PORC_GLEGA GL WITH (NOLOCK) \n             ON GL.ID_ORGANIZATION=PR.ID_ORGANIZATION \n                    AND GL.STD_ID_HR=PR.STD_ID_HR \n                    AND GL.STD_OR_HR_PERIOD=PR.STD_OR_HR_PERIOD \n                    AND GL.SSP_DT_START<=GETDATE() \n                    AND GL.SSP_DT_END>=GETDATE() \n \n       LEFT JOIN M4SSP_H_PORC_JORN JP WITH (NOLOCK) \n             ON JP.ID_ORGANIZATION=PR.ID_ORGANIZATION \n                    AND JP.SSP_ID_HR=PR.STD_ID_HR \n                    AND JP.SSP_OR_HR_PERIOD=PR.STD_OR_HR_PERIOD \n                    AND JP.SSP_FEC_INI_CONTRA=CO.SSP_FEC_INI_CONTRA \n                    AND JP.SSP_FEC_INI_JORN_P<=GETDATE() AND JP.SSP_FEC_FIN_JORN_P>=GETDATE() \n \n       LEFT JOIN M4SSP_H_CATEGORIA cate WITH (NOLOCK)  \n             ON cate.ID_ORGANIZATION = PR.ID_ORGANIZATION \n                    AND cate.SCO_ID_HR = PR.STD_ID_HR\n                    AND cate.SCO_OR_HR_ROLE = PR.STD_OR_HR_PERIOD\n                    AND cate.SSP_FEC_INICIO <= H.CCL_DT_FECHA\n                    AND cate.SSP_FEC_FIN >= H.CCL_DT_FECHA                                                                  \n \n       LEFT JOIN M4CCL_H_HOR_TM_PAR AS HTTH WITH (NOLOCK) \n             ON HTTH.ID_ORGANIZATION = PR.ID_ORGANIZATION \n                    AND HTTH.SCO_ID_HR = PR.STD_ID_HR \n                    AND HTTH.SCO_OR_HR_ROLE = PR.STD_OR_HR_PERIOD\n                    AND HTTH.DT_START <= H.CCL_DT_FECHA\n                    AND HTTH.DT_END >= H.CCL_DT_FECHA                                                               \n\n       LEFT JOIN M4GLB_HISTORICOS_ROLE AS hrole WITH (NOLOCK)\n             ON hrole.ID_ORGANIZATION = PR.ID_ORGANIZATION\n                    AND hrole.SCO_ID_HR = PR.STD_ID_HR  \n                    AND hrole.SCO_OR_HR_ROLE = PR.STD_OR_HR_PERIOD \n                    AND hrole.DT_START <= H.CCL_DT_FECHA\n                    AND hrole.DT_END >= H.CCL_DT_FECHA\n                    AND hrole.CCL_ID_CAMPO IN ( 'EMPR_FUNC', 'EMPR_FUNC2') \n  \n       LEFT JOIN M4SCO_HR_THEOR_TIM TUI WITH (NOLOCK) \n             ON TUI.ID_ORGANIZATION=PR.ID_ORGANIZATION      \n                    AND TUI.STD_ID_HR=PR.STD_ID_HR    \n                    AND TUI.STD_OR_HR_PERIOD=PR.STD_OR_HR_PERIOD   \n                    AND TUI.DT_START <= H.CCL_DT_FECHA      \n                    AND TUI.DT_END >= H.CCL_DT_FECHA  \n  \n       LEFT JOIN M4SCO_H_HR_TEAMS EQ WITH (NOLOCK)    \n             ON EQ.ID_ORGANIZATION=PR.ID_ORGANIZATION \n                    AND EQ.SCO_ID_HR=PR.STD_ID_HR     \n                    AND EQ.SCO_OR_ROLE=PR.STD_OR_HR_PERIOD \n                    AND EQ.SCO_DT_START <= H.CCL_DT_FECHA   \n                    AND EQ.SCO_DT_END >= H.CCL_DT_FECHA\n                    And EQ.CCL_ID_LEG_ENT=legalEntityHR.STD_ID_LEG_ENT\n  \n       LEFT JOIN M4CCL_H_GT_MR_TEAM TUT WITH (NOLOCK)        \n             ON TUT.ID_ORGANIZATION=PR.ID_ORGANIZATION      \n                    AND TUT.CCL_ID_TEAM = EQ.SCO_ID_TEAM    \n                    AND TUT.CCL_DT_START <= H.CCL_DT_FECHA \n                    AND TUT.CCL_DT_END >= H.CCL_DT_FECHA \n                    And TUT.CCL_ID_LEG_ENT=legalEntityHR.STD_ID_LEG_ENT\n  \n       LEFT JOIN (\n             SELECT DENSE_RANK() OVER (ORDER BY SCO_ID_REF_MOD) AS IDDimensionTipoTurno, \n                    SCO_ID_REF_MOD,NM_REF_MODESP,Md.CCL_ID_TP_TURNO,MT.CCL_NM_TP_TURNESP\n   \n             FROM  M4SCO_REF_MOD Md  WITH (NOLOCK) \n             inner join M4CCL_X_GA_TP_TUR MT  WITH (NOLOCK)\n                    on Md.CCL_ID_TP_TURNO=MT.CCL_ID_TP_TURNO\n       ) AS TPT \n             on TPT.SCO_ID_REF_MOD=isnull(TUI.SCO_ID_REF_MOD ,TUT.CCL_ID_MOD_REF)\n  \n       LEFT JOIN M4GLB_H_HR_TEAMS_ORG EXCEP_EMPL WITH(NOLOCK)\n             ON EXCEP_EMPL.ID_ORGANIZATION = PR.ID_ORGANIZATION\n                    AND EXCEP_EMPL.SCO_ID_HR = PR.STD_ID_HR  \n                    AND EXCEP_EMPL.SCO_OR_ROLE = PR.STD_OR_HR_PERIOD\n                    AND EXCEP_EMPL.SCO_DT_START <= H.CCL_DT_FECHA    \n                    AND EXCEP_EMPL.SCO_DT_END >= H.CCL_DT_FECHA  \n\t\t\t\t\t\n       LEFT JOIN M4CCL_H_GA_EM_EQUI AS EMPRESA_EQUIPO_AGOP WITH (NOLOCK)\n        ON EMPRESA_EQUIPO_AGOP.ID_ORGANIZATION = PR.ID_ORGANIZATION\n        AND EMPRESA_EQUIPO_AGOP.CCL_ID_LEG_ENT = COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT)                                                                                                                      \n        AND  EQ.SCO_ID_TEAM = EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM\n        AND EMPRESA_EQUIPO_AGOP.CCL_DT_START <= H.CCL_DT_FECHA    \n        AND EMPRESA_EQUIPO_AGOP.CCL_DT_END >= H.CCL_DT_FECHA \n \n       LEFT JOIN #NIVEL_ESTUDIOS as NIVEL_EST WITH (NOLOCK)         \n             ON NIVEL_EST.STD_ID_HR = PR.STD_ID_HR          \n                    AND NIVEL_EST.FECHA=H.CCL_DT_FECHA             \n                    AND NIVEL_EST.NUMERO=1     \n\n       LEFT JOIN #EMPLEADO_DIA AS EMPLEADO_DIA\n       ON EMPLEADO_DIA.CCL_DT_FECHA = H.CCL_DT_FECHA\n       AND EMPLEADO_DIA.SCO_ID_HR = H.SCO_ID_HR\n\n       LEFT JOIN M4GLB_H_GA_TERMINAL_ZONA AS TERMINALES WITH(NOLOCK)\n       ON TERMINALES.GLB_ID_TERMINAL =  H.GLB_ID_TERMINAL\n       AND TERMINALES.ID_ORGANIZATION=H.ID_ORGANIZATION      \n       LEFT JOIN M4CCL_X_GA_CONEX AS CONEX WITH(NOLOCK)\n       ON CONEX.CCL_ID_LEG_ENT = H.STD_ID_LEG_ENT\n       AND CONEX.ID_ORGANIZATION = H.ID_ORGANIZATION  \n\t\t\n\t\tLEFT JOIN M4CCL_TASKS_L_CARACT C\n\t\tON H.ID_ORGANIZATION = C.ID_ORGANIZATION \n\t\tAND H.STD_ID_LEG_ENT = C.CCL_ID_LEG_ENT \n\t\tAND pos.SCO_ID_WORK_LOC = C.CCL_ID_WL \n\t\tAND CASE WHEN CCL_CK_ESCENARIO = 2 THEN H.CCL_ID_TASK ELSE NULL END = C.CCL_ID_TASK \n\t\tAND H.CCL_ID_AR_ALM = C.CCL_ID_AREA \n\t\tAND TERMINALES.GLB_ID_ZONA = C.CCL_ID_ZONA \n\t\tAND C.CCL_ID_TP_CARACTERISTICA = 'AO'\n\t\t\n       WHERE PR.ID_ORGANIZATION IN ('NL','0001') AND\n             (PR.STD_ID_HR_TYPE='01' OR PR.STD_ID_HR_TYPE='06' OR PR.STD_ID_HR_TYPE='02') AND  \n             H.CCL_TIPO IN ('P','T','R','C','E','A','J', 'F','V','D') and \n             H.CCL_DT_FECHA>=@FechaIni and H.CCL_DT_FECHA<@FechaFin \n             and (CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))=0 THEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))\n                    ELSE CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))<>0 AND REPLACE(PR.STD_ID_HR_TYPE,'.','') IN ('02','06') THEN cast(SUBSTRING(hrole.CCL_CADENA,3,3) as int) \n                           ELSE\n                                  CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) =9 AND REPLACE(hceco.CCL_DIVISION,'.','') =13 AND REPLACE(hceco.CCL_SECCION,'.','') = 18 THEN 37\n                                  ELSE (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) \n                           END \n                    END\n             END) IN ('14','23','26','32','37','41','43','61','99','189','398','506','12','20','64','68','330','357','0')\n\n       GROUP BY H.ID_ORGANIZATION \n             , H.CCL_DT_FECHA\n             , H.CCL_ID_TASK\n             , CAST( H.CCL_ID_TASK AS VARCHAR) +'#' + H.ID_ORGANIZATION \n             ,  H.GLB_ID_TERMINAL\n             , TERMINALES.GLB_ID_ZONA\n        , PR.SSP_FEC_ANTIGUEDAD\n        , PE.STD_DT_BIRTH\n        , PE.STD_ID_GENDER  \n        , CZ.CCL_TIEMPO_PARCIAL \n        , CZ.SSP_NO_DEFINIDO         \n        , A.CCL_ID_AR_ALM  \n             , hceco.CCL_COD_DIV_SECC          \n        , pos.SCO_ID_WORK_LOC\n             , pos.SCO_ID_JOB_CODE\n        , CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))=0 THEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))\n                    ELSE CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))<>0 AND REPLACE(PR.STD_ID_HR_TYPE,'.','') IN ('02','06') THEN cast(SUBSTRING(hrole.CCL_CADENA,3,3) as int) \n                           ELSE\n                                  CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) =9 AND REPLACE(hceco.CCL_DIVISION,'.','') =13 AND REPLACE(hceco.CCL_SECCION,'.','') = 18 THEN 37\n                                  ELSE (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) \n                           END \n            END\n             END\n        , PE.STD_ID_PERSON \n             , PR.CCL_ID_PERSON\n             , cast(PE.STD_ID_PERSON as varchar) +'#' +cast(PR.CCL_ID_PERSON as varchar)\n        , T.SCO_ID_TEAM       \n        , PR.STD_ID_EXTERN_ORG \n        , A.CCL_ID_AR_ALM \n        , T.SCO_ID_TEAM   \n        , GRI_TA.CCL_ID_GR_ABS\n         ,CASE WHEN H.ID_ORGANIZATION='0001' THEN COALESCE(GRI_TA.CCL_ID_GR_ABS,-1) \n               WHEN H.ID_ORGANIZATION='NL' THEN COALESCE(CAR_VAL.CCL_ID_CARACTERISTICA,-1) \n           END\n        , CASE WHEN H.ID_ORGANIZATION='0001' THEN COALESCE(H.SCO_ID_INCIDENCE,'N/A')\n               WHEN H.ID_ORGANIZATION='NL' THEN COALESCE(cast(CAR_ABS2.CCL_ID_CARACTERISTICA as varchar),'N/A') \n          END                                                                                                                              \n             , ABS_TA.CCL_ID_ABSENCE \n             , GL.SSP_PORC_GLEGAL  \n             , JP.SSP_VALOR_COEF_T_P\n             , TURNO.CCL_ID_TURNO\n             , H.CCL_HORA_INICIO\n             , H.CCL_HORA_INICIO_TUR\n             , H.CCL_HORA_FIN\n             , cate.SSP_ID_CATEGORIA\n             , HTTH.CCL_ID_TP_HORA \n             , HTTH.CCL_HOR_TM_PARC\n             , TUI.SCO_ID_REF_MOD   \n             , EQ.SCO_ID_TEAM\n             , EQ.SCO_ID_TEAM_ROLE       \n             , TUT.CCL_ID_MOD_REF \n             , TPT.IDDimensionTipoTurno \n             , PR.STD_ID_HR_TYPE\n             , W.STD_ID_WORK_UNIT\n             ,  CASE WHEN COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) IS NULL OR  COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT) IS NULL  THEN '-1'\n                    ELSE COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) + '#' + \n                     COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT) END\n             , EMPRESA_EQUIPO_AGOP.CCL_ID_LEG_ENT\n             , EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM\n             , NIVEL_EST.ID_DIP_LEVEL\n             , EMPLEADO_DIA.FECHA_INICIO_REAL\n             , EMPLEADO_DIA.HORA_INICIO_REAL\n             , EMPLEADO_DIA.FECHA_INICIO_TURNO\n             , EMPLEADO_DIA.HORA_INICIO_TURNO\n             , EMPLEADO_DIA.FECHA_FIN_TURNO\n             , EMPLEADO_DIA.HORA_FIN_TURNO \n             , EMPLEADO_DIA.FECHA_FIN_REAL\n             , EMPLEADO_DIA.HORA_FIN_REAL\n             , hrole.CCL_CADENA\n             , legalEntityHR.STD_ID_LEG_ENT\n             , hceco.CCL_SECCION\n             , hceco.CCL_DIVISION\n             , hrole.CCL_CADENA  \n             , hrole.CCL_ID_CAMPO\n             , EMPLEADO_DIA.HORAS_DESCANSO_PLANIFICADAS_NL\n             , EMPLEADO_DIA.HORAS_AUSENTISMO_RAW_AUX\n             , cast(SUBSTRING(hrole.CCL_CADENA,3,3) as int) \n             , unineg.CCL_ID_UNIDAD_NEG\n             , CCL_CK_ESCENARIO\n             , GRI2.CCL_ID_GR_ABS\n             , CAR_ABS2.CCL_ID_CARACTERISTICA\n             , CAR_ABS.CCL_ID_CARACTERISTICA\n             , CAR_VAL.CCL_ID_CARACTERISTICA\n             , H.SCO_ID_INCIDENCE\n\t\t\t, 'TA' + '#' + H.ID_ORGANIZATION+'#'+cast(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\t,C.CCL_ID_CARACTERISTICA\n) AS datos\nLEFT JOIN HORAS WITH (NOLOCK)\nON \n CASE WHEN  (datos.HORA_INICIO_TURNO IS NOT NULL AND datos.HORA_FIN_TURNO IS NOT NULL  ) OR -- TEORICAS O PRESENCIAS (Y AUSENCIAS)\n\t\t(datos.HORA_INICIO_REAL IS NOT NULL AND datos.HORA_FIN_REAL IS NOT NULL AND datos.HORAS_FALTAN_RAW = 0)  -- EXTRAS, AJUSTADAS, COMPLEMENTARIAS\n\t\t OR (datos.HORA_INICIO_TAR IS NOT NULL AND datos.HORA_FIN_TAR IS NOT NULL ) -- \n\t\tTHEN \n   CASE\n\t\tWHEN (DATEPART(HOUR, datos.HORA_INICIO_TAR) <= DATEPART(HOUR, datos.HORA_FIN_TAR)) AND ((HORAS.ID_HORA >= DATEPART(HOUR, datos.HORA_INICIO_TAR) AND  HORAS.ID_HORA < DATEPART(HOUR, datos.HORA_FIN_TAR)) OR (HORAS.ID_HORA = DATEPART(HOUR, datos.HORA_FIN_TAR) AND DATEPART(MINUTE, datos.HORA_FIN_TAR)>0)) THEN 1\n\t\tWHEN DATEPART(HOUR, datos.HORA_INICIO_TAR) > DATEPART(HOUR, datos.HORA_FIN_TAR) AND ((HORAS.ID_HORA - DATEPART(HOUR, datos.HORA_INICIO_TAR) >=0) OR (HORAS.ID_HORA - DATEPART(HOUR, datos.HORA_FIN_TAR)<0) OR (HORAS.ID_HORA - DATEPART(HOUR, datos.HORA_FIN_TAR)= 0 AND DATEPART(MINUTE, datos.HORA_FIN_TAR)>0)) THEN 1\t   \n   ELSE 0\n   END \n ELSE NULL \n\t\n END = 1\n   \n) TABLA\nLEFT JOIN M4CCL_H_GT_CAL_WLC AS WC WITH (NOLOCK)\n\tON TABLA.ID_ORGANIZATION = WC.ID_ORGANIZATION\n\tAND TABLA.ID_LUGAR_DE_TRABAJO = WC.CCL_ID_WORK_LOCAT\n\tAND TABLA.FECHA BETWEEN WC.CCL_DT_START AND WC.CCL_DT_END\nLEFT JOIN M4SCO_CALENDAR_REP AS CAL_REP WITH (NOLOCK)\n\tON WC.CCL_ID_CALENDAR = CAL_REP.SCO_ID_CALENDAR\n\tAND TABLA.FECHA = CAL_REP.SCO_DT_DAY\n\tAND CAL_REP.SCO_ID_DAYCALEN_TY <> 'AP06' AND CAL_REP.SCO_ID_DAYCALEN_TY <> 'AP07'\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t   \n\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t\t\t\nDROP TABLE  #CAL;\nDROP TABLE  #NIVEL_ESTUDIOS;\nDROP TABLE  #GA_RESUMEN;\nDROP TABLE  #HR_PERIOD;\nDROP TABLE  #EMPLEADO_DIA;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "HORAS_PRESENCIA",
            "description": "Sumatorio de las horas de presencia para el periodo seleccionado",
            "expression": "IF(SUM([HORAS_PRESENCIA_PONDERADAS_RAW])=0,BLANK(),SUM([HORAS_PRESENCIA_PONDERADAS_RAW]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_CALENDARIO",
            "description": "Sumatorio de las horas teoricas para el periodo seleccionado",
            "expression": "IF(SUM([HORAS_TEORICAS_PONDERADAS_RAW])=0,BLANK(),SUM([HORAS_TEORICAS_PONDERADAS_RAW]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_COMPLEMENTARIAS",
            "description": "Sumatorio del as horas complementarias para el periodo seleccionado",
            "expression": "IF(SUM([HORAS_COMPLEMENTARIAS_RAW_T])=0,BLANK(),SUM([HORAS_COMPLEMENTARIAS_RAW_T]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_EXTRA",
            "description": "Sumatorio de las horas extra para el periodo seleccionado",
            "expression": "SUMX(HORAS,IF(ISBLANK(HORAS[ID_EMPRESA_EXTERNA]),[HORAS_EXTRA_RAW_T],0))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_ORDINARIAS",
            "description": "Sumatorio de las horas ordinarias para el periodo seleccionado",
            "expression": "IF(SUM([HORAS_ORDINARIAS_RAW_T])=0,BLANK(),SUM([HORAS_ORDINARIAS_RAW_T]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_ABSENTISMO",
            "description": "Sumatorio de las horas absentismo  para el periodo seleccionado",
            "expression": "IF(SUM([HORAS_ABSENTISMO_RAW_AJUSTADAS])=0,BLANK(),SUM([HORAS_ABSENTISMO_RAW_AJUSTADAS]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_AUSENTISMO",
            "description": "Sumatorio de las horas ausentismo para el periodo seleccionado",
            "expression": "IF(SUM([HORAS_AUSENTISMO_RAW_AJUSTADAS])=0,BLANK(),SUM([HORAS_AUSENTISMO_RAW_AJUSTADAS]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_REALES",
            "description": "Sumatorio de las horas reales para el periodo seleccionado",
            "expression": "IF(SUM([HORAS_REALES_RAW_T]) - SUM([HORAS_DESCANSO_RAW_NL])=0,BLANK(),SUM([HORAS_REALES_RAW_T]) - SUM([HORAS_DESCANSO_RAW_NL]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_REALES_AJUSTADAS",
            "description": "Sumatorio de las horas reales ajustadas (horas ajustadas - horas descanso)para el periodo seleccionado",
            "expression": "IF((SUM([HORAS_AJUSTADAS_RAW_T]) - SUM([HORAS_DESCANSO_RAW_NL])) = 0,BLANK(),SUM([HORAS_AJUSTADAS_RAW_T]) - SUM([HORAS_DESCANSO_RAW_NL]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "%HORAS_TIEMPO_PARCIAL",
            "description": "% de las horas realizadas a tiempo parcial",
            "expression": "AVERAGE([PORC_TIEMPO_PARCIAL])/100",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS"
          },
          {
            "name": "%ABSENTISMO_OLD",
            "expression": "IF(\n\t\t\t\t\t\t\t\t\t\tOR(ISBLANK([HORAS_PLANIFICADAS]),[HORAS_PLANIFICADAS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\t[HORAS_ABSENTISMO]/[HORAS_PLANIFICADAS])",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_PLANIFICADAS",
            "description": "Sumatorio de las horas planificadas (descontando las de desacanso) para el periodo seleccionado",
            "expression": "IF((SUM([HORAS_PLANIFICADAS_PONDERADAS_RAW]) - SUM([HORAS_DESCANSO_PLANIFICADAS_NL_PONDERADAS]))=0,BLANK(),SUM([HORAS_PLANIFICADAS_PONDERADAS_RAW]) - SUM([HORAS_DESCANSO_PLANIFICADAS_NL_PONDERADAS]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_REALES_AA",
            "expression": "CALCULATE([HORAS_REALES],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "%AUSENTISMO_OLD",
            "expression": "IF(\n\t\t\t\t\t\t\t\t\t\tOR(ISBLANK([HORAS_PLANIFICADAS]),[HORAS_PLANIFICADAS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\t[HORAS_AUSENTISMO]/[HORAS_PLANIFICADAS])",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true
          },
          {
            "name": "%AUSENTISMO",
            "description": "% de horas de ausentismo respecto al total de horas planificadas (sin ser filtradas por incidencias ni ausencias)",
            "expression": "IF( ISBLANK([HORAS_AUSENTISMO]) ,BLANK(),\nIF([HORAS_AUSENTISMO]=0 ||  CALCULATE(CALCULATE([HORAS_PLANIFICADAS], ALL(INCIDENCIA)),ALL(AUSENCIAS))=0, 0, [HORAS_AUSENTISMO]/CALCULATE(CALCULATE([HORAS_PLANIFICADAS], ALL(INCIDENCIA)),ALL(AUSENCIAS))))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS"
          },
          {
            "name": "%ABSENTISMO",
            "description": "% de horas de absentismo respecto al total de horas planificadas (sin ser filtradas por incidencias ni ausencias)",
            "expression": "IF( ISBLANK([HORAS_ABSENTISMO]),BLANK(),\nIF([HORAS_ABSENTISMO]=0 ||  CALCULATE(CALCULATE([HORAS_PLANIFICADAS], ALL(INCIDENCIA)),ALL(AUSENCIAS))=0, 0, [HORAS_ABSENTISMO]/CALCULATE(CALCULATE([HORAS_PLANIFICADAS], ALL(INCIDENCIA)),ALL(AUSENCIAS))))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_PRESENCIA_AA",
            "expression": "CALCULATE([HORAS_PRESENCIA],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "HORAS_CALENDARIO_AA",
            "expression": "CALCULATE([HORAS_CALENDARIO] ,\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "HORAS_COMPLEMENTARIAS_AA",
            "expression": "CALCULATE([HORAS_COMPLEMENTARIAS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "HORAS_EXTRA_AA",
            "expression": "CALCULATE([HORAS_EXTRA],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "HORAS_ORDINARIAS_AA",
            "expression": "CALCULATE([HORAS_ORDINARIAS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "HORAS_ABSENTISMO_AA",
            "expression": "CALCULATE([HORAS_ABSENTISMO],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "HORAS_AUSENTISMO_AA",
            "expression": "CALCULATE([HORAS_AUSENTISMO],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "HORAS_PLANIFICADAS_AA",
            "expression": "CALCULATE([HORAS_PLANIFICADAS] ,\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "HORAS_REALES_AJUSTADAS_AA",
            "expression": "CALCULATE([HORAS_REALES_AJUSTADAS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "%HORAS_TIEMPO_PARCIAL_AA",
            "expression": "CALCULATE([%HORAS_TIEMPO_PARCIAL],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "%ABSENTISMO_AA_OLD",
            "expression": "CALCULATE([%ABSENTISMO_OLD],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "%AUSENTISMO_AA_OLD",
            "expression": "CALCULATE([%AUSENTISMO_OLD],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "%AUSENTISMO_AA",
            "expression": "CALCULATE([%AUSENTISMO],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "%ABSENTISMO_AA",
            "expression": "CALCULATE([%ABSENTISMO],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "HORAS_PRESENCIA_ACUM",
            "expression": "IF(ISBLANK([HORAS_PRESENCIA]),BLANK(),TOTALYTD([HORAS_PRESENCIA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_CALENDARIO_ACUM",
            "expression": "IF(ISBLANK([HORAS_CALENDARIO]),BLANK(),TOTALYTD([HORAS_CALENDARIO],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_COMPLEMENTARIAS_ACUM",
            "expression": "IF(ISBLANK([HORAS_COMPLEMENTARIAS]),BLANK(),TOTALYTD([HORAS_COMPLEMENTARIAS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_EXTRA_ACUM",
            "expression": "IF(ISBLANK([HORAS_EXTRA]),BLANK(),TOTALYTD([HORAS_EXTRA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_ORDINARIAS_ACUM",
            "expression": "IF(ISBLANK([HORAS_ORDINARIAS]),BLANK(),TOTALYTD([HORAS_ORDINARIAS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_ABSENTISMO_ACUM",
            "expression": "IF(ISBLANK([HORAS_ABSENTISMO]),BLANK(),TOTALYTD([HORAS_ABSENTISMO],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_AUSENTISMO_ACUM",
            "expression": "IF(ISBLANK([HORAS_AUSENTISMO]),BLANK(),TOTALYTD([HORAS_AUSENTISMO],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_PLANIFICADAS_ACUM",
            "expression": "IF(ISBLANK([HORAS_PLANIFICADAS]),BLANK(),TOTALYTD([HORAS_PLANIFICADAS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_REALES_ACUM",
            "expression": "IF(ISBLANK([HORAS_REALES]),BLANK(),TOTALYTD([HORAS_REALES],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "%ABSENTISMO_ACUM_OLD",
            "expression": "IF(\n\t\t\t\t\t\t\t\t\t\tOR(ISBLANK([HORAS_PLANIFICADAS_ACUM]),[HORAS_PLANIFICADAS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\t[HORAS_ABSENTISMO_ACUM]/[HORAS_PLANIFICADAS_ACUM])",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "%AUSENTISMO_ACUM_OLD",
            "expression": "IF(\n\t\t\t\t\t\t\t\t\t\tOR(ISBLANK([HORAS_PLANIFICADAS_ACUM]),[HORAS_PLANIFICADAS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\t[HORAS_AUSENTISMO_ACUM]/[HORAS_PLANIFICADAS_ACUM])",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "%AUSENTISMO_ACUM",
            "expression": "IF(\n\t\t\t\t\t\t\t\t\t\tOR(ISBLANK(CALCULATE([HORAS_PLANIFICADAS], ALL(INCIDENCIA))),CALCULATE([HORAS_PLANIFICADAS], ALL(INCIDENCIA))=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\t[HORAS_AUSENTISMO_ACUM]/CALCULATE([HORAS_PLANIFICADAS_ACUM], ALL(INCIDENCIA)))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "%ABSENTISMO_ACUM",
            "expression": "IF(\n\t\t\t\t\t\t\t\t\t\tOR(ISBLANK(CALCULATE([HORAS_PLANIFICADAS], ALL(INCIDENCIA))),CALCULATE([HORAS_PLANIFICADAS], ALL(INCIDENCIA))=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\t[HORAS_ABSENTISMO_ACUM]/CALCULATE([HORAS_PLANIFICADAS_ACUM], ALL(INCIDENCIA)))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_REALES_AJUSTADAS_ACUM",
            "expression": "IF(ISBLANK([HORAS_REALES_AJUSTADAS]),BLANK(),TOTALYTD([HORAS_REALES_AJUSTADAS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "%HORAS_TIEMPO_PARCIAL_ACUM",
            "expression": "IF(ISBLANK([%HORAS_TIEMPO_PARCIAL]),BLANK(),TOTALYTD([%HORAS_TIEMPO_PARCIAL],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_PRESENCIA_DAA",
            "expression": "IF(ISBLANK([HORAS_PRESENCIA]) || ISBLANK([HORAS_PRESENCIA_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR([HORAS_PRESENCIA] = 0,[HORAS_PRESENCIA_AA]=0),BLANK(),([HORAS_PRESENCIA]-[HORAS_PRESENCIA_AA])/[HORAS_PRESENCIA_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "HORAS_CALENDARIO_DAA",
            "expression": "IF(ISBLANK([HORAS_CALENDARIO]) || ISBLANK([HORAS_CALENDARIO_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_CALENDARIO_AA]=0,BLANK(),([HORAS_CALENDARIO]-[HORAS_CALENDARIO_AA])/[HORAS_CALENDARIO_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "HORAS_COMPLEMENTARIAS_DAA",
            "expression": "IF(ISBLANK([HORAS_COMPLEMENTARIAS]) || ISBLANK([HORAS_COMPLEMENTARIAS_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_COMPLEMENTARIAS_AA]=0,BLANK(),([HORAS_COMPLEMENTARIAS]-[HORAS_COMPLEMENTARIAS_AA])/[HORAS_COMPLEMENTARIAS_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "HORAS_EXTRAS_DAA",
            "expression": "IF(ISBLANK([HORAS_EXTRA]) || ISBLANK([HORAS_EXTRA_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_EXTRA_AA]=0,BLANK(),([HORAS_EXTRA]-[HORAS_EXTRA_AA])/[HORAS_EXTRA_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "HORAS_ORDINARIAS_DAA",
            "expression": "IF(ISBLANK([HORAS_ORDINARIAS]) || ISBLANK([HORAS_ORDINARIAS_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_ORDINARIAS_AA]=0,BLANK(),([HORAS_ORDINARIAS]-[HORAS_ORDINARIAS_AA])/[HORAS_ORDINARIAS_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "HORAS_ABSENTISMO_DAA",
            "expression": "IF(ISBLANK([HORAS_ABSENTISMO]) || ISBLANK([HORAS_ABSENTISMO_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_ABSENTISMO_AA]=0,BLANK(),([HORAS_ABSENTISMO]-[HORAS_ABSENTISMO_AA])/[HORAS_ABSENTISMO_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "HORAS_AUSENTISMO_DAA",
            "expression": "IF(ISBLANK([HORAS_AUSENTISMO]) || ISBLANK([HORAS_AUSENTISMO_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_AUSENTISMO_AA]=0,BLANK(),([HORAS_AUSENTISMO]-[HORAS_AUSENTISMO_AA])/[HORAS_AUSENTISMO_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "HORAS_PLANIFICADAS_DAA",
            "expression": "IF(ISBLANK([HORAS_PLANIFICADAS]) || ISBLANK([HORAS_PLANIFICADAS_AA]) ,BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_PLANIFICADAS_AA]= 0,BLANK(),([HORAS_PLANIFICADAS]-[HORAS_PLANIFICADAS_AA])/[HORAS_PLANIFICADAS_AA]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "HORAS_REALES_DAA",
            "expression": "IF(ISBLANK([HORAS_REALES]) || ISBLANK([HORAS_REALES_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_REALES_AA]=0,BLANK(),([HORAS_REALES]-[HORAS_REALES_AA])/[HORAS_REALES_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "%ABSENTISMO_DAA_OLD",
            "expression": "IF(ISBLANK([%ABSENTISMO_OLD]) || ISBLANK([%ABSENTISMO_AA_OLD]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%ABSENTISMO_AA_OLD]=0,BLANK(),([%ABSENTISMO_OLD]-[%ABSENTISMO_AA_OLD])/[%ABSENTISMO_AA_OLD]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "%AUSENTISMO_DAA_OLD",
            "expression": "IF(ISBLANK([%AUSENTISMO_OLD]) || ISBLANK([%AUSENTISMO_AA_OLD]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%AUSENTISMO_AA_OLD]=0,BLANK(),([%AUSENTISMO_OLD]-[%AUSENTISMO_AA_OLD])/[%AUSENTISMO_AA_OLD]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "%AUSENTISMO_DAA",
            "expression": "IF(ISBLANK([%AUSENTISMO]) || ISBLANK([%AUSENTISMO_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%AUSENTISMO_AA]=0,BLANK(),([%AUSENTISMO]-[%AUSENTISMO_AA])/[%AUSENTISMO_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "%ABSENTISMO_DAA",
            "expression": "IF(ISBLANK([%ABSENTISMO]) || ISBLANK([%ABSENTISMO_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%ABSENTISMO_AA]=0,BLANK(),([%ABSENTISMO]-[%ABSENTISMO_AA])/[%ABSENTISMO_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "HORAS_REALES_AJUSTADAS_DAA",
            "expression": "IF(ISBLANK([HORAS_REALES_AJUSTADAS]) || ISBLANK([HORAS_REALES_AJUSTADAS_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_REALES_AJUSTADAS_AA]=0,BLANK(),([HORAS_REALES_AJUSTADAS]-[HORAS_REALES_AJUSTADAS_AA])/[HORAS_REALES_AJUSTADAS_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "%HORAS_TIEMPO_PARCIAL_DAA",
            "expression": "IF(ISBLANK([%HORAS_TIEMPO_PARCIAL]) || ISBLANK([%HORAS_TIEMPO_PARCIAL_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%HORAS_TIEMPO_PARCIAL_AA]=0,BLANK(),([%HORAS_TIEMPO_PARCIAL]-[%HORAS_TIEMPO_PARCIAL_AA])/[%HORAS_TIEMPO_PARCIAL_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "HORAS_PRESENCIA_ACUMAA",
            "expression": "CALCULATE([HORAS_PRESENCIA_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "HORAS_CALENDARIO_ACUMAA",
            "expression": "CALCULATE([HORAS_CALENDARIO_ACUM] ,\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "HORAS_COMPLEMENTARIAS_ACUMAA",
            "expression": "CALCULATE([HORAS_COMPLEMENTARIAS_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "HORAS_EXTRA_ACUMAA",
            "expression": "CALCULATE([HORAS_EXTRA_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "HORAS_ORDINARIAS_ACUMAA",
            "expression": "CALCULATE([HORAS_ORDINARIAS_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "HORAS_ABSENTISMO_ACUMAA",
            "expression": "CALCULATE([HORAS_ABSENTISMO_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "HORAS_AUSENTISMO_ACUMAA",
            "expression": "CALCULATE([HORAS_AUSENTISMO_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "HORAS_PLANIFICADAS_ACUMAA",
            "expression": "CALCULATE([HORAS_PLANIFICADAS_ACUM] ,\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "HORAS_REALES_ACUMAA",
            "expression": "CALCULATE([HORAS_REALES_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "%ABSENTISMO_ACUMAA_OLD",
            "expression": "CALCULATE([%ABSENTISMO_ACUM_OLD],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "%AUSENTISMO_ACUMAA_OLD",
            "expression": "CALCULATE([%AUSENTISMO_ACUM_OLD],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "%ABSENTISMO_ACUMAA",
            "expression": "CALCULATE([%ABSENTISMO_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "%AUSENTISMO_ACUMAA",
            "expression": "CALCULATE([%AUSENTISMO_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "HORAS_REALES_AJUSTADAS_ACUMAA",
            "expression": "CALCULATE([HORAS_REALES_AJUSTADAS_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "%HORAS_TIEMPO_PARCIAL_ACUMAA",
            "expression": "CALCULATE([%HORAS_TIEMPO_PARCIAL_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "HORAS_PRESENCIA_DACUMAA",
            "expression": "IF(ISBLANK([HORAS_PRESENCIA_ACUM]) && ISBLANK([HORAS_PRESENCIA_ACUMAA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_PRESENCIA_ACUM]=0 || [HORAS_PRESENCIA_ACUMAA]=0,0,([HORAS_PRESENCIA_ACUM]-[HORAS_PRESENCIA_ACUMAA])/[HORAS_PRESENCIA_ACUMAA]))",
            "formatString": "0.00 %;-0.00 %;0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "HORAS_CALENDARIO_DACUMAA",
            "expression": "IF(ISBLANK([HORAS_CALENDARIO_ACUM]) && ISBLANK([HORAS_CALENDARIO_ACUMAA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_CALENDARIO_ACUM]=0 || [HORAS_CALENDARIO_ACUMAA]=0,0,([HORAS_CALENDARIO_ACUM]-[HORAS_CALENDARIO_ACUMAA])/[HORAS_CALENDARIO_ACUMAA]))",
            "formatString": "0.00 %;-0.00 %;0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "HORAS_COMPLEMENTARIAS_DACUMAA",
            "expression": "IF(AND(ISBLANK([HORAS_COMPLEMENTARIAS_ACUM]),ISBLANK([HORAS_COMPLEMENTARIAS_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR([HORAS_COMPLEMENTARIAS_ACUM]=0,[HORAS_COMPLEMENTARIAS_ACUMAA]=0),0,([HORAS_COMPLEMENTARIAS_ACUM]-[HORAS_COMPLEMENTARIAS_ACUMAA])/[HORAS_COMPLEMENTARIAS_ACUMAA]))",
            "formatString": "0.00 %;-0.00 %;0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "HORAS_EXTRA_DACUMAA",
            "expression": "IF(OR(ISBLANK([HORAS_EXTRA_ACUM]),ISBLANK([HORAS_EXTRA_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_EXTRA_ACUMAA]=0,BLANK(),([HORAS_EXTRA_ACUM]-[HORAS_EXTRA_ACUMAA])/[HORAS_EXTRA_ACUMAA]))",
            "formatString": "0.00 %;-0.00 %;0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "HORAS_ORDINARIAS_DACUMAA",
            "expression": "IF(OR(ISBLANK([HORAS_ORDINARIAS_ACUM]),ISBLANK([HORAS_ORDINARIAS_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_ORDINARIAS_ACUMAA]=0,BLANK(),([HORAS_ORDINARIAS_ACUM]-[HORAS_ORDINARIAS_ACUMAA])/[HORAS_ORDINARIAS_ACUMAA]))",
            "formatString": "0.00 %;-0.00 %;0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "HORAS_ABSENTISMO_DACUMAA",
            "expression": "IF(OR(ISBLANK([HORAS_ABSENTISMO_ACUM]),ISBLANK([HORAS_ABSENTISMO_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_ABSENTISMO_ACUMAA]=0,BLANK(),([HORAS_ABSENTISMO_ACUM]-[HORAS_ABSENTISMO_ACUMAA])/[HORAS_ABSENTISMO_ACUMAA]))",
            "formatString": "0.00 %;-0.00 %;0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "HORAS_AUSENTISMO_DACUMAA",
            "expression": "IF(OR(ISBLANK([HORAS_AUSENTISMO_ACUM]),ISBLANK([HORAS_AUSENTISMO_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_AUSENTISMO_ACUMAA]=0,BLANK(),([HORAS_AUSENTISMO_ACUM]-[HORAS_AUSENTISMO_ACUMAA])/[HORAS_AUSENTISMO_ACUMAA]))",
            "formatString": "0.00 %;-0.00 %;0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "HORAS_PLANIFICADAS_DACUMAA",
            "expression": "IF(OR(ISBLANK([HORAS_PLANIFICADAS_ACUM]),ISBLANK([HORAS_PLANIFICADAS_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_PLANIFICADAS_ACUMAA]=0,BLANK(),([HORAS_PLANIFICADAS_ACUM]-[HORAS_PLANIFICADAS_ACUMAA])/[HORAS_PLANIFICADAS_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "HORAS_REALES_DACUMAA",
            "expression": "IF(OR(ISBLANK([HORAS_REALES_ACUM]),ISBLANK([HORAS_REALES_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_REALES_ACUMAA]=0,BLANK(),([HORAS_REALES_ACUM]-[HORAS_REALES_ACUMAA])/[HORAS_REALES_ACUMAA]))",
            "formatString": "0.00 %;-0.00 %;0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "%ABSENTISMO_DACUMAA_OLD",
            "expression": "IF(OR(ISBLANK([%ABSENTISMO_ACUM_OLD]),ISBLANK([%ABSENTISMO_ACUMAA_OLD])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%ABSENTISMO_ACUMAA_OLD]=0,BLANK(),([%ABSENTISMO_ACUM_OLD]-[%ABSENTISMO_ACUMAA_OLD])/[%ABSENTISMO_ACUMAA_OLD]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "%AUSENTISMO_DACUMAA_OLD",
            "expression": "IF(OR(ISBLANK([%AUSENTISMO_ACUM_OLD]),ISBLANK([%AUSENTISMO_ACUMAA_OLD])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%AUSENTISMO_ACUMAA_OLD]=0,BLANK(),([%AUSENTISMO_ACUM_OLD]-[%AUSENTISMO_ACUMAA_OLD])/[%AUSENTISMO_ACUMAA_OLD]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "%AUSENTISMO_DACUMAA",
            "expression": "IF(OR(ISBLANK([%AUSENTISMO_ACUM]),ISBLANK([%AUSENTISMO_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%AUSENTISMO_ACUMAA]=0,BLANK(),([%AUSENTISMO_ACUM]-[%AUSENTISMO_ACUMAA])/[%AUSENTISMO_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "%ABSENTISMO_DACUMAA",
            "expression": "IF(OR(ISBLANK([%ABSENTISMO_ACUM]),ISBLANK([%ABSENTISMO_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%ABSENTISMO_ACUMAA]=0,BLANK(),([%ABSENTISMO_ACUM]-[%ABSENTISMO_ACUMAA])/[%ABSENTISMO_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "HORAS_REALES_AJUSTADAS_DACUMAA",
            "expression": "IF(OR(ISBLANK([HORAS_REALES_AJUSTADAS_ACUM]),ISBLANK([HORAS_REALES_AJUSTADAS_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_REALES_AJUSTADAS_ACUMAA]=0,BLANK(),([HORAS_REALES_AJUSTADAS_ACUM]-[HORAS_REALES_AJUSTADAS_ACUMAA])/[HORAS_REALES_AJUSTADAS_ACUMAA]))",
            "formatString": "0.00 %;-0.00 %;0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "%HORAS_TIEMPO_PARCIAL_DACUMAA",
            "expression": "IF(OR(ISBLANK([%HORAS_TIEMPO_PARCIAL_ACUM]),ISBLANK([%HORAS_TIEMPO_PARCIAL_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%HORAS_TIEMPO_PARCIAL_ACUMAA]=0,BLANK(),([%HORAS_TIEMPO_PARCIAL_ACUM]-[%HORAS_TIEMPO_PARCIAL_ACUMAA])/[%HORAS_TIEMPO_PARCIAL_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "HORAS_PRESENCIA_CIERRE",
            "expression": "CALCULATE([HORAS_PRESENCIA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "HORAS_CALENDARIO_CIERRE",
            "expression": "CALCULATE([HORAS_CALENDARIO],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "HORAS_COMPLEMENTARIAS_CIERRE",
            "expression": "CALCULATE([HORAS_COMPLEMENTARIAS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "HORAS_EXTRA_CIERRE",
            "expression": "CALCULATE([HORAS_EXTRA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "HORAS_ORDINARIAS_CIERRE",
            "expression": "CALCULATE([HORAS_ORDINARIAS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "HORAS_ABSENTISMO_CIERRE",
            "expression": "CALCULATE([HORAS_ABSENTISMO],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "HORAS_AUSENTISMO_CIERRE",
            "expression": "CALCULATE([HORAS_AUSENTISMO],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "HORAS_PLANIFICADAS_CIERRE",
            "expression": "CALCULATE([HORAS_PLANIFICADAS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "HORAS_REALES_CIERRE",
            "expression": "CALCULATE([HORAS_REALES],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "%ABSENTISMO_CIERRE_OLD",
            "expression": "CALCULATE([%ABSENTISMO_OLD],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "HORAS_CIERRE_OLD"
          },
          {
            "name": "%AUSENTISMO_CIERRE_OLD",
            "expression": "CALCULATE([%AUSENTISMO_OLD],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "%AUSENTISMO_CIERRE",
            "expression": "CALCULATE([%AUSENTISMO],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "%ABSENTISMO_CIERRE",
            "expression": "CALCULATE([%ABSENTISMO],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "HORAS_REALES_AJUSTADAS_CIERRE",
            "expression": "CALCULATE([HORAS_REALES_AJUSTADAS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "%HORAS_TIEMPO_PARCIAL_CIERRE",
            "expression": "CALCULATE([%HORAS_TIEMPO_PARCIAL],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "HORAS_PRESENCIA_DCIERRE",
            "expression": "IF(OR(ISBLANK([HORAS_PRESENCIA_ACUM]),ISBLANK([HORAS_PRESENCIA_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_PRESENCIA_CIERRE]=0,BLANK(),([HORAS_PRESENCIA_ACUM]-[HORAS_PRESENCIA_CIERRE])/[HORAS_PRESENCIA_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "HORAS_CALENDARIO_DCIERRE",
            "expression": "IF(OR(ISBLANK([HORAS_CALENDARIO_ACUM]),ISBLANK([HORAS_CALENDARIO_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_CALENDARIO_CIERRE]=0,BLANK(),([HORAS_CALENDARIO_ACUM]-[HORAS_CALENDARIO_CIERRE])/[HORAS_CALENDARIO_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "HORAS_COMPLEMENTARIAS_DCIERRE",
            "expression": "IF(OR(ISBLANK([HORAS_COMPLEMENTARIAS_ACUM]),ISBLANK([HORAS_COMPLEMENTARIAS_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_COMPLEMENTARIAS_CIERRE]=0,BLANK(),([HORAS_COMPLEMENTARIAS_ACUM]-[HORAS_COMPLEMENTARIAS_CIERRE])/[HORAS_COMPLEMENTARIAS_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "HORAS_EXTRA_DCIERRE",
            "expression": "IF(OR(ISBLANK([HORAS_EXTRA_CIERRE]),ISBLANK([HORAS_EXTRA_ACUM])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_EXTRA_CIERRE]=0,BLANK(),([HORAS_EXTRA_ACUM]-[HORAS_EXTRA_CIERRE])/[HORAS_EXTRA_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "HORAS_ORDINARIAS_DCIERRE",
            "expression": "IF(OR(ISBLANK([HORAS_ORDINARIAS_CIERRE]),ISBLANK([HORAS_ORDINARIAS_ACUM])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_ORDINARIAS_CIERRE]=0,BLANK(),([HORAS_ORDINARIAS_ACUM]-[HORAS_ORDINARIAS_CIERRE])/[HORAS_ORDINARIAS_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "HORAS_ABSENTISMO_DCIERRE",
            "expression": "IF(OR(ISBLANK([HORAS_ABSENTISMO_ACUM]),ISBLANK([HORAS_ABSENTISMO_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_ABSENTISMO_CIERRE]=0,BLANK(),([HORAS_ABSENTISMO_ACUM]-[HORAS_ABSENTISMO_CIERRE])/[HORAS_ABSENTISMO_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "HORAS_AUSENTISMO_DCIERRE",
            "expression": "IF(OR(ISBLANK([HORAS_AUSENTISMO_ACUM]),ISBLANK([HORAS_AUSENTISMO_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_AUSENTISMO_CIERRE]=0,BLANK(),([HORAS_AUSENTISMO_ACUM]-[HORAS_AUSENTISMO_CIERRE])/[HORAS_AUSENTISMO_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "HORAS_PLANIFICADAS_DCIERRE",
            "expression": "IF(OR(ISBLANK([HORAS_PLANIFICADAS_ACUM]),ISBLANK([HORAS_PLANIFICADAS_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_PLANIFICADAS_CIERRE]=0,BLANK(),([HORAS_PLANIFICADAS_ACUM]-[HORAS_PLANIFICADAS_CIERRE])/[HORAS_PLANIFICADAS_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "HORAS_REALES_DCIERRE",
            "expression": "IF(OR(ISBLANK([HORAS_REALES_ACUM]),ISBLANK([HORAS_REALES_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_REALES_CIERRE]=0,BLANK(),([HORAS_REALES_ACUM]-[HORAS_REALES_CIERRE])/[HORAS_REALES_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "%ABSENTISMO_DCIERRE_OLD",
            "expression": "IF(OR(ISBLANK([%ABSENTISMO_ACUM_OLD]),ISBLANK([%ABSENTISMO_CIERRE_OLD])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%ABSENTISMO_CIERRE_OLD]=0,BLANK(),([%ABSENTISMO_ACUM_OLD]-[%ABSENTISMO_CIERRE_OLD])/[%ABSENTISMO_CIERRE_OLD]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "%AUSENTISMO_DCIERRE_OLD",
            "expression": "IF(OR(ISBLANK([%AUSENTISMO_ACUM_OLD]),ISBLANK([%AUSENTISMO_CIERRE_OLD])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%AUSENTISMO_CIERRE_OLD]=0,BLANK(),([%AUSENTISMO_ACUM_OLD]-[%AUSENTISMO_CIERRE_OLD])/[%AUSENTISMO_CIERRE_OLD]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "%AUSENTISMO_DCIERRE",
            "expression": "IF(OR(ISBLANK([%AUSENTISMO_ACUM]),ISBLANK([%AUSENTISMO_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%AUSENTISMO_CIERRE]=0,BLANK(),([%AUSENTISMO_ACUM]-[%AUSENTISMO_CIERRE])/[%AUSENTISMO_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "%ABSENTISMO_DCIERRE",
            "expression": "IF(OR(ISBLANK([%ABSENTISMO_ACUM]),ISBLANK([%ABSENTISMO_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%ABSENTISMO_CIERRE]=0,BLANK(),([%ABSENTISMO_ACUM]-[%ABSENTISMO_CIERRE])/[%ABSENTISMO_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "HORAS_REALES_AJUSTADAS_DCIERRE",
            "expression": "IF(OR(ISBLANK([HORAS_REALES_AJUSTADAS_ACUM]),ISBLANK([HORAS_REALES_AJUSTADAS_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_REALES_AJUSTADAS_CIERRE]=0,BLANK(),([HORAS_REALES_AJUSTADAS_ACUM]-[HORAS_REALES_AJUSTADAS_CIERRE])/[HORAS_REALES_AJUSTADAS_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "%HORAS_TIEMPO_PARCIAL_DCIERRE",
            "expression": "IF(OR(ISBLANK([%HORAS_TIEMPO_PARCIAL_ACUM]),ISBLANK([%HORAS_TIEMPO_PARCIAL_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%HORAS_TIEMPO_PARCIAL_CIERRE]=0,BLANK(),([%HORAS_TIEMPO_PARCIAL_ACUM]-[%HORAS_TIEMPO_PARCIAL_CIERRE])/[%HORAS_TIEMPO_PARCIAL_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PLANTILLA_PLANIFICADA",
            "description": "Sumatorio de la plantila planificada",
            "expression": "CALCULATE(DISTINCTCOUNT(HORAS[PLANTILLA_PLANIFICADA_PONDERADAS_RAW]), NOT(ISBLANK(HORAS[PLANTILLA_PLANIFICADA_PONDERADAS_RAW])))",
            "formatString": "#,0",
            "displayFolder": "HORAS"
          },
          {
            "name": "PLANTILLA_PLANIFICADA_AA",
            "expression": "CALCULATE([PLANTILLA_PLANIFICADA],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PLANTILLA_PLANIFICADA_ACUM",
            "expression": "IF(ISBLANK([PLANTILLA_PLANIFICADA]),BLANK(),TOTALYTD([PLANTILLA_PLANIFICADA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "PLANTILLA_PLANIFICADA_DAA",
            "expression": "IF(ISBLANK([PLANTILLA_PLANIFICADA]) || ISBLANK([PLANTILLA_PLANIFICADA_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([PLANTILLA_PLANIFICADA_AA]=0,BLANK(),([PLANTILLA_PLANIFICADA]-[PLANTILLA_PLANIFICADA_AA])/[PLANTILLA_PLANIFICADA_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PLANTILLA_PLANIFICADA_ACUMAA",
            "expression": "CALCULATE([PLANTILLA_PLANIFICADA_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PLANTILLA_PLANIFICADA_DACUMAA",
            "expression": "IF(OR(ISBLANK([PLANTILLA_PLANIFICADA_ACUM]),ISBLANK([PLANTILLA_PLANIFICADA_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([PLANTILLA_PLANIFICADA_ACUMAA]=0,BLANK(),([PLANTILLA_PLANIFICADA_ACUM]-[PLANTILLA_PLANIFICADA_ACUMAA])/[PLANTILLA_PLANIFICADA_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PLANTILLA_PLANIFICADA_CIERRE",
            "expression": "CALCULATE([PLANTILLA_PLANIFICADA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "PLANTILLA_PLANIFICADA_DCIERRE",
            "expression": "IF(OR(ISBLANK([PLANTILLA_PLANIFICADA_ACUM]),ISBLANK([PLANTILLA_PLANIFICADA_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([PLANTILLA_PLANIFICADA_CIERRE]=0,BLANK(),([PLANTILLA_PLANIFICADA_ACUM]-[PLANTILLA_PLANIFICADA_CIERRE])/[PLANTILLA_PLANIFICADA_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PLANTILLA_AUSENTISMO_AA",
            "expression": "CALCULATE([PLANTILLA_AUSENTISMO],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PLANTILLA_AUSENTISMO_ACUM",
            "expression": "IF(ISBLANK([PLANTILLA_AUSENTISMO]),BLANK(),TOTALYTD([PLANTILLA_AUSENTISMO],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "PLANTILLA_AUSENTISMO_DAA",
            "expression": "IF(ISBLANK([PLANTILLA_AUSENTISMO]) || ISBLANK([PLANTILLA_AUSENTISMO_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([PLANTILLA_AUSENTISMO_AA]=0,BLANK(),([PLANTILLA_AUSENTISMO]-[PLANTILLA_AUSENTISMO_AA])/[PLANTILLA_AUSENTISMO_AA]))",
            "formatString": "#,0",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PLANTILLA_AUSENTISMO_ACUMAA",
            "expression": "CALCULATE([PLANTILLA_AUSENTISMO_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PLANTILLA_AUSENTISMO_DACUMAA",
            "expression": "IF(OR(ISBLANK([PLANTILLA_AUSENTISMO_ACUM]),ISBLANK([PLANTILLA_AUSENTISMO_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([PLANTILLA_AUSENTISMO_ACUMAA]=0,BLANK(),([PLANTILLA_AUSENTISMO_ACUM]-[PLANTILLA_AUSENTISMO_ACUMAA])/[PLANTILLA_AUSENTISMO_ACUMAA]))",
            "formatString": "#,0",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PLANTILLA_AUSENTISMO_CIERRE",
            "expression": "CALCULATE([PLANTILLA_AUSENTISMO],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "PLANTILLA_AUSENTISMO_DCIERRE",
            "expression": "IF(OR(ISBLANK([PLANTILLA_AUSENTISMO_ACUM]),ISBLANK([PLANTILLA_AUSENTISMO_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([PLANTILLA_AUSENTISMO_CIERRE]=0,BLANK(),([PLANTILLA_AUSENTISMO_ACUM]-[PLANTILLA_AUSENTISMO_CIERRE])/[PLANTILLA_AUSENTISMO_CIERRE]))",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PLANTILLA_EFECTIVA",
            "description": "Sumatorio del numero de empleados  planificados - plantilla ausentismo",
            "expression": "CALCULATE(DISTINCTCOUNT(HORAS[PLANTILLA_PLANIFICADA_PONDERADAS_RAW]), NOT(ISBLANK(HORAS[PLANTILLA_PLANIFICADA_PONDERADAS_RAW])))-[PLANTILLA_AUSENTISMO]",
            "formatString": "#,0",
            "displayFolder": "HORAS"
          },
          {
            "name": "PLANTILLA_EFECTIVA_AA",
            "expression": "CALCULATE([PLANTILLA_EFECTIVA],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PLANTILLA_EFECTIVA_ACUM",
            "expression": "IF(ISBLANK([PLANTILLA_EFECTIVA]),BLANK(),TOTALYTD([PLANTILLA_EFECTIVA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "PLANTILLA_EFECTIVA_DAA",
            "expression": "IF(ISBLANK([PLANTILLA_EFECTIVA]) || ISBLANK([PLANTILLA_EFECTIVA_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([PLANTILLA_EFECTIVA_AA]=0,BLANK(),([PLANTILLA_EFECTIVA]-[PLANTILLA_EFECTIVA_AA])/[PLANTILLA_EFECTIVA_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PLANTILLA_EFECTIVA_ACUMAA",
            "expression": "CALCULATE([PLANTILLA_EFECTIVA_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PLANTILLA_EFECTIVA_DACUMAA",
            "expression": "IF(OR(ISBLANK([PLANTILLA_EFECTIVA_ACUM]),ISBLANK([PLANTILLA_EFECTIVA_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([PLANTILLA_EFECTIVA_ACUMAA]=0,BLANK(),([PLANTILLA_EFECTIVA_ACUM]-[PLANTILLA_EFECTIVA_ACUMAA])/[PLANTILLA_EFECTIVA_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PLANTILLA_EFECTIVA_CIERRE",
            "expression": "CALCULATE([PLANTILLA_EFECTIVA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "PLANTILLA_EFECTIVA_DCIERRE",
            "expression": "IF(OR(ISBLANK([PLANTILLA_EFECTIVA_ACUM]),ISBLANK([PLANTILLA_EFECTIVA_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([PLANTILLA_EFECTIVA_CIERRE]=0,BLANK(),([PLANTILLA_EFECTIVA_ACUM]-[PLANTILLA_EFECTIVA_CIERRE])/[PLANTILLA_EFECTIVA_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "HORAS_EFECTIVAS",
            "description": "Horas planificadas - horas ausentismo",
            "expression": "[HORAS_PLANIFICADAS]-[HORAS_AUSENTISMO]",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_EFECTIVAS_AA",
            "expression": "CALCULATE([HORAS_EFECTIVAS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "HORAS_EFECTIVAS_ACUM",
            "expression": "IF(ISBLANK([HORAS_EFECTIVAS]),BLANK(),TOTALYTD([HORAS_EFECTIVAS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_EFECTIVAS_DAA",
            "expression": "IF(ISBLANK([HORAS_EFECTIVAS]) || ISBLANK([HORAS_EFECTIVAS_AA]) ,BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_EFECTIVAS_AA]= 0,BLANK(),([HORAS_EFECTIVAS]-[HORAS_EFECTIVAS_AA])/[HORAS_EFECTIVAS_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "HORAS_EFECTIVAS_ACUMAA",
            "expression": "CALCULATE([HORAS_EFECTIVAS_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "HORAS_EFECTIVAS_DACUMAA",
            "expression": "IF(AND(ISBLANK([HORAS_EFECTIVAS_ACUM]),ISBLANK([HORAS_EFECTIVAS_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR([HORAS_EFECTIVAS_ACUM]=0,[HORAS_EFECTIVAS_ACUMAA]=0),0,([HORAS_EFECTIVAS_ACUM]-[HORAS_EFECTIVAS_ACUMAA])/[HORAS_EFECTIVAS_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "HORAS_EFECTIVAS_CIERRE",
            "expression": "CALCULATE([HORAS_EFECTIVAS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "HORAS_EFECTIVAS_DCIERRE",
            "expression": "IF(OR(ISBLANK([HORAS_EFECTIVAS_ACUM]),ISBLANK([HORAS_EFECTIVAS_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_EFECTIVAS_CIERRE]=0,BLANK(),([HORAS_EFECTIVAS_ACUM]-[HORAS_EFECTIVAS_CIERRE])/[HORAS_EFECTIVAS_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "HORAS_INCIDENCIA",
            "description": "Sumatorio de horas incidencia",
            "expression": "if(SUM([HORAS_INCIDENCIA_RAW_AJUSTADAS]) =0,BLANK(),SUM([HORAS_INCIDENCIA_RAW_AJUSTADAS]) )",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_INCIDENCIA_AA",
            "expression": "CALCULATE([HORAS_INCIDENCIA],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "HORAS_INCIDENCIA_ACUM",
            "expression": "IF(ISBLANK([HORAS_INCIDENCIA]),BLANK(),TOTALYTD([HORAS_INCIDENCIA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_INCIDENCIA_DAA",
            "expression": "IF(ISBLANK([HORAS_INCIDENCIA]) || ISBLANK([HORAS_INCIDENCIA_AA]) ,BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_INCIDENCIA_AA]= 0,BLANK(),([HORAS_INCIDENCIA]-[HORAS_INCIDENCIA_AA])/[HORAS_INCIDENCIA_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "HORAS_INCIDENCIA_ACUMAA",
            "expression": "CALCULATE([HORAS_INCIDENCIA_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "HORAS_INCIDENCIA_DACUMAA",
            "expression": "IF(AND(ISBLANK([HORAS_INCIDENCIA_ACUM]),ISBLANK([HORAS_INCIDENCIA_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR([HORAS_INCIDENCIA_ACUM]=0,[HORAS_INCIDENCIA_ACUMAA]=0),0,([HORAS_INCIDENCIA_ACUM]-[HORAS_INCIDENCIA_ACUMAA])/[HORAS_INCIDENCIA_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "HORAS_INCIDENCIA_CIERRE",
            "expression": "CALCULATE([HORAS_INCIDENCIA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "HORAS_INCIDENCIA_DCIERRE",
            "expression": "IF(OR(ISBLANK([HORAS_INCIDENCIA_ACUM]),ISBLANK([HORAS_INCIDENCIA_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_INCIDENCIA_CIERRE]=0,BLANK(),([HORAS_INCIDENCIA_ACUM]-[HORAS_INCIDENCIA_CIERRE])/[HORAS_INCIDENCIA_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PLANTILLA_MAXIMA",
            "description": "Sumatorio de los empleados planificados y los empleados con vacaciones sin planificar",
            "expression": "CALCULATE(DISTINCTCOUNT(HORAS[PLANTILLA_PLANIFICADA_PONDERADAS_RAW]), NOT(ISBLANK(HORAS[PLANTILLA_PLANIFICADA_PONDERADAS_RAW])))+[PLANTILLA_VACACIONES]",
            "formatString": "#,0",
            "displayFolder": "HORAS"
          },
          {
            "name": "PLANTILLA_MAXIMA_AA",
            "expression": "CALCULATE([PLANTILLA_MAXIMA],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PLANTILLA_MAXIMA_ACUM",
            "expression": "IF(ISBLANK([PLANTILLA_MAXIMA]),BLANK(),TOTALYTD([PLANTILLA_MAXIMA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "PLANTILLA_MAXIMA_DAA",
            "expression": "IF(ISBLANK([PLANTILLA_MAXIMA]) || ISBLANK([PLANTILLA_MAXIMA_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([PLANTILLA_MAXIMA_AA]=0,BLANK(),([PLANTILLA_MAXIMA]-[PLANTILLA_MAXIMA_AA])/[PLANTILLA_MAXIMA_AA]))",
            "formatString": "#,0",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PLANTILLA_MAXIMA_ACUMAA",
            "expression": "CALCULATE([PLANTILLA_MAXIMA_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PLANTILLA_MAXIMA_DACUMAA",
            "expression": "IF(OR(ISBLANK([PLANTILLA_MAXIMA_ACUM]),ISBLANK([PLANTILLA_MAXIMA_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([PLANTILLA_MAXIMA_ACUMAA]=0,BLANK(),([PLANTILLA_MAXIMA_ACUM]-[PLANTILLA_MAXIMA_ACUMAA])/[PLANTILLA_MAXIMA_ACUMAA]))",
            "formatString": "#,0",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PLANTILLA_MAXIMA_CIERRE",
            "expression": "CALCULATE([PLANTILLA_MAXIMA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "PLANTILLA_MAXIMA_DCIERRE",
            "expression": "IF(OR(ISBLANK([PLANTILLA_MAXIMA_ACUM]),ISBLANK([PLANTILLA_MAXIMA_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([PLANTILLA_MAXIMA_CIERRE]=0,BLANK(),([PLANTILLA_MAXIMA_ACUM]-[PLANTILLA_MAXIMA_CIERRE])/[PLANTILLA_MAXIMA_CIERRE]))",
            "formatString": "#,0",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "DIAS_VACACIONES",
            "description": "Sumatorio de los días de vacacione para el periodo filtrado",
            "expression": "CALCULATE( DISTINCTCOUNT(HORAS[HORAS_VACACIONES_PONDERADAS_RAW]),HORAS[HORAS_VACACIONES_RAW]>0) ",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "DIAS_VACACIONES_ACUM",
            "expression": "IF(ISBLANK([DIAS_VACACIONES]),BLANK(),TOTALYTD([DIAS_VACACIONES],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "DIAS_VACACIONES_ACUMAA",
            "expression": "CALCULATE([DIAS_VACACIONES_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "DIAS_VACACIONES_CIERRE",
            "expression": "CALCULATE([DIAS_VACACIONES],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "DIAS_VACACIONES_AA",
            "expression": "CALCULATE([DIAS_VACACIONES],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "DIAS_VACACIONES_DAA",
            "expression": "IF(ISBLANK([DIAS_VACACIONES]) || ISBLANK([DIAS_VACACIONES_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([DIAS_VACACIONES_AA]=0,BLANK(),([DIAS_VACACIONES]-[DIAS_VACACIONES_AA])/[DIAS_VACACIONES_AA]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "DIAS_VACACIONES_DACUMAA",
            "expression": "IF(OR(ISBLANK([DIAS_VACACIONES_ACUM]),ISBLANK([DIAS_VACACIONES_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([DIAS_VACACIONES_ACUMAA]=0,BLANK(),([DIAS_VACACIONES_ACUM]-[DIAS_VACACIONES_ACUMAA])/[DIAS_VACACIONES_ACUMAA]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "DIAS_VACACIONES_DCIERRE",
            "expression": "IF(OR(ISBLANK([DIAS_VACACIONES_ACUM]),ISBLANK([DIAS_VACACIONES_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([DIAS_VACACIONES_CIERRE]=0,BLANK(),([DIAS_VACACIONES_ACUM]-[DIAS_VACACIONES_CIERRE])/[DIAS_VACACIONES_CIERRE]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PLANTILLA_VACACIONES",
            "description": "Sumatorio de los empleados de vacaciones para el periodo filtrado",
            "expression": "if(SUM([EMP_VAC_RAW])=0,blank(),CALCULATE( DISTINCTCOUNT(HORAS[ID_PERSONA_LOCAL]),HORAS[HORAS_VACACIONES_RAW]>0) )",
            "formatString": "#,0",
            "displayFolder": "HORAS"
          },
          {
            "name": "PLANTILLA_VACACIONES_AA",
            "expression": "CALCULATE([PLANTILLA_VACACIONES],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PLANTILLA_VACACIONES_ACUM",
            "expression": "IF(ISBLANK([PLANTILLA_VACACIONES]),BLANK(),TOTALYTD([PLANTILLA_VACACIONES],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "PLANTILLA_VACACIONES_DAA",
            "expression": "IF(ISBLANK([PLANTILLA_VACACIONES]) || ISBLANK([PLANTILLA_VACACIONES_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([PLANTILLA_VACACIONES_AA]=0,BLANK(),([PLANTILLA_VACACIONES]-[PLANTILLA_VACACIONES_AA])/[PLANTILLA_VACACIONES_AA]))",
            "formatString": "#,0",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PLANTILLA_VACACIONES_ACUMAA",
            "expression": "CALCULATE([PLANTILLA_VACACIONES_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PLANTILLA_VACACIONES_DACUMAA",
            "expression": "IF(OR(ISBLANK([PLANTILLA_VACACIONES_ACUM]),ISBLANK([PLANTILLA_VACACIONES_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([PLANTILLA_VACACIONES_ACUMAA]=0,BLANK(),([PLANTILLA_VACACIONES_ACUM]-[PLANTILLA_VACACIONES_ACUMAA])/[PLANTILLA_VACACIONES_ACUMAA]))",
            "formatString": "#,0",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PLANTILLA_VACACIONES_CIERRE",
            "expression": "CALCULATE([PLANTILLA_VACACIONES],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "PLANTILLA_VACACIONES_DCIERRE",
            "expression": "IF(OR(ISBLANK([PLANTILLA_VACACIONES_ACUM]),ISBLANK([PLANTILLA_VACACIONES_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([PLANTILLA_VACACIONES_CIERRE]=0,BLANK(),([PLANTILLA_VACACIONES_ACUM]-[PLANTILLA_VACACIONES_CIERRE])/[PLANTILLA_VACACIONES_CIERRE]))",
            "formatString": "#,0",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "HORAS_FALTAN",
            "description": "Sumatorio de las horas faltan para el periodo seleccionado",
            "expression": "IF(SUM([HORAS_FALTAN_PONDERADAS_RAW])=0,BLANK(),SUM([HORAS_FALTAN_PONDERADAS_RAW]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_FALTAN_AA",
            "expression": "CALCULATE([HORAS_FALTAN],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "HORAS_FALTAN_ACUM",
            "expression": "IF(ISBLANK([HORAS_FALTAN]),BLANK(),TOTALYTD([HORAS_FALTAN],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_FALTAN_DAA",
            "expression": "IF(ISBLANK([HORAS_FALTAN]) || ISBLANK([HORAS_FALTAN_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_FALTAN_AA]=0,blank(),([HORAS_FALTAN]-[HORAS_FALTAN_AA])/[HORAS_FALTAN_AA]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "HORAS_FALTAN_ACUMAA",
            "expression": "CALCULATE([HORAS_FALTAN_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "HORAS_FALTAN_DACUMAA",
            "expression": "IF(OR(ISBLANK([HORAS_FALTAN_ACUM]),ISBLANK([HORAS_FALTAN_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_FALTAN_ACUMAA]=0,BLANK(),([HORAS_FALTAN_ACUM]-[HORAS_FALTAN_ACUMAA])/[HORAS_FALTAN_ACUMAA]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "HORAS_FALTAN_CIERRE",
            "expression": "CALCULATE([HORAS_FALTAN],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "HORAS_FALTAN_DCIERRE",
            "expression": "IF(OR(ISBLANK([HORAS_FALTAN_ACUM]),ISBLANK([HORAS_FALTAN_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([HORAS_FALTAN_CIERRE]=0,BLANK(),([HORAS_FALTAN_ACUM]-[HORAS_FALTAN_CIERRE])/[HORAS_FALTAN_CIERRE]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "HORAS_COMPLEMENTARIAS_ACUM_REPORT",
            "expression": "TOTALYTD([HORAS_COMPLEMENTARIAS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\")",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_EXTRA_ACUM_REPORT",
            "expression": "TOTALYTD([HORAS_EXTRA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\")",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_DESCANSO",
            "expression": "SUM([HORAS_DESCANSO_RAW])",
            "isHidden": true,
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_DESCANSO_ACUM",
            "expression": "IF(ISBLANK([HORAS_DESCANSO]),BLANK(),TOTALYTD([HORAS_DESCANSO],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_DESCANSO_PLANIFICADAS",
            "description": "Sumatorio de las horas de descanso planificadas en holanda",
            "expression": "IF(SUM([HORAS_DESCANSO_PLANIFICADAS_NL])=0,BLANK(),SUM([HORAS_DESCANSO_PLANIFICADAS_NL]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_DESCANSO_REALES",
            "description": "Sumatorio de horas descanso reales en holanda",
            "expression": "IF(SUM([HORAS_DESCANSO_RAW_NL_PONDERADAS])=0,BLANK(),SUM([HORAS_DESCANSO_RAW_NL_PONDERADAS]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "PLANTILLA_REAL",
            "description": "Numero de personas distintas con horas reales en el periodo seleccionado",
            "expression": "CALCULATE( DISTINCTCOUNT(HORAS[ID_PERSONA_FECHA]),HORAS[HORAS_REALES_RAW_T]>0)",
            "formatString": "#,0",
            "displayFolder": "HORAS"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS",
            "description": "Horas efectivas ppto calculadas en el simulador a nivel de empresa mes",
            "expression": "SUM(PRESUPUESTO_EMPRESA[HORAS_EFECTIVAS_MES])",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "PPTO_HORAS_EXTRA",
            "description": "Horas extra presupuestadas calculadas en el simulador a nivel de empresa mes",
            "expression": " SUM(PRESUPUESTO_EMPRESA[HORAS_EXTRAS])",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "PPTO_HORAS_COMPLEMENTARIAS",
            "description": "Horas complementarias presupuestadas calculadas en el simulador a nivel de empresa mes",
            "expression": "SUM(PRESUPUESTO_EMPRESA[HORAS_COMPLEMENTARIAS])",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "PPTO_HORAS_NECESARIAS",
            "description": "Horas necesarias presupuestadas calculadas en el simulador a nivel de empresa mes",
            "expression": "SUM(PRESUPUESTO_EMPRESA[HORAS_TRABAJO_NECESARIAS])",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_AA",
            "expression": "CALCULATE([PPTO_HORAS_EFECTIVAS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PPTO_HORAS_EXTRA_AA",
            "expression": "CALCULATE([PPTO_HORAS_EXTRA],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PPTO_HORAS_COMPLEMENTARIAS_AA",
            "expression": "CALCULATE([PPTO_HORAS_COMPLEMENTARIAS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PPTO_HORAS_NECESARIAS_AA",
            "expression": "CALCULATE([PPTO_HORAS_NECESARIAS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_ACUM",
            "expression": "IF(ISBLANK([PPTO_HORAS_EFECTIVAS]),BLANK(),TOTALYTD([PPTO_HORAS_EFECTIVAS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "PPTO_HORAS_EXTRA_ACUM",
            "expression": "IF(ISBLANK([PPTO_HORAS_EXTRA]),BLANK(),TOTALYTD([PPTO_HORAS_EXTRA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "PPTO_HORAS_COMPLEMENTARIAS_ACUM",
            "expression": "IF(ISBLANK([PPTO_HORAS_EXTRA]),BLANK(),TOTALYTD([PPTO_HORAS_EXTRA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "PPTO_HORAS_NECESARIAS_ACUM",
            "expression": "IF(ISBLANK([PPTO_HORAS_NECESARIAS]),BLANK(),TOTALYTD([PPTO_HORAS_NECESARIAS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_ACUMAA",
            "expression": "CALCULATE([PPTO_HORAS_EFECTIVAS_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PPTO_HORAS_EXTRA_ACUMAA",
            "expression": "CALCULATE([PPTO_HORAS_EXTRA_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PPTO_HORAS_COMPLEMENTARIAS_ACUMAA",
            "expression": "CALCULATE([PPTO_HORAS_COMPLEMENTARIAS_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PPTO_HORAS_NECESARIAS_ACUMAA",
            "expression": "CALCULATE([PPTO_HORAS_COMPLEMENTARIAS_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_ACUM]),[PPTO_HORAS_EFECTIVAS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_ACUMAA]),[PPTO_HORAS_EFECTIVAS_ACUMAA]=0),BLANK(),([PPTO_HORAS_EFECTIVAS_ACUM]-[PPTO_HORAS_EFECTIVAS_ACUMAA])/[PPTO_HORAS_EFECTIVAS_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PPTO_HORAS_EXTRA_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_EXTRA_ACUM]),[PPTO_HORAS_EXTRA_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_EXTRA_ACUMAA]),[PPTO_HORAS_EXTRA_ACUMAA]=0),BLANK(),([PPTO_HORAS_EXTRA_ACUM]-[PPTO_HORAS_EXTRA_ACUMAA])/[PPTO_HORAS_EXTRA_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PPTO_HORAS_COMPLEMENTARIAS_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_COMPLEMENTARIAS_ACUM]),[PPTO_HORAS_COMPLEMENTARIAS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_COMPLEMENTARIAS_ACUMAA]),[PPTO_HORAS_COMPLEMENTARIAS_ACUMAA]=0),BLANK(),([PPTO_HORAS_COMPLEMENTARIAS_ACUM]-[PPTO_HORAS_COMPLEMENTARIAS_ACUMAA])/[PPTO_HORAS_COMPLEMENTARIAS_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PPTO_HORAS_NECESARIAS_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_NECESARIAS_ACUM]),[PPTO_HORAS_NECESARIAS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_NECESARIAS_ACUMAA]),[PPTO_HORAS_NECESARIAS_ACUMAA]=0),BLANK(),([PPTO_HORAS_NECESARIAS_ACUM]-[PPTO_HORAS_NECESARIAS_ACUMAA])/[PPTO_HORAS_NECESARIAS_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS]),[PPTO_HORAS_EFECTIVAS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_AA]),[PPTO_HORAS_EFECTIVAS_AA]=0),BLANK(),([PPTO_HORAS_EFECTIVAS]-[PPTO_HORAS_EFECTIVAS_AA])/[PPTO_HORAS_EFECTIVAS_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PPTO_HORAS_EXTRA_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_EXTRA]),[PPTO_HORAS_EXTRA]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_EXTRA_AA]),[PPTO_HORAS_EXTRA_AA]=0),BLANK(),([PPTO_HORAS_EXTRA]-[PPTO_HORAS_EXTRA_AA])/[PPTO_HORAS_EXTRA_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PPTO_HORAS_COMPLEMENTARIAS_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_COMPLEMENTARIAS]),[PPTO_HORAS_COMPLEMENTARIAS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_COMPLEMENTARIAS_AA]),[PPTO_HORAS_COMPLEMENTARIAS_AA]=0),BLANK(),([PPTO_HORAS_COMPLEMENTARIAS]-[PPTO_HORAS_COMPLEMENTARIAS_AA])/[PPTO_HORAS_COMPLEMENTARIAS_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PPTO_HORAS_NECESARIAS_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_NECESARIAS]),[PPTO_HORAS_NECESARIAS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_NECESARIAS_AA]),[PPTO_HORAS_NECESARIAS_AA]=0),BLANK(),([PPTO_HORAS_NECESARIAS]-[PPTO_HORAS_NECESARIAS_AA])/[PPTO_HORAS_NECESARIAS_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_CIERRE",
            "expression": "CALCULATE([PPTO_HORAS_EFECTIVAS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PPTO_HORAS_EXTRA_CIERRE",
            "expression": "CALCULATE([PPTO_HORAS_EXTRA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PPTO_HORAS_COMPLEMENTARIAS_CIERRE",
            "expression": "CALCULATE([PPTO_HORAS_COMPLEMENTARIAS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PPTO_HORAS_NECESARIAS_CIERRE",
            "expression": "CALCULATE([PPTO_HORAS_NECESARIAS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_ACUM]),[PPTO_HORAS_EFECTIVAS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_CIERRE]),[PPTO_HORAS_EFECTIVAS_CIERRE]=0),BLANK(),([PPTO_HORAS_EFECTIVAS_ACUM]-[PPTO_HORAS_EFECTIVAS_CIERRE])/[PPTO_HORAS_EFECTIVAS_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PPTO_HORAS_NECESARIAS_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_NECESARIAS_ACUM]),[PPTO_HORAS_NECESARIAS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_NECESARIAS_CIERRE]),[PPTO_HORAS_NECESARIAS_CIERRE]=0),BLANK(),([PPTO_HORAS_NECESARIAS_ACUM]-[PPTO_HORAS_NECESARIAS_CIERRE])/[PPTO_HORAS_NECESARIAS_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PPTO_HORAS_COMPLEMENTARIAS_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_COMPLEMENTARIAS_ACUM]),[PPTO_HORAS_COMPLEMENTARIAS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_COMPLEMENTARIAS_CIERRE]),[PPTO_HORAS_COMPLEMENTARIAS_CIERRE]=0),BLANK(),([PPTO_HORAS_COMPLEMENTARIAS_ACUM]-[PPTO_HORAS_COMPLEMENTARIAS_CIERRE])/[PPTO_HORAS_COMPLEMENTARIAS_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PPTO_HORAS_EXTRA_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_EXTRA_ACUM]),[PPTO_HORAS_EXTRA_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_EXTRA_CIERRE]),[PPTO_HORAS_EXTRA_CIERRE]=0),BLANK(),([PPTO_HORAS_EXTRA_ACUM]-[PPTO_HORAS_EXTRA_CIERRE])/[PPTO_HORAS_EXTRA_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PPTO_HORAS_TEORICAS",
            "description": "Horas teoricas presupuestadas a nivel empresa-mes",
            "expression": "SUM(PRESUPUESTO_EMPRESA[HORAS_TEORICAS_TOTALES])",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_AA",
            "expression": "CALCULATE([PPTO_HORAS_TEORICAS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_ACUM",
            "expression": "IF(ISBLANK([PPTO_HORAS_TEORICAS]),BLANK(),TOTALYTD([PPTO_HORAS_TEORICAS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_ACUMAA",
            "expression": "CALCULATE([PPTO_HORAS_TEORICAS_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_TEORICAS_ACUM]),[PPTO_HORAS_TEORICAS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_TEORICAS_ACUMAA]),[PPTO_HORAS_TEORICAS_ACUMAA]=0),BLANK(),([PPTO_HORAS_TEORICAS_ACUM]-[PPTO_HORAS_TEORICAS_ACUMAA])/[PPTO_HORAS_TEORICAS_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_TEORICAS]),[PPTO_HORAS_TEORICAS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_TEORICAS_AA]),[PPTO_HORAS_TEORICAS_AA]=0),BLANK(),([PPTO_HORAS_TEORICAS]-[PPTO_HORAS_TEORICAS_AA])/[PPTO_HORAS_TEORICAS_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_CIERRE",
            "expression": "CALCULATE([PPTO_HORAS_TEORICAS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_TEORICAS_ACUM]),[PPTO_HORAS_TEORICAS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_TEORICAS_CIERRE]),[PPTO_HORAS_TEORICAS_CIERRE]=0),BLANK(),([PPTO_HORAS_TEORICAS_ACUM]-[PPTO_HORAS_TEORICAS_CIERRE])/[PPTO_HORAS_TEORICAS_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PPTO_%ABSENTISMO_MENSUAL_EVENTUALES",
            "description": "%Absentismo eventuales presupuestado calculadas en el simulador a nivel de empresa mes",
            "expression": "AVERAGE(PRESUPUESTO_EMPRESA[PORCENTAJE_ABSENTISMO_EVENTUALES])/100",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS"
          },
          {
            "name": "PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS",
            "description": "%Absentismo indefinidos presupuestado calculadas en el simulador a nivel de empresa mes",
            "expression": " (HORAS[PPTO_HORAS_TEORICAS_INDEFINIDOS]-HORAS[PPTO_HORAS_EFECTIVAS_INDEFINIDOS])/HORAS[PPTO_HORAS_TEORICAS_INDEFINIDOS]",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS"
          },
          {
            "name": "PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_AA",
            "expression": "CALCULATE([PPTO_%ABSENTISMO_MENSUAL_EVENTUALES],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_AA",
            "expression": "CALCULATE([PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_ACUM",
            "expression": "IF(ISBLANK([PPTO_%ABSENTISMO_MENSUAL_EVENTUALES]),BLANK(),TOTALYTD([PPTO_%ABSENTISMO_MENSUAL_EVENTUALES],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_ACUM",
            "expression": "IF(ISBLANK([PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS]),BLANK(),TOTALYTD([PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_ACUMAA",
            "expression": "CALCULATE([PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_ACUMAA",
            "expression": "CALCULATE([PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_ACUM]),[PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_ACUMAA]),[PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_ACUMAA]=0),BLANK(),([PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_ACUM]-[PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_ACUMAA])/[PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_ACUM]),[PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_ACUMAA]),[PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_ACUMAA]=0),BLANK(),([PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_ACUM]-[PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_ACUMAA])/[PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_%ABSENTISMO_MENSUAL_EVENTUALES]),[PPTO_%ABSENTISMO_MENSUAL_EVENTUALES]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_AA]),[PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_AA]=0),BLANK(),([PPTO_%ABSENTISMO_MENSUAL_EVENTUALES]-[PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_AA])/[PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS]),[PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_AA]),[PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_AA]=0),BLANK(),([PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS]-[PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_AA])/[PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_CIERRE",
            "expression": "CALCULATE([PPTO_%ABSENTISMO_MENSUAL_EVENTUALES],PREVIOUSYEAR(FECHA[FECHA],\"1/31\")) ",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_CIERRE",
            "expression": "CALCULATE([PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\")) ",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_ACUM]),[PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_CIERRE]),[PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_CIERRE]=0),BLANK(),([PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_ACUM]-[PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_CIERRE])/[PPTO_%ABSENTISMO_MENSUAL_EVENTUALES_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_ACUM]),[PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_CIERRE]),[PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_CIERRE]=0),BLANK(),([PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_ACUM]-[PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_CIERRE])/[PPTO_%ABSENTISMO_MENSUAL_INDEFINIDOS_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_INDEFINIDOS",
            "description": "Horas efectivas presupuestadas para los indefinidos a nivel empresa-mes",
            "expression": "SUM(PRESUPUESTO_EMPRESA[HORAS_EFECTIVAS_INDEFINIDOS])",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_INDEFINIDOS_AA",
            "expression": "CALCULATE([PPTO_HORAS_EFECTIVAS_INDEFINIDOS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_INDEFINIDOS_ACUM",
            "expression": "IF(ISBLANK([PPTO_HORAS_EFECTIVAS_INDEFINIDOS]),BLANK(),TOTALYTD([PPTO_HORAS_EFECTIVAS_INDEFINIDOS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_INDEFINIDOS_ACUMAA",
            "expression": "CALCULATE([PPTO_HORAS_EFECTIVAS_INDEFINIDOS_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_INDEFINIDOS_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_INDEFINIDOS_ACUM]),[PPTO_HORAS_EFECTIVAS_INDEFINIDOS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_INDEFINIDOS_ACUMAA]),[PPTO_HORAS_EFECTIVAS_INDEFINIDOS_ACUMAA]=0),BLANK(),([PPTO_HORAS_EFECTIVAS_INDEFINIDOS_ACUM]-[PPTO_HORAS_EFECTIVAS_INDEFINIDOS_ACUMAA])/[PPTO_HORAS_EFECTIVAS_INDEFINIDOS_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_INDEFINIDOS_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_INDEFINIDOS]),[PPTO_HORAS_EFECTIVAS_INDEFINIDOS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_INDEFINIDOS_AA]),[PPTO_HORAS_EFECTIVAS_INDEFINIDOS_AA]=0),BLANK(),([PPTO_HORAS_EFECTIVAS_INDEFINIDOS]-[PPTO_HORAS_EFECTIVAS_INDEFINIDOS_AA])/[PPTO_HORAS_EFECTIVAS_INDEFINIDOS_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_INDEFINIDOS_CIERRE",
            "expression": "CALCULATE([PPTO_HORAS_EFECTIVAS_INDEFINIDOS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_INDEFINIDOS_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_INDEFINIDOS_ACUM]),[PPTO_HORAS_EFECTIVAS_INDEFINIDOS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_INDEFINIDOS_CIERRE]),[PPTO_HORAS_EFECTIVAS_INDEFINIDOS_CIERRE]=0),BLANK(),([PPTO_HORAS_EFECTIVAS_INDEFINIDOS_ACUM]-[PPTO_HORAS_EFECTIVAS_INDEFINIDOS_CIERRE])/[PPTO_HORAS_EFECTIVAS_INDEFINIDOS_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_EVENTUALES",
            "description": "Horas efectivas presupuestadas para los eventuales a nivel empresa-mes",
            "expression": "SUM(PRESUPUESTO_EMPRESA[HORAS_EFECTIVAS_EVENTUALES])",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_EVENTUALES_AA",
            "expression": "CALCULATE([PPTO_HORAS_EFECTIVAS_EVENTUALES],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_EVENTUALES_ACUM",
            "expression": "IF(ISBLANK([PPTO_HORAS_EFECTIVAS_EVENTUALES]),BLANK(),TOTALYTD([PPTO_HORAS_EFECTIVAS_EVENTUALES],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_EVENTUALES_ACUMAA",
            "expression": "CALCULATE([PPTO_HORAS_EFECTIVAS_EVENTUALES_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_EVENTUALES_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_EVENTUALES_ACUM]),[PPTO_HORAS_EFECTIVAS_EVENTUALES_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_EVENTUALES_ACUMAA]),[PPTO_HORAS_EFECTIVAS_EVENTUALES_ACUMAA]=0),BLANK(),([PPTO_HORAS_EFECTIVAS_EVENTUALES_ACUM]-[PPTO_HORAS_EFECTIVAS_EVENTUALES_ACUMAA])/[PPTO_HORAS_EFECTIVAS_EVENTUALES_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_EVENTUALES_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_EVENTUALES]),[PPTO_HORAS_EFECTIVAS_EVENTUALES]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_EVENTUALES_AA]),[PPTO_HORAS_EFECTIVAS_EVENTUALES_AA]=0),BLANK(),([PPTO_HORAS_EFECTIVAS_EVENTUALES]-[PPTO_HORAS_EFECTIVAS_EVENTUALES_AA])/[PPTO_HORAS_EFECTIVAS_EVENTUALES_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_EVENTUALES_CIERRE",
            "expression": "CALCULATE([PPTO_HORAS_EFECTIVAS_EVENTUALES],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "PPTO_HORAS_EFECTIVAS_EVENTUALES_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_EVENTUALES_ACUM]),[PPTO_HORAS_EFECTIVAS_EVENTUALES_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_EFECTIVAS_EVENTUALES_CIERRE]),[PPTO_HORAS_EFECTIVAS_EVENTUALES_CIERRE]=0),BLANK(),([PPTO_HORAS_EFECTIVAS_EVENTUALES_ACUM]-[PPTO_HORAS_EFECTIVAS_EVENTUALES_CIERRE])/[PPTO_HORAS_EFECTIVAS_EVENTUALES_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_EVENTUALES",
            "description": "Horas teoricas presupuestadas para los eventuales a nivel empresa-mes",
            "expression": "SUM(PRESUPUESTO_EMPRESA[HORAS_TEORICAS_EVENTUALES])",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_EVENTUALES_AA",
            "expression": "CALCULATE([PPTO_HORAS_TEORICAS_EVENTUALES],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_EVENTUALES_ACUM",
            "expression": "IF(ISBLANK([PPTO_HORAS_TEORICAS_EVENTUALES]),BLANK(),TOTALYTD([PPTO_HORAS_TEORICAS_EVENTUALES],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_EVENTUALES_ACUMAA",
            "expression": "CALCULATE([PPTO_HORAS_TEORICAS_EVENTUALES_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_EVENTUALES_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_TEORICAS_EVENTUALES_ACUM]),[PPTO_HORAS_TEORICAS_EVENTUALES_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_TEORICAS_EVENTUALES_ACUMAA]),[PPTO_HORAS_TEORICAS_EVENTUALES_ACUMAA]=0),BLANK(),([PPTO_HORAS_TEORICAS_EVENTUALES_ACUM]-[PPTO_HORAS_TEORICAS_EVENTUALES_ACUMAA])/[PPTO_HORAS_TEORICAS_EVENTUALES_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_EVENTUALES_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_TEORICAS_EVENTUALES]),[PPTO_HORAS_TEORICAS_EVENTUALES]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_TEORICAS_EVENTUALES_AA]),[PPTO_HORAS_TEORICAS_EVENTUALES_AA]=0),BLANK(),([PPTO_HORAS_TEORICAS_EVENTUALES]-[PPTO_HORAS_TEORICAS_EVENTUALES_AA])/[PPTO_HORAS_TEORICAS_EVENTUALES_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_EVENTUALES_CIERRE",
            "expression": "CALCULATE([PPTO_HORAS_TEORICAS_EVENTUALES],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_EVENTUALES_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_TEORICAS_EVENTUALES_ACUM]),[PPTO_HORAS_TEORICAS_EVENTUALES_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_TEORICAS_EVENTUALES_CIERRE]),[PPTO_HORAS_TEORICAS_EVENTUALES_CIERRE]=0),BLANK(),([PPTO_HORAS_TEORICAS_EVENTUALES_ACUM]-[PPTO_HORAS_TEORICAS_EVENTUALES_CIERRE])/[PPTO_HORAS_TEORICAS_EVENTUALES_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_INDEFINIDOS",
            "description": "Horas teoricas presupuestadas para los indefinidos a nivel empresa-mes",
            "expression": "SUM(PRESUPUESTO_EMPRESA[HORAS_TEORICAS_INDEFINIDOS_MES])",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_INDEFINIDOS_AA",
            "expression": "CALCULATE([PPTO_HORAS_TEORICAS_INDEFINIDOS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_INDEFINIDOS_ACUM",
            "expression": "IF(ISBLANK([PPTO_HORAS_TEORICAS_INDEFINIDOS]),BLANK(),TOTALYTD([PPTO_HORAS_TEORICAS_INDEFINIDOS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_INDEFINIDOS_ACUMAA",
            "expression": "CALCULATE([PPTO_HORAS_TEORICAS_INDEFINIDOS_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_INDEFINIDOS_DACUMAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_TEORICAS_INDEFINIDOS_ACUM]),[PPTO_HORAS_TEORICAS_INDEFINIDOS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_TEORICAS_INDEFINIDOS_ACUMAA]),[PPTO_HORAS_TEORICAS_INDEFINIDOS_ACUMAA]=0),BLANK(),([PPTO_HORAS_TEORICAS_INDEFINIDOS_ACUM]-[PPTO_HORAS_TEORICAS_INDEFINIDOS_ACUMAA])/[PPTO_HORAS_TEORICAS_INDEFINIDOS_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_INDEFINIDOS_DAA",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_TEORICAS_INDEFINIDOS]),[PPTO_HORAS_TEORICAS_INDEFINIDOS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_TEORICAS_INDEFINIDOS_AA]),[PPTO_HORAS_TEORICAS_INDEFINIDOS_AA]=0),BLANK(),([PPTO_HORAS_TEORICAS_INDEFINIDOS]-[PPTO_HORAS_TEORICAS_INDEFINIDOS_AA])/[PPTO_HORAS_TEORICAS_INDEFINIDOS_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_INDEFINIDOS_CIERRE",
            "expression": "CALCULATE([PPTO_HORAS_TEORICAS_INDEFINIDOS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "PPTO_HORAS_TEORICAS_INDEFINIDOS_DCIERRE",
            "expression": "IF(OR(ISBLANK([PPTO_HORAS_TEORICAS_INDEFINIDOS_ACUM]),[PPTO_HORAS_TEORICAS_INDEFINIDOS_ACUM]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([PPTO_HORAS_TEORICAS_INDEFINIDOS_CIERRE]),[PPTO_HORAS_TEORICAS_INDEFINIDOS_CIERRE]=0),BLANK(),([PPTO_HORAS_TEORICAS_INDEFINIDOS_ACUM]-[PPTO_HORAS_TEORICAS_INDEFINIDOS_CIERRE])/[PPTO_HORAS_TEORICAS_INDEFINIDOS_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PLANTILLA_AUSENTISMO",
            "expression": "CALCULATE(DISTINCTCOUNT(HORAS[PLANTILLA_AUSENTISMO_PONDERADAS_RAW]), NOT(ISBLANK(HORAS[PLANTILLA_AUSENTISMO_PONDERADAS_RAW])))",
            "formatString": "0",
            "displayFolder": "HORAS"
          },
          {
            "name": "PLANTILLA_AUSENTISMO_DIARIA",
            "expression": "CALCULATE(DISTINCTCOUNT(HORAS[PLANTILLA_AUSENTISMO_DIA_PONDERADAS_RAW]), NOT(ISBLANK(HORAS[PLANTILLA_AUSENTISMO_DIA_PONDERADAS_RAW])))",
            "formatString": "0",
            "displayFolder": "HORAS"
          },
          {
            "name": "PLANTILLA_AUSENTISMO_DESGLOSE",
            "expression": "CALCULATE(DISTINCTCOUNT(HORAS[PLANTILLA_AUSENTISMO_DESGLOSE_PONDERADAS_RAW]), NOT(ISBLANK(HORAS[PLANTILLA_AUSENTISMO_DESGLOSE_PONDERADAS_RAW])))",
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_ER",
            "expression": "SUMX(FECHA,IF(FECHA[FECHA]<TODAY(),[HORAS_REALES],[HORAS_EFECTIVAS]))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS"
          },
          {
            "name": "HORAS_ER_AA",
            "expression": "CALCULATE([HORAS_ER],DATEADD(FECHA[FECHA],-1,YEAR))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "HORAS_ER_ACUM",
            "expression": "IF(ISBLANK([HORAS_ER]),BLANK(),TOTALYTD([HORAS_ER],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "HORAS_ER_ACUMAA",
            "expression": "CALCULATE([HORAS_ER_ACUM],DATEADD(FECHA[FECHA],-1,YEAR))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "HORAS_ER_CIERRE",
            "expression": "CALCULATE([HORAS_ER],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "HORAS_ER_DAA",
            "expression": "IF(ISBLANK([HORAS_ER]) || ISBLANK([HORAS_ER_AA]) ,BLANK(),IF([HORAS_ER_AA]= 0,BLANK(),([HORAS_ER]-[HORAS_ER_AA])/[HORAS_ER_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "HORAS_ER_DACUMAA",
            "expression": "IF(AND(ISBLANK([HORAS_ER_ACUM]),ISBLANK([HORAS_ER_ACUMAA])),BLANK(),IF(OR([HORAS_ER_ACUM]=0,[HORAS_ER_ACUMAA]=0),0,([HORAS_ER_ACUM]-[HORAS_ER_ACUMAA])/[HORAS_ER_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "HORAS_ER_DCIERRE",
            "expression": "IF(OR(ISBLANK([HORAS_ER_ACUM]),ISBLANK([HORAS_ER_CIERRE])),BLANK(),IF([HORAS_ER_CIERRE]=0,BLANK(),([HORAS_ER_ACUM]-[HORAS_ER_CIERRE])/[HORAS_ER_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          },
          {
            "name": "PLANTILLA_ER",
            "expression": "SUMX(FECHA,IF(FECHA[FECHA]<TODAY(),[PLANTILLA_REAL],[PLANTILLA_EFECTIVA]))",
            "formatString": "#,0",
            "displayFolder": "HORAS"
          },
          {
            "name": "PLANTILLA_ER_AA",
            "expression": "CALCULATE([PLANTILLA_ER],DATEADD(FECHA[FECHA],-1,YEAR))",
            "formatString": "#,0",
            "displayFolder": "HORAS_AA"
          },
          {
            "name": "PLANTILLA_ER_ACUM",
            "expression": "IF(ISBLANK([PLANTILLA_ER]),BLANK(),TOTALYTD([PLANTILLA_ER],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "HORAS_ACUM"
          },
          {
            "name": "PLANTILLA_ER_ACUMAA",
            "expression": "CALCULATE([PLANTILLA_ER_ACUM],DATEADD(FECHA[FECHA],-1,YEAR))",
            "formatString": "#,0",
            "displayFolder": "HORAS_ACUMAA"
          },
          {
            "name": "PLANTILLA_ER_CIERRE",
            "expression": "CALCULATE([PLANTILLA_ER],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "HORAS_CIERRE"
          },
          {
            "name": "PLANTILLA_ER_DAA",
            "expression": "IF(ISBLANK([PLANTILLA_ER]) || ISBLANK([PLANTILLA_ER_AA]) ,BLANK(),IF([PLANTILLA_ER_AA]= 0,BLANK(),([PLANTILLA_ER]-[PLANTILLA_ER_AA])/[PLANTILLA_ER_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DAA"
          },
          {
            "name": "PLANTILLA_ER_DACUMAA",
            "expression": "IF(AND(ISBLANK([PLANTILLA_ER_ACUM]),ISBLANK([PLANTILLA_ER_ACUMAA])),BLANK(),IF(OR([PLANTILLA_ER_ACUM]=0,[PLANTILLA_ER_ACUMAA]=0),0,([PLANTILLA_ER_ACUM]-[PLANTILLA_ER_ACUMAA])/[PLANTILLA_ER_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DACUMAA"
          },
          {
            "name": "PLANTILLA_ER_DCIERRE",
            "expression": "IF(OR(ISBLANK([PLANTILLA_ER_ACUM]),ISBLANK([PLANTILLA_ER_CIERRE])),BLANK(),IF([PLANTILLA_ER_CIERRE]=0,BLANK(),([PLANTILLA_ER_ACUM]-[PLANTILLA_ER_CIERRE])/[PLANTILLA_ER_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "HORAS_DCIERRE"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "DECLARE @FechaIni DATE = '2022-09-27';\nDECLARE @FechaFin DATE = '2022-09-28';\n\n\n\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\nWITH cal AS (\n       SELECT CAST(@FechaIni AS DATE) AS FECHA        \n       \n       UNION ALL           \n       SELECT DATEADD(Day,1,FECHA)\n       FROM cal\n       WHERE DATEADD(Day,1,FECHA) < CAST(@FechaFin AS DATE)\n)            \n\nSELECT FECHA        \nINTO #CAL           \nFROM cal            \nOPTION (MAXRECURSION 0);          \nCREATE INDEX IDXFECHA ON #CAL(FECHA);\n\nWITH NIVEL_ESTUDIOS AS (          \n       SELECT c.FECHA,\n             HNIV.STD_ID_HR,            \n             CASE WHEN LEV.STD_ID_DIP_LEVEL in ('01','02') THEN 1         \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('03') THEN 2            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('11') THEN 3            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('04','09') THEN 4              \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('05','10') THEN 5              \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('06','07','08') THEN 6               \n                    ELSE 0              \n             END AS ID_DIP_LEVEL,              \n             ROW_NUMBER() OVER (PARTITION BY HNIV.STD_ID_HR, c.FECHA ORDER BY CASE WHEN LEV.STD_ID_DIP_LEVEL in ('01','02') THEN 1            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('03') THEN 2            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('11') THEN 3            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('04','09') THEN 4              \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('05','10') THEN 5              \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('06','07','08') THEN 6               \n                    ELSE 0              \n             END DESC, STD_DT_START DESC ) AS NUMERO        \n\n       FROM STD_HR_ACAD_BACKGR HNIV WITH (NOLOCK) \n\t   INNER JOIN #CAL c WITH(NOLOCK)\n             ON HNIV.STD_DT_START<=c.FECHA\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\n       LEFT JOIN STD_LU_EDU_DIPLOMA DIP WITH (NOLOCK)        \n             ON DIP.STD_ID_DIPLOMA=HNIV.STD_ID_DIPLOMA \n       LEFT JOIN STD_LU_EDU_DIP_LEV LEV WITH (NOLOCK)        \n             ON LEV.STD_ID_DIP_LEVEL=DIP.STD_ID_DIP_LEVEL  \n                   \n)             \n             \nSELECT FECHA\n       , STD_ID_HR\n       , ID_DIP_LEVEL\n       , NUMERO            \n       INTO #NIVEL_ESTUDIOS\nFROM NIVEL_ESTUDIOS WITH(NOLOCK)\nOPTION (MAXRECURSION 0);          \nCREATE INDEX IDXNEST ON #NIVEL_ESTUDIOS(FECHA, STD_ID_HR, ID_DIP_LEVEL, NUMERO);\n\n\nSELECT ID_ORGANIZATION, CCL_DT_FECHA, CCL_TIPO, STD_ID_LEG_ENT, SCO_ID_HR  , SCO_OR_HR_PER, CCL_ID_AR_ALM, SCO_ID_TEAM, SCO_ID_INCIDENCE, CCL_HORAS, CCL_HORA_INICIO, CCL_HORA_FIN, CCL_HORA_INICIO_TUR, CCL_ID_TASK, GLB_ID_TERMINAL\nINTO #GA_RESUMEN \nFROM M4CCL_GA_RESUMEN_RH AS RESUMEN_RH WITH (NOLOCK)  \nWHERE    RESUMEN_RH.CCL_DT_FECHA>=@FechaIni and RESUMEN_RH.CCL_DT_FECHA<@FechaFin and \nSTD_ID_LEG_ENT IN ('14','23','26','32','37','41','43','61','99','189','398','506','12','20','64','68','330','357') AND   RESUMEN_RH.CCL_TIPO IN ('P','T','R','C','E','A','J', 'F','V','D')  \n\t\t\t \nCREATE NONCLUSTERED INDEX  IDXM4CCL_GA_RESUMEN_RH ON #GA_RESUMEN(ID_ORGANIZATION, SCO_ID_HR, SCO_OR_HR_PER, CCL_DT_FECHA);\n\n\nSELECT STD_ID_HR, STD_OR_HR_PERIOD, ID_ORGANIZATION, STD_DT_START, STD_DT_END, SSP_FEC_ANTIGUEDAD, CCL_ID_PERSON, STD_ID_EXTERN_ORG, STD_ID_HR_TYPE\nINTO #HR_PERIOD\nFROM STD_HR_PERIOD AS HR_PERIOD WITH (NOLOCK)      \nWHERE \n\tHR_PERIOD.ID_ORGANIZATION IN ('NL','0001') AND\n             (HR_PERIOD.STD_ID_HR_TYPE='01' OR HR_PERIOD.STD_ID_HR_TYPE='06' OR HR_PERIOD.STD_ID_HR_TYPE='02')      \nCREATE NONCLUSTERED INDEX  IDXSTD_HR_PERIOD ON #HR_PERIOD(ID_ORGANIZATION, STD_ID_HR, STD_OR_HR_PERIOD);\n\n\nSELECT H.SCO_ID_HR, H.CCL_DT_FECHA,\n                    SUM(CASE WHEN (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='D') THEN H.CCL_HORAS \n                    ELSE 0  \n                    END) AS HORAS_DESCANSO_PLANIFICADAS_NL \n                    , \n                    SUM(\n                    CASE WHEN                           \n                           CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NOT NULL) \n                           OR (H.ID_ORGANIZATION='NL' and H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4))\n                           THEN H.CCL_HORAS\n                    ELSE 0 END \n             = \n             CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA IS NOT NULL)\n                    OR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4,-1,13))\n                    THEN H.CCL_HORAS\n                    ELSE 0  END              \n             THEN\n             CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NOT NULL) \n                    OR (H.ID_ORGANIZATION='NL' and H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4))\n                    THEN H.CCL_HORAS\n                    ELSE 0 \n             END \n             ELSE (\n             CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NOT NULL) \n                    OR (H.ID_ORGANIZATION='NL' and H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4))\n                    THEN H.CCL_HORAS\n                    ELSE 0 END \n                    +\n                    CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA IS NOT NULL)\n                    OR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4,-1,13))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n                    THEN H.CCL_HORAS\n                    ELSE 0 END\n                    )             \n             END\n\t\n             ) AS HORAS_AUSENTISMO_RAW_AUX\n\t\t\t \n             , SUM(CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA IS NOT NULL)  \n                    OR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4,-1,13))\n                    THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_INCIDENCIA_AUSENCIA_RAW_AUX\n                                                                                                                                                                                                                                             \n                    ,MIN(CASE WHEN CCL_TIPO='R' THEN CAST(CAST(H.CCL_HORA_INICIO AS DATE) AS nvarchar) ELSE NULL END) AS FECHA_INICIO_REAL\n                    , MIN(CASE WHEN CCL_TIPO='R' THEN CAST(CAST(H.CCL_HORA_INICIO AS TIME(0)) AS nvarchar) ELSE NULL END) AS HORA_INICIO_REAL\n                    , MIN(CAST(CAST(H.CCL_HORA_INICIO_TUR AS DATE) AS nvarchar)) AS FECHA_INICIO_TURNO\n                    , MIN(CAST(CAST(H.CCL_HORA_INICIO_TUR AS TIME(0)) AS nvarchar)) AS HORA_INICIO_TURNO\n                    , MAX(CAST(CAST(CASE WHEN H.CCL_TIPO in ('T','P') THEN H.CCL_HORA_FIN ELSE NULL END AS DATE) AS nvarchar)) AS FECHA_FIN_TURNO\n                    , MAX(CAST(CAST(CASE WHEN H.CCL_TIPO in ('T','P') THEN H.CCL_HORA_FIN ELSE NULL END AS TIME(0)) AS nvarchar)) AS HORA_FIN_TURNO \n                    , MAX(CASE WHEN CCL_TIPO ='R' THEN CAST(CAST(H.CCL_HORA_FIN AS DATE) AS nvarchar) ELSE NULL END )AS FECHA_FIN_REAL\n                    , cast(CAST(MAX(CASE WHEN CCL_TIPO = 'R' THEN H.CCL_HORA_FIN  ELSE NULL END) AS time(0)) AS NVARCHAR) AS HORA_FIN_REAL\n                    ,SUM(CASE WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN (H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NULL AND H.ID_ORGANIZATION='0001') THEN -H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_PLANIFICADAS_RAW  \nINTO #EMPLEADO_DIA\n       FROM  M4CCL_GA_RESUMEN_RH H  WITH (NOLOCK) \n       \n       LEFT JOIN @empresas AS LEGENT \n        ON LEGENT.ID_EMPRESA = H.STD_ID_LEG_ENT\t\t\t\t \n\n       LEFT JOIN M4CCL_TA_INFORMES_ABS RGI_TA WITH (NOLOCK) \n             ON RGI_TA.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n             AND CAST(RGI_TA.CCL_ID_ABSENCE AS NVARCHAR) = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n             AND RGI_TA.CCL_ID_INFORME=1   \t\t\t\t\t  \n             \n       LEFT JOIN M4CCL_GA_GR_INF_ABS GRI_TA WITH (NOLOCK)\n             ON GRI_TA.ID_ORGANIZATION = RGI_TA.ID_ORGANIZATION\n             AND GRI_TA.CCL_ID_GR_ABS = RGI_TA.CCL_ID_GR_ABS\n\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\n\t LEFT JOIN M4CCL_GA_INFORMES_ABS RGI_GA WITH (NOLOCK) \n             ON RGI_GA.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n             AND CAST(RGI_GA.SCO_ID_INCIDENCE AS NVARCHAR) = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n             AND RGI_GA.CCL_ID_INFORME=1  \t\t\t\t \n\n     \n\n       LEFT JOIN M4CCL_GA_INFORMES_ABS RGI2 WITH (NOLOCK) \n             ON RGI2.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n                    AND RGI2.SCO_ID_INCIDENCE = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n            AND RGI2.CCL_ID_INFORME in (28)  \n\n       LEFT JOIN M4CCL_GA_GR_INF_ABS GRI2 WITH(NOLOCK)\n             ON GRI2.ID_ORGANIZATION = RGI2.ID_ORGANIZATION\n                    AND GRI2.CCL_ID_GR_ABS = RGI2.CCL_ID_GR_ABS\t\n                    \n       LEFT JOIN M4CCL_ABSENCES_TA ABS_TA WITH(NOLOCK)\n             ON cast(ABS_TA.CCL_ID_ABSENCE as varchar) = H.SCO_ID_INCIDENCE\n                    AND  H.ID_ORGANIZATION = ABS_TA.ID_ORGANIZATION \n                    AND  H.ID_ORGANIZATION IN ('NL', '0001')\t\t\t\t\t\t\t\t\t   \n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS WITH(NOLOCK)\n             ON ABS_TA.ID_ORGANIZATION = CAR_ABS.ID_ORGANIZATION\n                    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS.CCL_ID_ABSENCE\n                    AND  H.ID_ORGANIZATION= ABS_TA.ID_ORGANIZATION\n                    AND CAR_ABS.CCL_ID_TP_CARACTERISTICA = 'INC' \n                    AND ABS_TA.ID_ORGANIZATION IN ('NL', '0001')                    \n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_VALOR CAR_VAL WITH(NOLOCK)\n             ON CAR_ABS.CCL_ID_TP_CARACTERISTICA = CAR_VAL.CCL_ID_TP_CARACTERISTICA\n                    AND CAR_ABS.CCL_ID_CARACTERISTICA = CAR_VAL.CCL_ID_CARACTERISTICA\n        WHERE CCL_DT_FECHA>=@FechaIni and H.CCL_DT_FECHA<@FechaFin\n        and H.ID_ORGANIZATION in ('NL','0001')\n        AND CCL_TIPO IN ('P','T','R','C','E','A','J', 'F','V','D')\n        GROUP BY  H.SCO_ID_HR, H.CCL_DT_FECHA\nCREATE NONCLUSTERED INDEX IDXEMPLEADO_DIA ON #EMPLEADO_DIA(SCO_ID_HR, CCL_DT_FECHA);\n\nWITH HORAS AS (SELECT 0 AS ID_HORA,'00:00' AS HORA UNION ALL SELECT 1, '01:00' UNION ALL SELECT 2, '02:00' UNION ALL SELECT 3, '03:00' UNION ALL SELECT 4, '04:00'\nUNION ALL SELECT 5, '05:00' UNION ALL SELECT 6, '06:00' UNION ALL SELECT 7, '07:00' UNION ALL SELECT 8, '08:00' UNION ALL SELECT 9, '09:00' UNION ALL SELECT 10, '10:00'\nUNION ALL SELECT 11, '11:00' UNION ALL SELECT 12, '12:00' UNION ALL SELECT 13, '13:00' UNION ALL SELECT 14, '14:00' UNION ALL SELECT 15, '15:00' UNION ALL\nSELECT 16, '16:00' UNION ALL SELECT 17, '17:00' UNION ALL SELECT 18, '18:00' UNION ALL SELECT 19, '19:00' UNION ALL SELECT 20, '20:00' UNION ALL SELECT 21, '21:00'\nUNION ALL SELECT 22, '22:00' UNION ALL SELECT 23, '23:00'\n)\n\t\t\nSELECT TABLA.*,  \nCASE\n\tWHEN (DATEPART(HOUR, TABLA.HORA_INICIO_TAR) <= DATEPART(HOUR, TABLA.HORA_FIN_TAR)) AND ((TABLA.ID_HORA >= DATEPART(HOUR, TABLA.HORA_INICIO_TAR) AND  TABLA.ID_HORA < DATEPART(HOUR, TABLA.HORA_FIN_TAR)) \n\t\t\tOR (TABLA.ID_HORA = DATEPART(HOUR, TABLA.HORA_FIN_TAR) AND DATEPART(MINUTE, TABLA.HORA_FIN_TAR)>0)) THEN  CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\tWHEN DATEPART(HOUR, TABLA.HORA_INICIO_TAR) > DATEPART(HOUR, TABLA.HORA_FIN_TAR) AND ((TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_INICIO_TAR) >=0) \n\t\tOR (TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_FIN_TAR)<0) OR (TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_FIN_TAR)= 0 AND DATEPART(MINUTE, TABLA.HORA_FIN_TAR)>0)) THEN \n\t\tCASE WHEN (CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime) >=  TABLA.HORA_INICIO_TAR AND \n\t\t\t\tCAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime) < CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', '23:59') AS datetime) \n\t\t\t\t\tOR DATEPART(HOUR, CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)) = DATEPART(HOUR, TABLA.HORA_INICIO_TAR)) \n\t\t\t\t\t\tTHEN CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\t\t\tELSE CAST(CONCAT(CAST(CAST(TABLA.HORA_FIN_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\t\tEND\nELSE ''\nEND as FECHA_HORA_DESGLOSE,\n\ncast (CASE\n\tWHEN (DATEPART(HOUR, TABLA.HORA_INICIO_TAR) <= DATEPART(HOUR, TABLA.HORA_FIN_TAR)) AND ((TABLA.ID_HORA >= DATEPART(HOUR, TABLA.HORA_INICIO_TAR) AND  TABLA.ID_HORA < DATEPART(HOUR, TABLA.HORA_FIN_TAR)) \n\t\t\tOR (TABLA.ID_HORA = DATEPART(HOUR, TABLA.HORA_FIN_TAR) AND DATEPART(MINUTE, TABLA.HORA_FIN_TAR)>0)) THEN  CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\tWHEN DATEPART(HOUR, TABLA.HORA_INICIO_TAR) > DATEPART(HOUR, TABLA.HORA_FIN_TAR) AND ((TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_INICIO_TAR) >=0) \n\t\tOR (TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_FIN_TAR)<0) OR (TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_FIN_TAR)= 0 AND DATEPART(MINUTE, TABLA.HORA_FIN_TAR)>0)) THEN \n\t\tCASE WHEN (CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime) >=  TABLA.HORA_INICIO_TAR AND \n\t\t\t\tCAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime) < CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', '23:59') AS datetime) \n\t\t\t\t\tOR DATEPART(HOUR, CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)) = DATEPART(HOUR, TABLA.HORA_INICIO_TAR)) \n\t\t\t\t\t\tTHEN CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\t\t\tELSE CAST(CONCAT(CAST(CAST(TABLA.HORA_FIN_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\t\tEND\nELSE ''\nEND AS DATE)  as FECHA_DESGLOSE,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_REALES_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) \n\n AS HORAS_REALES_PONDERADAS_RAW,\n\t\t\t\t\t\t\n\nCAST((CASE \n\tWHEN TABLA.HORAS_PRESENCIA_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_PRESENCIA_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_TEORICAS_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_TEORICAS_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_DESCANSO_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_DESCANSO_PONDERADAS_RAW,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_DESCANSO_PLANIFICADAS_NL > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_DESCANSO_PLANIFICADAS_NL_PONDERADAS,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_DESCANSO_RAW_NL > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_DESCANSO_RAW_NL_PONDERADAS,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_PLANIFICADAS_RAW <> 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE  (DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE (60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END  \n\t\t\tEND        \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) ELSE DATEPART(MINUTE , TABLA.HORA_FIN_TAR) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN 60 ELSE 60  * -1 END \n\t\tEND \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_PLANIFICADAS_PONDERADAS_RAW,\n\nCASE \n\tWHEN TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN\n\t\tID_PERSONA_FECHA\t\t  \nELSE null END AS PLANTILLA_PLANIFICADA_PONDERADAS_RAW,\n\nCASE \n\tWHEN TABLA.HORAS_VACACIONES_RAW > 0 THEN\n\t\tID_PERSONA_FECHA\t\t  \nELSE null END AS HORAS_VACACIONES_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_COMPLEMENTARIAS_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_COMPLEMENTARIAS_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_EXTRA_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) * (TABLA.HORAS_EXTRA_RAW /  NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0) ) AS HORAS_EXTRA_PONDERADAS_RAW,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_ORDINARIAS_RAW <> 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE  (DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE (60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END  \n\t\t\tEND        \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) ELSE DATEPART(MINUTE , TABLA.HORA_FIN_TAR) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN 60 ELSE 60  * -1 END \n\t\tEND \t\t  \n\tEND\nELSE 0 END) *  CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN (TABLA.HORAS_ORDINARIAS_RAW / (NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0))) ELSE (TABLA.HORAS_ORDINARIAS_RAW / (NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0))) * -1 END / 60.0 AS NUMERIC(7, 5)) AS HORAS_ORDINARIAS_PONDERADAS_RAW,\n\n\n \n\n\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_ABSENTISMO_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_ABSENTISMO_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_DESCANSO_PLAN_AUX > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_DESCANSO_PLAN_AUX_PONDERADAS,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW_AUX > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_AUSENTISMO_RAW_AUX_PONDERADAS,\n\n\n(CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW_AUX > 4.5 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  ID_PERSONA_FECHA\t\n\t\t\t  ELSE ID_PERSONA_FECHA\t END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN ID_PERSONA_FECHA\t\n\t\t\t  ELSE ID_PERSONA_FECHA END \t\t  \n\tEND\nELSE NULL END)  AS PLANTILLA_AUSENTISMO_PONDERADAS_RAW,\n\n(CASE WHEN CAST((CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW_AUX > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) > 0 and HORAS_AUSENTISMO_RAW > 0  THEN ID_PERSONA_FECHA ELSE NULL END) AS PLANTILLA_AUSENTISMO_DESGLOSE_PONDERADAS_RAW,\n\n(CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW_AUX > 4.5 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  ID_PERSONA_FECHA\t\n\t\t\t  ELSE ID_PERSONA_FECHA\t END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN ID_PERSONA_FECHA\t\n\t\t\t  ELSE ID_PERSONA_FECHA END \t\t  \n\tEND\nELSE NULL END)  AS PLANTILLA_AUSENTISMO_DIA_PONDERADAS_RAW,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_AUSENTISMO_RAW_PONDERADAS,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_INCIDENCIA_AUSENCIA_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_INCIDENCIA_AUSENCIA_PONDERADAS_RAW,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_AJUSTADAS_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_AJUSTADAS_PONDERADAS_RAW,\n\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_FALTAN_RAW <> 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE  (DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE (60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END  \n\t\t\tEND        \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) ELSE DATEPART(MINUTE , TABLA.HORA_FIN_TAR) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN 60 ELSE 60  * -1 END \n\t\tEND \t\t  \n\tEND\nELSE 0 END)  *  CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN (TABLA.HORAS_FALTAN_RAW / (NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0))) ELSE (TABLA.HORAS_FALTAN_RAW / (NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0))) * -1 END / 60.0 AS NUMERIC(7, 5)) AS HORAS_FALTAN_PONDERADAS_RAW,\n\n\n \n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_INCIDENCIA_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_INCIDENCIA_PONDERADAS_RAW\n\n\n,CASE \n\tWHEN CAL_REP.SCO_DT_DAY IS NULL THEN '000'\n\tELSE CAL_REP.SCO_ID_DAYCALEN_TY\nEND as ID_TIPO_FESTIVO\n\n\n\n FROM (\n\nSELECT * \nFROM ( \n             \n       SELECT \n            COUNT(*) OVER (PARTITION BY H.CCL_DT_FECHA ,PE.STD_ID_PERSON, CASE \n            WHEN SUM(CASE \n                    WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN (H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NULL AND H.ID_ORGANIZATION='0001') OR \n                                                (H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IS NULL AND H.ID_ORGANIZATION='NL') THEN -H.CCL_HORAS \n                    ELSE 0 \n            END) > 0 then 1\n            WHEN SUM(CASE \n                    WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS \n                    WHEN (H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS  IS NULL AND H.ID_ORGANIZATION='0001') OR \n                            (H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IS NULL AND H.ID_ORGANIZATION='NL') THEN -H.CCL_HORAS \n                    ELSE 0 \n            END) < 0 then -1\n            else 0 \n            end) AS AGRUPACION_SIN_TURNO,\n\n\t\t\tCASE WHEN H.ID_ORGANIZATION='0001' THEN COALESCE(GRI_TA.CCL_ID_GR_ABS ,-1) \n               WHEN H.ID_ORGANIZATION='NL' THEN COALESCE(CAR_VAL.CCL_ID_CARACTERISTICA,-1) END AS ID_GRUPO_INCIDENCIA\n\n             , SUM(CASE WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN (H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS  IS NULL AND H.ID_ORGANIZATION='0001') THEN -H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_PLANIFICADAS_RAW\n             , SUM(CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS  IS NOT NULL) \n                    OR (H.ID_ORGANIZATION='NL' and H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4)) THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_AUSENTISMO_RAW\n\n             ,CASE WHEN SUM(CASE WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NULL THEN -H.CCL_HORAS ELSE 0 END) > 0 then 1\n                    WHEN SUM(CASE WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NULL THEN -H.CCL_HORAS ELSE 0 END) < 0 then -1\n                    else 0 \n             end as CLASIFICACION_HORAS_PLANIFICADAS\n\n              , 'TA' + '#' + H.ID_ORGANIZATION+'#'+ CAST(COALESCE(CAR_ABS.CCL_ID_CARACTERISTICA,-1) AS varchar) \n\t\t\t\t+ '#' \n\t\t\t\t+ CASE H.ID_ORGANIZATION \n\t\t\t\t\t\tWHEN 'NL' THEN COALESCE(CAST(CAR_ABS2.CCL_ID_CARACTERISTICA AS varchar), 'N/A')\n\t\t\t\t\t\tELSE COALESCE(CAST(H.SCO_ID_INCIDENCE AS varchar),'N/A')\n\t\t\t\t\t\tEND\n\t\t\t\tAS ID_ORG_INCIDENCIA\n\n             , SUM(\n\t\t\t\tCASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA IS NOT NULL)  \n\t\t\t\t\t\t\tOR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4,-1,13))\n\t\t\t\tTHEN H.CCL_HORAS\n\t\t\t\tELSE 0 END\n\t\t\t ) AS HORAS_INCIDENCIA_AUSENCIA_RAW\n\n             , H.ID_ORGANIZATION\n             , CASE WHEN CCL_CK_ESCENARIO = 2 THEN H.CCL_ID_TASK ELSE NULL END AS ID_TAREA\n             ,CCL_CK_ESCENARIO\n             ,  H.GLB_ID_TERMINAL AS ID_TERMINAL\n             , TERMINALES.GLB_ID_ZONA AS ID_ZONA\n             ,  CASE WHEN CCL_CK_ESCENARIO = 2 THEN CAST( H.CCL_ID_TASK AS VARCHAR) ELSE NULL END + '#' + H.ID_ORGANIZATION AS ID_TAREA_ORGANIZATION\n             , H.CCL_DT_FECHA AS FECHA\n        , DATEDIFF(MM, PR.SSP_FEC_ANTIGUEDAD, H.CCL_DT_FECHA) AS ANTIGUEDAD\n        , DATEDIFF(MM, PE.STD_DT_BIRTH, H.CCL_DT_FECHA)/12 AS EDAD\n        , CASE WHEN PE.STD_ID_GENDER IN ('0','1') THEN 'H' ELSE 'M' END GENERO\n        , CASE WHEN CZ.CCL_TIEMPO_PARCIAL = 0 THEN 1 ELSE 2 END ID_TIPO_JORNADA\n        , CASE WHEN CZ.SSP_NO_DEFINIDO = 'S' THEN 1 ELSE 2 END AS ID_TIPO_CONTRATO\n        , A.CCL_ID_AR_ALM AS ID_ALMACEN \n             , H.ID_ORGANIZATION + '#'+A.CCL_ID_AR_ALM AS ID_ORG_ALM\n             , hceco.CCL_COD_DIV_SECC AS DIVISION_SECCION         \n        , pos.SCO_ID_WORK_LOC AS ID_LUGAR_DE_TRABAJO\n             , pos.SCO_ID_JOB_CODE as ID_PUESTO\n             , CONCAT(pos.SCO_ID_JOB_CODE, '#', PR.STD_ID_HR_TYPE) AS ID_PUESTO_HR_TYPE\n        , CASE WHEN REPLACE(PR.STD_ID_HR_TYPE,'.','') IN ('02','06') AND hrole.CCL_ID_CAMPO='EMPR_FUNC2' THEN hrole.CCL_CADENA \n                    ELSE CASE WHEN REPLACE(PR.STD_ID_HR_TYPE,'.','') IN ('02','06') THEN cast(SUBSTRING(hrole.CCL_CADENA,3,3) as int) \n                           ELSE\n                                  CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) =9 AND REPLACE(hceco.CCL_DIVISION,'.','') =13 AND REPLACE(hceco.CCL_SECCION,'.','')=18 THEN 37\n                                  ELSE (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) \n                           END \n                    END \n             END AS ID_EMPRESA\n        , PR.STD_ID_EXTERN_ORG AS ID_EMPRESA_EXTERNA\n             , PE.STD_ID_PERSON + '#' +  CAST(CAST(H.CCL_DT_FECHA AS DATE) AS VARCHAR) AS ID_PERSONA_FECHA\n             , PE.STD_ID_PERSON AS ID_PERSONA\n             , PR.CCL_ID_PERSON AS ID_LOCAL\n             , cast(PE.STD_ID_PERSON as varchar) +'#' +cast(PR.CCL_ID_PERSON as varchar) as ID_PERSONA_LOCAL\n        , T.SCO_ID_TEAM AS ID_EQUIPO\n\n        , CASE WHEN H.ID_ORGANIZATION='0001' THEN COALESCE(H.SCO_ID_INCIDENCE,'N/A')\n                    WHEN H.ID_ORGANIZATION='NL' THEN COALESCE(cast(CAR_ABS2.CCL_ID_CARACTERISTICA as varchar),'N/A') END AS ID_INCIDENCIA\n        , ABS_TA.CCL_ID_ABSENCE AS ID_AUSENCIA\n        , 'TA' + '#' + H.ID_ORGANIZATION+'#'+cast(ABS_TA.CCL_ID_ABSENCE as varchar) AS ID_ORG_AUSENCIA\n\t\t\t  \n             , SUM(CASE WHEN H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_PRESENCIA_RAW   \n             , SUM(CASE WHEN H.CCL_TIPO='T' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_TEORICAS_RAW   \n             , SUM(CASE WHEN (GETDATE() >= H.CCL_DT_FECHA AND H.CCL_ID_TASK='66' AND H.CCL_TIPO='R') THEN H.CCL_HORAS \n                    WHEN (GETDATE() < H.CCL_DT_FECHA AND H.CCL_TIPO='D') THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_DESCANSO_RAW   \n             , SUM(CASE    WHEN (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='D') THEN H.CCL_HORAS \n                    ELSE 0  \n             END) AS HORAS_DESCANSO_PLANIFICADAS_NL \n\n             , SUM(CASE WHEN (H.ID_ORGANIZATION='NL' AND GETDATE() >= H.CCL_DT_FECHA AND H.CCL_ID_TASK IN ('66','112') AND H.CCL_TIPO='R') THEN H.CCL_HORAS  \n                                  ELSE 0  \n                    END) AS HORAS_DESCANSO_RAW_NL \n\n             , SUM(CASE WHEN H.CCL_TIPO='R' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_REALES_RAW\n             , SUM(CASE WHEN H.CCL_TIPO='C' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_COMPLEMENTARIAS_RAW        \n             , SUM(CASE WHEN H.CCL_TIPO='E' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_EXTRA_RAW       \n             , SUM(CASE WHEN H.CCL_TIPO='R' THEN H.CCL_HORAS\n                    WHEN H.CCL_TIPO='C' OR H.CCL_TIPO='E' THEN -H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_ORDINARIAS_RAW    \n             , SUM(CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND H.SCO_ID_INCIDENCE IN('600','800','1','607','807','5','606','806','608','808','14')) \n             OR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA='2') THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_ABSENTISMO_RAW\n             ,EMPLEADO_DIA.HORAS_DESCANSO_PLANIFICADAS_NL AS HORAS_DESCANSO_PLAN_AUX\n             ,CASE WHEN EMPLEADO_DIA.HORAS_AUSENTISMO_RAW_AUX >= 4 THEN EMPLEADO_DIA.HORAS_AUSENTISMO_RAW_AUX - EMPLEADO_DIA.HORAS_DESCANSO_PLANIFICADAS_NL\n             ELSE EMPLEADO_DIA.HORAS_AUSENTISMO_RAW_AUX END AS HORAS_AUSENTISMO_RAW_AUX \n             , SUM(CASE WHEN H.CCL_TIPO='J' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_AJUSTADAS_RAW\n             , COALESCE(GL.SSP_PORC_GLEGAL,0) AS PORC_GUARDA_LEGAL \n             , COALESCE(JP.SSP_VALOR_COEF_T_P,100) AS PORC_TIEMPO_PARCIAL\n             , CAST(ROUND(COALESCE(GL.SSP_PORC_GLEGAL,0), 0, 1) AS INTEGER) AS TRAMO_PORC_REDUCCION\n             , CASE WHEN COALESCE(GL.SSP_PORC_GLEGAL,0)>0 THEN 1 ELSE 2 END AS ID_REDUCCION_JORNADA  \n             , TURNO.CCL_ID_TURNO\n             ,  EMPLEADO_DIA.FECHA_INICIO_REAL  AS FECHA_INICIO_REAL\n             ,  EMPLEADO_DIA.HORA_INICIO_REAL AS HORA_INICIO_REAL\n             , CASE WHEN SUM(EMPLEADO_DIA.HORAS_PLANIFICADAS_RAW) = 0 THEN NULL ELSE EMPLEADO_DIA.FECHA_INICIO_TURNO END AS FECHA_INICIO_TURNO\n             , CASE WHEN SUM(EMPLEADO_DIA.HORAS_PLANIFICADAS_RAW)= 0 THEN NULL ELSE EMPLEADO_DIA.HORA_INICIO_TURNO END AS HORA_INICIO_TURNO\n             , CASE WHEN SUM(EMPLEADO_DIA.HORAS_PLANIFICADAS_RAW)= 0 THEN NULL ELSE EMPLEADO_DIA.FECHA_FIN_TURNO END AS FECHA_FIN_TURNO\n             , CASE WHEN SUM(EMPLEADO_DIA.HORAS_PLANIFICADAS_RAW) = 0 THEN NULL ELSE EMPLEADO_DIA.HORA_FIN_TURNO END AS HORA_FIN_TURNO\n             , EMPLEADO_DIA.FECHA_FIN_REAL \n             , EMPLEADO_DIA.HORA_FIN_REAL\n\t\t\t , H.CCL_HORA_INICIO as HORA_INICIO_TAR\n\t\t\t , H.CCL_HORA_FIN as HORA_FIN_TAR\n             , SUM(CASE WHEN H.SCO_ID_INCIDENCE IS NOT NULL AND H.CCL_TIPO = 'A' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_INCIDENCIA_RAW\n             , cate.SSP_ID_CATEGORIA AS ID_CATEGORIA \n             , CAST(HTTH.CCL_ID_TP_HORA AS VARCHAR) +'#'+ CAST(HTTH.CCL_HOR_TM_PARC AS VARCHAR) AS ID_HORAS_CONTRATADAS \n             , SUM(CASE WHEN H.CCL_TIPO='V' THEN H.CCL_HORAS ELSE 0 END) AS HORAS_VACACIONES_RAW \n             , SUM(CASE WHEN H.CCL_TIPO='F' THEN H.CCL_HORAS ELSE 0 END) AS HORAS_FALTAN_RAW\n             , TUI.SCO_ID_REF_MOD AS MOD_REF_INDIVIDUAL      \n             , EQ.SCO_ID_TEAM AS ID_EQUIPO_PER \n             , EQ.SCO_ID_TEAM_ROLE AS ID_ROL_EQUIPO    \n             , TUT.CCL_ID_MOD_REF AS MOD_REF_EQUIPO\n             , TPT.IDDimensionTipoTurno AS IdInternalTipoTurno\n             , PR.STD_ID_HR_TYPE AS ID_TIPO_PERSONA\n\t\t\t , CASE WHEN COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) IS NULL OR  COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT) IS NULL THEN '-1'\n\t\t\t\tELSE COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) + '#' + \n                COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT) END AS ID_EQ_ORG                                                                                                                                      \n             , W.STD_ID_WORK_UNIT AS ID_UNIDAD_ORGANIZATIVA \n             , COALESCE(NIVEL_EST.ID_DIP_LEVEL,0) as ID_NIVEL_ESTUDIOS \n             , COALESCE(TUI.SCO_ID_REF_MOD ,TUT.CCL_ID_MOD_REF) AS ID_MODELO_REFERENCIA\n             , unineg.CCL_ID_UNIDAD_NEG\n\t\t\t , C.CCL_ID_CARACTERISTICA AS ID_AGRUPACION_OPERATIVA\n       FROM #GA_RESUMEN as H WITH (NOLOCK) \n \n       INNER JOIN  #HR_PERIOD PR WITH(NOLOCK)\n            ON PR.STD_ID_HR = H.SCO_ID_HR COLLATE Latin1_General_CS_AS   \n            AND PR.STD_OR_HR_PERIOD = H.SCO_OR_HR_PER\n            AND PR.ID_ORGANIZATION = H.ID_ORGANIZATION\n            AND PR.STD_DT_START <=H.CCL_DT_FECHA \n            AND PR.STD_DT_END >= H.CCL_DT_FECHA \n\t     AND H.STD_ID_LEG_ENT IN ('14','23','26','32','37','41','43','61','99','189','398','506','12','20','64','68','330','357')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \n\t\t\n\n\t\t\t     -- and PR.CCL_ID_PERSON = '65687' --spb\n\n\t\t\t\t\t\t\t  \n\t\t\t\t  \n       INNER JOIN M4SCO_H_HR_POS AS hrpos WITH (NOLOCK)\n             ON PR.ID_ORGANIZATION = hrpos.ID_ORGANIZATION \n                    AND PR.STD_ID_HR =  hrpos.SCO_ID_HR \n                    AND PR.STD_OR_HR_PERIOD = hrpos.SCO_OR_HR_ROLE\n                    AND hrpos.SCO_DT_START <=H.CCL_DT_FECHA \n                    AND  hrpos.SCO_DT_END >= H.CCL_DT_FECHA  \n  \n       INNER JOIN M4SCO_POSITION AS pos WITH (NOLOCK)\n             ON hrpos.SCO_ID_POSITION =  pos.SCO_ID_POSITION \n                    AND pos.SCO_DT_START <=H.CCL_DT_FECHA \n                    AND pos.SCO_DT_END >= H.CCL_DT_FECHA\n\n       INNER JOIN M4CCL_H_OR_UNI_NEG AS unineg WITH (NOLOCK)              \n\t\t   ON unineg.SCO_ID_POSITION =pos.SCO_ID_POSITION            \n\t\t   AND H.CCL_DT_FECHA BETWEEN unineg.CCL_DT_START AND unineg.CCL_DT_END  \n  \n       INNER JOIN STD_PERSON PE WITH (NOLOCK)   \n             ON H.SCO_ID_HR COLLATE Latin1_General_CS_AS =PE.STD_ID_PERSON\n  \n       INNER JOIN M4SCO_H_HR_LEGENT legalEntityHR  WITH (NOLOCK)\n            ON legalEntityHR.STD_ID_HR = PR.STD_ID_HR  \n            AND legalEntityHR.STD_OR_HR_PERIOD = PR.STD_OR_HR_PERIOD  \n            AND legalEntityHR.ID_ORGANIZATION = PR.ID_ORGANIZATION\n            AND legalEntityHR.DT_START <= H.CCL_DT_FECHA\n            AND legalEntityHR.DT_END >= H.CCL_DT_FECHA\n  \n       INNER JOIN M4SSP_H_CENT_COS ceco  WITH (NOLOCK)\n            ON PR.ID_ORGANIZATION = ceco.ID_ORGANIZATION  \n            AND PR.STD_ID_HR = ceco.SCO_ID_HR  \n            AND PR.STD_OR_HR_PERIOD  = ceco.SCO_OR_HR_ROLE\n            AND ceco.SSP_FEC_INICIO <= H.CCL_DT_FECHA\n            AND ceco.SSP_FEC_FIN >= H.CCL_DT_FECHA\n\n       INNER JOIN M4SSP_H_CONTRATOS CO WITH (NOLOCK)  \n             ON CO.ID_ORGANIZATION=H.ID_ORGANIZATION COLLATE Latin1_General_CS_AS \n                    AND CO.SSP_ID_HR=H.SCO_ID_HR COLLATE Latin1_General_CS_AS \n            AND CO.SSP_OR_HR_PERIOD=H.SCO_OR_HR_PER   \n                    AND CO.SSP_FEC_INI_CONTRA<=H.CCL_DT_FECHA \n            AND CO.SSP_FEC_FIN_CONTRA >= H.CCL_DT_FECHA  \n                    \n       INNER JOIN M4CCL_H_CENT_COS hceco  WITH (NOLOCK)\n             ON hceco.ID_ORGANIZATION  =PR.ID_ORGANIZATION \n            AND hceco.SCO_ID_HR  =PR.STD_ID_HR\n            AND  PR.STD_OR_HR_PERIOD  = hceco.SCO_OR_HR_ROLE  \n            AND hceco.SSP_FEC_INICIO =ceco.SSP_FEC_INICIO\n             \n       INNER JOIN STD_WORK_UNIT AS W WITH (NOLOCK) \n             ON W.STD_ID_WORK_UNIT = pos.SCO_ID_WORK_UNIT\n   \n       INNER JOIN M4SSP_CONTRATO_INT CZ WITH (NOLOCK)  \n        ON CZ.SSP_ID_CONT_INTERN=CO.SSP_ID_CONT_INTERN         \n        \n       INNER JOIN M4SCO_TEAMS T WITH (NOLOCK)\n        ON T.ID_ORGANIZATION = H.ID_ORGANIZATION COLLATE Latin1_General_CS_AS \n                    AND T.SCO_ID_TEAM = H.SCO_ID_TEAM COLLATE Latin1_General_CS_AS \n\n       LEFT JOIN @empresas AS LEGENT \n        ON LEGENT.ID_EMPRESA = H.STD_ID_LEG_ENT\n    \n       LEFT JOIN M4CCL_X_GA_AR_ALM A WITH (NOLOCK)   \n             ON A.ID_ORGANIZATION = H.ID_ORGANIZATION COLLATE Latin1_General_CS_AS \n                    AND A.CCL_ID_AR_ALM = H.CCL_ID_AR_ALM COLLATE Latin1_General_CS_AS \n\n       LEFT JOIN M4CCL_TA_INFORMES_ABS RGI_TA WITH (NOLOCK) \n             ON RGI_TA.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n             AND CAST(RGI_TA.CCL_ID_ABSENCE AS NVARCHAR) = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n            AND RGI_TA.CCL_ID_INFORME = 1 \n\n       LEFT JOIN M4CCL_GA_GR_INF_ABS GRI_TA WITH (NOLOCK)\n             ON GRI_TA.ID_ORGANIZATION = RGI_TA.ID_ORGANIZATION\n                    AND GRI_TA.CCL_ID_GR_ABS = RGI_TA.CCL_ID_GR_ABS\n\n\t\tLEFT JOIN M4CCL_GA_INFORMES_ABS RGI_GA WITH (NOLOCK) \n             ON RGI_GA.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n             AND CAST(RGI_GA.SCO_ID_INCIDENCE AS NVARCHAR) = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n             AND RGI_GA.CCL_ID_INFORME = 1 \n\n       LEFT JOIN M4CCL_GA_INFORMES_ABS RGI2 WITH (NOLOCK) \n             ON RGI2.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n                    AND RGI2.SCO_ID_INCIDENCE = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n            AND RGI2.CCL_ID_INFORME in (28)  \n\n       LEFT JOIN M4CCL_GA_GR_INF_ABS GRI2 WITH (NOLOCK)\n             ON GRI2.ID_ORGANIZATION = RGI2.ID_ORGANIZATION\n                    AND GRI2.CCL_ID_GR_ABS = RGI2.CCL_ID_GR_ABS                                                                    \n\n       LEFT JOIN M4CCL_ABSENCES_TA ABS_TA With (Nolock)\n             ON cast(ABS_TA.CCL_ID_ABSENCE as varchar) = H.SCO_ID_INCIDENCE\n                    AND  H.ID_ORGANIZATION = ABS_TA.ID_ORGANIZATION \n                    AND  H.ID_ORGANIZATION IN ('NL', '0001')\n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS With (Nolock)\n             ON ABS_TA.ID_ORGANIZATION = CAR_ABS.ID_ORGANIZATION\n                    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS.CCL_ID_ABSENCE\n                    AND  H.ID_ORGANIZATION= ABS_TA.ID_ORGANIZATION\n                    AND ABS_TA.ID_ORGANIZATION IN ('NL', '0001')\n                    AND CAR_ABS.CCL_ID_TP_CARACTERISTICA='INC' \n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_VALOR CAR_VAL With (Nolock)\n             ON CAR_ABS.CCL_ID_TP_CARACTERISTICA = CAR_VAL.CCL_ID_TP_CARACTERISTICA\n                    AND CAR_ABS.CCL_ID_CARACTERISTICA = CAR_VAL.CCL_ID_CARACTERISTICA\n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS2 With (Nolock)\n             ON ABS_TA.ID_ORGANIZATION = CAR_ABS2.ID_ORGANIZATION\n                    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS2.CCL_ID_ABSENCE\n                    AND  H.ID_ORGANIZATION= ABS_TA.ID_ORGANIZATION\n                    AND ABS_TA.ID_ORGANIZATION='NL' \n                    AND CAR_ABS2.CCL_ID_TP_CARACTERISTICA='CORP' \n\n       LEFT JOIN M4CCL_H_GA_HOR_TURNOS TURNO WITH (NOLOCK) \n             ON H.ID_ORGANIZATION=TURNO.ID_ORGANIZATION \n                    and  H.STD_ID_LEG_ENT=TURNO.STD_ID_LEG_ENT\n                    AND 1 = CASE WHEN CAST(TURNO.CCL_HORA_INICIO AS TIME) > CAST(TURNO.CCL_HORA_FIN AS TIME)\n                           THEN CASE WHEN (CAST(H.CCL_HORA_INICIO_TUR AS TIME) BETWEEN \n                                  CASE WHEN TURNO.CCL_OPERACION_HI = '>' \n                                        THEN CAST(DATEADD(ss,1,TURNO.CCL_HORA_INICIO) AS TIME)\n                                        ELSE CAST(TURNO.CCL_HORA_INICIO AS TIME) \n                                  END AND CAST('23:59:59' AS TIME)\n                                  OR CAST(H.CCL_HORA_INICIO_TUR AS TIME) BETWEEN CAST('00:00:00' AS TIME) \n                                  AND CASE WHEN TURNO.CCL_OPERACION_HF = '<'\n                                        THEN CAST(DATEADD(ss,-1,TURNO.CCL_HORA_FIN) AS TIME) \n                                        ELSE CAST(TURNO.CCL_HORA_FIN AS TIME)\n                                  END) THEN 1\n                                  ELSE 0\n                           END \n                           ELSE CASE WHEN CAST(H.CCL_HORA_INICIO_TUR AS TIME) BETWEEN \n                                  CASE WHEN TURNO.CCL_OPERACION_HI = '>' \n                                        THEN CAST(DATEADD(ss,1,TURNO.CCL_HORA_INICIO) AS TIME)\n                                        ELSE CAST(TURNO.CCL_HORA_INICIO AS TIME) \n                                  END \n                                  AND CASE WHEN TURNO.CCL_OPERACION_HF = '<'\n                                        THEN CAST(DATEADD(ss,-1,TURNO.CCL_HORA_FIN) AS TIME) \n                                        ELSE CAST(TURNO.CCL_HORA_FIN AS TIME)\n                                  END\n                                  THEN 1\n                                  ELSE 0\n                           END \n                    END\n                    \n       LEFT JOIN M4SSP_H_PORC_GLEGA GL WITH (NOLOCK) \n             ON GL.ID_ORGANIZATION=PR.ID_ORGANIZATION \n                    AND GL.STD_ID_HR=PR.STD_ID_HR \n                    AND GL.STD_OR_HR_PERIOD=PR.STD_OR_HR_PERIOD \n                    AND GL.SSP_DT_START<=GETDATE() \n                    AND GL.SSP_DT_END>=GETDATE() \n \n       LEFT JOIN M4SSP_H_PORC_JORN JP WITH (NOLOCK) \n             ON JP.ID_ORGANIZATION=PR.ID_ORGANIZATION \n                    AND JP.SSP_ID_HR=PR.STD_ID_HR \n                    AND JP.SSP_OR_HR_PERIOD=PR.STD_OR_HR_PERIOD \n                    AND JP.SSP_FEC_INI_CONTRA=CO.SSP_FEC_INI_CONTRA \n                    AND JP.SSP_FEC_INI_JORN_P<=GETDATE() AND JP.SSP_FEC_FIN_JORN_P>=GETDATE() \n \n       LEFT JOIN M4SSP_H_CATEGORIA cate WITH (NOLOCK)  \n             ON cate.ID_ORGANIZATION = PR.ID_ORGANIZATION \n                    AND cate.SCO_ID_HR = PR.STD_ID_HR\n                    AND cate.SCO_OR_HR_ROLE = PR.STD_OR_HR_PERIOD\n                    AND cate.SSP_FEC_INICIO <= H.CCL_DT_FECHA\n                    AND cate.SSP_FEC_FIN >= H.CCL_DT_FECHA                                                                  \n \n       LEFT JOIN M4CCL_H_HOR_TM_PAR AS HTTH WITH (NOLOCK) \n             ON HTTH.ID_ORGANIZATION = PR.ID_ORGANIZATION \n                    AND HTTH.SCO_ID_HR = PR.STD_ID_HR \n                    AND HTTH.SCO_OR_HR_ROLE = PR.STD_OR_HR_PERIOD\n                    AND HTTH.DT_START <= H.CCL_DT_FECHA\n                    AND HTTH.DT_END >= H.CCL_DT_FECHA                                                               \n\n       LEFT JOIN M4GLB_HISTORICOS_ROLE AS hrole WITH (NOLOCK)\n             ON hrole.ID_ORGANIZATION = PR.ID_ORGANIZATION\n                    AND hrole.SCO_ID_HR = PR.STD_ID_HR  \n                    AND hrole.SCO_OR_HR_ROLE = PR.STD_OR_HR_PERIOD \n                    AND hrole.DT_START <= H.CCL_DT_FECHA\n                    AND hrole.DT_END >= H.CCL_DT_FECHA\n                    AND hrole.CCL_ID_CAMPO IN ( 'EMPR_FUNC', 'EMPR_FUNC2') \n  \n       LEFT JOIN M4SCO_HR_THEOR_TIM TUI WITH (NOLOCK) \n             ON TUI.ID_ORGANIZATION=PR.ID_ORGANIZATION      \n                    AND TUI.STD_ID_HR=PR.STD_ID_HR    \n                    AND TUI.STD_OR_HR_PERIOD=PR.STD_OR_HR_PERIOD   \n                    AND TUI.DT_START <= H.CCL_DT_FECHA      \n                    AND TUI.DT_END >= H.CCL_DT_FECHA  \n  \n       LEFT JOIN M4SCO_H_HR_TEAMS EQ WITH (NOLOCK)    \n             ON EQ.ID_ORGANIZATION=PR.ID_ORGANIZATION \n                    AND EQ.SCO_ID_HR=PR.STD_ID_HR     \n                    AND EQ.SCO_OR_ROLE=PR.STD_OR_HR_PERIOD \n                    AND EQ.SCO_DT_START <= H.CCL_DT_FECHA   \n                    AND EQ.SCO_DT_END >= H.CCL_DT_FECHA\n                    And EQ.CCL_ID_LEG_ENT=legalEntityHR.STD_ID_LEG_ENT\n  \n       LEFT JOIN M4CCL_H_GT_MR_TEAM TUT WITH (NOLOCK)        \n             ON TUT.ID_ORGANIZATION=PR.ID_ORGANIZATION      \n                    AND TUT.CCL_ID_TEAM = EQ.SCO_ID_TEAM    \n                    AND TUT.CCL_DT_START <= H.CCL_DT_FECHA \n                    AND TUT.CCL_DT_END >= H.CCL_DT_FECHA \n                    And TUT.CCL_ID_LEG_ENT=legalEntityHR.STD_ID_LEG_ENT\n  \n       LEFT JOIN (\n             SELECT DENSE_RANK() OVER (ORDER BY SCO_ID_REF_MOD) AS IDDimensionTipoTurno, \n                    SCO_ID_REF_MOD,NM_REF_MODESP,Md.CCL_ID_TP_TURNO,MT.CCL_NM_TP_TURNESP\n   \n             FROM  M4SCO_REF_MOD Md  WITH (NOLOCK) \n             inner join M4CCL_X_GA_TP_TUR MT  WITH (NOLOCK)\n                    on Md.CCL_ID_TP_TURNO=MT.CCL_ID_TP_TURNO\n       ) AS TPT \n             on TPT.SCO_ID_REF_MOD=isnull(TUI.SCO_ID_REF_MOD ,TUT.CCL_ID_MOD_REF)\n  \n       LEFT JOIN M4GLB_H_HR_TEAMS_ORG EXCEP_EMPL WITH(NOLOCK)\n             ON EXCEP_EMPL.ID_ORGANIZATION = PR.ID_ORGANIZATION\n                    AND EXCEP_EMPL.SCO_ID_HR = PR.STD_ID_HR  \n                    AND EXCEP_EMPL.SCO_OR_ROLE = PR.STD_OR_HR_PERIOD\n                    AND EXCEP_EMPL.SCO_DT_START <= H.CCL_DT_FECHA    \n                    AND EXCEP_EMPL.SCO_DT_END >= H.CCL_DT_FECHA  \n\t\t\t\t\t\n       LEFT JOIN M4CCL_H_GA_EM_EQUI AS EMPRESA_EQUIPO_AGOP WITH (NOLOCK)\n        ON EMPRESA_EQUIPO_AGOP.ID_ORGANIZATION = PR.ID_ORGANIZATION\n        AND EMPRESA_EQUIPO_AGOP.CCL_ID_LEG_ENT = COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT)                                                                                                                      \n        AND  EQ.SCO_ID_TEAM = EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM\n        AND EMPRESA_EQUIPO_AGOP.CCL_DT_START <= H.CCL_DT_FECHA    \n        AND EMPRESA_EQUIPO_AGOP.CCL_DT_END >= H.CCL_DT_FECHA \n \n       LEFT JOIN #NIVEL_ESTUDIOS as NIVEL_EST WITH (NOLOCK)         \n             ON NIVEL_EST.STD_ID_HR = PR.STD_ID_HR          \n                    AND NIVEL_EST.FECHA=H.CCL_DT_FECHA             \n                    AND NIVEL_EST.NUMERO=1     \n\n       LEFT JOIN #EMPLEADO_DIA AS EMPLEADO_DIA\n       ON EMPLEADO_DIA.CCL_DT_FECHA = H.CCL_DT_FECHA\n       AND EMPLEADO_DIA.SCO_ID_HR = H.SCO_ID_HR\n\n       LEFT JOIN M4GLB_H_GA_TERMINAL_ZONA AS TERMINALES WITH(NOLOCK)\n       ON TERMINALES.GLB_ID_TERMINAL =  H.GLB_ID_TERMINAL\n       AND TERMINALES.ID_ORGANIZATION=H.ID_ORGANIZATION      \n       LEFT JOIN M4CCL_X_GA_CONEX AS CONEX WITH(NOLOCK)\n       ON CONEX.CCL_ID_LEG_ENT = H.STD_ID_LEG_ENT\n       AND CONEX.ID_ORGANIZATION = H.ID_ORGANIZATION  \n\t\t\n\t\tLEFT JOIN M4CCL_TASKS_L_CARACT C\n\t\tON H.ID_ORGANIZATION = C.ID_ORGANIZATION \n\t\tAND H.STD_ID_LEG_ENT = C.CCL_ID_LEG_ENT \n\t\tAND pos.SCO_ID_WORK_LOC = C.CCL_ID_WL \n\t\tAND CASE WHEN CCL_CK_ESCENARIO = 2 THEN H.CCL_ID_TASK ELSE NULL END = C.CCL_ID_TASK \n\t\tAND H.CCL_ID_AR_ALM = C.CCL_ID_AREA \n\t\tAND TERMINALES.GLB_ID_ZONA = C.CCL_ID_ZONA \n\t\tAND C.CCL_ID_TP_CARACTERISTICA = 'AO'\n\t\t\n       WHERE PR.ID_ORGANIZATION IN ('NL','0001') AND\n             (PR.STD_ID_HR_TYPE='01' OR PR.STD_ID_HR_TYPE='06' OR PR.STD_ID_HR_TYPE='02') AND  \n             H.CCL_TIPO IN ('P','T','R','C','E','A','J', 'F','V','D') and \n             H.CCL_DT_FECHA>=@FechaIni and H.CCL_DT_FECHA<@FechaFin \n             and (CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))=0 THEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))\n                    ELSE CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))<>0 AND REPLACE(PR.STD_ID_HR_TYPE,'.','') IN ('02','06') THEN cast(SUBSTRING(hrole.CCL_CADENA,3,3) as int) \n                           ELSE\n                                  CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) =9 AND REPLACE(hceco.CCL_DIVISION,'.','') =13 AND REPLACE(hceco.CCL_SECCION,'.','') = 18 THEN 37\n                                  ELSE (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) \n                           END \n                    END\n             END) IN ('14','23','26','32','37','41','43','61','99','189','398','506','12','20','64','68','330','357','0')\n\n       GROUP BY H.ID_ORGANIZATION \n             , H.CCL_DT_FECHA\n             , H.CCL_ID_TASK\n             , CAST( H.CCL_ID_TASK AS VARCHAR) +'#' + H.ID_ORGANIZATION \n             ,  H.GLB_ID_TERMINAL\n             , TERMINALES.GLB_ID_ZONA\n        , PR.SSP_FEC_ANTIGUEDAD\n        , PE.STD_DT_BIRTH\n        , PE.STD_ID_GENDER  \n        , CZ.CCL_TIEMPO_PARCIAL \n        , CZ.SSP_NO_DEFINIDO         \n        , A.CCL_ID_AR_ALM  \n             , hceco.CCL_COD_DIV_SECC          \n        , pos.SCO_ID_WORK_LOC\n             , pos.SCO_ID_JOB_CODE\n        , CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))=0 THEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))\n                    ELSE CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))<>0 AND REPLACE(PR.STD_ID_HR_TYPE,'.','') IN ('02','06') THEN cast(SUBSTRING(hrole.CCL_CADENA,3,3) as int) \n                           ELSE\n                                  CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) =9 AND REPLACE(hceco.CCL_DIVISION,'.','') =13 AND REPLACE(hceco.CCL_SECCION,'.','') = 18 THEN 37\n                                  ELSE (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) \n                           END \n            END\n             END\n        , PE.STD_ID_PERSON \n             , PR.CCL_ID_PERSON\n             , cast(PE.STD_ID_PERSON as varchar) +'#' +cast(PR.CCL_ID_PERSON as varchar)\n        , T.SCO_ID_TEAM       \n        , PR.STD_ID_EXTERN_ORG \n        , A.CCL_ID_AR_ALM \n        , T.SCO_ID_TEAM   \n        , GRI_TA.CCL_ID_GR_ABS\n         ,CASE WHEN H.ID_ORGANIZATION='0001' THEN COALESCE(GRI_TA.CCL_ID_GR_ABS,-1) \n               WHEN H.ID_ORGANIZATION='NL' THEN COALESCE(CAR_VAL.CCL_ID_CARACTERISTICA,-1) \n           END\n        , CASE WHEN H.ID_ORGANIZATION='0001' THEN COALESCE(H.SCO_ID_INCIDENCE,'N/A')\n               WHEN H.ID_ORGANIZATION='NL' THEN COALESCE(cast(CAR_ABS2.CCL_ID_CARACTERISTICA as varchar),'N/A') \n          END                                                                                                                              \n             , ABS_TA.CCL_ID_ABSENCE \n             , GL.SSP_PORC_GLEGAL  \n             , JP.SSP_VALOR_COEF_T_P\n             , TURNO.CCL_ID_TURNO\n             , H.CCL_HORA_INICIO\n             , H.CCL_HORA_INICIO_TUR\n             , H.CCL_HORA_FIN\n             , cate.SSP_ID_CATEGORIA\n             , HTTH.CCL_ID_TP_HORA \n             , HTTH.CCL_HOR_TM_PARC\n             , TUI.SCO_ID_REF_MOD   \n             , EQ.SCO_ID_TEAM\n             , EQ.SCO_ID_TEAM_ROLE       \n             , TUT.CCL_ID_MOD_REF \n             , TPT.IDDimensionTipoTurno \n             , PR.STD_ID_HR_TYPE\n             , W.STD_ID_WORK_UNIT\n             ,  CASE WHEN COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) IS NULL OR  COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT) IS NULL  THEN '-1'\n                    ELSE COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) + '#' + \n                     COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT) END\n             , EMPRESA_EQUIPO_AGOP.CCL_ID_LEG_ENT\n             , EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM\n             , NIVEL_EST.ID_DIP_LEVEL\n             , EMPLEADO_DIA.FECHA_INICIO_REAL\n             , EMPLEADO_DIA.HORA_INICIO_REAL\n             , EMPLEADO_DIA.FECHA_INICIO_TURNO\n             , EMPLEADO_DIA.HORA_INICIO_TURNO\n             , EMPLEADO_DIA.FECHA_FIN_TURNO\n             , EMPLEADO_DIA.HORA_FIN_TURNO \n             , EMPLEADO_DIA.FECHA_FIN_REAL\n             , EMPLEADO_DIA.HORA_FIN_REAL\n             , hrole.CCL_CADENA\n             , legalEntityHR.STD_ID_LEG_ENT\n             , hceco.CCL_SECCION\n             , hceco.CCL_DIVISION\n             , hrole.CCL_CADENA  \n             , hrole.CCL_ID_CAMPO\n             , EMPLEADO_DIA.HORAS_DESCANSO_PLANIFICADAS_NL\n             , EMPLEADO_DIA.HORAS_AUSENTISMO_RAW_AUX\n             , cast(SUBSTRING(hrole.CCL_CADENA,3,3) as int) \n             , unineg.CCL_ID_UNIDAD_NEG\n             , CCL_CK_ESCENARIO\n             , GRI2.CCL_ID_GR_ABS\n             , CAR_ABS2.CCL_ID_CARACTERISTICA\n             , CAR_ABS.CCL_ID_CARACTERISTICA\n             , CAR_VAL.CCL_ID_CARACTERISTICA\n             , H.SCO_ID_INCIDENCE\n\t\t\t, 'TA' + '#' + H.ID_ORGANIZATION+'#'+cast(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\t,C.CCL_ID_CARACTERISTICA\n) AS datos\nLEFT JOIN HORAS WITH (NOLOCK)\nON \n CASE WHEN  (datos.HORA_INICIO_TURNO IS NOT NULL AND datos.HORA_FIN_TURNO IS NOT NULL  ) OR -- TEORICAS O PRESENCIAS (Y AUSENCIAS)\n\t\t(datos.HORA_INICIO_REAL IS NOT NULL AND datos.HORA_FIN_REAL IS NOT NULL AND datos.HORAS_FALTAN_RAW = 0)  -- EXTRAS, AJUSTADAS, COMPLEMENTARIAS\n\t\t OR (datos.HORA_INICIO_TAR IS NOT NULL AND datos.HORA_FIN_TAR IS NOT NULL ) -- \n\t\tTHEN \n   CASE\n\t\tWHEN (DATEPART(HOUR, datos.HORA_INICIO_TAR) <= DATEPART(HOUR, datos.HORA_FIN_TAR)) AND ((HORAS.ID_HORA >= DATEPART(HOUR, datos.HORA_INICIO_TAR) AND  HORAS.ID_HORA < DATEPART(HOUR, datos.HORA_FIN_TAR)) OR (HORAS.ID_HORA = DATEPART(HOUR, datos.HORA_FIN_TAR) AND DATEPART(MINUTE, datos.HORA_FIN_TAR)>0)) THEN 1\n\t\tWHEN DATEPART(HOUR, datos.HORA_INICIO_TAR) > DATEPART(HOUR, datos.HORA_FIN_TAR) AND ((HORAS.ID_HORA - DATEPART(HOUR, datos.HORA_INICIO_TAR) >=0) OR (HORAS.ID_HORA - DATEPART(HOUR, datos.HORA_FIN_TAR)<0) OR (HORAS.ID_HORA - DATEPART(HOUR, datos.HORA_FIN_TAR)= 0 AND DATEPART(MINUTE, datos.HORA_FIN_TAR)>0)) THEN 1\t   \n   ELSE 0\n   END \n ELSE NULL \n\t\n END = 1\n   \n) TABLA\nLEFT JOIN M4CCL_H_GT_CAL_WLC AS WC WITH (NOLOCK)\n\tON TABLA.ID_ORGANIZATION = WC.ID_ORGANIZATION\n\tAND TABLA.ID_LUGAR_DE_TRABAJO = WC.CCL_ID_WORK_LOCAT\n\tAND TABLA.FECHA BETWEEN WC.CCL_DT_START AND WC.CCL_DT_END\nLEFT JOIN M4SCO_CALENDAR_REP AS CAL_REP WITH (NOLOCK)\n\tON WC.CCL_ID_CALENDAR = CAL_REP.SCO_ID_CALENDAR\n\tAND TABLA.FECHA = CAL_REP.SCO_DT_DAY\n\tAND CAL_REP.SCO_ID_DAYCALEN_TY <> 'AP06' AND CAL_REP.SCO_ID_DAYCALEN_TY <> 'AP07'\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t   \n\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t\t\t\nDROP TABLE  #CAL;\nDROP TABLE  #NIVEL_ESTUDIOS;\nDROP TABLE  #GA_RESUMEN;\nDROP TABLE  #HR_PERIOD;\nDROP TABLE  #EMPLEADO_DIA;"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @FechaIni DATE = '2022-09-27';\nDECLARE @FechaFin DATE = '2022-09-28';\n\n\n\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\nWITH cal AS (\n       SELECT CAST(@FechaIni AS DATE) AS FECHA        \n       \n       UNION ALL           \n       SELECT DATEADD(Day,1,FECHA)\n       FROM cal\n       WHERE DATEADD(Day,1,FECHA) < CAST(@FechaFin AS DATE)\n)            \n\nSELECT FECHA        \nINTO #CAL           \nFROM cal            \nOPTION (MAXRECURSION 0);          \nCREATE INDEX IDXFECHA ON #CAL(FECHA);\n\nWITH NIVEL_ESTUDIOS AS (          \n       SELECT c.FECHA,\n             HNIV.STD_ID_HR,            \n             CASE WHEN LEV.STD_ID_DIP_LEVEL in ('01','02') THEN 1         \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('03') THEN 2            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('11') THEN 3            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('04','09') THEN 4              \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('05','10') THEN 5              \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('06','07','08') THEN 6               \n                    ELSE 0              \n             END AS ID_DIP_LEVEL,              \n             ROW_NUMBER() OVER (PARTITION BY HNIV.STD_ID_HR, c.FECHA ORDER BY CASE WHEN LEV.STD_ID_DIP_LEVEL in ('01','02') THEN 1            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('03') THEN 2            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('11') THEN 3            \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('04','09') THEN 4              \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('05','10') THEN 5              \n                    WHEN LEV.STD_ID_DIP_LEVEL IN ('06','07','08') THEN 6               \n                    ELSE 0              \n             END DESC, STD_DT_START DESC ) AS NUMERO        \n\n       FROM STD_HR_ACAD_BACKGR HNIV WITH (NOLOCK) \n\t   INNER JOIN #CAL c WITH(NOLOCK)\n             ON HNIV.STD_DT_START<=c.FECHA\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\n       LEFT JOIN STD_LU_EDU_DIPLOMA DIP WITH (NOLOCK)        \n             ON DIP.STD_ID_DIPLOMA=HNIV.STD_ID_DIPLOMA \n       LEFT JOIN STD_LU_EDU_DIP_LEV LEV WITH (NOLOCK)        \n             ON LEV.STD_ID_DIP_LEVEL=DIP.STD_ID_DIP_LEVEL  \n                   \n)             \n             \nSELECT FECHA\n       , STD_ID_HR\n       , ID_DIP_LEVEL\n       , NUMERO            \n       INTO #NIVEL_ESTUDIOS\nFROM NIVEL_ESTUDIOS WITH(NOLOCK)\nOPTION (MAXRECURSION 0);          \nCREATE INDEX IDXNEST ON #NIVEL_ESTUDIOS(FECHA, STD_ID_HR, ID_DIP_LEVEL, NUMERO);\n\n\nSELECT ID_ORGANIZATION, CCL_DT_FECHA, CCL_TIPO, STD_ID_LEG_ENT, SCO_ID_HR  , SCO_OR_HR_PER, CCL_ID_AR_ALM, SCO_ID_TEAM, SCO_ID_INCIDENCE, CCL_HORAS, CCL_HORA_INICIO, CCL_HORA_FIN, CCL_HORA_INICIO_TUR, CCL_ID_TASK, GLB_ID_TERMINAL\nINTO #GA_RESUMEN \nFROM M4CCL_GA_RESUMEN_RH AS RESUMEN_RH WITH (NOLOCK)  \nWHERE    RESUMEN_RH.CCL_DT_FECHA>=@FechaIni and RESUMEN_RH.CCL_DT_FECHA<@FechaFin and \nSTD_ID_LEG_ENT IN ('14','23','26','32','37','41','43','61','99','189','398','506','12','20','64','68','330','357') AND   RESUMEN_RH.CCL_TIPO IN ('P','T','R','C','E','A','J', 'F','V','D')  \n\t\t\t \nCREATE NONCLUSTERED INDEX  IDXM4CCL_GA_RESUMEN_RH ON #GA_RESUMEN(ID_ORGANIZATION, SCO_ID_HR, SCO_OR_HR_PER, CCL_DT_FECHA);\n\n\nSELECT STD_ID_HR, STD_OR_HR_PERIOD, ID_ORGANIZATION, STD_DT_START, STD_DT_END, SSP_FEC_ANTIGUEDAD, CCL_ID_PERSON, STD_ID_EXTERN_ORG, STD_ID_HR_TYPE\nINTO #HR_PERIOD\nFROM STD_HR_PERIOD AS HR_PERIOD WITH (NOLOCK)      \nWHERE \n\tHR_PERIOD.ID_ORGANIZATION IN ('NL','0001') AND\n             (HR_PERIOD.STD_ID_HR_TYPE='01' OR HR_PERIOD.STD_ID_HR_TYPE='06' OR HR_PERIOD.STD_ID_HR_TYPE='02')      \nCREATE NONCLUSTERED INDEX  IDXSTD_HR_PERIOD ON #HR_PERIOD(ID_ORGANIZATION, STD_ID_HR, STD_OR_HR_PERIOD);\n\n\nSELECT H.SCO_ID_HR, H.CCL_DT_FECHA,\n                    SUM(CASE WHEN (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='D') THEN H.CCL_HORAS \n                    ELSE 0  \n                    END) AS HORAS_DESCANSO_PLANIFICADAS_NL \n                    , \n                    SUM(\n                    CASE WHEN                           \n                           CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NOT NULL) \n                           OR (H.ID_ORGANIZATION='NL' and H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4))\n                           THEN H.CCL_HORAS\n                    ELSE 0 END \n             = \n             CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA IS NOT NULL)\n                    OR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4,-1,13))\n                    THEN H.CCL_HORAS\n                    ELSE 0  END              \n             THEN\n             CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NOT NULL) \n                    OR (H.ID_ORGANIZATION='NL' and H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4))\n                    THEN H.CCL_HORAS\n                    ELSE 0 \n             END \n             ELSE (\n             CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NOT NULL) \n                    OR (H.ID_ORGANIZATION='NL' and H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4))\n                    THEN H.CCL_HORAS\n                    ELSE 0 END \n                    +\n                    CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA IS NOT NULL)\n                    OR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4,-1,13))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n                    THEN H.CCL_HORAS\n                    ELSE 0 END\n                    )             \n             END\n\t\n             ) AS HORAS_AUSENTISMO_RAW_AUX\n\t\t\t \n             , SUM(CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA IS NOT NULL)  \n                    OR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4,-1,13))\n                    THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_INCIDENCIA_AUSENCIA_RAW_AUX\n                                                                                                                                                                                                                                             \n                    ,MIN(CASE WHEN CCL_TIPO='R' THEN CAST(CAST(H.CCL_HORA_INICIO AS DATE) AS nvarchar) ELSE NULL END) AS FECHA_INICIO_REAL\n                    , MIN(CASE WHEN CCL_TIPO='R' THEN CAST(CAST(H.CCL_HORA_INICIO AS TIME(0)) AS nvarchar) ELSE NULL END) AS HORA_INICIO_REAL\n                    , MIN(CAST(CAST(H.CCL_HORA_INICIO_TUR AS DATE) AS nvarchar)) AS FECHA_INICIO_TURNO\n                    , MIN(CAST(CAST(H.CCL_HORA_INICIO_TUR AS TIME(0)) AS nvarchar)) AS HORA_INICIO_TURNO\n                    , MAX(CAST(CAST(CASE WHEN H.CCL_TIPO in ('T','P') THEN H.CCL_HORA_FIN ELSE NULL END AS DATE) AS nvarchar)) AS FECHA_FIN_TURNO\n                    , MAX(CAST(CAST(CASE WHEN H.CCL_TIPO in ('T','P') THEN H.CCL_HORA_FIN ELSE NULL END AS TIME(0)) AS nvarchar)) AS HORA_FIN_TURNO \n                    , MAX(CASE WHEN CCL_TIPO ='R' THEN CAST(CAST(H.CCL_HORA_FIN AS DATE) AS nvarchar) ELSE NULL END )AS FECHA_FIN_REAL\n                    , cast(CAST(MAX(CASE WHEN CCL_TIPO = 'R' THEN H.CCL_HORA_FIN  ELSE NULL END) AS time(0)) AS NVARCHAR) AS HORA_FIN_REAL\n                    ,SUM(CASE WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN (H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NULL AND H.ID_ORGANIZATION='0001') THEN -H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_PLANIFICADAS_RAW  \nINTO #EMPLEADO_DIA\n       FROM  M4CCL_GA_RESUMEN_RH H  WITH (NOLOCK) \n       \n       LEFT JOIN @empresas AS LEGENT \n        ON LEGENT.ID_EMPRESA = H.STD_ID_LEG_ENT\t\t\t\t \n\n       LEFT JOIN M4CCL_TA_INFORMES_ABS RGI_TA WITH (NOLOCK) \n             ON RGI_TA.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n             AND CAST(RGI_TA.CCL_ID_ABSENCE AS NVARCHAR) = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n             AND RGI_TA.CCL_ID_INFORME=1   \t\t\t\t\t  \n             \n       LEFT JOIN M4CCL_GA_GR_INF_ABS GRI_TA WITH (NOLOCK)\n             ON GRI_TA.ID_ORGANIZATION = RGI_TA.ID_ORGANIZATION\n             AND GRI_TA.CCL_ID_GR_ABS = RGI_TA.CCL_ID_GR_ABS\n\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\n\t LEFT JOIN M4CCL_GA_INFORMES_ABS RGI_GA WITH (NOLOCK) \n             ON RGI_GA.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n             AND CAST(RGI_GA.SCO_ID_INCIDENCE AS NVARCHAR) = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n             AND RGI_GA.CCL_ID_INFORME=1  \t\t\t\t \n\n     \n\n       LEFT JOIN M4CCL_GA_INFORMES_ABS RGI2 WITH (NOLOCK) \n             ON RGI2.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n                    AND RGI2.SCO_ID_INCIDENCE = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n            AND RGI2.CCL_ID_INFORME in (28)  \n\n       LEFT JOIN M4CCL_GA_GR_INF_ABS GRI2 WITH(NOLOCK)\n             ON GRI2.ID_ORGANIZATION = RGI2.ID_ORGANIZATION\n                    AND GRI2.CCL_ID_GR_ABS = RGI2.CCL_ID_GR_ABS\t\n                    \n       LEFT JOIN M4CCL_ABSENCES_TA ABS_TA WITH(NOLOCK)\n             ON cast(ABS_TA.CCL_ID_ABSENCE as varchar) = H.SCO_ID_INCIDENCE\n                    AND  H.ID_ORGANIZATION = ABS_TA.ID_ORGANIZATION \n                    AND  H.ID_ORGANIZATION IN ('NL', '0001')\t\t\t\t\t\t\t\t\t   \n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS WITH(NOLOCK)\n             ON ABS_TA.ID_ORGANIZATION = CAR_ABS.ID_ORGANIZATION\n                    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS.CCL_ID_ABSENCE\n                    AND  H.ID_ORGANIZATION= ABS_TA.ID_ORGANIZATION\n                    AND CAR_ABS.CCL_ID_TP_CARACTERISTICA = 'INC' \n                    AND ABS_TA.ID_ORGANIZATION IN ('NL', '0001')                    \n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_VALOR CAR_VAL WITH(NOLOCK)\n             ON CAR_ABS.CCL_ID_TP_CARACTERISTICA = CAR_VAL.CCL_ID_TP_CARACTERISTICA\n                    AND CAR_ABS.CCL_ID_CARACTERISTICA = CAR_VAL.CCL_ID_CARACTERISTICA\n        WHERE CCL_DT_FECHA>=@FechaIni and H.CCL_DT_FECHA<@FechaFin\n        and H.ID_ORGANIZATION in ('NL','0001')\n        AND CCL_TIPO IN ('P','T','R','C','E','A','J', 'F','V','D')\n        GROUP BY  H.SCO_ID_HR, H.CCL_DT_FECHA\nCREATE NONCLUSTERED INDEX IDXEMPLEADO_DIA ON #EMPLEADO_DIA(SCO_ID_HR, CCL_DT_FECHA);\n\nWITH HORAS AS (SELECT 0 AS ID_HORA,'00:00' AS HORA UNION ALL SELECT 1, '01:00' UNION ALL SELECT 2, '02:00' UNION ALL SELECT 3, '03:00' UNION ALL SELECT 4, '04:00'\nUNION ALL SELECT 5, '05:00' UNION ALL SELECT 6, '06:00' UNION ALL SELECT 7, '07:00' UNION ALL SELECT 8, '08:00' UNION ALL SELECT 9, '09:00' UNION ALL SELECT 10, '10:00'\nUNION ALL SELECT 11, '11:00' UNION ALL SELECT 12, '12:00' UNION ALL SELECT 13, '13:00' UNION ALL SELECT 14, '14:00' UNION ALL SELECT 15, '15:00' UNION ALL\nSELECT 16, '16:00' UNION ALL SELECT 17, '17:00' UNION ALL SELECT 18, '18:00' UNION ALL SELECT 19, '19:00' UNION ALL SELECT 20, '20:00' UNION ALL SELECT 21, '21:00'\nUNION ALL SELECT 22, '22:00' UNION ALL SELECT 23, '23:00'\n)\n\t\t\nSELECT TABLA.*,  \nCASE\n\tWHEN (DATEPART(HOUR, TABLA.HORA_INICIO_TAR) <= DATEPART(HOUR, TABLA.HORA_FIN_TAR)) AND ((TABLA.ID_HORA >= DATEPART(HOUR, TABLA.HORA_INICIO_TAR) AND  TABLA.ID_HORA < DATEPART(HOUR, TABLA.HORA_FIN_TAR)) \n\t\t\tOR (TABLA.ID_HORA = DATEPART(HOUR, TABLA.HORA_FIN_TAR) AND DATEPART(MINUTE, TABLA.HORA_FIN_TAR)>0)) THEN  CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\tWHEN DATEPART(HOUR, TABLA.HORA_INICIO_TAR) > DATEPART(HOUR, TABLA.HORA_FIN_TAR) AND ((TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_INICIO_TAR) >=0) \n\t\tOR (TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_FIN_TAR)<0) OR (TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_FIN_TAR)= 0 AND DATEPART(MINUTE, TABLA.HORA_FIN_TAR)>0)) THEN \n\t\tCASE WHEN (CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime) >=  TABLA.HORA_INICIO_TAR AND \n\t\t\t\tCAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime) < CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', '23:59') AS datetime) \n\t\t\t\t\tOR DATEPART(HOUR, CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)) = DATEPART(HOUR, TABLA.HORA_INICIO_TAR)) \n\t\t\t\t\t\tTHEN CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\t\t\tELSE CAST(CONCAT(CAST(CAST(TABLA.HORA_FIN_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\t\tEND\nELSE ''\nEND as FECHA_HORA_DESGLOSE,\n\ncast (CASE\n\tWHEN (DATEPART(HOUR, TABLA.HORA_INICIO_TAR) <= DATEPART(HOUR, TABLA.HORA_FIN_TAR)) AND ((TABLA.ID_HORA >= DATEPART(HOUR, TABLA.HORA_INICIO_TAR) AND  TABLA.ID_HORA < DATEPART(HOUR, TABLA.HORA_FIN_TAR)) \n\t\t\tOR (TABLA.ID_HORA = DATEPART(HOUR, TABLA.HORA_FIN_TAR) AND DATEPART(MINUTE, TABLA.HORA_FIN_TAR)>0)) THEN  CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\tWHEN DATEPART(HOUR, TABLA.HORA_INICIO_TAR) > DATEPART(HOUR, TABLA.HORA_FIN_TAR) AND ((TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_INICIO_TAR) >=0) \n\t\tOR (TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_FIN_TAR)<0) OR (TABLA.ID_HORA - DATEPART(HOUR, TABLA.HORA_FIN_TAR)= 0 AND DATEPART(MINUTE, TABLA.HORA_FIN_TAR)>0)) THEN \n\t\tCASE WHEN (CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime) >=  TABLA.HORA_INICIO_TAR AND \n\t\t\t\tCAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime) < CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', '23:59') AS datetime) \n\t\t\t\t\tOR DATEPART(HOUR, CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)) = DATEPART(HOUR, TABLA.HORA_INICIO_TAR)) \n\t\t\t\t\t\tTHEN CAST(CONCAT(CAST(CAST(TABLA.HORA_INICIO_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\t\t\tELSE CAST(CONCAT(CAST(CAST(TABLA.HORA_FIN_TAR AS date) AS varchar), ' ', TABLA.HORA) AS datetime)\n\t\tEND\nELSE ''\nEND AS DATE)  as FECHA_DESGLOSE,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_REALES_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) \n\n AS HORAS_REALES_PONDERADAS_RAW,\n\t\t\t\t\t\t\n\nCAST((CASE \n\tWHEN TABLA.HORAS_PRESENCIA_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_PRESENCIA_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_TEORICAS_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_TEORICAS_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_DESCANSO_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_DESCANSO_PONDERADAS_RAW,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_DESCANSO_PLANIFICADAS_NL > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_DESCANSO_PLANIFICADAS_NL_PONDERADAS,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_DESCANSO_RAW_NL > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_DESCANSO_RAW_NL_PONDERADAS,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_PLANIFICADAS_RAW <> 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE  (DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE (60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END  \n\t\t\tEND        \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) ELSE DATEPART(MINUTE , TABLA.HORA_FIN_TAR) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN 60 ELSE 60  * -1 END \n\t\tEND \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_PLANIFICADAS_PONDERADAS_RAW,\n\nCASE \n\tWHEN TABLA.HORAS_PLANIFICADAS_RAW > 0 THEN\n\t\tID_PERSONA_FECHA\t\t  \nELSE null END AS PLANTILLA_PLANIFICADA_PONDERADAS_RAW,\n\nCASE \n\tWHEN TABLA.HORAS_VACACIONES_RAW > 0 THEN\n\t\tID_PERSONA_FECHA\t\t  \nELSE null END AS HORAS_VACACIONES_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_COMPLEMENTARIAS_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_COMPLEMENTARIAS_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_EXTRA_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) * (TABLA.HORAS_EXTRA_RAW /  NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0) ) AS HORAS_EXTRA_PONDERADAS_RAW,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_ORDINARIAS_RAW <> 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE  (DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE (60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END  \n\t\t\tEND        \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) ELSE DATEPART(MINUTE , TABLA.HORA_FIN_TAR) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN 60 ELSE 60  * -1 END \n\t\tEND \t\t  \n\tEND\nELSE 0 END) *  CASE WHEN  TABLA.HORAS_ORDINARIAS_RAW > 0 THEN (TABLA.HORAS_ORDINARIAS_RAW / (NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0))) ELSE (TABLA.HORAS_ORDINARIAS_RAW / (NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0))) * -1 END / 60.0 AS NUMERIC(7, 5)) AS HORAS_ORDINARIAS_PONDERADAS_RAW,\n\n\n \n\n\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_ABSENTISMO_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_ABSENTISMO_PONDERADAS_RAW,\n\nCAST((CASE \n\tWHEN TABLA.HORAS_DESCANSO_PLAN_AUX > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_DESCANSO_PLAN_AUX_PONDERADAS,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW_AUX > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_AUSENTISMO_RAW_AUX_PONDERADAS,\n\n\n(CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW_AUX > 4.5 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  ID_PERSONA_FECHA\t\n\t\t\t  ELSE ID_PERSONA_FECHA\t END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN ID_PERSONA_FECHA\t\n\t\t\t  ELSE ID_PERSONA_FECHA END \t\t  \n\tEND\nELSE NULL END)  AS PLANTILLA_AUSENTISMO_PONDERADAS_RAW,\n\n(CASE WHEN CAST((CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW_AUX > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) > 0 and HORAS_AUSENTISMO_RAW > 0  THEN ID_PERSONA_FECHA ELSE NULL END) AS PLANTILLA_AUSENTISMO_DESGLOSE_PONDERADAS_RAW,\n\n(CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW_AUX > 4.5 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  ID_PERSONA_FECHA\t\n\t\t\t  ELSE ID_PERSONA_FECHA\t END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN ID_PERSONA_FECHA\t\n\t\t\t  ELSE ID_PERSONA_FECHA END \t\t  \n\tEND\nELSE NULL END)  AS PLANTILLA_AUSENTISMO_DIA_PONDERADAS_RAW,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_AUSENTISMO_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_AUSENTISMO_RAW_PONDERADAS,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_INCIDENCIA_AUSENCIA_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_INCIDENCIA_AUSENCIA_PONDERADAS_RAW,\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_AJUSTADAS_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_AJUSTADAS_PONDERADAS_RAW,\n\n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_FALTAN_RAW <> 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE  (DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) ELSE (60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)) * -1 END  \n\t\t\tEND        \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) ELSE DATEPART(MINUTE , TABLA.HORA_FIN_TAR) * -1 END\n\t\t\t  ELSE CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN 60 ELSE 60  * -1 END \n\t\tEND \t\t  \n\tEND\nELSE 0 END)  *  CASE WHEN  TABLA.HORAS_FALTAN_RAW > 0 THEN (TABLA.HORAS_FALTAN_RAW / (NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0))) ELSE (TABLA.HORAS_FALTAN_RAW / (NULLIF((DATEDIFF(second, TABLA.HORA_INICIO_TAR, TABLA.HORA_FIN_TAR) / 3600.0) ,0))) * -1 END / 60.0 AS NUMERIC(7, 5)) AS HORAS_FALTAN_PONDERADAS_RAW,\n\n\n \n\n\nCAST((CASE \n\tWHEN TABLA.HORAS_INCIDENCIA_RAW > 0 THEN\n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_INICIO_TAR)\n\t\t\tTHEN CASE WHEN TABLA.ID_HORA  = DATEPART(HOUR , TABLA.HORA_FIN_TAR)  \n\t\t\t  THEN  DATEPART(MINUTE , TABLA.HORA_FIN_TAR) - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR)\n\t\t\t  ELSE 60 - DATEPART(MINUTE , TABLA.HORA_INICIO_TAR) END          \n\t\tELSE \n\t\tCASE WHEN TABLA.ID_HORA = DATEPART(HOUR , TABLA.HORA_FIN_TAR) \n\t\t\t  THEN DATEPART(MINUTE , TABLA.HORA_FIN_TAR) \n\t\t\t  ELSE 60 END \t\t  \n\tEND\nELSE 0 END) / 60.0 AS NUMERIC(4, 2)) AS HORAS_INCIDENCIA_PONDERADAS_RAW\n\n\n,CASE \n\tWHEN CAL_REP.SCO_DT_DAY IS NULL THEN '000'\n\tELSE CAL_REP.SCO_ID_DAYCALEN_TY\nEND as ID_TIPO_FESTIVO\n\n\n\n FROM (\n\nSELECT * \nFROM ( \n             \n       SELECT \n            COUNT(*) OVER (PARTITION BY H.CCL_DT_FECHA ,PE.STD_ID_PERSON, CASE \n            WHEN SUM(CASE \n                    WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN (H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NULL AND H.ID_ORGANIZATION='0001') OR \n                                                (H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IS NULL AND H.ID_ORGANIZATION='NL') THEN -H.CCL_HORAS \n                    ELSE 0 \n            END) > 0 then 1\n            WHEN SUM(CASE \n                    WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS \n                    WHEN (H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS  IS NULL AND H.ID_ORGANIZATION='0001') OR \n                            (H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IS NULL AND H.ID_ORGANIZATION='NL') THEN -H.CCL_HORAS \n                    ELSE 0 \n            END) < 0 then -1\n            else 0 \n            end) AS AGRUPACION_SIN_TURNO,\n\n\t\t\tCASE WHEN H.ID_ORGANIZATION='0001' THEN COALESCE(GRI_TA.CCL_ID_GR_ABS ,-1) \n               WHEN H.ID_ORGANIZATION='NL' THEN COALESCE(CAR_VAL.CCL_ID_CARACTERISTICA,-1) END AS ID_GRUPO_INCIDENCIA\n\n             , SUM(CASE WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN (H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS  IS NULL AND H.ID_ORGANIZATION='0001') THEN -H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_PLANIFICADAS_RAW\n             , SUM(CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS  IS NOT NULL) \n                    OR (H.ID_ORGANIZATION='NL' and H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4)) THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_AUSENTISMO_RAW\n\n             ,CASE WHEN SUM(CASE WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NULL THEN -H.CCL_HORAS ELSE 0 END) > 0 then 1\n                    WHEN SUM(CASE WHEN H.CCL_TIPO='T' OR H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    WHEN H.CCL_TIPO='A' AND GRI_TA.CCL_ID_GR_ABS IS NULL THEN -H.CCL_HORAS ELSE 0 END) < 0 then -1\n                    else 0 \n             end as CLASIFICACION_HORAS_PLANIFICADAS\n\n              , 'TA' + '#' + H.ID_ORGANIZATION+'#'+ CAST(COALESCE(CAR_ABS.CCL_ID_CARACTERISTICA,-1) AS varchar) \n\t\t\t\t+ '#' \n\t\t\t\t+ CASE H.ID_ORGANIZATION \n\t\t\t\t\t\tWHEN 'NL' THEN COALESCE(CAST(CAR_ABS2.CCL_ID_CARACTERISTICA AS varchar), 'N/A')\n\t\t\t\t\t\tELSE COALESCE(CAST(H.SCO_ID_INCIDENCE AS varchar),'N/A')\n\t\t\t\t\t\tEND\n\t\t\t\tAS ID_ORG_INCIDENCIA\n\n             , SUM(\n\t\t\t\tCASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA IS NOT NULL)  \n\t\t\t\t\t\t\tOR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_VAL.CCL_ID_CARACTERISTICA IN(1,2,3,4,-1,13))\n\t\t\t\tTHEN H.CCL_HORAS\n\t\t\t\tELSE 0 END\n\t\t\t ) AS HORAS_INCIDENCIA_AUSENCIA_RAW\n\n             , H.ID_ORGANIZATION\n             , CASE WHEN CCL_CK_ESCENARIO = 2 THEN H.CCL_ID_TASK ELSE NULL END AS ID_TAREA\n             ,CCL_CK_ESCENARIO\n             ,  H.GLB_ID_TERMINAL AS ID_TERMINAL\n             , TERMINALES.GLB_ID_ZONA AS ID_ZONA\n             ,  CASE WHEN CCL_CK_ESCENARIO = 2 THEN CAST( H.CCL_ID_TASK AS VARCHAR) ELSE NULL END + '#' + H.ID_ORGANIZATION AS ID_TAREA_ORGANIZATION\n             , H.CCL_DT_FECHA AS FECHA\n        , DATEDIFF(MM, PR.SSP_FEC_ANTIGUEDAD, H.CCL_DT_FECHA) AS ANTIGUEDAD\n        , DATEDIFF(MM, PE.STD_DT_BIRTH, H.CCL_DT_FECHA)/12 AS EDAD\n        , CASE WHEN PE.STD_ID_GENDER IN ('0','1') THEN 'H' ELSE 'M' END GENERO\n        , CASE WHEN CZ.CCL_TIEMPO_PARCIAL = 0 THEN 1 ELSE 2 END ID_TIPO_JORNADA\n        , CASE WHEN CZ.SSP_NO_DEFINIDO = 'S' THEN 1 ELSE 2 END AS ID_TIPO_CONTRATO\n        , A.CCL_ID_AR_ALM AS ID_ALMACEN \n             , H.ID_ORGANIZATION + '#'+A.CCL_ID_AR_ALM AS ID_ORG_ALM\n             , hceco.CCL_COD_DIV_SECC AS DIVISION_SECCION         \n        , pos.SCO_ID_WORK_LOC AS ID_LUGAR_DE_TRABAJO\n             , pos.SCO_ID_JOB_CODE as ID_PUESTO\n             , CONCAT(pos.SCO_ID_JOB_CODE, '#', PR.STD_ID_HR_TYPE) AS ID_PUESTO_HR_TYPE\n        , CASE WHEN REPLACE(PR.STD_ID_HR_TYPE,'.','') IN ('02','06') AND hrole.CCL_ID_CAMPO='EMPR_FUNC2' THEN hrole.CCL_CADENA \n                    ELSE CASE WHEN REPLACE(PR.STD_ID_HR_TYPE,'.','') IN ('02','06') THEN cast(SUBSTRING(hrole.CCL_CADENA,3,3) as int) \n                           ELSE\n                                  CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) =9 AND REPLACE(hceco.CCL_DIVISION,'.','') =13 AND REPLACE(hceco.CCL_SECCION,'.','')=18 THEN 37\n                                  ELSE (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) \n                           END \n                    END \n             END AS ID_EMPRESA\n        , PR.STD_ID_EXTERN_ORG AS ID_EMPRESA_EXTERNA\n             , PE.STD_ID_PERSON + '#' +  CAST(CAST(H.CCL_DT_FECHA AS DATE) AS VARCHAR) AS ID_PERSONA_FECHA\n             , PE.STD_ID_PERSON AS ID_PERSONA\n             , PR.CCL_ID_PERSON AS ID_LOCAL\n             , cast(PE.STD_ID_PERSON as varchar) +'#' +cast(PR.CCL_ID_PERSON as varchar) as ID_PERSONA_LOCAL\n        , T.SCO_ID_TEAM AS ID_EQUIPO\n\n        , CASE WHEN H.ID_ORGANIZATION='0001' THEN COALESCE(H.SCO_ID_INCIDENCE,'N/A')\n                    WHEN H.ID_ORGANIZATION='NL' THEN COALESCE(cast(CAR_ABS2.CCL_ID_CARACTERISTICA as varchar),'N/A') END AS ID_INCIDENCIA\n        , ABS_TA.CCL_ID_ABSENCE AS ID_AUSENCIA\n        , 'TA' + '#' + H.ID_ORGANIZATION+'#'+cast(ABS_TA.CCL_ID_ABSENCE as varchar) AS ID_ORG_AUSENCIA\n\t\t\t  \n             , SUM(CASE WHEN H.CCL_TIPO='P' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_PRESENCIA_RAW   \n             , SUM(CASE WHEN H.CCL_TIPO='T' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_TEORICAS_RAW   \n             , SUM(CASE WHEN (GETDATE() >= H.CCL_DT_FECHA AND H.CCL_ID_TASK='66' AND H.CCL_TIPO='R') THEN H.CCL_HORAS \n                    WHEN (GETDATE() < H.CCL_DT_FECHA AND H.CCL_TIPO='D') THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_DESCANSO_RAW   \n             , SUM(CASE    WHEN (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='D') THEN H.CCL_HORAS \n                    ELSE 0  \n             END) AS HORAS_DESCANSO_PLANIFICADAS_NL \n\n             , SUM(CASE WHEN (H.ID_ORGANIZATION='NL' AND GETDATE() >= H.CCL_DT_FECHA AND H.CCL_ID_TASK IN ('66','112') AND H.CCL_TIPO='R') THEN H.CCL_HORAS  \n                                  ELSE 0  \n                    END) AS HORAS_DESCANSO_RAW_NL \n\n             , SUM(CASE WHEN H.CCL_TIPO='R' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_REALES_RAW\n             , SUM(CASE WHEN H.CCL_TIPO='C' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_COMPLEMENTARIAS_RAW        \n             , SUM(CASE WHEN H.CCL_TIPO='E' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_EXTRA_RAW       \n             , SUM(CASE WHEN H.CCL_TIPO='R' THEN H.CCL_HORAS\n                    WHEN H.CCL_TIPO='C' OR H.CCL_TIPO='E' THEN -H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_ORDINARIAS_RAW    \n             , SUM(CASE WHEN (H.ID_ORGANIZATION='0001' AND H.CCL_TIPO='A' AND H.SCO_ID_INCIDENCE IN('600','800','1','607','807','5','606','806','608','808','14')) \n             OR (H.ID_ORGANIZATION='NL' AND H.CCL_TIPO='A' AND CAR_ABS.CCL_ID_CARACTERISTICA='2') THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_ABSENTISMO_RAW\n             ,EMPLEADO_DIA.HORAS_DESCANSO_PLANIFICADAS_NL AS HORAS_DESCANSO_PLAN_AUX\n             ,CASE WHEN EMPLEADO_DIA.HORAS_AUSENTISMO_RAW_AUX >= 4 THEN EMPLEADO_DIA.HORAS_AUSENTISMO_RAW_AUX - EMPLEADO_DIA.HORAS_DESCANSO_PLANIFICADAS_NL\n             ELSE EMPLEADO_DIA.HORAS_AUSENTISMO_RAW_AUX END AS HORAS_AUSENTISMO_RAW_AUX \n             , SUM(CASE WHEN H.CCL_TIPO='J' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_AJUSTADAS_RAW\n             , COALESCE(GL.SSP_PORC_GLEGAL,0) AS PORC_GUARDA_LEGAL \n             , COALESCE(JP.SSP_VALOR_COEF_T_P,100) AS PORC_TIEMPO_PARCIAL\n             , CAST(ROUND(COALESCE(GL.SSP_PORC_GLEGAL,0), 0, 1) AS INTEGER) AS TRAMO_PORC_REDUCCION\n             , CASE WHEN COALESCE(GL.SSP_PORC_GLEGAL,0)>0 THEN 1 ELSE 2 END AS ID_REDUCCION_JORNADA  \n             , TURNO.CCL_ID_TURNO\n             ,  EMPLEADO_DIA.FECHA_INICIO_REAL  AS FECHA_INICIO_REAL\n             ,  EMPLEADO_DIA.HORA_INICIO_REAL AS HORA_INICIO_REAL\n             , CASE WHEN SUM(EMPLEADO_DIA.HORAS_PLANIFICADAS_RAW) = 0 THEN NULL ELSE EMPLEADO_DIA.FECHA_INICIO_TURNO END AS FECHA_INICIO_TURNO\n             , CASE WHEN SUM(EMPLEADO_DIA.HORAS_PLANIFICADAS_RAW)= 0 THEN NULL ELSE EMPLEADO_DIA.HORA_INICIO_TURNO END AS HORA_INICIO_TURNO\n             , CASE WHEN SUM(EMPLEADO_DIA.HORAS_PLANIFICADAS_RAW)= 0 THEN NULL ELSE EMPLEADO_DIA.FECHA_FIN_TURNO END AS FECHA_FIN_TURNO\n             , CASE WHEN SUM(EMPLEADO_DIA.HORAS_PLANIFICADAS_RAW) = 0 THEN NULL ELSE EMPLEADO_DIA.HORA_FIN_TURNO END AS HORA_FIN_TURNO\n             , EMPLEADO_DIA.FECHA_FIN_REAL \n             , EMPLEADO_DIA.HORA_FIN_REAL\n\t\t\t , H.CCL_HORA_INICIO as HORA_INICIO_TAR\n\t\t\t , H.CCL_HORA_FIN as HORA_FIN_TAR\n             , SUM(CASE WHEN H.SCO_ID_INCIDENCE IS NOT NULL AND H.CCL_TIPO = 'A' THEN H.CCL_HORAS\n                    ELSE 0 \n             END) AS HORAS_INCIDENCIA_RAW\n             , cate.SSP_ID_CATEGORIA AS ID_CATEGORIA \n             , CAST(HTTH.CCL_ID_TP_HORA AS VARCHAR) +'#'+ CAST(HTTH.CCL_HOR_TM_PARC AS VARCHAR) AS ID_HORAS_CONTRATADAS \n             , SUM(CASE WHEN H.CCL_TIPO='V' THEN H.CCL_HORAS ELSE 0 END) AS HORAS_VACACIONES_RAW \n             , SUM(CASE WHEN H.CCL_TIPO='F' THEN H.CCL_HORAS ELSE 0 END) AS HORAS_FALTAN_RAW\n             , TUI.SCO_ID_REF_MOD AS MOD_REF_INDIVIDUAL      \n             , EQ.SCO_ID_TEAM AS ID_EQUIPO_PER \n             , EQ.SCO_ID_TEAM_ROLE AS ID_ROL_EQUIPO    \n             , TUT.CCL_ID_MOD_REF AS MOD_REF_EQUIPO\n             , TPT.IDDimensionTipoTurno AS IdInternalTipoTurno\n             , PR.STD_ID_HR_TYPE AS ID_TIPO_PERSONA\n\t\t\t , CASE WHEN COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) IS NULL OR  COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT) IS NULL THEN '-1'\n\t\t\t\tELSE COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) + '#' + \n                COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT) END AS ID_EQ_ORG                                                                                                                                      \n             , W.STD_ID_WORK_UNIT AS ID_UNIDAD_ORGANIZATIVA \n             , COALESCE(NIVEL_EST.ID_DIP_LEVEL,0) as ID_NIVEL_ESTUDIOS \n             , COALESCE(TUI.SCO_ID_REF_MOD ,TUT.CCL_ID_MOD_REF) AS ID_MODELO_REFERENCIA\n             , unineg.CCL_ID_UNIDAD_NEG\n\t\t\t , C.CCL_ID_CARACTERISTICA AS ID_AGRUPACION_OPERATIVA\n       FROM #GA_RESUMEN as H WITH (NOLOCK) \n \n       INNER JOIN  #HR_PERIOD PR WITH(NOLOCK)\n            ON PR.STD_ID_HR = H.SCO_ID_HR COLLATE Latin1_General_CS_AS   \n            AND PR.STD_OR_HR_PERIOD = H.SCO_OR_HR_PER\n            AND PR.ID_ORGANIZATION = H.ID_ORGANIZATION\n            AND PR.STD_DT_START <=H.CCL_DT_FECHA \n            AND PR.STD_DT_END >= H.CCL_DT_FECHA \n\t     AND H.STD_ID_LEG_ENT IN ('14','23','26','32','37','41','43','61','99','189','398','506','12','20','64','68','330','357')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \n\t\t\n\n\t\t\t     -- and PR.CCL_ID_PERSON = '65687' --spb\n\n\t\t\t\t\t\t\t  \n\t\t\t\t  \n       INNER JOIN M4SCO_H_HR_POS AS hrpos WITH (NOLOCK)\n             ON PR.ID_ORGANIZATION = hrpos.ID_ORGANIZATION \n                    AND PR.STD_ID_HR =  hrpos.SCO_ID_HR \n                    AND PR.STD_OR_HR_PERIOD = hrpos.SCO_OR_HR_ROLE\n                    AND hrpos.SCO_DT_START <=H.CCL_DT_FECHA \n                    AND  hrpos.SCO_DT_END >= H.CCL_DT_FECHA  \n  \n       INNER JOIN M4SCO_POSITION AS pos WITH (NOLOCK)\n             ON hrpos.SCO_ID_POSITION =  pos.SCO_ID_POSITION \n                    AND pos.SCO_DT_START <=H.CCL_DT_FECHA \n                    AND pos.SCO_DT_END >= H.CCL_DT_FECHA\n\n       INNER JOIN M4CCL_H_OR_UNI_NEG AS unineg WITH (NOLOCK)              \n\t\t   ON unineg.SCO_ID_POSITION =pos.SCO_ID_POSITION            \n\t\t   AND H.CCL_DT_FECHA BETWEEN unineg.CCL_DT_START AND unineg.CCL_DT_END  \n  \n       INNER JOIN STD_PERSON PE WITH (NOLOCK)   \n             ON H.SCO_ID_HR COLLATE Latin1_General_CS_AS =PE.STD_ID_PERSON\n  \n       INNER JOIN M4SCO_H_HR_LEGENT legalEntityHR  WITH (NOLOCK)\n            ON legalEntityHR.STD_ID_HR = PR.STD_ID_HR  \n            AND legalEntityHR.STD_OR_HR_PERIOD = PR.STD_OR_HR_PERIOD  \n            AND legalEntityHR.ID_ORGANIZATION = PR.ID_ORGANIZATION\n            AND legalEntityHR.DT_START <= H.CCL_DT_FECHA\n            AND legalEntityHR.DT_END >= H.CCL_DT_FECHA\n  \n       INNER JOIN M4SSP_H_CENT_COS ceco  WITH (NOLOCK)\n            ON PR.ID_ORGANIZATION = ceco.ID_ORGANIZATION  \n            AND PR.STD_ID_HR = ceco.SCO_ID_HR  \n            AND PR.STD_OR_HR_PERIOD  = ceco.SCO_OR_HR_ROLE\n            AND ceco.SSP_FEC_INICIO <= H.CCL_DT_FECHA\n            AND ceco.SSP_FEC_FIN >= H.CCL_DT_FECHA\n\n       INNER JOIN M4SSP_H_CONTRATOS CO WITH (NOLOCK)  \n             ON CO.ID_ORGANIZATION=H.ID_ORGANIZATION COLLATE Latin1_General_CS_AS \n                    AND CO.SSP_ID_HR=H.SCO_ID_HR COLLATE Latin1_General_CS_AS \n            AND CO.SSP_OR_HR_PERIOD=H.SCO_OR_HR_PER   \n                    AND CO.SSP_FEC_INI_CONTRA<=H.CCL_DT_FECHA \n            AND CO.SSP_FEC_FIN_CONTRA >= H.CCL_DT_FECHA  \n                    \n       INNER JOIN M4CCL_H_CENT_COS hceco  WITH (NOLOCK)\n             ON hceco.ID_ORGANIZATION  =PR.ID_ORGANIZATION \n            AND hceco.SCO_ID_HR  =PR.STD_ID_HR\n            AND  PR.STD_OR_HR_PERIOD  = hceco.SCO_OR_HR_ROLE  \n            AND hceco.SSP_FEC_INICIO =ceco.SSP_FEC_INICIO\n             \n       INNER JOIN STD_WORK_UNIT AS W WITH (NOLOCK) \n             ON W.STD_ID_WORK_UNIT = pos.SCO_ID_WORK_UNIT\n   \n       INNER JOIN M4SSP_CONTRATO_INT CZ WITH (NOLOCK)  \n        ON CZ.SSP_ID_CONT_INTERN=CO.SSP_ID_CONT_INTERN         \n        \n       INNER JOIN M4SCO_TEAMS T WITH (NOLOCK)\n        ON T.ID_ORGANIZATION = H.ID_ORGANIZATION COLLATE Latin1_General_CS_AS \n                    AND T.SCO_ID_TEAM = H.SCO_ID_TEAM COLLATE Latin1_General_CS_AS \n\n       LEFT JOIN @empresas AS LEGENT \n        ON LEGENT.ID_EMPRESA = H.STD_ID_LEG_ENT\n    \n       LEFT JOIN M4CCL_X_GA_AR_ALM A WITH (NOLOCK)   \n             ON A.ID_ORGANIZATION = H.ID_ORGANIZATION COLLATE Latin1_General_CS_AS \n                    AND A.CCL_ID_AR_ALM = H.CCL_ID_AR_ALM COLLATE Latin1_General_CS_AS \n\n       LEFT JOIN M4CCL_TA_INFORMES_ABS RGI_TA WITH (NOLOCK) \n             ON RGI_TA.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n             AND CAST(RGI_TA.CCL_ID_ABSENCE AS NVARCHAR) = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n            AND RGI_TA.CCL_ID_INFORME = 1 \n\n       LEFT JOIN M4CCL_GA_GR_INF_ABS GRI_TA WITH (NOLOCK)\n             ON GRI_TA.ID_ORGANIZATION = RGI_TA.ID_ORGANIZATION\n                    AND GRI_TA.CCL_ID_GR_ABS = RGI_TA.CCL_ID_GR_ABS\n\n\t\tLEFT JOIN M4CCL_GA_INFORMES_ABS RGI_GA WITH (NOLOCK) \n             ON RGI_GA.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n             AND CAST(RGI_GA.SCO_ID_INCIDENCE AS NVARCHAR) = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n             AND RGI_GA.CCL_ID_INFORME = 1 \n\n       LEFT JOIN M4CCL_GA_INFORMES_ABS RGI2 WITH (NOLOCK) \n             ON RGI2.ID_ORGANIZATION = H.ID_ORGANIZATION   COLLATE Latin1_General_CS_AS     \n                    AND RGI2.SCO_ID_INCIDENCE = H.SCO_ID_INCIDENCE COLLATE Latin1_General_CS_AS \n            AND RGI2.CCL_ID_INFORME in (28)  \n\n       LEFT JOIN M4CCL_GA_GR_INF_ABS GRI2 WITH (NOLOCK)\n             ON GRI2.ID_ORGANIZATION = RGI2.ID_ORGANIZATION\n                    AND GRI2.CCL_ID_GR_ABS = RGI2.CCL_ID_GR_ABS                                                                    \n\n       LEFT JOIN M4CCL_ABSENCES_TA ABS_TA With (Nolock)\n             ON cast(ABS_TA.CCL_ID_ABSENCE as varchar) = H.SCO_ID_INCIDENCE\n                    AND  H.ID_ORGANIZATION = ABS_TA.ID_ORGANIZATION \n                    AND  H.ID_ORGANIZATION IN ('NL', '0001')\n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS With (Nolock)\n             ON ABS_TA.ID_ORGANIZATION = CAR_ABS.ID_ORGANIZATION\n                    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS.CCL_ID_ABSENCE\n                    AND  H.ID_ORGANIZATION= ABS_TA.ID_ORGANIZATION\n                    AND ABS_TA.ID_ORGANIZATION IN ('NL', '0001')\n                    AND CAR_ABS.CCL_ID_TP_CARACTERISTICA='INC' \n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_VALOR CAR_VAL With (Nolock)\n             ON CAR_ABS.CCL_ID_TP_CARACTERISTICA = CAR_VAL.CCL_ID_TP_CARACTERISTICA\n                    AND CAR_ABS.CCL_ID_CARACTERISTICA = CAR_VAL.CCL_ID_CARACTERISTICA\n\n       LEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS2 With (Nolock)\n             ON ABS_TA.ID_ORGANIZATION = CAR_ABS2.ID_ORGANIZATION\n                    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS2.CCL_ID_ABSENCE\n                    AND  H.ID_ORGANIZATION= ABS_TA.ID_ORGANIZATION\n                    AND ABS_TA.ID_ORGANIZATION='NL' \n                    AND CAR_ABS2.CCL_ID_TP_CARACTERISTICA='CORP' \n\n       LEFT JOIN M4CCL_H_GA_HOR_TURNOS TURNO WITH (NOLOCK) \n             ON H.ID_ORGANIZATION=TURNO.ID_ORGANIZATION \n                    and  H.STD_ID_LEG_ENT=TURNO.STD_ID_LEG_ENT\n                    AND 1 = CASE WHEN CAST(TURNO.CCL_HORA_INICIO AS TIME) > CAST(TURNO.CCL_HORA_FIN AS TIME)\n                           THEN CASE WHEN (CAST(H.CCL_HORA_INICIO_TUR AS TIME) BETWEEN \n                                  CASE WHEN TURNO.CCL_OPERACION_HI = '>' \n                                        THEN CAST(DATEADD(ss,1,TURNO.CCL_HORA_INICIO) AS TIME)\n                                        ELSE CAST(TURNO.CCL_HORA_INICIO AS TIME) \n                                  END AND CAST('23:59:59' AS TIME)\n                                  OR CAST(H.CCL_HORA_INICIO_TUR AS TIME) BETWEEN CAST('00:00:00' AS TIME) \n                                  AND CASE WHEN TURNO.CCL_OPERACION_HF = '<'\n                                        THEN CAST(DATEADD(ss,-1,TURNO.CCL_HORA_FIN) AS TIME) \n                                        ELSE CAST(TURNO.CCL_HORA_FIN AS TIME)\n                                  END) THEN 1\n                                  ELSE 0\n                           END \n                           ELSE CASE WHEN CAST(H.CCL_HORA_INICIO_TUR AS TIME) BETWEEN \n                                  CASE WHEN TURNO.CCL_OPERACION_HI = '>' \n                                        THEN CAST(DATEADD(ss,1,TURNO.CCL_HORA_INICIO) AS TIME)\n                                        ELSE CAST(TURNO.CCL_HORA_INICIO AS TIME) \n                                  END \n                                  AND CASE WHEN TURNO.CCL_OPERACION_HF = '<'\n                                        THEN CAST(DATEADD(ss,-1,TURNO.CCL_HORA_FIN) AS TIME) \n                                        ELSE CAST(TURNO.CCL_HORA_FIN AS TIME)\n                                  END\n                                  THEN 1\n                                  ELSE 0\n                           END \n                    END\n                    \n       LEFT JOIN M4SSP_H_PORC_GLEGA GL WITH (NOLOCK) \n             ON GL.ID_ORGANIZATION=PR.ID_ORGANIZATION \n                    AND GL.STD_ID_HR=PR.STD_ID_HR \n                    AND GL.STD_OR_HR_PERIOD=PR.STD_OR_HR_PERIOD \n                    AND GL.SSP_DT_START<=GETDATE() \n                    AND GL.SSP_DT_END>=GETDATE() \n \n       LEFT JOIN M4SSP_H_PORC_JORN JP WITH (NOLOCK) \n             ON JP.ID_ORGANIZATION=PR.ID_ORGANIZATION \n                    AND JP.SSP_ID_HR=PR.STD_ID_HR \n                    AND JP.SSP_OR_HR_PERIOD=PR.STD_OR_HR_PERIOD \n                    AND JP.SSP_FEC_INI_CONTRA=CO.SSP_FEC_INI_CONTRA \n                    AND JP.SSP_FEC_INI_JORN_P<=GETDATE() AND JP.SSP_FEC_FIN_JORN_P>=GETDATE() \n \n       LEFT JOIN M4SSP_H_CATEGORIA cate WITH (NOLOCK)  \n             ON cate.ID_ORGANIZATION = PR.ID_ORGANIZATION \n                    AND cate.SCO_ID_HR = PR.STD_ID_HR\n                    AND cate.SCO_OR_HR_ROLE = PR.STD_OR_HR_PERIOD\n                    AND cate.SSP_FEC_INICIO <= H.CCL_DT_FECHA\n                    AND cate.SSP_FEC_FIN >= H.CCL_DT_FECHA                                                                  \n \n       LEFT JOIN M4CCL_H_HOR_TM_PAR AS HTTH WITH (NOLOCK) \n             ON HTTH.ID_ORGANIZATION = PR.ID_ORGANIZATION \n                    AND HTTH.SCO_ID_HR = PR.STD_ID_HR \n                    AND HTTH.SCO_OR_HR_ROLE = PR.STD_OR_HR_PERIOD\n                    AND HTTH.DT_START <= H.CCL_DT_FECHA\n                    AND HTTH.DT_END >= H.CCL_DT_FECHA                                                               \n\n       LEFT JOIN M4GLB_HISTORICOS_ROLE AS hrole WITH (NOLOCK)\n             ON hrole.ID_ORGANIZATION = PR.ID_ORGANIZATION\n                    AND hrole.SCO_ID_HR = PR.STD_ID_HR  \n                    AND hrole.SCO_OR_HR_ROLE = PR.STD_OR_HR_PERIOD \n                    AND hrole.DT_START <= H.CCL_DT_FECHA\n                    AND hrole.DT_END >= H.CCL_DT_FECHA\n                    AND hrole.CCL_ID_CAMPO IN ( 'EMPR_FUNC', 'EMPR_FUNC2') \n  \n       LEFT JOIN M4SCO_HR_THEOR_TIM TUI WITH (NOLOCK) \n             ON TUI.ID_ORGANIZATION=PR.ID_ORGANIZATION      \n                    AND TUI.STD_ID_HR=PR.STD_ID_HR    \n                    AND TUI.STD_OR_HR_PERIOD=PR.STD_OR_HR_PERIOD   \n                    AND TUI.DT_START <= H.CCL_DT_FECHA      \n                    AND TUI.DT_END >= H.CCL_DT_FECHA  \n  \n       LEFT JOIN M4SCO_H_HR_TEAMS EQ WITH (NOLOCK)    \n             ON EQ.ID_ORGANIZATION=PR.ID_ORGANIZATION \n                    AND EQ.SCO_ID_HR=PR.STD_ID_HR     \n                    AND EQ.SCO_OR_ROLE=PR.STD_OR_HR_PERIOD \n                    AND EQ.SCO_DT_START <= H.CCL_DT_FECHA   \n                    AND EQ.SCO_DT_END >= H.CCL_DT_FECHA\n                    And EQ.CCL_ID_LEG_ENT=legalEntityHR.STD_ID_LEG_ENT\n  \n       LEFT JOIN M4CCL_H_GT_MR_TEAM TUT WITH (NOLOCK)        \n             ON TUT.ID_ORGANIZATION=PR.ID_ORGANIZATION      \n                    AND TUT.CCL_ID_TEAM = EQ.SCO_ID_TEAM    \n                    AND TUT.CCL_DT_START <= H.CCL_DT_FECHA \n                    AND TUT.CCL_DT_END >= H.CCL_DT_FECHA \n                    And TUT.CCL_ID_LEG_ENT=legalEntityHR.STD_ID_LEG_ENT\n  \n       LEFT JOIN (\n             SELECT DENSE_RANK() OVER (ORDER BY SCO_ID_REF_MOD) AS IDDimensionTipoTurno, \n                    SCO_ID_REF_MOD,NM_REF_MODESP,Md.CCL_ID_TP_TURNO,MT.CCL_NM_TP_TURNESP\n   \n             FROM  M4SCO_REF_MOD Md  WITH (NOLOCK) \n             inner join M4CCL_X_GA_TP_TUR MT  WITH (NOLOCK)\n                    on Md.CCL_ID_TP_TURNO=MT.CCL_ID_TP_TURNO\n       ) AS TPT \n             on TPT.SCO_ID_REF_MOD=isnull(TUI.SCO_ID_REF_MOD ,TUT.CCL_ID_MOD_REF)\n  \n       LEFT JOIN M4GLB_H_HR_TEAMS_ORG EXCEP_EMPL WITH(NOLOCK)\n             ON EXCEP_EMPL.ID_ORGANIZATION = PR.ID_ORGANIZATION\n                    AND EXCEP_EMPL.SCO_ID_HR = PR.STD_ID_HR  \n                    AND EXCEP_EMPL.SCO_OR_ROLE = PR.STD_OR_HR_PERIOD\n                    AND EXCEP_EMPL.SCO_DT_START <= H.CCL_DT_FECHA    \n                    AND EXCEP_EMPL.SCO_DT_END >= H.CCL_DT_FECHA  \n\t\t\t\t\t\n       LEFT JOIN M4CCL_H_GA_EM_EQUI AS EMPRESA_EQUIPO_AGOP WITH (NOLOCK)\n        ON EMPRESA_EQUIPO_AGOP.ID_ORGANIZATION = PR.ID_ORGANIZATION\n        AND EMPRESA_EQUIPO_AGOP.CCL_ID_LEG_ENT = COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT)                                                                                                                      \n        AND  EQ.SCO_ID_TEAM = EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM\n        AND EMPRESA_EQUIPO_AGOP.CCL_DT_START <= H.CCL_DT_FECHA    \n        AND EMPRESA_EQUIPO_AGOP.CCL_DT_END >= H.CCL_DT_FECHA \n \n       LEFT JOIN #NIVEL_ESTUDIOS as NIVEL_EST WITH (NOLOCK)         \n             ON NIVEL_EST.STD_ID_HR = PR.STD_ID_HR          \n                    AND NIVEL_EST.FECHA=H.CCL_DT_FECHA             \n                    AND NIVEL_EST.NUMERO=1     \n\n       LEFT JOIN #EMPLEADO_DIA AS EMPLEADO_DIA\n       ON EMPLEADO_DIA.CCL_DT_FECHA = H.CCL_DT_FECHA\n       AND EMPLEADO_DIA.SCO_ID_HR = H.SCO_ID_HR\n\n       LEFT JOIN M4GLB_H_GA_TERMINAL_ZONA AS TERMINALES WITH(NOLOCK)\n       ON TERMINALES.GLB_ID_TERMINAL =  H.GLB_ID_TERMINAL\n       AND TERMINALES.ID_ORGANIZATION=H.ID_ORGANIZATION      \n       LEFT JOIN M4CCL_X_GA_CONEX AS CONEX WITH(NOLOCK)\n       ON CONEX.CCL_ID_LEG_ENT = H.STD_ID_LEG_ENT\n       AND CONEX.ID_ORGANIZATION = H.ID_ORGANIZATION  \n\t\t\n\t\tLEFT JOIN M4CCL_TASKS_L_CARACT C\n\t\tON H.ID_ORGANIZATION = C.ID_ORGANIZATION \n\t\tAND H.STD_ID_LEG_ENT = C.CCL_ID_LEG_ENT \n\t\tAND pos.SCO_ID_WORK_LOC = C.CCL_ID_WL \n\t\tAND CASE WHEN CCL_CK_ESCENARIO = 2 THEN H.CCL_ID_TASK ELSE NULL END = C.CCL_ID_TASK \n\t\tAND H.CCL_ID_AR_ALM = C.CCL_ID_AREA \n\t\tAND TERMINALES.GLB_ID_ZONA = C.CCL_ID_ZONA \n\t\tAND C.CCL_ID_TP_CARACTERISTICA = 'AO'\n\t\t\n       WHERE PR.ID_ORGANIZATION IN ('NL','0001') AND\n             (PR.STD_ID_HR_TYPE='01' OR PR.STD_ID_HR_TYPE='06' OR PR.STD_ID_HR_TYPE='02') AND  \n             H.CCL_TIPO IN ('P','T','R','C','E','A','J', 'F','V','D') and \n             H.CCL_DT_FECHA>=@FechaIni and H.CCL_DT_FECHA<@FechaFin \n             and (CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))=0 THEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))\n                    ELSE CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))<>0 AND REPLACE(PR.STD_ID_HR_TYPE,'.','') IN ('02','06') THEN cast(SUBSTRING(hrole.CCL_CADENA,3,3) as int) \n                           ELSE\n                                  CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) =9 AND REPLACE(hceco.CCL_DIVISION,'.','') =13 AND REPLACE(hceco.CCL_SECCION,'.','') = 18 THEN 37\n                                  ELSE (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) \n                           END \n                    END\n             END) IN ('14','23','26','32','37','41','43','61','99','189','398','506','12','20','64','68','330','357','0')\n\n       GROUP BY H.ID_ORGANIZATION \n             , H.CCL_DT_FECHA\n             , H.CCL_ID_TASK\n             , CAST( H.CCL_ID_TASK AS VARCHAR) +'#' + H.ID_ORGANIZATION \n             ,  H.GLB_ID_TERMINAL\n             , TERMINALES.GLB_ID_ZONA\n        , PR.SSP_FEC_ANTIGUEDAD\n        , PE.STD_DT_BIRTH\n        , PE.STD_ID_GENDER  \n        , CZ.CCL_TIEMPO_PARCIAL \n        , CZ.SSP_NO_DEFINIDO         \n        , A.CCL_ID_AR_ALM  \n             , hceco.CCL_COD_DIV_SECC          \n        , pos.SCO_ID_WORK_LOC\n             , pos.SCO_ID_JOB_CODE\n        , CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))=0 THEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))\n                    ELSE CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT))<>0 AND REPLACE(PR.STD_ID_HR_TYPE,'.','') IN ('02','06') THEN cast(SUBSTRING(hrole.CCL_CADENA,3,3) as int) \n                           ELSE\n                                  CASE WHEN (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) =9 AND REPLACE(hceco.CCL_DIVISION,'.','') =13 AND REPLACE(hceco.CCL_SECCION,'.','') = 18 THEN 37\n                                  ELSE (CONVERT(INT,legalEntityHR.STD_ID_LEG_ENT)) \n                           END \n            END\n             END\n        , PE.STD_ID_PERSON \n             , PR.CCL_ID_PERSON\n             , cast(PE.STD_ID_PERSON as varchar) +'#' +cast(PR.CCL_ID_PERSON as varchar)\n        , T.SCO_ID_TEAM       \n        , PR.STD_ID_EXTERN_ORG \n        , A.CCL_ID_AR_ALM \n        , T.SCO_ID_TEAM   \n        , GRI_TA.CCL_ID_GR_ABS\n         ,CASE WHEN H.ID_ORGANIZATION='0001' THEN COALESCE(GRI_TA.CCL_ID_GR_ABS,-1) \n               WHEN H.ID_ORGANIZATION='NL' THEN COALESCE(CAR_VAL.CCL_ID_CARACTERISTICA,-1) \n           END\n        , CASE WHEN H.ID_ORGANIZATION='0001' THEN COALESCE(H.SCO_ID_INCIDENCE,'N/A')\n               WHEN H.ID_ORGANIZATION='NL' THEN COALESCE(cast(CAR_ABS2.CCL_ID_CARACTERISTICA as varchar),'N/A') \n          END                                                                                                                              \n             , ABS_TA.CCL_ID_ABSENCE \n             , GL.SSP_PORC_GLEGAL  \n             , JP.SSP_VALOR_COEF_T_P\n             , TURNO.CCL_ID_TURNO\n             , H.CCL_HORA_INICIO\n             , H.CCL_HORA_INICIO_TUR\n             , H.CCL_HORA_FIN\n             , cate.SSP_ID_CATEGORIA\n             , HTTH.CCL_ID_TP_HORA \n             , HTTH.CCL_HOR_TM_PARC\n             , TUI.SCO_ID_REF_MOD   \n             , EQ.SCO_ID_TEAM\n             , EQ.SCO_ID_TEAM_ROLE       \n             , TUT.CCL_ID_MOD_REF \n             , TPT.IDDimensionTipoTurno \n             , PR.STD_ID_HR_TYPE\n             , W.STD_ID_WORK_UNIT\n             ,  CASE WHEN COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) IS NULL OR  COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT) IS NULL  THEN '-1'\n                    ELSE COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) + '#' + \n                     COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT, legalEntityHR.STD_ID_LEG_ENT) END\n             , EMPRESA_EQUIPO_AGOP.CCL_ID_LEG_ENT\n             , EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM\n             , NIVEL_EST.ID_DIP_LEVEL\n             , EMPLEADO_DIA.FECHA_INICIO_REAL\n             , EMPLEADO_DIA.HORA_INICIO_REAL\n             , EMPLEADO_DIA.FECHA_INICIO_TURNO\n             , EMPLEADO_DIA.HORA_INICIO_TURNO\n             , EMPLEADO_DIA.FECHA_FIN_TURNO\n             , EMPLEADO_DIA.HORA_FIN_TURNO \n             , EMPLEADO_DIA.FECHA_FIN_REAL\n             , EMPLEADO_DIA.HORA_FIN_REAL\n             , hrole.CCL_CADENA\n             , legalEntityHR.STD_ID_LEG_ENT\n             , hceco.CCL_SECCION\n             , hceco.CCL_DIVISION\n             , hrole.CCL_CADENA  \n             , hrole.CCL_ID_CAMPO\n             , EMPLEADO_DIA.HORAS_DESCANSO_PLANIFICADAS_NL\n             , EMPLEADO_DIA.HORAS_AUSENTISMO_RAW_AUX\n             , cast(SUBSTRING(hrole.CCL_CADENA,3,3) as int) \n             , unineg.CCL_ID_UNIDAD_NEG\n             , CCL_CK_ESCENARIO\n             , GRI2.CCL_ID_GR_ABS\n             , CAR_ABS2.CCL_ID_CARACTERISTICA\n             , CAR_ABS.CCL_ID_CARACTERISTICA\n             , CAR_VAL.CCL_ID_CARACTERISTICA\n             , H.SCO_ID_INCIDENCE\n\t\t\t, 'TA' + '#' + H.ID_ORGANIZATION+'#'+cast(ABS_TA.CCL_ID_ABSENCE as varchar)\n\t\t\t,C.CCL_ID_CARACTERISTICA\n) AS datos\nLEFT JOIN HORAS WITH (NOLOCK)\nON \n CASE WHEN  (datos.HORA_INICIO_TURNO IS NOT NULL AND datos.HORA_FIN_TURNO IS NOT NULL  ) OR -- TEORICAS O PRESENCIAS (Y AUSENCIAS)\n\t\t(datos.HORA_INICIO_REAL IS NOT NULL AND datos.HORA_FIN_REAL IS NOT NULL AND datos.HORAS_FALTAN_RAW = 0)  -- EXTRAS, AJUSTADAS, COMPLEMENTARIAS\n\t\t OR (datos.HORA_INICIO_TAR IS NOT NULL AND datos.HORA_FIN_TAR IS NOT NULL ) -- \n\t\tTHEN \n   CASE\n\t\tWHEN (DATEPART(HOUR, datos.HORA_INICIO_TAR) <= DATEPART(HOUR, datos.HORA_FIN_TAR)) AND ((HORAS.ID_HORA >= DATEPART(HOUR, datos.HORA_INICIO_TAR) AND  HORAS.ID_HORA < DATEPART(HOUR, datos.HORA_FIN_TAR)) OR (HORAS.ID_HORA = DATEPART(HOUR, datos.HORA_FIN_TAR) AND DATEPART(MINUTE, datos.HORA_FIN_TAR)>0)) THEN 1\n\t\tWHEN DATEPART(HOUR, datos.HORA_INICIO_TAR) > DATEPART(HOUR, datos.HORA_FIN_TAR) AND ((HORAS.ID_HORA - DATEPART(HOUR, datos.HORA_INICIO_TAR) >=0) OR (HORAS.ID_HORA - DATEPART(HOUR, datos.HORA_FIN_TAR)<0) OR (HORAS.ID_HORA - DATEPART(HOUR, datos.HORA_FIN_TAR)= 0 AND DATEPART(MINUTE, datos.HORA_FIN_TAR)>0)) THEN 1\t   \n   ELSE 0\n   END \n ELSE NULL \n\t\n END = 1\n   \n) TABLA\nLEFT JOIN M4CCL_H_GT_CAL_WLC AS WC WITH (NOLOCK)\n\tON TABLA.ID_ORGANIZATION = WC.ID_ORGANIZATION\n\tAND TABLA.ID_LUGAR_DE_TRABAJO = WC.CCL_ID_WORK_LOCAT\n\tAND TABLA.FECHA BETWEEN WC.CCL_DT_START AND WC.CCL_DT_END\nLEFT JOIN M4SCO_CALENDAR_REP AS CAL_REP WITH (NOLOCK)\n\tON WC.CCL_ID_CALENDAR = CAL_REP.SCO_ID_CALENDAR\n\tAND TABLA.FECHA = CAL_REP.SCO_DT_DAY\n\tAND CAL_REP.SCO_ID_DAYCALEN_TY <> 'AP06' AND CAL_REP.SCO_ID_DAYCALEN_TY <> 'AP07'\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t   \n\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t\t\t\nDROP TABLE  #CAL;\nDROP TABLE  #NIVEL_ESTUDIOS;\nDROP TABLE  #GA_RESUMEN;\nDROP TABLE  #HR_PERIOD;\nDROP TABLE  #EMPLEADO_DIA;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "TURNO",
        "columns": [
          {
            "name": "ID_TURNO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TURNO"
          },
          {
            "name": "TURNO",
            "dataType": "string",
            "sourceColumn": "TURNO",
            "sortByColumn": "ID_TURNO"
          }
        ],
        "partitions": [
          {
            "name": "TURNO",
            "source": {
              "type": "query",
              "query": "SELECT 1 AS ID_TURNO, 'Mañana' AS TURNO\n\t\t\t\t\t\t\t\t\t\t\tUNION\n\t\t\t\t\t\t\t\t\t\t\tSELECT 2 AS ID_TURNO, 'Tarde' AS TURNO\n\t\t\t\t\t\t\t\t\t\t\tUNION\n\t\t\t\t\t\t\t\t\t\t\tSELECT 3 AS ID_TURNO, 'Noche' AS TURNO",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT 1 AS ID_TURNO, 'Mañana' AS TURNO\n\t\t\t\t\t\t\t\t\t\t\tUNION\n\t\t\t\t\t\t\t\t\t\t\tSELECT 2 AS ID_TURNO, 'Tarde' AS TURNO\n\t\t\t\t\t\t\t\t\t\t\tUNION\n\t\t\t\t\t\t\t\t\t\t\tSELECT 3 AS ID_TURNO, 'Noche' AS TURNO</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT 1 AS ID_TURNO, 'Mañana' AS TURNO\n\t\t\t\t\t\t\t\t\t\t\tUNION\n\t\t\t\t\t\t\t\t\t\t\tSELECT 2 AS ID_TURNO, 'Tarde' AS TURNO\n\t\t\t\t\t\t\t\t\t\t\tUNION\n\t\t\t\t\t\t\t\t\t\t\tSELECT 3 AS ID_TURNO, 'Noche' AS TURNO</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "NOMINAS_CERRADAS",
        "columns": [
          {
            "name": "ID_EMPRESA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_EMPRESA"
          },
          {
            "name": "FECHA",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FECHA",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "ESTADO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ESTADO"
          }
        ],
        "partitions": [
          {
            "name": "NOMINAS_CIERRES",
            "source": {
              "type": "query",
              "query": "SELECT STD_ID_LEG_ENT AS ID_EMPRESA,CCL_FEC_IMPUTACION AS FECHA, CCL_CIERRE AS ESTADO\nFROM M4CCL_GA_MES_NOM WITH (NOLOCK)\nWHERE CCL_FEC_IMPUTACION<CCL_FEC_PAGO\nAND CCL_FEC_IMPUTACION \nBETWEEN \nCAST('2013/02/01' AS DATE)      \nAND\nDATEADD(DAY, -1,CAST(CAST(YEAR(DATEADD(MONTH, 13, GETDATE())) AS NVARCHAR(4)) + '/' + RIGHT('00' + CAST(MONTH(DATEADD(MONTH, 13, GETDATE())) AS NVARCHAR(2)),2) + '/01' AS DATE))\nAND STD_ID_LEG_ENT IN (99 ,41 ,189 ,37 ,32 ,43 ,14 ,26 ,12 ,23 ,61 ,357 ,68 ,330 ,398, 64)",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "EMPRESAS_NOMINA_CERRADA",
            "description": "Sumatorio del estado de las nóminas",
            "expression": "SUM([ESTADO])",
            "displayFolder": "NOMINAS_CERRADAS"
          }
        ]
      },
      {
        "name": "CATEGORIA_PROFESIONAL",
        "columns": [
          {
            "name": "ID_CATEGORIA_PROFESIONAL",
            "dataType": "string",
            "sourceColumn": "ID_CATEGORIA_PROFESIONAL"
          },
          {
            "name": "CATEGORIA_PROFESIONAL",
            "dataType": "string",
            "sourceColumn": "CATEGORIA_PROFESIONAL"
          }
        ],
        "partitions": [
          {
            "name": "CATEGORIA",
            "source": {
              "type": "query",
              "query": "SELECT SSP_ID_CATEGORIA AS ID_CATEGORIA_PROFESIONAL,SSP_NM_CATEGORESP AS CATEGORIA_PROFESIONAL\n\t\t\t\t\t\t\t\t\t\t\tFROM RRHH.M4SSP_CATEGORIAS\n\t\t\t\t\t\t\t\t\t\t\tWHERE ID_ORGANIZATION='0001'\nWITH UR;",
              "dataSource": "AXINDB22V1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT SSP_ID_CATEGORIA AS ID_CATEGORIA_PROFESIONAL,SSP_NM_CATEGORESP AS CATEGORIA_PROFESIONAL\n\t\t\t\t\t\t\t\t\t\t\tFROM RRHH.M4SSP_CATEGORIAS\n\t\t\t\t\t\t\t\t\t\t\tWHERE ID_ORGANIZATION='0001'\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT SSP_ID_CATEGORIA AS ID_CATEGORIA_PROFESIONAL,SSP_NM_CATEGORESP AS CATEGORIA_PROFESIONAL\n\t\t\t\t\t\t\t\t\t\t\tFROM RRHH.M4SSP_CATEGORIAS\n\t\t\t\t\t\t\t\t\t\t\tWHERE ID_ORGANIZATION='0001'\nWITH UR;"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT SSP_ID_CATEGORIA AS ID_CATEGORIA_PROFESIONAL,SSP_NM_CATEGORESP AS CATEGORIA_PROFESIONAL\n\t\t\t\t\t\t\t\t\t\t\tFROM RRHH.M4SSP_CATEGORIAS\n\t\t\t\t\t\t\t\t\t\t\tWHERE ID_ORGANIZATION='0001'\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "HORAS_CONTRATADAS",
        "columns": [
          {
            "name": "ID_HORAS_CONTRATADAS",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_HORAS_CONTRATADAS"
          },
          {
            "name": "ID_TIPO_HORA",
            "dataType": "string",
            "sourceColumn": "ID_TIPO_HORA"
          },
          {
            "name": "TIPO_HORA",
            "dataType": "string",
            "sourceColumn": "TIPO_HORA"
          },
          {
            "name": "HORAS_CONTRATADAS",
            "dataType": "double",
            "sourceColumn": "HORAS_CONTRATADAS"
          },
          {
            "name": "TRAMO",
            "dataType": "string",
            "sourceColumn": "TRAMO",
            "sortByColumn": "ORDEN_TRAMO"
          },
          {
            "name": "ORDEN_TRAMO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ORDEN_TRAMO"
          }
        ],
        "partitions": [
          {
            "name": "HORAS_CONTRATADAS",
            "source": {
              "type": "query",
              "query": "SELECT\n\t\t\t\t\t\t\t\t\t\t\tDISTINCT\n\t\t\t\t\t\t\t\t\t\t\tXTH.CCL_ID_TP_HORA + '#' + CAST(HHTP.CCL_HOR_TM_PARC AS VARCHAR) AS ID_HORAS_CONTRATADAS\n\t\t\t\t\t\t\t\t\t\t\t,XTH.CCL_ID_TP_HORA AS ID_TIPO_HORA\n\t\t\t\t\t\t\t\t\t\t\t,XTH.CCL_NM_TP_HORAESP AS TIPO_HORA\n\t\t\t\t\t\t\t\t\t\t\t,HHTP.CCL_HOR_TM_PARC AS HORAS_CONTRATADAS\n\t\t\t\t\t\t\t\t\t\t\t, CASE XTH.CCL_ID_TP_HORA\n\t\t\t\t\t\t\t\t\t\t\tWHEN 'S' THEN\n\t\t\t\t\t\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC < 10 THEN 'De 0 a 9 horas'\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 10 AND HHTP.CCL_HOR_TM_PARC <20 THEN 'De 10 a 19 horas'\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 20 AND HHTP.CCL_HOR_TM_PARC <30 THEN 'De 20 a 29 horas'\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 30 AND HHTP.CCL_HOR_TM_PARC <40 THEN 'De 30 a 39 horas'\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 40 THEN 'Más de 39 horas'\n\t\t\t\t\t\t\t\t\t\t\tEND\n\t\t\t\t\t\t\t\t\t\t\tWHEN 'A' THEN CASE\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC < 720 THEN 'De 0 a 719 horas'\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 720 AND HHTP.CCL_HOR_TM_PARC <1080 THEN 'De 720 a 1079 horas'\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 1080 AND HHTP.CCL_HOR_TM_PARC <1440 THEN 'De 1080 a 1439 horas'\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 1440 AND HHTP.CCL_HOR_TM_PARC <1800 THEN 'De 1440 a 1799 horas'\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 1800 THEN 'Más de 1800 horas'\n\t\t\t\t\t\t\t\t\t\t\tEND\n\t\t\t\t\t\t\t\t\t\t\tWHEN 'DA' THEN CASE\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC < 30 THEN 'De 0 a 29 días'\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 30 AND HHTP.CCL_HOR_TM_PARC <90 THEN 'De 30 a 89 días'\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 90 AND HHTP.CCL_HOR_TM_PARC <180 THEN 'De 90 a 179 días'\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 180 AND HHTP.CCL_HOR_TM_PARC <=365 THEN 'De 180 a 365 días'\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC > 365 THEN 'Más de 365 días'\n\t\t\t\t\t\t\t\t\t\t\tEND\n\t\t\t\t\t\t\t\t\t\t\tEND AS TRAMO\n\t\t\t\t\t\t\t\t\t\t\t, CASE XTH.CCL_ID_TP_HORA\n\t\t\t\t\t\t\t\t\t\t\tWHEN 'S' THEN\n\t\t\t\t\t\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC < 10 THEN 1\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 10 AND HHTP.CCL_HOR_TM_PARC <20 THEN 2\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 20 AND HHTP.CCL_HOR_TM_PARC <30 THEN 3\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 30 AND HHTP.CCL_HOR_TM_PARC <40 THEN 4\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 40 THEN 5\n\t\t\t\t\t\t\t\t\t\t\tEND\n\t\t\t\t\t\t\t\t\t\t\tWHEN 'A' THEN CASE\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC < 720 THEN 6\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 720 AND HHTP.CCL_HOR_TM_PARC <1080 THEN 7\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 1080 AND HHTP.CCL_HOR_TM_PARC <1440 THEN 8\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 1440 AND HHTP.CCL_HOR_TM_PARC <1800 THEN 9\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 1800 THEN 10\n\t\t\t\t\t\t\t\t\t\t\tEND\n\t\t\t\t\t\t\t\t\t\t\tWHEN 'DA' THEN CASE\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC < 30 THEN 11\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 30 AND HHTP.CCL_HOR_TM_PARC <90 THEN 12\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 90 AND HHTP.CCL_HOR_TM_PARC <180 THEN 13\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC >= 180 AND HHTP.CCL_HOR_TM_PARC <=365 THEN 14\n\t\t\t\t\t\t\t\t\t\t\tWHEN HHTP.CCL_HOR_TM_PARC > 365 THEN 15\n\t\t\t\t\t\t\t\t\t\t\tEND\n\t\t\t\t\t\t\t\t\t\t\tEND AS ORDEN_TRAMO\n\t\t\t\t\t\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t\t\t\t\tM4CCL_H_HOR_TM_PAR HHTP WITH(NOLOCK)\n\t\t\t\t\t\t\t\t\t\t\tLEFT JOIN M4_CCL_X_TP_HORAS XTH WITH(NOLOCK)\n\t\t\t\t\t\t\t\t\t\t\tON HHTP.CCL_ID_TP_HORA = XTH.CCL_ID_TP_HORA",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "hierarchies": [
          {
            "name": "TIPO_TRAMO",
            "levels": [
              {
                "name": "TIPO_HORA",
                "ordinal": 0,
                "column": "TIPO_HORA"
              },
              {
                "name": "TRAMO",
                "ordinal": 1,
                "column": "TRAMO"
              },
              {
                "name": "HORAS_CONTRATADAS",
                "ordinal": 2,
                "column": "HORAS_CONTRATADAS"
              }
            ]
          }
        ]
      },
      {
        "name": "FECHA",
        "columns": [
          {
            "name": "ID_FECHA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_FECHA"
          },
          {
            "name": "FECHA",
            "dataType": "dateTime",
            "sourceColumn": "FECHA",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" xmlns=\"\" />"
              }
            ]
          },
          {
            "name": "ANO",
            "dataType": "int64",
            "sourceColumn": "ANO"
          },
          {
            "name": "MES_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MES_ORDEN"
          },
          {
            "name": "DIA_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DIA_ORDEN"
          },
          {
            "name": "NOMBRE_MES",
            "dataType": "string",
            "sourceColumn": "NOMBRE_MES",
            "sortByColumn": "MES_ORDEN"
          },
          {
            "name": "NOMBRE_MES_FISCAL",
            "dataType": "string",
            "sourceColumn": "NOMBRE_MES_FISCAL",
            "sortByColumn": "MES_FISCAL_ORDEN"
          },
          {
            "name": "NOMBRE_DIA",
            "dataType": "string",
            "sourceColumn": "NOMBRE_DIA",
            "sortByColumn": "NUM_DIA_SEMANA"
          },
          {
            "name": "TRIMESTRE",
            "dataType": "string",
            "sourceColumn": "TRIMESTRE"
          },
          {
            "name": "ANO_FISCAL",
            "dataType": "int64",
            "sourceColumn": "ANO_FISCAL"
          },
          {
            "name": "MES_FISCAL_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MES_FISCAL_ORDEN"
          },
          {
            "name": "TRIMESTRE_FISCAL",
            "dataType": "string",
            "sourceColumn": "TRIMESTRE_FISCAL"
          },
          {
            "name": "NUM_DIA_SEMANA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "NUM_DIA_SEMANA"
          },
          {
            "name": "SEMANA_ISO_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SEMANA_ISO_ORDEN"
          },
          {
            "name": "SEMANA_ISO_FISCAL_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SEMANA_ISO_FISCAL_ORDEN"
          },
          {
            "type": "calculated",
            "name": "MES",
            "dataType": "string",
            "expression": "[MES_ORDEN]",
            "sortByColumn": "MES_ORDEN"
          },
          {
            "type": "calculated",
            "name": "DIA",
            "dataType": "string",
            "expression": "[DIA_ORDEN]",
            "sortByColumn": "DIA_ORDEN"
          },
          {
            "type": "calculated",
            "name": "MES_FISCAL",
            "dataType": "string",
            "expression": "[MES_FISCAL_ORDEN]",
            "sortByColumn": "MES_FISCAL_ORDEN"
          },
          {
            "type": "calculated",
            "name": "SEMANA_ANO",
            "dataType": "int64",
            "expression": "RELATED(FECHA_AUX[SEMANA_ANO])"
          },
          {
            "type": "calculated",
            "name": "SEMANA_MES",
            "dataType": "int64",
            "expression": "RELATED(FECHA_AUX[SEMANA_MES])"
          },
          {
            "type": "calculated",
            "name": "SEMANA_ANO_FISCAL",
            "dataType": "int64",
            "expression": "RELATED(FECHA_AUX[SEMANA_ANO_FISCAL])"
          },
          {
            "type": "calculated",
            "name": "SEMANA_MES_FISCAL",
            "dataType": "int64",
            "expression": "RELATED(FECHA_AUX[SEMANA_MES_FISCAL])"
          },
          {
            "type": "calculated",
            "name": "SEMANA_ISO",
            "dataType": "string",
            "expression": "[SEMANA_ISO_ORDEN]",
            "sortByColumn": "SEMANA_ISO_ORDEN"
          },
          {
            "type": "calculated",
            "name": "SEMANA_ISO_FISCAL",
            "dataType": "string",
            "expression": "[SEMANA_ISO_FISCAL_ORDEN]",
            "sortByColumn": "SEMANA_ISO_FISCAL_ORDEN"
          },
          {
            "name": "FECHA_HOY",
            "dataType": "string",
            "sourceColumn": "FECHA_HOY"
          },
          {
            "type": "calculated",
            "name": "FECHA_UPDATE_TABULAR",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "NOW()"
          },
          {
            "name": "SEMANA_ANO_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SEMANA_ANO_ORDEN"
          },
          {
            "name": "SEMANA_MES_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SEMANA_MES_ORDEN"
          },
          {
            "name": "SEMANA_ANO_FISCAL_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SEMANA_ANO_FISCAL_ORDEN"
          },
          {
            "name": "SEMANA_MES_FISCAL_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SEMANA_MES_FISCAL_ORDEN"
          },
          {
            "name": "SEMANA_ISO_SABADO_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SEMANA_ISO_SABADO_ORDEN"
          },
          {
            "type": "calculated",
            "name": "SEMANA_ISO_SABADO",
            "dataType": "string",
            "expression": "[SEMANA_ISO_SABADO_ORDEN]",
            "sortByColumn": "SEMANA_ISO_SABADO_ORDEN"
          }
        ],
        "partitions": [
          {
            "name": "FECHA",
            "source": {
              "type": "query",
              "query": "SET DATEFIRST 1;\nSET LANGUAGE Spanish;\n\nWITH DATES (FECHA) AS \n(\n    SELECT CAST(STR(YEAR(GETDATE())+2) + '-01-31'  AS DATE)\nUNION ALL\n    SELECT \n            DATEADD(DAY,-1,FECHA)\n    FROM\n            DATES \n    WHERE \n            FECHA > CAST('2013-01-01' AS DATE)\n)\n\nSELECT\n       ID_FECHA\n       , FECHA\n\t   ,CASE WHEN CAST(FECHA AS DATE)= CONVERT(date, GETDATE()) THEN 'Hoy' ELSE CAST(FECHA AS VARCHAR) END AS FECHA_HOY\n       , ANO\n       , MES_ORDEN\n       , DIA_ORDEN\n       , NOMBRE_MES\n       , NOMBRE_MES AS NOMBRE_MES_FISCAL\n       , NOMBRE_DIA\n       , TRIMESTRE\n       , ANO_FISCAL\n       , MES_FISCAL_ORDEN\n       , TRIMESTRE_FISCAL\n       , NUM_DIA_SEMANA\n       , SEMANA_ANO_ORDEN\n       , SEMANA_MES_ORDEN\n       , SEMANA_ANO_FISCAL_ORDEN\n       , SEMANA_MES_FISCAL_ORDEN\n       , SEMANA_ISO_ORDEN\n       , (datediff(dd,\n       case when    NextYrStart <= FECHA\n             then   NextYrStart\n       when   CurrYrStart <= FECHA\n             then   CurrYrStart\n       else   PriorYrStart\n       end, FECHA)/7)+1 AS SEMANA_ISO_FISCAL_ORDEN\n\t   , SEMANA_ISO_SABADO_ORDEN\nFROM\n(\n       SELECT \n        CAST(CONVERT(VARCHAR, FECHA, 112) AS INT) AS ID_FECHA\n       ,FECHA\n       ,YEAR(FECHA) AS ANO \n        ,MONTH(FECHA) AS MES_ORDEN \n        ,DAY(FECHA) AS DIA_ORDEN \n        ,SUBSTRING(UPPER(DATENAME(MONTH,FECHA)),1,3) AS NOMBRE_MES\n       ,SUBSTRING(UPPER(DATENAME(WEEKDAY,FECHA)),1,3) AS NOMBRE_DIA\n       ,'T' + DATENAME(QUARTER,FECHA) AS TRIMESTRE\n       ,YEAR(DATEADD(MONTH, -1, FECHA)) AS ANO_FISCAL\n       ,CASE WHEN MONTH(FECHA) = 1 THEN 12 ELSE MONTH(FECHA)-1 END AS MES_FISCAL_ORDEN\n       ,'T' + DATENAME(QUARTER,DATEADD(MONTH, -1, FECHA)) AS TRIMESTRE_FISCAL\n       ,DATEPART(WEEKDAY, FECHA) AS NUM_DIA_SEMANA\n       ,DATEPART(WEEK, FECHA) AS SEMANA_ANO_ORDEN \n        ,DATEPART(WEEK, FECHA) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,FECHA), 0))+ 1 AS SEMANA_MES_ORDEN\n       ,DATEPART(WEEK, DATEADD(MONTH, -1, FECHA)) AS SEMANA_ANO_FISCAL_ORDEN \n        ,DATEPART(WEEK, DATEADD(MONTH, -1, FECHA)) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,DATEADD(MONTH, -1, FECHA)), 0))+ 1 AS SEMANA_MES_FISCAL_ORDEN\n       ,DATEPART(ISO_WEEK, FECHA) AS SEMANA_ISO_ORDEN\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(yy,-1,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA),0))))/7)*7,-53690) AS PriorYrStart\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA),0)))/7)*7,-53690) AS CurrYrStart\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(yy,1,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA),0))))/7)*7,-53690) AS NextYrStart   \n\t   ,DATEPART(ISO_WEEK, DATEADD(DAY,2,FECHA)) AS SEMANA_ISO_SABADO_ORDEN\n       FROM \n        DATES\n      ) F\nORDER BY FECHA ASC\nOPTION(MAXRECURSION 32767)",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SET DATEFIRST 1;\nSET LANGUAGE Spanish;\n\nWITH DATES (FECHA) AS \n(\n    SELECT CAST(STR(YEAR(GETDATE())+2) + '-01-31'  AS DATE)\nUNION ALL\n    SELECT \n            DATEADD(DAY,-1,FECHA)\n    FROM\n            DATES \n    WHERE \n            FECHA > CAST('2013-01-01' AS DATE)\n)\n\nSELECT\n       ID_FECHA\n       , FECHA\n\t   ,CASE WHEN CAST(FECHA AS DATE)= CONVERT(date, GETDATE()) THEN 'Hoy' ELSE CAST(FECHA AS VARCHAR) END AS FECHA_HOY\n       , ANO\n       , MES_ORDEN\n       , DIA_ORDEN\n       , NOMBRE_MES\n       , NOMBRE_MES AS NOMBRE_MES_FISCAL\n       , NOMBRE_DIA\n       , TRIMESTRE\n       , ANO_FISCAL\n       , MES_FISCAL_ORDEN\n       , TRIMESTRE_FISCAL\n       , NUM_DIA_SEMANA\n       , SEMANA_ANO_ORDEN\n       , SEMANA_MES_ORDEN\n       , SEMANA_ANO_FISCAL_ORDEN\n       , SEMANA_MES_FISCAL_ORDEN\n       , SEMANA_ISO_ORDEN\n       , (datediff(dd,\n       case when    NextYrStart <= FECHA\n             then   NextYrStart\n       when   CurrYrStart <= FECHA\n             then   CurrYrStart\n       else   PriorYrStart\n       end, FECHA)/7)+1 AS SEMANA_ISO_FISCAL_ORDEN\n\t   , SEMANA_ISO_SABADO_ORDEN\nFROM\n(\n       SELECT \n        CAST(CONVERT(VARCHAR, FECHA, 112) AS INT) AS ID_FECHA\n       ,FECHA\n       ,YEAR(FECHA) AS ANO \n        ,MONTH(FECHA) AS MES_ORDEN \n        ,DAY(FECHA) AS DIA_ORDEN \n        ,SUBSTRING(UPPER(DATENAME(MONTH,FECHA)),1,3) AS NOMBRE_MES\n       ,SUBSTRING(UPPER(DATENAME(WEEKDAY,FECHA)),1,3) AS NOMBRE_DIA\n       ,'T' + DATENAME(QUARTER,FECHA) AS TRIMESTRE\n       ,YEAR(DATEADD(MONTH, -1, FECHA)) AS ANO_FISCAL\n       ,CASE WHEN MONTH(FECHA) = 1 THEN 12 ELSE MONTH(FECHA)-1 END AS MES_FISCAL_ORDEN\n       ,'T' + DATENAME(QUARTER,DATEADD(MONTH, -1, FECHA)) AS TRIMESTRE_FISCAL\n       ,DATEPART(WEEKDAY, FECHA) AS NUM_DIA_SEMANA\n       ,DATEPART(WEEK, FECHA) AS SEMANA_ANO_ORDEN \n        ,DATEPART(WEEK, FECHA) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,FECHA), 0))+ 1 AS SEMANA_MES_ORDEN\n       ,DATEPART(WEEK, DATEADD(MONTH, -1, FECHA)) AS SEMANA_ANO_FISCAL_ORDEN \n        ,DATEPART(WEEK, DATEADD(MONTH, -1, FECHA)) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,DATEADD(MONTH, -1, FECHA)), 0))+ 1 AS SEMANA_MES_FISCAL_ORDEN\n       ,DATEPART(ISO_WEEK, FECHA) AS SEMANA_ISO_ORDEN\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(yy,-1,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA),0))))/7)*7,-53690) AS PriorYrStart\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA),0)))/7)*7,-53690) AS CurrYrStart\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(yy,1,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA),0))))/7)*7,-53690) AS NextYrStart   \n\t   ,DATEPART(ISO_WEEK, DATEADD(DAY,2,FECHA)) AS SEMANA_ISO_SABADO_ORDEN\n       FROM \n        DATES\n      ) F\nORDER BY FECHA ASC\nOPTION(MAXRECURSION 32767)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "FECHA_ACTUALIZACION_TABULAR",
            "expression": " MAX(FECHA[FECHA_UPDATE_TABULAR])"
          }
        ],
        "hierarchies": [
          {
            "name": "CALENDARIO",
            "levels": [
              {
                "name": "ANO",
                "ordinal": 0,
                "column": "ANO"
              },
              {
                "name": "TRIMESTRE",
                "ordinal": 1,
                "column": "TRIMESTRE"
              },
              {
                "name": "NOMBRE_MES",
                "ordinal": 2,
                "column": "NOMBRE_MES"
              },
              {
                "name": "DIA",
                "ordinal": 3,
                "column": "DIA"
              }
            ]
          },
          {
            "name": "CALENDARIO_FISCAL",
            "levels": [
              {
                "name": "ANO_FISCAL",
                "ordinal": 0,
                "column": "ANO_FISCAL"
              },
              {
                "name": "TRIMESTRE_FISCAL",
                "ordinal": 1,
                "column": "TRIMESTRE_FISCAL"
              },
              {
                "name": "NOMBRE_MES_FISCAL",
                "ordinal": 2,
                "column": "NOMBRE_MES_FISCAL"
              },
              {
                "name": "DIA_FISCAL",
                "ordinal": 3,
                "column": "DIA_ORDEN"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SET DATEFIRST 1;\nSET LANGUAGE Spanish;\n\nWITH DATES (FECHA) AS \n(\n    SELECT CAST(STR(YEAR(GETDATE())+2) + '-01-31'  AS DATE)\nUNION ALL\n    SELECT \n            DATEADD(DAY,-1,FECHA)\n    FROM\n            DATES \n    WHERE \n            FECHA > CAST('2013-01-01' AS DATE)\n)\n\nSELECT\n       ID_FECHA\n       , FECHA\n\t   ,CASE WHEN CAST(FECHA AS DATE)= CONVERT(date, GETDATE()) THEN 'Hoy' ELSE CAST(FECHA AS VARCHAR) END AS FECHA_HOY\n       , ANO\n       , MES_ORDEN\n       , DIA_ORDEN\n       , NOMBRE_MES\n       , NOMBRE_MES AS NOMBRE_MES_FISCAL\n       , NOMBRE_DIA\n       , TRIMESTRE\n       , ANO_FISCAL\n       , MES_FISCAL_ORDEN\n       , TRIMESTRE_FISCAL\n       , NUM_DIA_SEMANA\n       , SEMANA_ANO_ORDEN\n       , SEMANA_MES_ORDEN\n       , SEMANA_ANO_FISCAL_ORDEN\n       , SEMANA_MES_FISCAL_ORDEN\n       , SEMANA_ISO_ORDEN\n       , (datediff(dd,\n       case when    NextYrStart <= FECHA\n             then   NextYrStart\n       when   CurrYrStart <= FECHA\n             then   CurrYrStart\n       else   PriorYrStart\n       end, FECHA)/7)+1 AS SEMANA_ISO_FISCAL_ORDEN\n\t   , SEMANA_ISO_SABADO_ORDEN\nFROM\n(\n       SELECT \n        CAST(CONVERT(VARCHAR, FECHA, 112) AS INT) AS ID_FECHA\n       ,FECHA\n       ,YEAR(FECHA) AS ANO \n        ,MONTH(FECHA) AS MES_ORDEN \n        ,DAY(FECHA) AS DIA_ORDEN \n        ,SUBSTRING(UPPER(DATENAME(MONTH,FECHA)),1,3) AS NOMBRE_MES\n       ,SUBSTRING(UPPER(DATENAME(WEEKDAY,FECHA)),1,3) AS NOMBRE_DIA\n       ,'T' + DATENAME(QUARTER,FECHA) AS TRIMESTRE\n       ,YEAR(DATEADD(MONTH, -1, FECHA)) AS ANO_FISCAL\n       ,CASE WHEN MONTH(FECHA) = 1 THEN 12 ELSE MONTH(FECHA)-1 END AS MES_FISCAL_ORDEN\n       ,'T' + DATENAME(QUARTER,DATEADD(MONTH, -1, FECHA)) AS TRIMESTRE_FISCAL\n       ,DATEPART(WEEKDAY, FECHA) AS NUM_DIA_SEMANA\n       ,DATEPART(WEEK, FECHA) AS SEMANA_ANO_ORDEN \n        ,DATEPART(WEEK, FECHA) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,FECHA), 0))+ 1 AS SEMANA_MES_ORDEN\n       ,DATEPART(WEEK, DATEADD(MONTH, -1, FECHA)) AS SEMANA_ANO_FISCAL_ORDEN \n        ,DATEPART(WEEK, DATEADD(MONTH, -1, FECHA)) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,DATEADD(MONTH, -1, FECHA)), 0))+ 1 AS SEMANA_MES_FISCAL_ORDEN\n       ,DATEPART(ISO_WEEK, FECHA) AS SEMANA_ISO_ORDEN\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(yy,-1,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA),0))))/7)*7,-53690) AS PriorYrStart\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA),0)))/7)*7,-53690) AS CurrYrStart\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(yy,1,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA),0))))/7)*7,-53690) AS NextYrStart   \n\t   ,DATEPART(ISO_WEEK, DATEADD(DAY,2,FECHA)) AS SEMANA_ISO_SABADO_ORDEN\n       FROM \n        DATES\n      ) F\nORDER BY FECHA ASC\nOPTION(MAXRECURSION 32767)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SET DATEFIRST 1;\nSET LANGUAGE Spanish;\n\nWITH DATES (FECHA) AS \n(\n    SELECT CAST(STR(YEAR(GETDATE())+2) + '-01-31'  AS DATE)\nUNION ALL\n    SELECT \n            DATEADD(DAY,-1,FECHA)\n    FROM\n            DATES \n    WHERE \n            FECHA > CAST('2013-01-01' AS DATE)\n)\n\nSELECT\n       ID_FECHA\n       , FECHA\n\t   ,CASE WHEN CAST(FECHA AS DATE)= CONVERT(date, GETDATE()) THEN 'Hoy' ELSE CAST(FECHA AS VARCHAR) END AS FECHA_HOY\n       , ANO\n       , MES_ORDEN\n       , DIA_ORDEN\n       , NOMBRE_MES\n       , NOMBRE_MES AS NOMBRE_MES_FISCAL\n       , NOMBRE_DIA\n       , TRIMESTRE\n       , ANO_FISCAL\n       , MES_FISCAL_ORDEN\n       , TRIMESTRE_FISCAL\n       , NUM_DIA_SEMANA\n       , SEMANA_ANO_ORDEN\n       , SEMANA_MES_ORDEN\n       , SEMANA_ANO_FISCAL_ORDEN\n       , SEMANA_MES_FISCAL_ORDEN\n       , SEMANA_ISO_ORDEN\n       , (datediff(dd,\n       case when    NextYrStart <= FECHA\n             then   NextYrStart\n       when   CurrYrStart <= FECHA\n             then   CurrYrStart\n       else   PriorYrStart\n       end, FECHA)/7)+1 AS SEMANA_ISO_FISCAL_ORDEN\n\t   , SEMANA_ISO_SABADO_ORDEN\nFROM\n(\n       SELECT \n        CAST(CONVERT(VARCHAR, FECHA, 112) AS INT) AS ID_FECHA\n       ,FECHA\n       ,YEAR(FECHA) AS ANO \n        ,MONTH(FECHA) AS MES_ORDEN \n        ,DAY(FECHA) AS DIA_ORDEN \n        ,SUBSTRING(UPPER(DATENAME(MONTH,FECHA)),1,3) AS NOMBRE_MES\n       ,SUBSTRING(UPPER(DATENAME(WEEKDAY,FECHA)),1,3) AS NOMBRE_DIA\n       ,'T' + DATENAME(QUARTER,FECHA) AS TRIMESTRE\n       ,YEAR(DATEADD(MONTH, -1, FECHA)) AS ANO_FISCAL\n       ,CASE WHEN MONTH(FECHA) = 1 THEN 12 ELSE MONTH(FECHA)-1 END AS MES_FISCAL_ORDEN\n       ,'T' + DATENAME(QUARTER,DATEADD(MONTH, -1, FECHA)) AS TRIMESTRE_FISCAL\n       ,DATEPART(WEEKDAY, FECHA) AS NUM_DIA_SEMANA\n       ,DATEPART(WEEK, FECHA) AS SEMANA_ANO_ORDEN \n        ,DATEPART(WEEK, FECHA) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,FECHA), 0))+ 1 AS SEMANA_MES_ORDEN\n       ,DATEPART(WEEK, DATEADD(MONTH, -1, FECHA)) AS SEMANA_ANO_FISCAL_ORDEN \n        ,DATEPART(WEEK, DATEADD(MONTH, -1, FECHA)) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,DATEADD(MONTH, -1, FECHA)), 0))+ 1 AS SEMANA_MES_FISCAL_ORDEN\n       ,DATEPART(ISO_WEEK, FECHA) AS SEMANA_ISO_ORDEN\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(yy,-1,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA),0))))/7)*7,-53690) AS PriorYrStart\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA),0)))/7)*7,-53690) AS CurrYrStart\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(yy,1,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA),0))))/7)*7,-53690) AS NextYrStart   \n\t   ,DATEPART(ISO_WEEK, DATEADD(DAY,2,FECHA)) AS SEMANA_ISO_SABADO_ORDEN\n       FROM \n        DATES\n      ) F\nORDER BY FECHA ASC\nOPTION(MAXRECURSION 32767)"
          }
        ]
      },
      {
        "name": "LUGAR_DE_TRABAJO",
        "columns": [
          {
            "name": "ID_LUGAR_DE_TRABAJO",
            "dataType": "string",
            "sourceColumn": "ID_LUGAR_DE_TRABAJO"
          },
          {
            "name": "LUGAR_DE_TRABAJO",
            "dataType": "string",
            "sourceColumn": "LUGAR_DE_TRABAJO"
          },
          {
            "name": "ID_TIPO_LUGAR_DE_TRABAJO",
            "dataType": "string",
            "sourceColumn": "ID_TIPO_LUGAR_DE_TRABAJO"
          },
          {
            "name": "TIPO_LUGAR_DE_TRABAJO",
            "dataType": "string",
            "sourceColumn": "TIPO_LUGAR_DE_TRABAJO"
          },
          {
            "name": "ID_LUGAR_TRABAJO_ORIGEN",
            "dataType": "string",
            "sourceColumn": "ID_LUGAR_TRABAJO_ORIGEN"
          },
          {
            "name": "DIRECCION",
            "dataType": "string",
            "sourceColumn": "DIRECCION"
          },
          {
            "name": "REGION",
            "dataType": "string",
            "sourceColumn": "REGION"
          },
          {
            "name": "PROVINCIA",
            "dataType": "string",
            "sourceColumn": "PROVINCIA"
          },
          {
            "name": "ID_CADENA",
            "dataType": "string",
            "sourceColumn": "ID_CADENA"
          }
        ],
        "partitions": [
          {
            "name": "LUGAR_DE_TRABAJO",
            "source": {
              "type": "query",
              "query": "SELECT \n       LT.STD_ID_WORK_LOCAT AS ID_LUGAR_DE_TRABAJO,\n       LT.STD_WORK_LOCESP AS LUGAR_DE_TRABAJO,\n       LT.STD_ID_WL_TYPE AS ID_TIPO_LUGAR_DE_TRABAJO,\n       LTT.STD_N_WL_TYPEESP AS TIPO_LUGAR_DE_TRABAJO,\n       COALESCE(LT.CCL_ID_COD_ORIGEN, 'No definido') AS ID_LUGAR_TRABAJO_ORIGEN,\n       COALESCE(ADDR.SCO_GB_ADDRESSESP, 'No definido') AS DIRECCION,\n       COALESCE(GEOD.STD_N_GEO_DIVESP, 'No definido') AS REGION,\n       COALESCE(SGEOD.STD_N_SUB_GEO_ESP,'No definido') AS PROVINCIA\n       ,WLOC.CCL_ID_CADENA AS ID_CADENA\nFROM\n\n       STD_WORK_LOCATION AS LT WITH(NOLOCK)  \n       \n       INNER JOIN STD_LU_WL_TYPE AS LTT WITH(NOLOCK) \n             ON LT.STD_ID_WL_TYPE = LTT.STD_ID_WL_TYPE\n       \n       LEFT JOIN M4CCL_ATRIB_WLOC AS WLOC WITH(NOLOCK) \n             ON LT.STD_ID_WORK_LOCAT=WLOC.STD_ID_WORK_LOCAT\n             AND GETDATE() BETWEEN WLOC.CCL_DT_START AND WLOC.CCL_DT_END\n\n       \n       LEFT JOIN M4SCO_H_WLOC_ADDR ADDR WITH(NOLOCK)  \n             ON ADDR.STD_ID_WORK_LOCAT=LT.STD_ID_WORK_LOCAT\nAND GETDATE() BETWEEN ADDR.SCO_DT_START AND ADDR.SCO_DT_END \n       \n       LEFT JOIN dbo.STD_GEO_DIV GEOD WITH(NOLOCK)\n             ON  ADDR.STD_ID_COUNTRY = GEOD.STD_ID_COUNTRY\n             AND ADDR.STD_ID_GEO_DIV = GEOD.STD_ID_GEO_DIV \n       \n       LEFT JOIN STD_SUB_GEO_DIV SGEOD WITH(NOLOCK)\n             ON  ADDR.STD_ID_COUNTRY = SGEOD.STD_ID_COUNTRY\n             AND ADDR.STD_ID_GEO_DIV = SGEOD.STD_ID_GEO_DIV \n             AND ADDR.STD_ID_SUB_GEO_DIV = SGEOD.STD_ID_SUB_GEO_DIV\n\ngroup by LT.STD_ID_WORK_LOCAT ,\n       LT.STD_WORK_LOCESP ,\n       LT.STD_ID_WL_TYPE ,\n       LTT.STD_N_WL_TYPEESP ,\n       COALESCE(LT.CCL_ID_COD_ORIGEN, 'No definido') ,\n       COALESCE(ADDR.SCO_GB_ADDRESSESP, 'No definido') ,\n       COALESCE(GEOD.STD_N_GEO_DIVESP, 'No definido') ,\n       COALESCE(SGEOD.STD_N_SUB_GEO_ESP,'No definido') \n       ,WLOC.CCL_ID_CADENA",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              }
            ]
          }
        ]
      },
      {
        "name": "TIPO_PERSONA",
        "columns": [
          {
            "name": "ID_TIPO_PERSONA",
            "dataType": "string",
            "sourceColumn": "ID_TIPO_PERSONA"
          },
          {
            "name": "TIPO_PERSONA",
            "dataType": "string",
            "sourceColumn": "PERSONA"
          }
        ],
        "partitions": [
          {
            "name": "TIPO_PERSONA",
            "source": {
              "type": "query",
              "query": "SELECT '01' AS ID_TIPO_PERSONA, 'EMPLEADO PROPIO' AS PERSONA\nUNION\nSELECT '02' AS ID_TIPO_PERSONA, 'EMPLEADO EXTERNO' AS PERSONA\nUNION\nSELECT '06' AS ID_TIPO_PERSONA, 'ETT' AS PERSONA",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT '01' AS ID_TIPO_PERSONA, 'EMPLEADO PROPIO' AS PERSONA\nUNION\nSELECT '02' AS ID_TIPO_PERSONA, 'EMPLEADO EXTERNO' AS PERSONA\nUNION\nSELECT '06' AS ID_TIPO_PERSONA, 'ETT' AS PERSONA</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT '01' AS ID_TIPO_PERSONA, 'EMPLEADO PROPIO' AS PERSONA\nUNION\nSELECT '02' AS ID_TIPO_PERSONA, 'EMPLEADO EXTERNO' AS PERSONA\nUNION\nSELECT '06' AS ID_TIPO_PERSONA, 'ETT' AS PERSONA</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT '01' AS ID_TIPO_PERSONA, 'EMPLEADO PROPIO' AS PERSONA\nUNION\nSELECT '02' AS ID_TIPO_PERSONA, 'EMPLEADO EXTERNO' AS PERSONA\nUNION\nSELECT '06' AS ID_TIPO_PERSONA, 'ETT' AS PERSONA"
          }
        ]
      },
      {
        "name": "PLANTILLA",
        "columns": [
          {
            "name": "ID_FECHA",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "ID_FECHA",
            "formatString": "General Date"
          },
          {
            "name": "FECHA_ANTIGUEDAD",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FECHA_ANTIGUEDAD",
            "formatString": "General Date"
          },
          {
            "name": "ANTIGUEDAD",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ANTIGUEDAD"
          },
          {
            "name": "ID_PUESTO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_PUESTO"
          },
          {
            "name": "ID_EMPRESA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMPRESA"
          },
          {
            "name": "GENERO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "GENERO"
          },
          {
            "name": "EDAD",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "EDAD"
          },
          {
            "name": "ID_TIPO_JORNADA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_JORNADA"
          },
          {
            "name": "TIPO_JORNADA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "TIPO_JORNADA"
          },
          {
            "name": "ID_TIPO_CONTRATO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_CONTRATO"
          },
          {
            "name": "TIPO_CONTRATO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "TIPO_CONTRATO"
          },
          {
            "name": "ID_ESTRUCTURA_ALMACEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_ESTRUCTURA_ALMACEN"
          },
          {
            "name": "ID_LUGAR_DE_TRABAJO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_LUGAR_DE_TRABAJO"
          },
          {
            "name": "ID_PERSONA",
            "dataType": "string",
            "sourceColumn": "ID_PERSONA"
          },
          {
            "name": "DIVISION_SECCION",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "DIVISION_SECCION"
          },
          {
            "name": "ID_CATEGORIA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_CATEGORIA"
          },
          {
            "name": "ID_HORAS_CONTRATADAS",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_HORAS_CONTRATADAS"
          },
          {
            "name": "ID_TIPO_PERSONA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_PERSONA"
          },
          {
            "name": "COUNT_RAW",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COUNT_RAW"
          },
          {
            "name": "ID_REDUCCION_JORNADA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_REDUCCION_JORNADA"
          },
          {
            "name": "ID_EMPRESA_EXTERNA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_EMPRESA_EXTERNA"
          },
          {
            "name": "ID_EQUIPO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_EQUIPO"
          },
          {
            "name": "ID_AREA_ALMACEN",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_AREA_ALMACEN"
          },
          {
            "name": "IdInternalTipoTurno",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "IdInternalTipoTurno"
          },
          {
            "name": "MOD_REF_INDIVIDUAL",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "MOD_REF_INDIVIDUAL"
          },
          {
            "name": "MOD_REF_EQUIPO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "MOD_REF_EQUIPO"
          },
          {
            "name": "Uni_org",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Uni_org"
          },
          {
            "name": "FECHA_ALTA_EMPRESA",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_ALTA_EMPRESA"
          },
          {
            "name": "FECHA_VENCIMIENTO",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_VENCIMIENTO"
          },
          {
            "name": "ALTA_EMP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ALTA_EMP"
          },
          {
            "name": "BAJA_CO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BAJA_CO"
          },
          {
            "name": "ID_UNIDAD_ORGANIZATIVA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_UNIDAD_ORGANIZATIVA"
          },
          {
            "name": "ID_NIVEL_ESTUDIOS",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_NIVEL_ESTUDIOS"
          },
          {
            "name": "ID_PAIS_META4_NACIONALIDAD_SECUNDARIA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_PAIS_META4_NACIONALIDAD_SECUNDARIA"
          },
          {
            "name": "ID_ROL_EQUIPO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_ROL_EQUIPO"
          },
          {
            "name": "ID_ORGANIZATION",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_ORGANIZATION"
          },
          {
            "type": "calculated",
            "name": "ID_FECHA_PERSONA",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "[ID_FECHA] &\"#\"&PLANTILLA[ID_PERSONA]"
          },
          {
            "type": "calculated",
            "name": "GENERO_N",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF(PLANTILLA[GENERO]=\"H\",\"HOMBRE\",\"MUJER\")"
          },
          {
            "name": "ID_LOCAL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ID_LOCAL"
          },
          {
            "name": "ID_PERSONA_LOCAL",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_PERSONA_LOCAL"
          },
          {
            "name": "ID_MODELO_REFERENCIA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_MODELO_REFERENCIA"
          },
          {
            "name": "ID_PUESTO_HR_TYPE",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_PUESTO_HR_TYPE"
          },
          {
            "name": "CCL_CENTRO_COSTE_ORIGEN",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CCL_CENTRO_COSTE_ORIGEN"
          },
          {
            "name": "PORCENTAJE_JORNADA_PARCIAL",
            "dataType": "double",
            "sourceColumn": "PORCENTAJE_JORNADA_PARCIAL"
          },
          {
            "name": "PORCENTAJE_REDUCCION_JORNADA",
            "dataType": "double",
            "sourceColumn": "PORCENTAJE_REDUCCION_JORNADA"
          },
          {
            "name": "TRAMO_PORC_REDUCCION",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "TRAMO_PORC_REDUCCION"
          },
          {
            "name": "TRAMO_PORC_JORNADA_PARCIAL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "TRAMO_PORC_JORNADA_PARCIAL"
          },
          {
            "name": "BAJA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BAJA"
          },
          {
            "name": "ID_UNIDAD_NEGOCIO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_UNIDAD_NEGOCIO"
          },
          {
            "name": "ID_ORG_ALM",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_ORG_ALM"
          },
          {
            "name": "AUSENCIA_PROGRAMADA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "AUSENCIA_PROGRAMADA"
          },
          {
            "name": "ID_ORG_AUSENCIA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_ORG_AUSENCIA"
          },
          {
            "type": "calculated",
            "name": "ID_ORG_INCIDENCIA",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF(PLANTILLA[ORIGEN_INCIDENCIA]=\"TA\",RELATED(MAPEO_AUSENCIA_INCIDENCIA[ID_ORG_INCIDENCIA]),PLANTILLA[ID_ORG_AUSENCIA])"
          },
          {
            "name": "ORIGEN_INCIDENCIA",
            "dataType": "string",
            "sourceColumn": "ORIGEN_INCIDENCIA"
          },
          {
            "name": "ID_MOTIVO_ALTA",
            "dataType": "string",
            "sourceColumn": "ID_MOTIVO_ALTA"
          },
          {
            "name": "ID_MOTIVO_BAJA",
            "dataType": "string",
            "sourceColumn": "ID_MOTIVO_BAJA"
          },
          {
            "name": "ID_AGRUPACION_BAJA",
            "dataType": "string",
            "sourceColumn": "ID_AGRUPACION_BAJA"
          },
          {
            "name": "ID_TIPO_CONTRATACION",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_CONTRATACION"
          },
          {
            "name": "MOTIVO_CONTRATACION",
            "dataType": "string",
            "sourceColumn": "MOTIVO_CONTRATACION"
          },
          {
            "name": "ID_EQ_ORG",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_EQ_ORG"
          }
        ],
        "partitions": [
          {
            "name": "BASE",
            "source": {
              "type": "query",
              "query": "DECLARE @FechaIni DATE = '2022-09-21';\nDECLARE @FechaFin DATE = '2022-09-22';\n\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\nSELECT\n\tDENSE_RANK() OVER (\n\tORDER BY SCO_ID_REF_MOD) AS IDDimensionTipoTurno,\n\tSCO_ID_REF_MOD,\n\tNM_REF_MODESP,\n\tMd.CCL_ID_TP_TURNO,\n\tMT.CCL_NM_TP_TURNESP INTO\n\t\t#TEMPCTURNO\n\tFROM\n\t\tM4SCO_REF_MOD Md WITH (NOLOCK)\n\tINNER JOIN M4CCL_X_GA_TP_TUR MT WITH (NOLOCK) ON\n\t\tMd.CCL_ID_TP_TURNO = MT.CCL_ID_TP_TURNO;\n\nCREATE\n\tCLUSTERED INDEX IDX_CTEMPCTURNO ON\n\t#TEMPCTURNO(SCO_ID_REF_MOD);\n\nWITH listaUOs (nivel,\nSTD_ID_WU_CHILD,\nSTD_ID_WU_PARENT,\norden,\nSTD_DT_START,\nSTD_DT_END) AS (\nSELECT\n\t1,\n\tSTD_ID_WU_CHILD,\n\tSTD_ID_WU_PARENT,\n\tCAST(STD_ID_WU_CHILD AS VARCHAR(2000)),\n\tSTD_DT_START,\n\tSTD_DT_END\nFROM\n\tSTD_REL_WORK_UNIT WITH (NOLOCK)\nWHERE\n\tCOALESCE(STD_ID_WU_CHILD,\n\t'') IN ('1869')\nUNION ALL\nSELECT\n\tnivel + 1,\n\tp.STD_ID_WU_CHILD,\n\tp.STD_ID_WU_PARENT,\n\tCAST((orden + p.STD_ID_WU_CHILD) AS VARCHAR(2000)),\n\tp.STD_DT_START,\n\tp.STD_DT_END\nFROM\n\tlistaUOs l,\n\tSTD_REL_WORK_UNIT p WITH (NOLOCK)\nWHERE\n\tl.STD_ID_WU_CHILD = p.STD_ID_WU_PARENT ) SELECT\n\t* INTO\n\t\t#listaUOs\n\tFROM\n\t\tlistaUOs WITH (nolock);\n\nWITH TEMPCALENDARIO (FECHA) AS (\nSELECT\n\tCAST(@FechaIni AS DATE) AS FECHA\nUNION ALL\nSELECT\n\tDATEADD(DAY,\n\t1,\n\tFECHA)\nFROM\n\tTEMPCALENDARIO\nWHERE\n\tDATEADD(DAY,\n\t1,\n\tFECHA) < CAST(@FechaFin AS DATE) ) SELECT\n\t* INTO\n\t\t#TEMPCALENDARIO\n\tFROM\n\t\tTEMPCALENDARIO WITH (nolock);\n\nWITH EMPRESA_GRUPO_DIVISION_SECCION (ID_EMPRESA_GRUPO_DIVISION_SECCION ,\nID_EMPRESA_GRUPO ,\nNOMBRE_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION ,\nNOM_DIVSEC ) AS (\nSELECT\n\tID_DIVSEC,\n\tID_EMPRESA_GRUPO,\n\tEMPRESA_GRUPO,\n\tDIVISION,\n\tSECCION,\n\tNOM_DIVSEC\nFROM\n\t(\n\tSELECT\n\t\t64 AS ID_EMPRESA_GRUPO,\n\t\t'INDIPUNT' AS EMPRESA_GRUPO,\n\t\t91 AS DIVISION,\n\t\t15 AS SECCION,\n\t\t'649115' AS ID_DIVSEC,\n\t\t'INDIPUNT OPERARIOS [9115]' AS NOM_DIVSEC\n\t\tUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'991304' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [1304]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t5 AS SECCION,\n\t\t'991305' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [1305]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'998525' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'998537' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [8537]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t41 AS ID_EMPRESA_GRUPO,\n\t\t'PULL & BEAR LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'418525' AS ID_DIVSEC,\n\t\t'PULL & BEAR LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t41 AS ID_EMPRESA_GRUPO,\n\t\t'PULL & BEAR LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'418537' AS ID_DIVSEC,\n\t\t'PULL & BEAR LOGISTICA [8537]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t03 AS DIVISION,\n\t\t17 AS SECCION,\n\t\t'1890317' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [0317]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t03 AS SECCION,\n\t\t'1891303' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [1303]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'1898525' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t5 AS DIVISION,\n\t\t6 AS SECCION,\n\t\t'370506' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [0506]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t5 AS SECCION,\n\t\t'371305' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [1305]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t28 AS DIVISION,\n\t\t4 AS SECCION,\n\t\t'372804' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [2804]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'378525' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'378537' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [8537]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t9 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t18 AS SECCION,\n\t\t'91318' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [1318]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t32 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA HOME LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'328525' AS ID_DIVSEC,\n\t\t'ZARA HOME LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'431304' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [1304]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t05 AS SECCION,\n\t\t'431305' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [1305]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'438525' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'438537' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [8537]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'141300' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1300]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t12 AS SECCION,\n\t\t'141312' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1312]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t09 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'140900' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1312]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'268525' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t26 AS SECCION,\n\t\t'268526' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8526]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t27 AS SECCION,\n\t\t'268527' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8527]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t28 AS SECCION,\n\t\t'268528' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8528]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t29 AS SECCION,\n\t\t'268529' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8529]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'261300' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [1300]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t63 AS DIVISION,\n\t\t08 AS SECCION,\n\t\t'266308' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [6308]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t12 AS ID_EMPRESA_GRUPO,\n\t\t'LEFTIES LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t19 AS SECCION,\n\t\t'121319' AS ID_DIVSEC,\n\t\t'LEFTIES LOGISTICA [1319]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t23 AS ID_EMPRESA_GRUPO,\n\t\t'OYSHO LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t0 AS SECCION,\n\t\t'231300' AS ID_DIVSEC,\n\t\t'OYSHO LOGISTICA [1300]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t01 AS SECCION,\n\t\t'611301' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [1301]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'611304' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [1304]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'618525' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t357 AS ID_EMPRESA_GRUPO,\n\t\t'TORDERA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'3578525' AS ID_DIVSEC,\n\t\t'TORDERA LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t68 AS ID_EMPRESA_GRUPO,\n\t\t'FASHION LOGISTICS FORWARDERS' AS EMPRESA_GRUPO,\n\t\t00 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'680000' AS ID_DIVSEC,\n\t\t'FASHION LOGISTICS FORWARDERS []' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t330 AS ID_EMPRESA_GRUPO,\n\t\t'INDITEX LOGISTICA' AS EMPRESA_GRUPO,\n\t\t00 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'3300000' AS ID_DIVSEC,\n\t\t'INDITEX LOGISTICA []' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t51 AS DIVISION,\n\t\t73 AS SECCION,\n\t\t'205173' AS ID_DIVSEC,\n\t\t'TEMPE [205173]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t30 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'203000' AS ID_DIVSEC,\n\t\t'TEMPE [203000]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t51 AS DIVISION,\n\t\t34 AS SECCION,\n\t\t'205134' AS ID_DIVSEC,\n\t\t'TEMPE [205134]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t50 AS DIVISION,\n\t\t41 AS SECCION,\n\t\t'205041' AS ID_DIVSEC,\n\t\t'TEMPE [205041]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t398 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA CABANILLAS' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'3988525' AS ID_DIVSEC,\n\t\t'ALMACEN PAQUETE [8525]' AS NOM_DIVSEC ) Q_UNION ) SELECT\n\t* INTO\n\t\t#EMPRESA_GRUPO_DIVISION_SECCION\n\tFROM\n\t\tEMPRESA_GRUPO_DIVISION_SECCION WITH (nolock) \n\t\t\nSELECT\n\t\t\tCCL_CENTRO_COSTE_ORIGEN,\n\t\t\tID_FECHA,\n\t\t\tCASE\n\t\t\t\tWHEN ausencias.CCL_ID_HR IS NOT NULL THEN 1\n\t\t\t\tELSE 0\n\t\t\tEND AS AUSENCIA_PROGRAMADA,\n\t\t\tCASE ausencias.ORIGEN_INCIDENCIA\n\t\t\t\tWHEN 'TA' THEN 'TA' + '#' + datos.ID_ORGANIZATION + '#' + CAST(CCL_ID_ABSENCE AS VARCHAR) \n\t\t\t\tELSE datos.ID_ORGANIZATION + '#' + CAST(CCL_ID_ABSENCE AS VARCHAR) \n\t\t\t\tEND AS ID_ORG_AUSENCIA,\n\t\t\tFECHA_ANTIGUEDAD,\n\t\t\tdatos.ID_ORGANIZATION,\n\t\t\tANTIGUEDAD,\n\t\t\tFECHA_ALTA_EMPRESA,\n\t\t\tFECHA_VENCIMIENTO,\n\t\t\tID_PUESTO,\n\t\t\tID_PUESTO_HR_TYPE,\n\t\t\tID_EMPRESA,\n\t\t\tID_EMPRESA_EXTERNA,\n\t\t\tGENERO,\n\t\t\tEDAD,\n\t\t\tID_TIPO_JORNADA,\n\t\t\tTIPO_JORNADA,\n\t\t\tID_TIPO_CONTRATO,\n\t\t\tTIPO_CONTRATO,\n\t\t\tID_ESTRUCTURA_ALMACEN,\n\t\t\tID_LUGAR_DE_TRABAJO,\n\t\t\tID_PERSONA,\n\t\t\tID_LOCAL,\n\t\t\tID_PERSONA_LOCAL,\n\t\t\tCOUNT_RAW,\n\t\t\tID_TIPO_PERSONA,\n\t\t\tPORC_REDUCCION_JORNADA  AS PORCENTAJE_REDUCCION_JORNADA,\n\t\t\tCAST(ROUND(PORC_REDUCCION_JORNADA, 0, 1) AS INTEGER) AS TRAMO_PORC_REDUCCION,\n\t\t\tID_REDUCCION_JORNADA,\n\t\t\tDIVISION_SECCION,\n\t\t\tID_CATEGORIA,\n\t\t\tID_HORAS_CONTRATADAS,\n\t\t\tdatos.ID_ORGANIZATION + '#' + ID_AREA_ALMACEN AS ID_ORG_ALM,\n\t\t\tID_AREA_ALMACEN,\n\t\t\tMOD_REF_INDIVIDUAL,\n\t\t\tID_EQUIPO,\n\t\t\tID_ROL_EQUIPO,\n\t\t\tID_EQ_ORG,\n\t\t\tMOD_REF_EQUIPO,\n\t\t\tIdInternalTipoTurno,\n\t\t\tUni_org,\n\t\t\tID_UNIDAD_ORGANIZATIVA,\n\t\t\tID_NIVEL_ESTUDIOS,\n\t\t\tID_PAIS_META4_NACIONALIDAD_SECUNDARIA ,\n\t\t\tMAX((CASE WHEN datos.FECHA_ALTA_EMPRESA = datos.ID_FECHA AND COALESCE(empresa_anterior.STD_ID_LEG_ENT, 0) <> datos.ID_EMPRESA THEN 1 ELSE 0 END)) AS ALTA_EMP ,\n\t\t\tMAX( (CASE WHEN datos.FECHA_VENCIMIENTO = datos.ID_FECHA THEN 1 ELSE 0 END)) AS BAJA_CO ,\n\t\t\tCOALESCE(MOD_REF_INDIVIDUAL,\n\t\t\tMOD_REF_EQUIPO) AS ID_MODELO_REFERENCIA ,\n\t\t\tCOALESCE(PORCENTAJE_JORNADA_PARCIAL,\n\t\t\t100) AS PORCENTAJE_JORNADA_PARCIAL ,\n\t\t\tCOALESCE(ROUND(PORCENTAJE_JORNADA_PARCIAL, 0, 1),\n\t\t\t100) AS TRAMO_PORC_JORNADA_PARCIAL ,\n\t\t\tBAJA ,\n\t\t\tCCL_ID_UNIDAD_NEG AS ID_UNIDAD_NEGOCIO,\n\t\t\tausencias.ORIGEN_INCIDENCIA,\n\t\t\tdatos.ID_MOTIVO_ALTA,\n\t\t    datos.ID_TIPO_CONTRATACION,\n\t\t\tdatos.MOTIVO_CONTRATACION,\n\t\t\tdatos.ID_MOTIVO_BAJA,\n\t\t\tdatos.ID_AGRUPACION_BAJA\n\t\tFROM\n\t\t\t(\n\t\t\tSELECT\n\t\t\t\tT.FECHA AS ID_FECHA ,\n\t\t\t\tCAST(periodo.SSP_FEC_ANTIGUEDAD AS DATE) AS FECHA_ANTIGUEDAD ,\n\t\t\t\tperiodo.ID_ORGANIZATION ,\n\t\t\t\t(DATEDIFF(MONTH,\n\t\t\t\tperiodo.SSP_FEC_ANTIGUEDAD,\n\t\t\t\tT.FECHA)) AS ANTIGUEDAD ,\n\t\t\t\tlegalEntityHR.DT_START AS FECHA_ALTA_EMPRESA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN co.SSP_FEC_FIN_PV_CON IS NULL\n\t\t\t\t\tOR co.SSP_FEC_FIN_PV_CON < co.SSP_FEC_INI_CONTRA\n\t\t\t\t\tOR co.SSP_FEC_FIN_PV_CON < T.FECHA THEN CAST(co.SSP_FEC_FIN_CONTRA AS DATE)\n\t\t\t\t\tELSE CAST(\n\t\t\t\t\t(\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN co.SSP_FEC_FIN_PV_CON < co.SSP_FEC_FIN_CONTRA THEN co.SSP_FEC_FIN_PV_CON\n\t\t\t\t\t\tELSE co.SSP_FEC_FIN_CONTRA\n\t\t\t\t\tEND) AS DATE)\n\t\t\t\tEND AS FECHA_VENCIMIENTO ,\n\t\t\t\tm4pos.SCO_ID_JOB_CODE AS ID_PUESTO ,\n\t\t\t\tCONCAT(m4pos.SCO_ID_JOB_CODE,\n\t\t\t\t'#',\n\t\t\t\tperiodo.STD_ID_HR_TYPE) AS ID_PUESTO_HR_TYPE ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06')\n\t\t\t\t\tAND hrole.CCL_ID_CAMPO = 'EMPR_FUNC2' THEN hrole.CCL_CADENA\n\t\t\t\t\tELSE\n\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06') THEN CAST(SUBSTRING(hrole.CCL_CADENA, 3, 3) AS INT)\n\t\t\t\t\t\tELSE\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\tWHEN (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)) = 9\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_DIVISION, '.', '') = 13\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_SECCION, '.', '')= 18 THEN 37\n\t\t\t\t\t\t\tELSE (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT))\n\t\t\t\t\t\tEND\n\t\t\t\t\tEND\n\t\t\t\tEND AS ID_EMPRESA ,\n\t\t\t\tperiodo.STD_ID_EXTERN_ORG AS ID_EMPRESA_EXTERNA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN pe.STD_ID_GENDER = '1' THEN 'H'\n\t\t\t\t\tELSE 'M'\n\t\t\t\tEND AS GENERO ,\n\t\t\t\tDATEDIFF(YEAR,\n\t\t\t\tpe.STD_DT_BIRTH,\n\t\t\t\tT.FECHA) AS EDAD ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.CCL_TIEMPO_PARCIAL,\n\t\t\t\t\t'1') = '1' THEN 2\n\t\t\t\t\tELSE 1\n\t\t\t\tEND AS ID_TIPO_JORNADA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.CCL_TIEMPO_PARCIAL,\n\t\t\t\t\t'1') = '1' THEN 'TIEMPO PARCIAL'\n\t\t\t\t\tELSE 'TIEMPO COMPLETO'\n\t\t\t\tEND AS TIPO_JORNADA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.SSP_NO_DEFINIDO,\n\t\t\t\t\t'S') = 'S' THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND AS ID_TIPO_CONTRATO ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.SSP_NO_DEFINIDO,\n\t\t\t\t\t'S') = 'S' THEN 'INDEFINIDO'\n\t\t\t\t\tELSE 'EVENTUAL'\n\t\t\t\tEND AS TIPO_CONTRATO ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL'\n\t\t\t\t\tAND ceco.CCL_CENTRO_COSTE_ORIGEN <> '8525' THEN 2\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL'\n\t\t\t\t\tAND ceco.CCL_CENTRO_COSTE_ORIGEN = '8525' THEN 1\n\t\t\t\t\t--WHEN legalEntityHR.STD_ID_LEG_ENT=20 AND W.STD_ID_WU_TYPE <> 'TMPL' THEN null--MODIFICACION\n\t\t\t\t\tWHEN EGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION IS NOT NULL THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND AS ID_ESTRUCTURA_ALMACEN ,\n\t\t\t\tlt.STD_ID_WORK_LOCAT AS ID_LUGAR_DE_TRABAJO ,\n\t\t\t\tpe.STD_ID_PERSON AS ID_PERSONA ,\n\t\t\t\tperiodo.CCL_ID_PERSON AS ID_LOCAL ,\n\t\t\t\tCAST(pe.STD_ID_PERSON AS VARCHAR) + '#' + CAST(periodo.CCL_ID_PERSON AS VARCHAR) AS ID_PERSONA_LOCAL ,\n\t\t\t\t1 AS COUNT_RAW ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.STD_DT_END = T.FECHA THEN 1\n\t\t\t\t\tELSE 0\n\t\t\t\tEND AS BAJA ,\n\t\t\t\tperiodo.STD_ID_HR_TYPE AS ID_TIPO_PERSONA ,\n\t\t\t\tCOALESCE(GL.SSP_PORC_GLEGAL,\n\t\t\t\t0) AS PORC_REDUCCION_JORNADA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(GL.SSP_PORC_GLEGAL,\n\t\t\t\t\t0)>0 THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND AS ID_REDUCCION_JORNADA ,\n\t\t\t\thceco.CCL_COD_DIV_SECC DIVISION_SECCION ,\n\t\t\t\tcate.SSP_ID_CATEGORIA AS ID_CATEGORIA ,\n\t\t\t\tHTTH.CCL_ID_TP_HORA + '#' +(CAST(HTTH.CCL_HOR_TM_PARC AS VARCHAR)) AS ID_HORAS_CONTRATADAS ,\n\t\t\t\tM4AR.CCL_ID_AR_ALM AS ID_AREA_ALMACEN ,\n\t\t\t\tTUI.SCO_ID_REF_MOD AS MOD_REF_INDIVIDUAL ,\n\t\t\t\tEQ.SCO_ID_TEAM AS ID_EQUIPO ,\n\t\t\t\tEQ.SCO_ID_TEAM_ROLE AS ID_ROL_EQUIPO ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,\n\t\t\t\t\tEMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) IS NULL\n\t\t\t\t\tOR COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT) IS NULL\n\t\t\t\t\tOR EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM IS NULL THEN '-1'\n\t\t\t\t\tELSE COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,\n\t\t\t\t\tEMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) + '#' + COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)\n\t\t\t\tEND AS ID_EQ_ORG ,\n\t\t\t\tTUT.CCL_ID_MOD_REF AS MOD_REF_EQUIPO ,\n\t\t\t\tTPT.IDDimensionTipoTurno AS IdInternalTipoTurno ,\n\t\t\t\tuo.STD_ID_WU_CHILD AS Uni_org ,\n\t\t\t\tW.STD_ID_WORK_UNIT AS ID_UNIDAD_ORGANIZATIVA ,\n\t\t\t\tMAX(CASE WHEN LEV.STD_ID_DIP_LEVEL IN ('01', '02') THEN 1 WHEN LEV.STD_ID_DIP_LEVEL IN ('03') THEN 2 WHEN LEV.STD_ID_DIP_LEVEL IN ('11') THEN 3 WHEN LEV.STD_ID_DIP_LEVEL IN ('04', '09') THEN 4 WHEN LEV.STD_ID_DIP_LEVEL IN ('05', '10') THEN 5 WHEN LEV.STD_ID_DIP_LEVEL IN ('06', '07', '08') THEN 6 ELSE 0 END) AS ID_NIVEL_ESTUDIOS ,\n\t\t\t\tCOALESCE(MAX(NACIONALIDAD_SECUNDARIA.STD_ID_COUNTRY),\n\t\t\t\t'-1') AS ID_PAIS_META4_NACIONALIDAD_SECUNDARIA ,\n\t\t\t\tceco.CCL_CENTRO_COSTE_ORIGEN ,\n\t\t\t\tJP.SSP_VALOR_COEF_T_P AS PORCENTAJE_JORNADA_PARCIAL ,\n\t\t\t\tunineg.CCL_ID_UNIDAD_NEG\n\t\t\t\t,CASE WHEN periodo.STD_DT_END = T.FECHA\t\t\n\t\t\t\t\tTHEN CAST(MERCADO.CSP_ID_COUNTRY AS VARCHAR)+'#'+CAST(periodo.STD_ID_HRP_END_REA AS VARCHAR)\t\t\n\t\t\t\t\tELSE NULL\t\t\n\t\t\t\t\tEND AS ID_AGRUPACION_BAJA\n\t\t\t\t\t    ,CASE WHEN periodo.STD_DT_END = T.FECHA\t\t\n\t\t\t\t\t\t  THEN CAST(periodo.ID_ORGANIZATION AS VARCHAR) + '#' + CAST(periodo.STD_ID_HRP_END_REA AS VARCHAR)\t\t\n\t\t\t\t\t\t  ELSE NULL\t\t\n\t\t\t\t\t\t  END AS ID_MOTIVO_BAJA\n\t\t\t\t\t\t    ,CASE WHEN periodo.STD_DT_START = T.FECHA\t\t\n\t\t\t\t\t\t\t  THEN periodo.STD_ID_HRP_SRT_REA\t\t\n\t\t\t\t\t\t\t  ELSE NULL\t\t\n\t\t\t\t\t\t\t  END AS ID_MOTIVO_ALTA\n\t\t\t  ,co.SSP_MOTIVO_CONTRATO AS MOTIVO_CONTRATACION\t\n\t\t\t  ,TCI.SSP_TIPO_CONTRATACION AS ID_TIPO_CONTRATACION\n\t\t\tFROM\n\t\t\t\t#TEMPCALENDARIO AS T WITH (NOLOCK)\n\t\t\tINNER JOIN M4SCO_H_HR_POS m4hrpos WITH (NOLOCK) ON\n\t\t\t\tm4hrpos.SCO_DT_START <= T.FECHA\n\t\t\t\tAND m4hrpos.SCO_DT_END >= T.FECHA\n\n\t\t\tINNER JOIN M4SCO_POSITION m4pos WITH (NOLOCK) ON\n\t\t\t\tm4hrpos.SCO_ID_POSITION = m4pos.SCO_ID_POSITION\n\t\t\t\tAND m4pos.SCO_DT_START <= T.FECHA\n\t\t\t\tAND m4pos.SCO_DT_END >= T.FECHA\n\t\t\tINNER JOIN M4CCL_H_OR_UNI_NEG AS unineg WITH (NOLOCK) ON\n\t\t\t\tunineg.SCO_ID_POSITION = m4pos.SCO_ID_POSITION\n\t\t\t\tAND T.FECHA BETWEEN unineg.CCL_DT_START AND unineg.CCL_DT_END\n\t\t\tINNER JOIN STD_WORK_LOCATION lt WITH (NOLOCK) ON\n\t\t\t\tm4pos.SCO_ID_WORK_LOC = lt.STD_ID_WORK_LOCAT\n\t\t\tINNER JOIN M4SCO_HR_ROLE m4role WITH (NOLOCK) ON\n\t\t\t\tm4role.ID_ORGANIZATION = m4hrpos.ID_ORGANIZATION\n\t\t\t\tAND m4hrpos.SCO_ID_HR = m4role.SCO_ID_HR\n\t\t\t\tAND m4hrpos.SCO_OR_HR_ROLE = m4role.SCO_OR_HR_ROLE\n\t\t\t\tAND m4role.SCO_DT_START <= T.FECHA\n\t\t\t\tAND m4role.SCO_DT_END >= T.FECHA\n\t\t\tINNER JOIN STD_HR_PERIOD periodo WITH (NOLOCK) ON\n\t\t\t\tm4role.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND m4role.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND m4role.SCO_OR_HR_ROLE = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND periodo.STD_DT_START <= T.FECHA\n\t\t\t\tAND periodo.STD_DT_END >= T.FECHA\n\t\t\tINNER JOIN M4SCO_H_HR_LEGENT legalEntityHR WITH (NOLOCK) ON\n\t\t\t\tlegalEntityHR.STD_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND legalEntityHR.STD_OR_HR_PERIOD = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND legalEntityHR.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND legalEntityHR.DT_START <= T.FECHA\n\t\t\t\tAND legalEntityHR.DT_END >= T.FECHA\n\t\t\t\tAND legalEntityHR.STD_ID_LEG_ENT NOT IN ('NZ_ZARA',\n\t\t\t\t'SI001',\n\t\t\t\t'SI002')\n\t\t\tINNER JOIN STD_PERSON pe WITH (NOLOCK) ON\n\t\t\t\tpe.STD_ID_PERSON = m4hrpos.SCO_ID_HR\n\t\t\tINNER JOIN M4SSP_H_CONTRATOS co WITH (NOLOCK) ON\n\t\t\t\tco.ID_ORGANIZATION = m4role.ID_ORGANIZATION\n\t\t\t\tAND co.SSP_ID_HR = m4role.SCO_ID_HR\n\t\t\t\tAND co.SSP_OR_HR_PERIOD = m4role.SCO_OR_HR_PER\n\t\t\t\tAND co.SSP_FEC_INI_CONTRA <= T.FECHA\n\t\t\t\tAND co.SSP_FEC_FIN_CONTRA >= T.FECHA\n\t\t\tINNER JOIN M4SSP_CONTRATO_INT cz WITH (NOLOCK) ON\n\t\t\t\tcz.SSP_ID_CONT_INTERN = co.SSP_ID_CONT_INTERN\n\t\t\tINNER JOIN M4SSP_H_CENT_COS ceco WITH (NOLOCK) ON\n\t\t\t\tm4role.ID_ORGANIZATION = ceco.ID_ORGANIZATION\n\t\t\t\tAND m4role.SCO_ID_HR = ceco.SCO_ID_HR\n\t\t\t\tAND m4role.SCO_OR_HR_ROLE = ceco.SCO_OR_HR_ROLE\n\t\t\t\tAND ceco.SSP_FEC_INICIO <= T.FECHA\n\t\t\t\tAND ceco.SSP_FEC_FIN >= T.FECHA\n\t\t\tINNER JOIN M4CCL_H_CENT_COS hceco WITH (NOLOCK) ON\n\t\t\t\tceco.ID_ORGANIZATION = hceco.ID_ORGANIZATION\n\t\t\t\tAND ceco.SCO_ID_HR = hceco.SCO_ID_HR\n\t\t\t\tAND ceco.SCO_OR_HR_ROLE = hceco.SCO_OR_HR_ROLE\n\t\t\t\tAND ceco.SSP_FEC_INICIO = hceco.SSP_FEC_INICIO\n\t\t\tLEFT JOIN M4SSP_CONTRATO_INT AS TCI WITH (NOLOCK)\t\t\n\t\t\t\t on TCI.SSP_ID_CONT_INTERN = co.SSP_ID_CONT_INTERN\n\t\t\tLEFT JOIN M4GLB_HISTORICOS_ROLE AS hrole WITH (NOLOCK) ON\n\t\t\t\throle.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND hrole.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND hrole.SCO_OR_HR_ROLE = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND hrole.DT_START <= T.FECHA\n\t\t\t\tAND hrole.DT_END >= T.FECHA\n\t\t\t\tAND hrole.CCL_ID_CAMPO IN ( 'EMPR_FUNC' ,\n\t\t\t\t'EMPR_FUNC2')\n\t\t\tLEFT JOIN M4SSP_H_CATEGORIA cate WITH (NOLOCK) ON\n\t\t\t\tcate.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND cate.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND cate.SCO_OR_HR_ROLE = m4role.SCO_OR_HR_ROLE\n\t\t\t\tAND cate.SSP_FEC_INICIO <= T.FECHA\n\t\t\t\tAND cate.SSP_FEC_FIN >= T.FECHA\n\t\t\tLEFT JOIN M4CCL_H_HOR_TM_PAR AS HTTH WITH (NOLOCK) ON\n\t\t\t\tHTTH.ID_ORGANIZATION = m4role.ID_ORGANIZATION\n\t\t\t\tAND HTTH.SCO_ID_HR = m4hrpos.SCO_ID_HR\n\t\t\t\tAND HTTH.SCO_OR_HR_ROLE = m4role.SCO_OR_HR_ROLE\n\t\t\t\tAND HTTH.DT_START <= T.FECHA\n\t\t\t\tAND HTTH.DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4SSP_H_PORC_GLEGA AS GL WITH (NOLOCK) ON\n\t\t\t\tGL.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND GL.STD_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND GL.STD_OR_HR_PERIOD = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND GL.SSP_DT_START <= T.FECHA\n\t\t\t\tAND GL.SSP_DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4SSP_H_PORC_JORN AS JP WITH (NOLOCK) ON\n\t\t\t\tJP.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND JP.SSP_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND JP.SSP_OR_HR_PERIOD = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND JP.SSP_FEC_INI_JORN_P <= T.FECHA\n\t\t\t\tAND JP.SSP_FEC_FIN_JORN_P >= T.FECHA\n\t\t\tLEFT JOIN M4SCO_HR_THEOR_TIM TUI WITH (NOLOCK) ON\n\t\t\t\tTUI.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND TUI.STD_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND TUI.STD_OR_HR_PERIOD = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND TUI.DT_START <= T.FECHA\n\t\t\t\tAND TUI.DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4SCO_H_HR_TEAMS EQ WITH (NOLOCK) ON\n\t\t\t\tEQ.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND EQ.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND EQ.SCO_OR_ROLE = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND EQ.SCO_DT_START <= T.FECHA\n\t\t\t\tAND EQ.SCO_DT_END >= T.FECHA\n\t\t\t\tAND EQ.CCL_ID_LEG_ENT = legalEntityHR.STD_ID_LEG_ENT\n\t\t\tLEFT JOIN M4CCL_H_GT_MR_TEAM TUT WITH (NOLOCK) ON\n\t\t\t\tTUT.ID_ORGANIZATION = EQ.ID_ORGANIZATION\n\t\t\t\tAND TUT.CCL_ID_TEAM = EQ.SCO_ID_TEAM\n\t\t\t\tAND TUT.CCL_DT_START <= T.FECHA\n\t\t\t\tAND TUT.CCL_DT_END >= T.FECHA\n\t\t\t\tAND TUT.CCL_ID_LEG_ENT = legalEntityHR.STD_ID_LEG_ENT\n\t\t\tLEFT JOIN #TEMPCTURNO AS TPT WITH (NOLOCK) ON\n\t\t\t\tTPT.SCO_ID_REF_MOD = isnull(TUI.SCO_ID_REF_MOD ,\n\t\t\t\tTUT.CCL_ID_MOD_REF)\n\t\t\tLEFT JOIN M4CCL_VW_EMP_AR_EQUI M4AR WITH (NOLOCK) ON\n\t\t\t\tM4AR.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND M4AR.CCL_ID_LEG_ENT = legalEntityHR.STD_ID_LEG_ENT\n\t\t\t\tAND M4AR.CCL_ID_TEAM = EQ.SCO_ID_TEAM\n\t\t\tLEFT JOIN #EMPRESA_GRUPO_DIVISION_SECCION EGDS WITH (NOLOCK) ON\n\t\t\t\tEGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION = CAST\n\t\t\t\t(\n\t\t\t\t\tCASE\n\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06')\n\t\t\t\t\tAND hrole.CCL_ID_CAMPO = 'EMPR_FUNC2' THEN hrole.CCL_CADENA\n\t\t\t\t\tELSE\n\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06') THEN CAST(SUBSTRING(hrole.CCL_CADENA, 3, 3) AS INT)\n\t\t\t\t\t\tELSE\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\tWHEN (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)) = 9\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_DIVISION, '.', '') = 13\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_SECCION, '.', '')= 18 THEN 37\n\t\t\t\t\t\t\tELSE (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT))\n\t\t\t\t\t\tEND\n\t\t\t\t\tEND\n\t\t\t\tEND AS VARCHAR (3))+\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL' THEN CAST(ceco.CCL_CENTRO_COSTE_ORIGEN AS VARCHAR(10))\n\t\t\t\t\tELSE CAST(hceco.CCL_COD_DIV_SECC AS VARCHAR (10))\n\t\t\t\tEND\n\t\t\tLEFT JOIN #listaUOs uo WITH (NOLOCK) ON\n\t\t\t\tm4pos.SCO_ID_WORK_UNIT = uo.STD_ID_WU_CHILD\n\t\t\t\tAND uo.STD_DT_START <= T.FECHA\n\t\t\t\tAND uo.STD_DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4GLB_H_HR_TEAMS_ORG EXCEP_EMPL WITH (NOLOCK) ON\n\t\t\t\tEXCEP_EMPL.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND EXCEP_EMPL.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND EXCEP_EMPL.SCO_OR_ROLE = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND EXCEP_EMPL.SCO_DT_START <= T.FECHA\n\t\t\t\tAND EXCEP_EMPL.SCO_DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4CCL_H_GA_EM_EQUI AS EMPRESA_EQUIPO_AGOP WITH (NOLOCK) ON\n\t\t\t\tEMPRESA_EQUIPO_AGOP.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND EMPRESA_EQUIPO_AGOP.CCL_ID_LEG_ENT = COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)\n\t\t\t\tAND EQ.SCO_ID_TEAM = EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM\n\t\t\t\tAND EMPRESA_EQUIPO_AGOP.CCL_DT_START <= T.FECHA\n\t\t\t\tAND EMPRESA_EQUIPO_AGOP.CCL_DT_END >= T.FECHA\n\t\t\tLEFT JOIN STD_WORK_UNIT AS W WITH (NOLOCK) ON\n\t\t\t\tW.STD_ID_WORK_UNIT = m4pos.SCO_ID_WORK_UNIT\n\t\t\tLEFT JOIN STD_HR_ACAD_BACKGR HNIV WITH (NOLOCK) ON\n\t\t\t\tHNIV.STD_ID_HR = pe.STD_ID_PERSON\n\t\t\t\tAND HNIV.STD_DT_START <= T.FECHA\n\t\t\tLEFT JOIN STD_LU_EDU_DIPLOMA DIP WITH (NOLOCK) ON\n\t\t\t\tDIP.STD_ID_DIPLOMA = HNIV.STD_ID_DIPLOMA\n\t\t\tLEFT JOIN STD_LU_EDU_DIP_LEV LEV WITH (NOLOCK) ON\n\t\t\t\tLEV.STD_ID_DIP_LEVEL = DIP.STD_ID_DIP_LEVEL\n\t\t\tLEFT JOIN STD_HR_NAT NACIONALIDAD_SECUNDARIA WITH (NOLOCK) ON\n\t\t\t\tpe.STD_ID_PERSON = NACIONALIDAD_SECUNDARIA.STD_ID_HR\n\t\t\t\tAND NACIONALIDAD_SECUNDARIA.DT_START <= T.FECHA\n\t\t\t\tAND NACIONALIDAD_SECUNDARIA.DT_END >= T.FECHA\n\t\t\t\tAND NACIONALIDAD_SECUNDARIA.STD_PRIMARY_COUNTR = 0\n\t\t\t\t   LEFT JOIN M4CCL_ORIGEN_DATOS_SINCRO AS ODS WITH (NOLOCK) \t\t\n\t\t\t\t\t\tON ODS.CCL_ID_ORIGEN = periodo.CCL_ID_ORIGEN\t\t\n\t\t\n\t\t\t\t\tLEFT JOIN STD_COUNTRY AS MERCADO WITH (NOLOCK) \t\t\n\t\t\t\t\t\tON MERCADO.CSP_ID_COUNTRY = ODS.CCL_ID_PAIS\n\t\t\tWHERE\n\t\t\t\t(REPLACE(periodo.STD_ID_HR_TYPE, '.', '')= '01'\n\t\t\t\tOR REPLACE(periodo.STD_ID_HR_TYPE, '.', '')= '06'\n\t\t\t\tOR REPLACE(periodo.STD_ID_HR_TYPE, '.', '')= '02')\n\t\t\t\tAND\n\t\t\t\t(CASE\n\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06')\n\t\t\t\t\tAND hrole.CCL_ID_CAMPO = 'EMPR_FUNC2' THEN hrole.CCL_CADENA\n\t\t\t\t\tELSE\n\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06') THEN CAST(SUBSTRING(hrole.CCL_CADENA, 3, 3) AS INT)\n\t\t\t\t\t\tELSE\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\tWHEN (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)) = 9\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_DIVISION, '.', '') = 13\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_SECCION, '.', '')= 18 THEN 37\n\t\t\t\t\t\t\tELSE (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT))\n\t\t\t\t\t\tEND\n\t\t\t\t\tEND\n\t\t\t\tEND) IN (SELECT ID_EMPRESA FROM @empresas)\n\t\t\t\tand 1 = (case when legalEntityHR.STD_ID_LEG_ENT=20 AND W.STD_ID_WU_TYPE <> 'TMPL' then 0 else 1 end )\n\t\t\t\t\n\t\t\tGROUP BY\n\t\t\tlegalEntityHR.STD_ID_LEG_ENT,\n\t\t\tW.STD_ID_WU_TYPE,\n\t\t\thceco.CCL_COD_DIV_SECC,\n\t\t\tEGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\t\t\t\tT.FECHA ,\n\t\t\t\tCAST(periodo.SSP_FEC_ANTIGUEDAD AS DATE) ,\n\t\t\t\t(DATEDIFF(MONTH,\n\t\t\t\tperiodo.SSP_FEC_ANTIGUEDAD,\n\t\t\t\tT.FECHA)) ,\n\t\t\t\tlegalEntityHR.DT_START ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN co.SSP_FEC_FIN_PV_CON IS NULL\n\t\t\t\t\tOR co.SSP_FEC_FIN_PV_CON < co.SSP_FEC_INI_CONTRA\n\t\t\t\t\tOR co.SSP_FEC_FIN_PV_CON < T.FECHA THEN CAST(co.SSP_FEC_FIN_CONTRA AS DATE)\n\t\t\t\t\tELSE CAST(\n\t\t\t\t\t(\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN co.SSP_FEC_FIN_PV_CON < co.SSP_FEC_FIN_CONTRA THEN co.SSP_FEC_FIN_PV_CON\n\t\t\t\t\t\tELSE co.SSP_FEC_FIN_CONTRA\n\t\t\t\t\tEND) AS DATE)\n\t\t\t\tEND ,\n\t\t\t\tm4pos.SCO_ID_JOB_CODE ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06')\n\t\t\t\t\tAND hrole.CCL_ID_CAMPO = 'EMPR_FUNC2' THEN hrole.CCL_CADENA\n\t\t\t\t\tELSE\n\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06') THEN CAST(SUBSTRING(hrole.CCL_CADENA, 3, 3) AS INT)\n\t\t\t\t\t\tELSE\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\tWHEN (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)) = 9\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_DIVISION, '.', '') = 13\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_SECCION, '.', '')= 18 THEN 37\n\t\t\t\t\t\t\tELSE (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT))\n\t\t\t\t\t\tEND\n\t\t\t\t\tEND\n\t\t\t\tEND ,\n\t\t\t\tperiodo.STD_ID_EXTERN_ORG ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN pe.STD_ID_GENDER = '1' THEN 'H'\n\t\t\t\t\tELSE 'M'\n\t\t\t\tEND ,\n\t\t\t\tDATEDIFF(YEAR,\n\t\t\t\tpe.STD_DT_BIRTH,\n\t\t\t\tT.FECHA) ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.CCL_TIEMPO_PARCIAL,\n\t\t\t\t\t'1') = '1' THEN 2\n\t\t\t\t\tELSE 1\n\t\t\t\tEND ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.CCL_TIEMPO_PARCIAL,\n\t\t\t\t\t'1') = '1' THEN 'TIEMPO PARCIAL'\n\t\t\t\t\tELSE 'TIEMPO COMPLETO'\n\t\t\t\tEND ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.SSP_NO_DEFINIDO,\n\t\t\t\t\t'S') = 'S' THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.SSP_NO_DEFINIDO,\n\t\t\t\t\t'S') = 'S' THEN 'INDEFINIDO'\n\t\t\t\t\tELSE 'EVENTUAL'\n\t\t\t\tEND ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL'\n\t\t\t\t\tAND ceco.CCL_CENTRO_COSTE_ORIGEN <> '8525' THEN 2\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL'\n\t\t\t\t\tAND ceco.CCL_CENTRO_COSTE_ORIGEN = '8525' THEN 1\n\t\t\t\t\tWHEN EGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION IS NOT NULL THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND ,\n\t\t\t\tlt.STD_ID_WORK_LOCAT ,\n\t\t\t\tpe.STD_ID_PERSON ,\n\t\t\t\tperiodo.CCL_ID_PERSON ,\n\t\t\t\tCAST(pe.STD_ID_PERSON AS VARCHAR) + '#' + CAST(periodo.CCL_ID_PERSON AS VARCHAR) ,\n\t\t\t\tperiodo.STD_ID_HR_TYPE ,\n\t\t\t\tCOALESCE(GL.SSP_PORC_GLEGAL,\n\t\t\t\t0) ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(GL.SSP_PORC_GLEGAL,\n\t\t\t\t\t0)>0 THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND ,\n\t\t\t\thceco.CCL_COD_DIV_SECC ,\n\t\t\t\tcate.SSP_ID_CATEGORIA ,\n\t\t\t\tHTTH.CCL_ID_TP_HORA + '#' +(CAST(HTTH.CCL_HOR_TM_PARC AS VARCHAR)) ,\n\t\t\t\tM4AR.CCL_ID_AR_ALM ,\n\t\t\t\tTUI.SCO_ID_REF_MOD ,\n\t\t\t\tEQ.SCO_ID_TEAM ,\n\t\t\t\tEQ.SCO_ID_TEAM_ROLE ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,\n\t\t\t\t\tEMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) IS NULL\n\t\t\t\t\tOR COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT) IS NULL\n\t\t\t\t\tOR EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM IS NULL THEN '-1'\n\t\t\t\t\tELSE COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,\n\t\t\t\t\tEMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) + '#' + COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)\n\t\t\t\tEND ,\n\t\t\t\tTUT.CCL_ID_MOD_REF ,\n\t\t\t\tTPT.IDDimensionTipoTurno ,\n\t\t\t\tuo.STD_ID_WU_CHILD ,\n\t\t\t\tW.STD_ID_WORK_UNIT ,\n\t\t\t\tperiodo.ID_ORGANIZATION ,\n\t\t\t\tceco.CCL_CENTRO_COSTE_ORIGEN ,\n\t\t\t\tJP.SSP_VALOR_COEF_T_P ,\n\t\t\t\tco.SSP_MOTIVO_CONTRATO ,\n\t\t\t    TCI.SSP_TIPO_CONTRATACION,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.STD_DT_END = T.FECHA THEN 1\n\t\t\t\t\tELSE 0\n\t\t\t\tEND ,\n\t\t\t\tCCL_ID_UNIDAD_NEG\n\t\t\t\t,CASE WHEN periodo.STD_DT_END = T.FECHA\t\t\n\t\t\t\t\tTHEN CAST(MERCADO.CSP_ID_COUNTRY AS VARCHAR)+'#'+CAST(periodo.STD_ID_HRP_END_REA AS VARCHAR)\t\t\n\t\t\t\t\tELSE NULL\t\t\n\t\t\t\t\tEND \n\t\t\t\t\t    ,CASE WHEN periodo.STD_DT_END = T.FECHA\t\t\n\t\t\t\t\t\t  THEN CAST(periodo.ID_ORGANIZATION AS VARCHAR) + '#' + CAST(periodo.STD_ID_HRP_END_REA AS VARCHAR)\t\t\n\t\t\t\t\t\t  ELSE NULL\t\t\n\t\t\t\t\t\t  END \n\t\t\t\t\t\t    ,CASE WHEN periodo.STD_DT_START = T.FECHA\t\t\n\t\t\t\t\t\t\t  THEN periodo.STD_ID_HRP_SRT_REA\t\t\n\t\t\t\t\t\t\t  ELSE NULL\t\t\n\t\t\t\t\t\t\t  END \n\t\t\t\t ) datos\n\t\tLEFT JOIN M4SCO_H_HR_LEGENT AS empresa_anterior WITH (NOLOCK) ON\n\t\t\tempresa_anterior.STD_ID_HR = datos.ID_PERSONA\n\t\t\tAND DATEADD(DAY, -1, datos.ID_FECHA) BETWEEN empresa_anterior.DT_START AND empresa_anterior.DT_END\n\t\t\tAND empresa_anterior.ID_ORGANIZATION = datos.ID_ORGANIZATION\n\t\t\tAND empresa_anterior.STD_ID_LEG_ENT NOT IN ('NZ_ZARA',\n\t\t\t'SI001',\n\t\t\t'SI002')\n\t\tLEFT JOIN (\n\t\t\t\t\t-- AUSENCIAS GHRS\n\t\t\tSELECT ABS_TA.ID_ORGANIZATION,\n\t\t\t\tABS_TA.CCL_ID_HR,\n\t\t\t\tABS_TA.DT_START,\n\t\t\t\tABS_TA.DT_END,\n\t\t\t\tCAST(ABS_TA. CCL_ID_ABSENCE AS VARCHAR) AS CCL_ID_ABSENCE,\n\t\t\t\t'TA' AS ORIGEN_INCIDENCIA\n\t\t\t\t\t, LEGALENTITYHR.STD_ID_LEG_ENT\n\t\t\t\tFROM M4CCL_HR_ABSENCES_TA ABS_TA WITH(NOLOCK)\n\t\t\t\t-- Se añade el cruce con M4SCO_H_HR_LEGENT para obtener la empresa\n\t\t\t\tINNER JOIN M4SCO_H_HR_LEGENT AS LEGALENTITYHR WITH (NOLOCK) \n\t\t\t\t  ON LEGALENTITYHR.STD_ID_HR = ABS_TA.CCL_ID_HR\n\t\t\t\t  AND LEGALENTITYHR.STD_OR_HR_PERIOD = ABS_TA.CCL_OR_HR_PERIOD\n\t\t\t\t  AND LEGALENTITYHR.ID_ORGANIZATION = ABS_TA.ID_ORGANIZATION\n\t\t\t\t  AND ABS_TA.DT_START BETWEEN LEGALENTITYHR.DT_START AND LEGALENTITYHR.DT_END\n\t\t\t\tWHERE\n\t\t\t\t\t(\n\t\t\t\t\tABS_TA.ID_ORGANIZATION IN ('NL')\n\t\t\t\t\t---- Se añade el filtro para la organización 0001 y la empresa. En la empresa se irán añadiendo códigos de empresa según se vayan migrando.\n\t\t\t\t\tOR \n\t\t\t\t\t(ABS_TA.ID_ORGANIZATION IN ('0001') AND LEGALENTITYHR.STD_ID_LEG_ENT IN (SELECT ID_EMPRESA FROM @empresas emp ))\n\t\t\t\t\t)\n\t\t\t\t\tAND ABS_TA.DT_START <= @FechaFin\n\t\t\t\t\tAND ABS_TA.DT_END >= @FechaIni\n\t\t\t\tGROUP BY\n\t\t\t\t\tABS_TA.ID_ORGANIZATION,\n\t\t\t\t\tABS_TA.CCL_ID_HR,\n\t\t\t\t\tABS_TA.DT_START,\n\t\t\t\t\tABS_TA.DT_END,\n\t\t\t\t\tABS_TA.CCL_ID_ABSENCE,\n\t\t\t\t\tLEGALENTITYHR.STD_ID_LEG_ENT\n\n\t\t\tUNION\n\t\t\t-- INCIDENCIAS GHRS\n\t\t\tSELECT INC_TA.ID_ORGANIZATION,\n\t\t\t\tINC_TA.CCL_ID_HR,\n\t\t\t\tINC_TA.DT_START,\n\t\t\t\tINC_TA.DT_END,\n\t\t\t\tCAST(INC_TA.CCL_ID_INCIDENCIA AS VARCHAR) AS CCL_ID_ABSENCE,\n\t\t\t\t--H.SCO_ID_INCIDENCE,\n\t\t\t\t'TA' AS ORIGEN_INCIDENCIA\n\t\t\t\t, LEGALENTITYHR.STD_ID_LEG_ENT\n\t\t\t\tFROM M4SEDES_T_HR_INCIDENCIAS_TA AS INC_TA WITH(NOLOCK)\n\t\t\t\tINNER JOIN M4CCL_INCIDENCIAS_TEOR_TA AS PRES_TA WITH(NOLOCK)\n\t\t\t\tON PRES_TA.ID_ORGANIZATION = INC_TA.ID_ORGANIZATION\n\t\t\t\tAND PRES_TA.CCL_ID_INCIDENCIA = INC_TA.CCL_ID_INCIDENCIA\n\t\t\t\tAND PRES_TA.CCL_ID_WL = 'L'\n\t\t\t\t-- Se añade el cruce con M4SCO_H_HR_LEGENT para obtener la empresa\n\t\t\t\tINNER JOIN M4SCO_H_HR_LEGENT AS LEGALENTITYHR WITH (NOLOCK) \n\t\t\t\t  ON LEGALENTITYHR.STD_ID_HR = INC_TA.CCL_ID_HR\n\t\t\t\t  AND LEGALENTITYHR.STD_OR_HR_PERIOD = INC_TA.CCL_OR_HR_PERIOD\n\t\t\t\t  AND LEGALENTITYHR.ID_ORGANIZATION = INC_TA.ID_ORGANIZATION\n\t\t\t\t  AND INC_TA.DT_START BETWEEN LEGALENTITYHR.DT_START AND LEGALENTITYHR.DT_END\n\t\t\t\tWHERE\n\t\t\t\t\t(\n\t\t\t\t\tINC_TA.ID_ORGANIZATION IN ('NL')\n\t\t\t\t\t---- Se añade el filtro para la organización 0001 y la empresa. En la empresa se irán añadiendo códigos de empresa según se vayan migrando.\n\t\t\t\t\tOR \n\t\t\t\t\t(INC_TA.ID_ORGANIZATION IN ('0001') AND LEGALENTITYHR.STD_ID_LEG_ENT IN (SELECT ID_EMPRESA FROM @empresas emp ))\n\t\t\t\t\t)\n\t\t\t\t\tAND INC_TA.DT_START <= @FechaFin\n\t\t\t\t\tAND INC_TA.DT_END >= @FechaIni\n\t\t\t\tGROUP BY\n\t\t\t\t\tINC_TA.ID_ORGANIZATION,\n\t\t\t\t\tINC_TA.CCL_ID_HR,\n\t\t\t\t\tINC_TA.DT_START,\n\t\t\t\t\tINC_TA.DT_END,\n\t\t\t\t\tINC_TA.CCL_ID_INCIDENCIA,\n\t\t\t\t\tLEGALENTITYHR.STD_ID_LEG_ENT\n\t\t\t\t) ausencias ON\n\t\t\tausencias.CCL_ID_HR = ID_PERSONA\n\t\t\tAND ausencias.ID_ORGANIZATION = datos.ID_ORGANIZATION\n\t\t\tAND ID_FECHA BETWEEN ausencias.DT_START AND ausencias.DT_END\n\n\t\tGROUP BY\n\t\t\tID_FECHA,\n\t\t\tausencias.CCL_ID_HR,\n\t\t\tCCL_ID_ABSENCE,\n\t\t\tFECHA_ANTIGUEDAD,\n\t\t\tdatos.ID_ORGANIZATION,\n\t\t\tANTIGUEDAD,\n\t\t\tFECHA_ALTA_EMPRESA,\n\t\t\tFECHA_VENCIMIENTO,\n\t\t\tID_PUESTO,\n\t\t\tID_PUESTO_HR_TYPE,\n\t\t\tID_EMPRESA,\n\t\t\tID_EMPRESA_EXTERNA,\n\t\t\tGENERO,\n\t\t\tEDAD,\n\t\t\tID_TIPO_JORNADA,\n\t\t\tTIPO_JORNADA,\n\t\t\tID_TIPO_CONTRATO,\n\t\t\tTIPO_CONTRATO,\n\t\t\tID_ESTRUCTURA_ALMACEN,\n\t\t\tID_LUGAR_DE_TRABAJO,\n\t\t\tID_PERSONA,\n\t\t\tID_LOCAL,\n\t\t\tID_PERSONA_LOCAL,\n\t\t\tCOUNT_RAW,\n\t\t\tID_TIPO_PERSONA,\n\t\t\tPORC_REDUCCION_JORNADA,\n\t\t\tID_REDUCCION_JORNADA,\n\t\t\tDIVISION_SECCION,\n\t\t\tID_CATEGORIA,\n\t\t\tID_HORAS_CONTRATADAS,\n\t\t\tID_AREA_ALMACEN,\n\t\t\tdatos.ID_ORGANIZATION + '#' + ID_AREA_ALMACEN,\n\t\t\tMOD_REF_INDIVIDUAL,\n\t\t\tID_EQUIPO,\n\t\t\tID_ROL_EQUIPO,\n\t\t\tID_EQ_ORG,\n\t\t\tMOD_REF_EQUIPO,\n\t\t\tIdInternalTipoTurno,\n\t\t\tUni_org,\n\t\t\tID_UNIDAD_ORGANIZATIVA,\n\t\t\tID_NIVEL_ESTUDIOS,\n\t\t\tID_PAIS_META4_NACIONALIDAD_SECUNDARIA ,\n\t\t\tCCL_CENTRO_COSTE_ORIGEN ,\n\t\t\tPORCENTAJE_JORNADA_PARCIAL ,\n\t\t\tBAJA ,\n\t\t\tCCL_ID_UNIDAD_NEG,\n\t\t\tausencias.ORIGEN_INCIDENCIA,\n\t\t\tdatos.ID_MOTIVO_ALTA,\n\t\t\tdatos.ID_TIPO_CONTRATACION,\n\t\t\tdatos.MOTIVO_CONTRATACION,\n\t\t\tdatos.ID_MOTIVO_BAJA,\n\t\t\tdatos.ID_AGRUPACION_BAJA\n\n\n\nDROP TABLE #TEMPCTURNO;\nDROP TABLE #listaUOs;\nDROP TABLE #TEMPCALENDARIO;\nDROP TABLE #EMPRESA_GRUPO_DIVISION_SECCION;",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @FechaIni DATE = '2022-09-21';\nDECLARE @FechaFin DATE = '2022-09-22';\n\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\nSELECT\n\tDENSE_RANK() OVER (\n\tORDER BY SCO_ID_REF_MOD) AS IDDimensionTipoTurno,\n\tSCO_ID_REF_MOD,\n\tNM_REF_MODESP,\n\tMd.CCL_ID_TP_TURNO,\n\tMT.CCL_NM_TP_TURNESP INTO\n\t\t#TEMPCTURNO\n\tFROM\n\t\tM4SCO_REF_MOD Md WITH (NOLOCK)\n\tINNER JOIN M4CCL_X_GA_TP_TUR MT WITH (NOLOCK) ON\n\t\tMd.CCL_ID_TP_TURNO = MT.CCL_ID_TP_TURNO;\n\nCREATE\n\tCLUSTERED INDEX IDX_CTEMPCTURNO ON\n\t#TEMPCTURNO(SCO_ID_REF_MOD);\n\nWITH listaUOs (nivel,\nSTD_ID_WU_CHILD,\nSTD_ID_WU_PARENT,\norden,\nSTD_DT_START,\nSTD_DT_END) AS (\nSELECT\n\t1,\n\tSTD_ID_WU_CHILD,\n\tSTD_ID_WU_PARENT,\n\tCAST(STD_ID_WU_CHILD AS VARCHAR(2000)),\n\tSTD_DT_START,\n\tSTD_DT_END\nFROM\n\tSTD_REL_WORK_UNIT WITH (NOLOCK)\nWHERE\n\tCOALESCE(STD_ID_WU_CHILD,\n\t'') IN ('1869')\nUNION ALL\nSELECT\n\tnivel + 1,\n\tp.STD_ID_WU_CHILD,\n\tp.STD_ID_WU_PARENT,\n\tCAST((orden + p.STD_ID_WU_CHILD) AS VARCHAR(2000)),\n\tp.STD_DT_START,\n\tp.STD_DT_END\nFROM\n\tlistaUOs l,\n\tSTD_REL_WORK_UNIT p WITH (NOLOCK)\nWHERE\n\tl.STD_ID_WU_CHILD = p.STD_ID_WU_PARENT ) SELECT\n\t* INTO\n\t\t#listaUOs\n\tFROM\n\t\tlistaUOs WITH (nolock);\n\nWITH TEMPCALENDARIO (FECHA) AS (\nSELECT\n\tCAST(@FechaIni AS DATE) AS FECHA\nUNION ALL\nSELECT\n\tDATEADD(DAY,\n\t1,\n\tFECHA)\nFROM\n\tTEMPCALENDARIO\nWHERE\n\tDATEADD(DAY,\n\t1,\n\tFECHA) < CAST(@FechaFin AS DATE) ) SELECT\n\t* INTO\n\t\t#TEMPCALENDARIO\n\tFROM\n\t\tTEMPCALENDARIO WITH (nolock);\n\nWITH EMPRESA_GRUPO_DIVISION_SECCION (ID_EMPRESA_GRUPO_DIVISION_SECCION ,\nID_EMPRESA_GRUPO ,\nNOMBRE_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION ,\nNOM_DIVSEC ) AS (\nSELECT\n\tID_DIVSEC,\n\tID_EMPRESA_GRUPO,\n\tEMPRESA_GRUPO,\n\tDIVISION,\n\tSECCION,\n\tNOM_DIVSEC\nFROM\n\t(\n\tSELECT\n\t\t64 AS ID_EMPRESA_GRUPO,\n\t\t'INDIPUNT' AS EMPRESA_GRUPO,\n\t\t91 AS DIVISION,\n\t\t15 AS SECCION,\n\t\t'649115' AS ID_DIVSEC,\n\t\t'INDIPUNT OPERARIOS [9115]' AS NOM_DIVSEC\n\t\tUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'991304' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [1304]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t5 AS SECCION,\n\t\t'991305' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [1305]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'998525' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'998537' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [8537]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t41 AS ID_EMPRESA_GRUPO,\n\t\t'PULL & BEAR LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'418525' AS ID_DIVSEC,\n\t\t'PULL & BEAR LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t41 AS ID_EMPRESA_GRUPO,\n\t\t'PULL & BEAR LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'418537' AS ID_DIVSEC,\n\t\t'PULL & BEAR LOGISTICA [8537]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t03 AS DIVISION,\n\t\t17 AS SECCION,\n\t\t'1890317' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [0317]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t03 AS SECCION,\n\t\t'1891303' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [1303]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'1898525' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t5 AS DIVISION,\n\t\t6 AS SECCION,\n\t\t'370506' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [0506]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t5 AS SECCION,\n\t\t'371305' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [1305]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t28 AS DIVISION,\n\t\t4 AS SECCION,\n\t\t'372804' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [2804]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'378525' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'378537' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [8537]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t9 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t18 AS SECCION,\n\t\t'91318' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [1318]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t32 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA HOME LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'328525' AS ID_DIVSEC,\n\t\t'ZARA HOME LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'431304' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [1304]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t05 AS SECCION,\n\t\t'431305' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [1305]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'438525' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'438537' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [8537]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'141300' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1300]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t12 AS SECCION,\n\t\t'141312' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1312]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t09 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'140900' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1312]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'268525' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t26 AS SECCION,\n\t\t'268526' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8526]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t27 AS SECCION,\n\t\t'268527' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8527]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t28 AS SECCION,\n\t\t'268528' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8528]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t29 AS SECCION,\n\t\t'268529' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8529]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'261300' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [1300]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t63 AS DIVISION,\n\t\t08 AS SECCION,\n\t\t'266308' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [6308]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t12 AS ID_EMPRESA_GRUPO,\n\t\t'LEFTIES LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t19 AS SECCION,\n\t\t'121319' AS ID_DIVSEC,\n\t\t'LEFTIES LOGISTICA [1319]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t23 AS ID_EMPRESA_GRUPO,\n\t\t'OYSHO LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t0 AS SECCION,\n\t\t'231300' AS ID_DIVSEC,\n\t\t'OYSHO LOGISTICA [1300]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t01 AS SECCION,\n\t\t'611301' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [1301]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'611304' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [1304]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'618525' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t357 AS ID_EMPRESA_GRUPO,\n\t\t'TORDERA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'3578525' AS ID_DIVSEC,\n\t\t'TORDERA LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t68 AS ID_EMPRESA_GRUPO,\n\t\t'FASHION LOGISTICS FORWARDERS' AS EMPRESA_GRUPO,\n\t\t00 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'680000' AS ID_DIVSEC,\n\t\t'FASHION LOGISTICS FORWARDERS []' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t330 AS ID_EMPRESA_GRUPO,\n\t\t'INDITEX LOGISTICA' AS EMPRESA_GRUPO,\n\t\t00 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'3300000' AS ID_DIVSEC,\n\t\t'INDITEX LOGISTICA []' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t51 AS DIVISION,\n\t\t73 AS SECCION,\n\t\t'205173' AS ID_DIVSEC,\n\t\t'TEMPE [205173]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t30 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'203000' AS ID_DIVSEC,\n\t\t'TEMPE [203000]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t51 AS DIVISION,\n\t\t34 AS SECCION,\n\t\t'205134' AS ID_DIVSEC,\n\t\t'TEMPE [205134]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t50 AS DIVISION,\n\t\t41 AS SECCION,\n\t\t'205041' AS ID_DIVSEC,\n\t\t'TEMPE [205041]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t398 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA CABANILLAS' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'3988525' AS ID_DIVSEC,\n\t\t'ALMACEN PAQUETE [8525]' AS NOM_DIVSEC ) Q_UNION ) SELECT\n\t* INTO\n\t\t#EMPRESA_GRUPO_DIVISION_SECCION\n\tFROM\n\t\tEMPRESA_GRUPO_DIVISION_SECCION WITH (nolock) \n\t\t\nSELECT\n\t\t\tCCL_CENTRO_COSTE_ORIGEN,\n\t\t\tID_FECHA,\n\t\t\tCASE\n\t\t\t\tWHEN ausencias.CCL_ID_HR IS NOT NULL THEN 1\n\t\t\t\tELSE 0\n\t\t\tEND AS AUSENCIA_PROGRAMADA,\n\t\t\tCASE ausencias.ORIGEN_INCIDENCIA\n\t\t\t\tWHEN 'TA' THEN 'TA' + '#' + datos.ID_ORGANIZATION + '#' + CAST(CCL_ID_ABSENCE AS VARCHAR) \n\t\t\t\tELSE datos.ID_ORGANIZATION + '#' + CAST(CCL_ID_ABSENCE AS VARCHAR) \n\t\t\t\tEND AS ID_ORG_AUSENCIA,\n\t\t\tFECHA_ANTIGUEDAD,\n\t\t\tdatos.ID_ORGANIZATION,\n\t\t\tANTIGUEDAD,\n\t\t\tFECHA_ALTA_EMPRESA,\n\t\t\tFECHA_VENCIMIENTO,\n\t\t\tID_PUESTO,\n\t\t\tID_PUESTO_HR_TYPE,\n\t\t\tID_EMPRESA,\n\t\t\tID_EMPRESA_EXTERNA,\n\t\t\tGENERO,\n\t\t\tEDAD,\n\t\t\tID_TIPO_JORNADA,\n\t\t\tTIPO_JORNADA,\n\t\t\tID_TIPO_CONTRATO,\n\t\t\tTIPO_CONTRATO,\n\t\t\tID_ESTRUCTURA_ALMACEN,\n\t\t\tID_LUGAR_DE_TRABAJO,\n\t\t\tID_PERSONA,\n\t\t\tID_LOCAL,\n\t\t\tID_PERSONA_LOCAL,\n\t\t\tCOUNT_RAW,\n\t\t\tID_TIPO_PERSONA,\n\t\t\tPORC_REDUCCION_JORNADA  AS PORCENTAJE_REDUCCION_JORNADA,\n\t\t\tCAST(ROUND(PORC_REDUCCION_JORNADA, 0, 1) AS INTEGER) AS TRAMO_PORC_REDUCCION,\n\t\t\tID_REDUCCION_JORNADA,\n\t\t\tDIVISION_SECCION,\n\t\t\tID_CATEGORIA,\n\t\t\tID_HORAS_CONTRATADAS,\n\t\t\tdatos.ID_ORGANIZATION + '#' + ID_AREA_ALMACEN AS ID_ORG_ALM,\n\t\t\tID_AREA_ALMACEN,\n\t\t\tMOD_REF_INDIVIDUAL,\n\t\t\tID_EQUIPO,\n\t\t\tID_ROL_EQUIPO,\n\t\t\tID_EQ_ORG,\n\t\t\tMOD_REF_EQUIPO,\n\t\t\tIdInternalTipoTurno,\n\t\t\tUni_org,\n\t\t\tID_UNIDAD_ORGANIZATIVA,\n\t\t\tID_NIVEL_ESTUDIOS,\n\t\t\tID_PAIS_META4_NACIONALIDAD_SECUNDARIA ,\n\t\t\tMAX((CASE WHEN datos.FECHA_ALTA_EMPRESA = datos.ID_FECHA AND COALESCE(empresa_anterior.STD_ID_LEG_ENT, 0) <> datos.ID_EMPRESA THEN 1 ELSE 0 END)) AS ALTA_EMP ,\n\t\t\tMAX( (CASE WHEN datos.FECHA_VENCIMIENTO = datos.ID_FECHA THEN 1 ELSE 0 END)) AS BAJA_CO ,\n\t\t\tCOALESCE(MOD_REF_INDIVIDUAL,\n\t\t\tMOD_REF_EQUIPO) AS ID_MODELO_REFERENCIA ,\n\t\t\tCOALESCE(PORCENTAJE_JORNADA_PARCIAL,\n\t\t\t100) AS PORCENTAJE_JORNADA_PARCIAL ,\n\t\t\tCOALESCE(ROUND(PORCENTAJE_JORNADA_PARCIAL, 0, 1),\n\t\t\t100) AS TRAMO_PORC_JORNADA_PARCIAL ,\n\t\t\tBAJA ,\n\t\t\tCCL_ID_UNIDAD_NEG AS ID_UNIDAD_NEGOCIO,\n\t\t\tausencias.ORIGEN_INCIDENCIA,\n\t\t\tdatos.ID_MOTIVO_ALTA,\n\t\t    datos.ID_TIPO_CONTRATACION,\n\t\t\tdatos.MOTIVO_CONTRATACION,\n\t\t\tdatos.ID_MOTIVO_BAJA,\n\t\t\tdatos.ID_AGRUPACION_BAJA\n\t\tFROM\n\t\t\t(\n\t\t\tSELECT\n\t\t\t\tT.FECHA AS ID_FECHA ,\n\t\t\t\tCAST(periodo.SSP_FEC_ANTIGUEDAD AS DATE) AS FECHA_ANTIGUEDAD ,\n\t\t\t\tperiodo.ID_ORGANIZATION ,\n\t\t\t\t(DATEDIFF(MONTH,\n\t\t\t\tperiodo.SSP_FEC_ANTIGUEDAD,\n\t\t\t\tT.FECHA)) AS ANTIGUEDAD ,\n\t\t\t\tlegalEntityHR.DT_START AS FECHA_ALTA_EMPRESA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN co.SSP_FEC_FIN_PV_CON IS NULL\n\t\t\t\t\tOR co.SSP_FEC_FIN_PV_CON < co.SSP_FEC_INI_CONTRA\n\t\t\t\t\tOR co.SSP_FEC_FIN_PV_CON < T.FECHA THEN CAST(co.SSP_FEC_FIN_CONTRA AS DATE)\n\t\t\t\t\tELSE CAST(\n\t\t\t\t\t(\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN co.SSP_FEC_FIN_PV_CON < co.SSP_FEC_FIN_CONTRA THEN co.SSP_FEC_FIN_PV_CON\n\t\t\t\t\t\tELSE co.SSP_FEC_FIN_CONTRA\n\t\t\t\t\tEND) AS DATE)\n\t\t\t\tEND AS FECHA_VENCIMIENTO ,\n\t\t\t\tm4pos.SCO_ID_JOB_CODE AS ID_PUESTO ,\n\t\t\t\tCONCAT(m4pos.SCO_ID_JOB_CODE,\n\t\t\t\t'#',\n\t\t\t\tperiodo.STD_ID_HR_TYPE) AS ID_PUESTO_HR_TYPE ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06')\n\t\t\t\t\tAND hrole.CCL_ID_CAMPO = 'EMPR_FUNC2' THEN hrole.CCL_CADENA\n\t\t\t\t\tELSE\n\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06') THEN CAST(SUBSTRING(hrole.CCL_CADENA, 3, 3) AS INT)\n\t\t\t\t\t\tELSE\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\tWHEN (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)) = 9\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_DIVISION, '.', '') = 13\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_SECCION, '.', '')= 18 THEN 37\n\t\t\t\t\t\t\tELSE (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT))\n\t\t\t\t\t\tEND\n\t\t\t\t\tEND\n\t\t\t\tEND AS ID_EMPRESA ,\n\t\t\t\tperiodo.STD_ID_EXTERN_ORG AS ID_EMPRESA_EXTERNA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN pe.STD_ID_GENDER = '1' THEN 'H'\n\t\t\t\t\tELSE 'M'\n\t\t\t\tEND AS GENERO ,\n\t\t\t\tDATEDIFF(YEAR,\n\t\t\t\tpe.STD_DT_BIRTH,\n\t\t\t\tT.FECHA) AS EDAD ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.CCL_TIEMPO_PARCIAL,\n\t\t\t\t\t'1') = '1' THEN 2\n\t\t\t\t\tELSE 1\n\t\t\t\tEND AS ID_TIPO_JORNADA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.CCL_TIEMPO_PARCIAL,\n\t\t\t\t\t'1') = '1' THEN 'TIEMPO PARCIAL'\n\t\t\t\t\tELSE 'TIEMPO COMPLETO'\n\t\t\t\tEND AS TIPO_JORNADA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.SSP_NO_DEFINIDO,\n\t\t\t\t\t'S') = 'S' THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND AS ID_TIPO_CONTRATO ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.SSP_NO_DEFINIDO,\n\t\t\t\t\t'S') = 'S' THEN 'INDEFINIDO'\n\t\t\t\t\tELSE 'EVENTUAL'\n\t\t\t\tEND AS TIPO_CONTRATO ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL'\n\t\t\t\t\tAND ceco.CCL_CENTRO_COSTE_ORIGEN <> '8525' THEN 2\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL'\n\t\t\t\t\tAND ceco.CCL_CENTRO_COSTE_ORIGEN = '8525' THEN 1\n\t\t\t\t\t--WHEN legalEntityHR.STD_ID_LEG_ENT=20 AND W.STD_ID_WU_TYPE <> 'TMPL' THEN null--MODIFICACION\n\t\t\t\t\tWHEN EGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION IS NOT NULL THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND AS ID_ESTRUCTURA_ALMACEN ,\n\t\t\t\tlt.STD_ID_WORK_LOCAT AS ID_LUGAR_DE_TRABAJO ,\n\t\t\t\tpe.STD_ID_PERSON AS ID_PERSONA ,\n\t\t\t\tperiodo.CCL_ID_PERSON AS ID_LOCAL ,\n\t\t\t\tCAST(pe.STD_ID_PERSON AS VARCHAR) + '#' + CAST(periodo.CCL_ID_PERSON AS VARCHAR) AS ID_PERSONA_LOCAL ,\n\t\t\t\t1 AS COUNT_RAW ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.STD_DT_END = T.FECHA THEN 1\n\t\t\t\t\tELSE 0\n\t\t\t\tEND AS BAJA ,\n\t\t\t\tperiodo.STD_ID_HR_TYPE AS ID_TIPO_PERSONA ,\n\t\t\t\tCOALESCE(GL.SSP_PORC_GLEGAL,\n\t\t\t\t0) AS PORC_REDUCCION_JORNADA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(GL.SSP_PORC_GLEGAL,\n\t\t\t\t\t0)>0 THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND AS ID_REDUCCION_JORNADA ,\n\t\t\t\thceco.CCL_COD_DIV_SECC DIVISION_SECCION ,\n\t\t\t\tcate.SSP_ID_CATEGORIA AS ID_CATEGORIA ,\n\t\t\t\tHTTH.CCL_ID_TP_HORA + '#' +(CAST(HTTH.CCL_HOR_TM_PARC AS VARCHAR)) AS ID_HORAS_CONTRATADAS ,\n\t\t\t\tM4AR.CCL_ID_AR_ALM AS ID_AREA_ALMACEN ,\n\t\t\t\tTUI.SCO_ID_REF_MOD AS MOD_REF_INDIVIDUAL ,\n\t\t\t\tEQ.SCO_ID_TEAM AS ID_EQUIPO ,\n\t\t\t\tEQ.SCO_ID_TEAM_ROLE AS ID_ROL_EQUIPO ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,\n\t\t\t\t\tEMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) IS NULL\n\t\t\t\t\tOR COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT) IS NULL\n\t\t\t\t\tOR EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM IS NULL THEN '-1'\n\t\t\t\t\tELSE COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,\n\t\t\t\t\tEMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) + '#' + COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)\n\t\t\t\tEND AS ID_EQ_ORG ,\n\t\t\t\tTUT.CCL_ID_MOD_REF AS MOD_REF_EQUIPO ,\n\t\t\t\tTPT.IDDimensionTipoTurno AS IdInternalTipoTurno ,\n\t\t\t\tuo.STD_ID_WU_CHILD AS Uni_org ,\n\t\t\t\tW.STD_ID_WORK_UNIT AS ID_UNIDAD_ORGANIZATIVA ,\n\t\t\t\tMAX(CASE WHEN LEV.STD_ID_DIP_LEVEL IN ('01', '02') THEN 1 WHEN LEV.STD_ID_DIP_LEVEL IN ('03') THEN 2 WHEN LEV.STD_ID_DIP_LEVEL IN ('11') THEN 3 WHEN LEV.STD_ID_DIP_LEVEL IN ('04', '09') THEN 4 WHEN LEV.STD_ID_DIP_LEVEL IN ('05', '10') THEN 5 WHEN LEV.STD_ID_DIP_LEVEL IN ('06', '07', '08') THEN 6 ELSE 0 END) AS ID_NIVEL_ESTUDIOS ,\n\t\t\t\tCOALESCE(MAX(NACIONALIDAD_SECUNDARIA.STD_ID_COUNTRY),\n\t\t\t\t'-1') AS ID_PAIS_META4_NACIONALIDAD_SECUNDARIA ,\n\t\t\t\tceco.CCL_CENTRO_COSTE_ORIGEN ,\n\t\t\t\tJP.SSP_VALOR_COEF_T_P AS PORCENTAJE_JORNADA_PARCIAL ,\n\t\t\t\tunineg.CCL_ID_UNIDAD_NEG\n\t\t\t\t,CASE WHEN periodo.STD_DT_END = T.FECHA\t\t\n\t\t\t\t\tTHEN CAST(MERCADO.CSP_ID_COUNTRY AS VARCHAR)+'#'+CAST(periodo.STD_ID_HRP_END_REA AS VARCHAR)\t\t\n\t\t\t\t\tELSE NULL\t\t\n\t\t\t\t\tEND AS ID_AGRUPACION_BAJA\n\t\t\t\t\t    ,CASE WHEN periodo.STD_DT_END = T.FECHA\t\t\n\t\t\t\t\t\t  THEN CAST(periodo.ID_ORGANIZATION AS VARCHAR) + '#' + CAST(periodo.STD_ID_HRP_END_REA AS VARCHAR)\t\t\n\t\t\t\t\t\t  ELSE NULL\t\t\n\t\t\t\t\t\t  END AS ID_MOTIVO_BAJA\n\t\t\t\t\t\t    ,CASE WHEN periodo.STD_DT_START = T.FECHA\t\t\n\t\t\t\t\t\t\t  THEN periodo.STD_ID_HRP_SRT_REA\t\t\n\t\t\t\t\t\t\t  ELSE NULL\t\t\n\t\t\t\t\t\t\t  END AS ID_MOTIVO_ALTA\n\t\t\t  ,co.SSP_MOTIVO_CONTRATO AS MOTIVO_CONTRATACION\t\n\t\t\t  ,TCI.SSP_TIPO_CONTRATACION AS ID_TIPO_CONTRATACION\n\t\t\tFROM\n\t\t\t\t#TEMPCALENDARIO AS T WITH (NOLOCK)\n\t\t\tINNER JOIN M4SCO_H_HR_POS m4hrpos WITH (NOLOCK) ON\n\t\t\t\tm4hrpos.SCO_DT_START <= T.FECHA\n\t\t\t\tAND m4hrpos.SCO_DT_END >= T.FECHA\n\n\t\t\tINNER JOIN M4SCO_POSITION m4pos WITH (NOLOCK) ON\n\t\t\t\tm4hrpos.SCO_ID_POSITION = m4pos.SCO_ID_POSITION\n\t\t\t\tAND m4pos.SCO_DT_START <= T.FECHA\n\t\t\t\tAND m4pos.SCO_DT_END >= T.FECHA\n\t\t\tINNER JOIN M4CCL_H_OR_UNI_NEG AS unineg WITH (NOLOCK) ON\n\t\t\t\tunineg.SCO_ID_POSITION = m4pos.SCO_ID_POSITION\n\t\t\t\tAND T.FECHA BETWEEN unineg.CCL_DT_START AND unineg.CCL_DT_END\n\t\t\tINNER JOIN STD_WORK_LOCATION lt WITH (NOLOCK) ON\n\t\t\t\tm4pos.SCO_ID_WORK_LOC = lt.STD_ID_WORK_LOCAT\n\t\t\tINNER JOIN M4SCO_HR_ROLE m4role WITH (NOLOCK) ON\n\t\t\t\tm4role.ID_ORGANIZATION = m4hrpos.ID_ORGANIZATION\n\t\t\t\tAND m4hrpos.SCO_ID_HR = m4role.SCO_ID_HR\n\t\t\t\tAND m4hrpos.SCO_OR_HR_ROLE = m4role.SCO_OR_HR_ROLE\n\t\t\t\tAND m4role.SCO_DT_START <= T.FECHA\n\t\t\t\tAND m4role.SCO_DT_END >= T.FECHA\n\t\t\tINNER JOIN STD_HR_PERIOD periodo WITH (NOLOCK) ON\n\t\t\t\tm4role.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND m4role.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND m4role.SCO_OR_HR_ROLE = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND periodo.STD_DT_START <= T.FECHA\n\t\t\t\tAND periodo.STD_DT_END >= T.FECHA\n\t\t\tINNER JOIN M4SCO_H_HR_LEGENT legalEntityHR WITH (NOLOCK) ON\n\t\t\t\tlegalEntityHR.STD_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND legalEntityHR.STD_OR_HR_PERIOD = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND legalEntityHR.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND legalEntityHR.DT_START <= T.FECHA\n\t\t\t\tAND legalEntityHR.DT_END >= T.FECHA\n\t\t\t\tAND legalEntityHR.STD_ID_LEG_ENT NOT IN ('NZ_ZARA',\n\t\t\t\t'SI001',\n\t\t\t\t'SI002')\n\t\t\tINNER JOIN STD_PERSON pe WITH (NOLOCK) ON\n\t\t\t\tpe.STD_ID_PERSON = m4hrpos.SCO_ID_HR\n\t\t\tINNER JOIN M4SSP_H_CONTRATOS co WITH (NOLOCK) ON\n\t\t\t\tco.ID_ORGANIZATION = m4role.ID_ORGANIZATION\n\t\t\t\tAND co.SSP_ID_HR = m4role.SCO_ID_HR\n\t\t\t\tAND co.SSP_OR_HR_PERIOD = m4role.SCO_OR_HR_PER\n\t\t\t\tAND co.SSP_FEC_INI_CONTRA <= T.FECHA\n\t\t\t\tAND co.SSP_FEC_FIN_CONTRA >= T.FECHA\n\t\t\tINNER JOIN M4SSP_CONTRATO_INT cz WITH (NOLOCK) ON\n\t\t\t\tcz.SSP_ID_CONT_INTERN = co.SSP_ID_CONT_INTERN\n\t\t\tINNER JOIN M4SSP_H_CENT_COS ceco WITH (NOLOCK) ON\n\t\t\t\tm4role.ID_ORGANIZATION = ceco.ID_ORGANIZATION\n\t\t\t\tAND m4role.SCO_ID_HR = ceco.SCO_ID_HR\n\t\t\t\tAND m4role.SCO_OR_HR_ROLE = ceco.SCO_OR_HR_ROLE\n\t\t\t\tAND ceco.SSP_FEC_INICIO <= T.FECHA\n\t\t\t\tAND ceco.SSP_FEC_FIN >= T.FECHA\n\t\t\tINNER JOIN M4CCL_H_CENT_COS hceco WITH (NOLOCK) ON\n\t\t\t\tceco.ID_ORGANIZATION = hceco.ID_ORGANIZATION\n\t\t\t\tAND ceco.SCO_ID_HR = hceco.SCO_ID_HR\n\t\t\t\tAND ceco.SCO_OR_HR_ROLE = hceco.SCO_OR_HR_ROLE\n\t\t\t\tAND ceco.SSP_FEC_INICIO = hceco.SSP_FEC_INICIO\n\t\t\tLEFT JOIN M4SSP_CONTRATO_INT AS TCI WITH (NOLOCK)\t\t\n\t\t\t\t on TCI.SSP_ID_CONT_INTERN = co.SSP_ID_CONT_INTERN\n\t\t\tLEFT JOIN M4GLB_HISTORICOS_ROLE AS hrole WITH (NOLOCK) ON\n\t\t\t\throle.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND hrole.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND hrole.SCO_OR_HR_ROLE = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND hrole.DT_START <= T.FECHA\n\t\t\t\tAND hrole.DT_END >= T.FECHA\n\t\t\t\tAND hrole.CCL_ID_CAMPO IN ( 'EMPR_FUNC' ,\n\t\t\t\t'EMPR_FUNC2')\n\t\t\tLEFT JOIN M4SSP_H_CATEGORIA cate WITH (NOLOCK) ON\n\t\t\t\tcate.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND cate.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND cate.SCO_OR_HR_ROLE = m4role.SCO_OR_HR_ROLE\n\t\t\t\tAND cate.SSP_FEC_INICIO <= T.FECHA\n\t\t\t\tAND cate.SSP_FEC_FIN >= T.FECHA\n\t\t\tLEFT JOIN M4CCL_H_HOR_TM_PAR AS HTTH WITH (NOLOCK) ON\n\t\t\t\tHTTH.ID_ORGANIZATION = m4role.ID_ORGANIZATION\n\t\t\t\tAND HTTH.SCO_ID_HR = m4hrpos.SCO_ID_HR\n\t\t\t\tAND HTTH.SCO_OR_HR_ROLE = m4role.SCO_OR_HR_ROLE\n\t\t\t\tAND HTTH.DT_START <= T.FECHA\n\t\t\t\tAND HTTH.DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4SSP_H_PORC_GLEGA AS GL WITH (NOLOCK) ON\n\t\t\t\tGL.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND GL.STD_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND GL.STD_OR_HR_PERIOD = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND GL.SSP_DT_START <= T.FECHA\n\t\t\t\tAND GL.SSP_DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4SSP_H_PORC_JORN AS JP WITH (NOLOCK) ON\n\t\t\t\tJP.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND JP.SSP_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND JP.SSP_OR_HR_PERIOD = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND JP.SSP_FEC_INI_JORN_P <= T.FECHA\n\t\t\t\tAND JP.SSP_FEC_FIN_JORN_P >= T.FECHA\n\t\t\tLEFT JOIN M4SCO_HR_THEOR_TIM TUI WITH (NOLOCK) ON\n\t\t\t\tTUI.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND TUI.STD_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND TUI.STD_OR_HR_PERIOD = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND TUI.DT_START <= T.FECHA\n\t\t\t\tAND TUI.DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4SCO_H_HR_TEAMS EQ WITH (NOLOCK) ON\n\t\t\t\tEQ.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND EQ.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND EQ.SCO_OR_ROLE = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND EQ.SCO_DT_START <= T.FECHA\n\t\t\t\tAND EQ.SCO_DT_END >= T.FECHA\n\t\t\t\tAND EQ.CCL_ID_LEG_ENT = legalEntityHR.STD_ID_LEG_ENT\n\t\t\tLEFT JOIN M4CCL_H_GT_MR_TEAM TUT WITH (NOLOCK) ON\n\t\t\t\tTUT.ID_ORGANIZATION = EQ.ID_ORGANIZATION\n\t\t\t\tAND TUT.CCL_ID_TEAM = EQ.SCO_ID_TEAM\n\t\t\t\tAND TUT.CCL_DT_START <= T.FECHA\n\t\t\t\tAND TUT.CCL_DT_END >= T.FECHA\n\t\t\t\tAND TUT.CCL_ID_LEG_ENT = legalEntityHR.STD_ID_LEG_ENT\n\t\t\tLEFT JOIN #TEMPCTURNO AS TPT WITH (NOLOCK) ON\n\t\t\t\tTPT.SCO_ID_REF_MOD = isnull(TUI.SCO_ID_REF_MOD ,\n\t\t\t\tTUT.CCL_ID_MOD_REF)\n\t\t\tLEFT JOIN M4CCL_VW_EMP_AR_EQUI M4AR WITH (NOLOCK) ON\n\t\t\t\tM4AR.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND M4AR.CCL_ID_LEG_ENT = legalEntityHR.STD_ID_LEG_ENT\n\t\t\t\tAND M4AR.CCL_ID_TEAM = EQ.SCO_ID_TEAM\n\t\t\tLEFT JOIN #EMPRESA_GRUPO_DIVISION_SECCION EGDS WITH (NOLOCK) ON\n\t\t\t\tEGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION = CAST\n\t\t\t\t(\n\t\t\t\t\tCASE\n\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06')\n\t\t\t\t\tAND hrole.CCL_ID_CAMPO = 'EMPR_FUNC2' THEN hrole.CCL_CADENA\n\t\t\t\t\tELSE\n\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06') THEN CAST(SUBSTRING(hrole.CCL_CADENA, 3, 3) AS INT)\n\t\t\t\t\t\tELSE\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\tWHEN (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)) = 9\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_DIVISION, '.', '') = 13\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_SECCION, '.', '')= 18 THEN 37\n\t\t\t\t\t\t\tELSE (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT))\n\t\t\t\t\t\tEND\n\t\t\t\t\tEND\n\t\t\t\tEND AS VARCHAR (3))+\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL' THEN CAST(ceco.CCL_CENTRO_COSTE_ORIGEN AS VARCHAR(10))\n\t\t\t\t\tELSE CAST(hceco.CCL_COD_DIV_SECC AS VARCHAR (10))\n\t\t\t\tEND\n\t\t\tLEFT JOIN #listaUOs uo WITH (NOLOCK) ON\n\t\t\t\tm4pos.SCO_ID_WORK_UNIT = uo.STD_ID_WU_CHILD\n\t\t\t\tAND uo.STD_DT_START <= T.FECHA\n\t\t\t\tAND uo.STD_DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4GLB_H_HR_TEAMS_ORG EXCEP_EMPL WITH (NOLOCK) ON\n\t\t\t\tEXCEP_EMPL.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND EXCEP_EMPL.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND EXCEP_EMPL.SCO_OR_ROLE = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND EXCEP_EMPL.SCO_DT_START <= T.FECHA\n\t\t\t\tAND EXCEP_EMPL.SCO_DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4CCL_H_GA_EM_EQUI AS EMPRESA_EQUIPO_AGOP WITH (NOLOCK) ON\n\t\t\t\tEMPRESA_EQUIPO_AGOP.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND EMPRESA_EQUIPO_AGOP.CCL_ID_LEG_ENT = COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)\n\t\t\t\tAND EQ.SCO_ID_TEAM = EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM\n\t\t\t\tAND EMPRESA_EQUIPO_AGOP.CCL_DT_START <= T.FECHA\n\t\t\t\tAND EMPRESA_EQUIPO_AGOP.CCL_DT_END >= T.FECHA\n\t\t\tLEFT JOIN STD_WORK_UNIT AS W WITH (NOLOCK) ON\n\t\t\t\tW.STD_ID_WORK_UNIT = m4pos.SCO_ID_WORK_UNIT\n\t\t\tLEFT JOIN STD_HR_ACAD_BACKGR HNIV WITH (NOLOCK) ON\n\t\t\t\tHNIV.STD_ID_HR = pe.STD_ID_PERSON\n\t\t\t\tAND HNIV.STD_DT_START <= T.FECHA\n\t\t\tLEFT JOIN STD_LU_EDU_DIPLOMA DIP WITH (NOLOCK) ON\n\t\t\t\tDIP.STD_ID_DIPLOMA = HNIV.STD_ID_DIPLOMA\n\t\t\tLEFT JOIN STD_LU_EDU_DIP_LEV LEV WITH (NOLOCK) ON\n\t\t\t\tLEV.STD_ID_DIP_LEVEL = DIP.STD_ID_DIP_LEVEL\n\t\t\tLEFT JOIN STD_HR_NAT NACIONALIDAD_SECUNDARIA WITH (NOLOCK) ON\n\t\t\t\tpe.STD_ID_PERSON = NACIONALIDAD_SECUNDARIA.STD_ID_HR\n\t\t\t\tAND NACIONALIDAD_SECUNDARIA.DT_START <= T.FECHA\n\t\t\t\tAND NACIONALIDAD_SECUNDARIA.DT_END >= T.FECHA\n\t\t\t\tAND NACIONALIDAD_SECUNDARIA.STD_PRIMARY_COUNTR = 0\n\t\t\t\t   LEFT JOIN M4CCL_ORIGEN_DATOS_SINCRO AS ODS WITH (NOLOCK) \t\t\n\t\t\t\t\t\tON ODS.CCL_ID_ORIGEN = periodo.CCL_ID_ORIGEN\t\t\n\t\t\n\t\t\t\t\tLEFT JOIN STD_COUNTRY AS MERCADO WITH (NOLOCK) \t\t\n\t\t\t\t\t\tON MERCADO.CSP_ID_COUNTRY = ODS.CCL_ID_PAIS\n\t\t\tWHERE\n\t\t\t\t(REPLACE(periodo.STD_ID_HR_TYPE, '.', '')= '01'\n\t\t\t\tOR REPLACE(periodo.STD_ID_HR_TYPE, '.', '')= '06'\n\t\t\t\tOR REPLACE(periodo.STD_ID_HR_TYPE, '.', '')= '02')\n\t\t\t\tAND\n\t\t\t\t(CASE\n\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06')\n\t\t\t\t\tAND hrole.CCL_ID_CAMPO = 'EMPR_FUNC2' THEN hrole.CCL_CADENA\n\t\t\t\t\tELSE\n\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06') THEN CAST(SUBSTRING(hrole.CCL_CADENA, 3, 3) AS INT)\n\t\t\t\t\t\tELSE\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\tWHEN (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)) = 9\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_DIVISION, '.', '') = 13\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_SECCION, '.', '')= 18 THEN 37\n\t\t\t\t\t\t\tELSE (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT))\n\t\t\t\t\t\tEND\n\t\t\t\t\tEND\n\t\t\t\tEND) IN (SELECT ID_EMPRESA FROM @empresas)\n\t\t\t\tand 1 = (case when legalEntityHR.STD_ID_LEG_ENT=20 AND W.STD_ID_WU_TYPE <> 'TMPL' then 0 else 1 end )\n\t\t\t\t\n\t\t\tGROUP BY\n\t\t\tlegalEntityHR.STD_ID_LEG_ENT,\n\t\t\tW.STD_ID_WU_TYPE,\n\t\t\thceco.CCL_COD_DIV_SECC,\n\t\t\tEGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\t\t\t\tT.FECHA ,\n\t\t\t\tCAST(periodo.SSP_FEC_ANTIGUEDAD AS DATE) ,\n\t\t\t\t(DATEDIFF(MONTH,\n\t\t\t\tperiodo.SSP_FEC_ANTIGUEDAD,\n\t\t\t\tT.FECHA)) ,\n\t\t\t\tlegalEntityHR.DT_START ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN co.SSP_FEC_FIN_PV_CON IS NULL\n\t\t\t\t\tOR co.SSP_FEC_FIN_PV_CON < co.SSP_FEC_INI_CONTRA\n\t\t\t\t\tOR co.SSP_FEC_FIN_PV_CON < T.FECHA THEN CAST(co.SSP_FEC_FIN_CONTRA AS DATE)\n\t\t\t\t\tELSE CAST(\n\t\t\t\t\t(\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN co.SSP_FEC_FIN_PV_CON < co.SSP_FEC_FIN_CONTRA THEN co.SSP_FEC_FIN_PV_CON\n\t\t\t\t\t\tELSE co.SSP_FEC_FIN_CONTRA\n\t\t\t\t\tEND) AS DATE)\n\t\t\t\tEND ,\n\t\t\t\tm4pos.SCO_ID_JOB_CODE ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06')\n\t\t\t\t\tAND hrole.CCL_ID_CAMPO = 'EMPR_FUNC2' THEN hrole.CCL_CADENA\n\t\t\t\t\tELSE\n\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06') THEN CAST(SUBSTRING(hrole.CCL_CADENA, 3, 3) AS INT)\n\t\t\t\t\t\tELSE\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\tWHEN (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)) = 9\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_DIVISION, '.', '') = 13\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_SECCION, '.', '')= 18 THEN 37\n\t\t\t\t\t\t\tELSE (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT))\n\t\t\t\t\t\tEND\n\t\t\t\t\tEND\n\t\t\t\tEND ,\n\t\t\t\tperiodo.STD_ID_EXTERN_ORG ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN pe.STD_ID_GENDER = '1' THEN 'H'\n\t\t\t\t\tELSE 'M'\n\t\t\t\tEND ,\n\t\t\t\tDATEDIFF(YEAR,\n\t\t\t\tpe.STD_DT_BIRTH,\n\t\t\t\tT.FECHA) ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.CCL_TIEMPO_PARCIAL,\n\t\t\t\t\t'1') = '1' THEN 2\n\t\t\t\t\tELSE 1\n\t\t\t\tEND ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.CCL_TIEMPO_PARCIAL,\n\t\t\t\t\t'1') = '1' THEN 'TIEMPO PARCIAL'\n\t\t\t\t\tELSE 'TIEMPO COMPLETO'\n\t\t\t\tEND ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.SSP_NO_DEFINIDO,\n\t\t\t\t\t'S') = 'S' THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.SSP_NO_DEFINIDO,\n\t\t\t\t\t'S') = 'S' THEN 'INDEFINIDO'\n\t\t\t\t\tELSE 'EVENTUAL'\n\t\t\t\tEND ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL'\n\t\t\t\t\tAND ceco.CCL_CENTRO_COSTE_ORIGEN <> '8525' THEN 2\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL'\n\t\t\t\t\tAND ceco.CCL_CENTRO_COSTE_ORIGEN = '8525' THEN 1\n\t\t\t\t\tWHEN EGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION IS NOT NULL THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND ,\n\t\t\t\tlt.STD_ID_WORK_LOCAT ,\n\t\t\t\tpe.STD_ID_PERSON ,\n\t\t\t\tperiodo.CCL_ID_PERSON ,\n\t\t\t\tCAST(pe.STD_ID_PERSON AS VARCHAR) + '#' + CAST(periodo.CCL_ID_PERSON AS VARCHAR) ,\n\t\t\t\tperiodo.STD_ID_HR_TYPE ,\n\t\t\t\tCOALESCE(GL.SSP_PORC_GLEGAL,\n\t\t\t\t0) ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(GL.SSP_PORC_GLEGAL,\n\t\t\t\t\t0)>0 THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND ,\n\t\t\t\thceco.CCL_COD_DIV_SECC ,\n\t\t\t\tcate.SSP_ID_CATEGORIA ,\n\t\t\t\tHTTH.CCL_ID_TP_HORA + '#' +(CAST(HTTH.CCL_HOR_TM_PARC AS VARCHAR)) ,\n\t\t\t\tM4AR.CCL_ID_AR_ALM ,\n\t\t\t\tTUI.SCO_ID_REF_MOD ,\n\t\t\t\tEQ.SCO_ID_TEAM ,\n\t\t\t\tEQ.SCO_ID_TEAM_ROLE ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,\n\t\t\t\t\tEMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) IS NULL\n\t\t\t\t\tOR COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT) IS NULL\n\t\t\t\t\tOR EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM IS NULL THEN '-1'\n\t\t\t\t\tELSE COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,\n\t\t\t\t\tEMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) + '#' + COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)\n\t\t\t\tEND ,\n\t\t\t\tTUT.CCL_ID_MOD_REF ,\n\t\t\t\tTPT.IDDimensionTipoTurno ,\n\t\t\t\tuo.STD_ID_WU_CHILD ,\n\t\t\t\tW.STD_ID_WORK_UNIT ,\n\t\t\t\tperiodo.ID_ORGANIZATION ,\n\t\t\t\tceco.CCL_CENTRO_COSTE_ORIGEN ,\n\t\t\t\tJP.SSP_VALOR_COEF_T_P ,\n\t\t\t\tco.SSP_MOTIVO_CONTRATO ,\n\t\t\t    TCI.SSP_TIPO_CONTRATACION,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.STD_DT_END = T.FECHA THEN 1\n\t\t\t\t\tELSE 0\n\t\t\t\tEND ,\n\t\t\t\tCCL_ID_UNIDAD_NEG\n\t\t\t\t,CASE WHEN periodo.STD_DT_END = T.FECHA\t\t\n\t\t\t\t\tTHEN CAST(MERCADO.CSP_ID_COUNTRY AS VARCHAR)+'#'+CAST(periodo.STD_ID_HRP_END_REA AS VARCHAR)\t\t\n\t\t\t\t\tELSE NULL\t\t\n\t\t\t\t\tEND \n\t\t\t\t\t    ,CASE WHEN periodo.STD_DT_END = T.FECHA\t\t\n\t\t\t\t\t\t  THEN CAST(periodo.ID_ORGANIZATION AS VARCHAR) + '#' + CAST(periodo.STD_ID_HRP_END_REA AS VARCHAR)\t\t\n\t\t\t\t\t\t  ELSE NULL\t\t\n\t\t\t\t\t\t  END \n\t\t\t\t\t\t    ,CASE WHEN periodo.STD_DT_START = T.FECHA\t\t\n\t\t\t\t\t\t\t  THEN periodo.STD_ID_HRP_SRT_REA\t\t\n\t\t\t\t\t\t\t  ELSE NULL\t\t\n\t\t\t\t\t\t\t  END \n\t\t\t\t ) datos\n\t\tLEFT JOIN M4SCO_H_HR_LEGENT AS empresa_anterior WITH (NOLOCK) ON\n\t\t\tempresa_anterior.STD_ID_HR = datos.ID_PERSONA\n\t\t\tAND DATEADD(DAY, -1, datos.ID_FECHA) BETWEEN empresa_anterior.DT_START AND empresa_anterior.DT_END\n\t\t\tAND empresa_anterior.ID_ORGANIZATION = datos.ID_ORGANIZATION\n\t\t\tAND empresa_anterior.STD_ID_LEG_ENT NOT IN ('NZ_ZARA',\n\t\t\t'SI001',\n\t\t\t'SI002')\n\t\tLEFT JOIN (\n\t\t\t\t\t-- AUSENCIAS GHRS\n\t\t\tSELECT ABS_TA.ID_ORGANIZATION,\n\t\t\t\tABS_TA.CCL_ID_HR,\n\t\t\t\tABS_TA.DT_START,\n\t\t\t\tABS_TA.DT_END,\n\t\t\t\tCAST(ABS_TA. CCL_ID_ABSENCE AS VARCHAR) AS CCL_ID_ABSENCE,\n\t\t\t\t'TA' AS ORIGEN_INCIDENCIA\n\t\t\t\t\t, LEGALENTITYHR.STD_ID_LEG_ENT\n\t\t\t\tFROM M4CCL_HR_ABSENCES_TA ABS_TA WITH(NOLOCK)\n\t\t\t\t-- Se añade el cruce con M4SCO_H_HR_LEGENT para obtener la empresa\n\t\t\t\tINNER JOIN M4SCO_H_HR_LEGENT AS LEGALENTITYHR WITH (NOLOCK) \n\t\t\t\t  ON LEGALENTITYHR.STD_ID_HR = ABS_TA.CCL_ID_HR\n\t\t\t\t  AND LEGALENTITYHR.STD_OR_HR_PERIOD = ABS_TA.CCL_OR_HR_PERIOD\n\t\t\t\t  AND LEGALENTITYHR.ID_ORGANIZATION = ABS_TA.ID_ORGANIZATION\n\t\t\t\t  AND ABS_TA.DT_START BETWEEN LEGALENTITYHR.DT_START AND LEGALENTITYHR.DT_END\n\t\t\t\tWHERE\n\t\t\t\t\t(\n\t\t\t\t\tABS_TA.ID_ORGANIZATION IN ('NL')\n\t\t\t\t\t---- Se añade el filtro para la organización 0001 y la empresa. En la empresa se irán añadiendo códigos de empresa según se vayan migrando.\n\t\t\t\t\tOR \n\t\t\t\t\t(ABS_TA.ID_ORGANIZATION IN ('0001') AND LEGALENTITYHR.STD_ID_LEG_ENT IN (SELECT ID_EMPRESA FROM @empresas emp ))\n\t\t\t\t\t)\n\t\t\t\t\tAND ABS_TA.DT_START <= @FechaFin\n\t\t\t\t\tAND ABS_TA.DT_END >= @FechaIni\n\t\t\t\tGROUP BY\n\t\t\t\t\tABS_TA.ID_ORGANIZATION,\n\t\t\t\t\tABS_TA.CCL_ID_HR,\n\t\t\t\t\tABS_TA.DT_START,\n\t\t\t\t\tABS_TA.DT_END,\n\t\t\t\t\tABS_TA.CCL_ID_ABSENCE,\n\t\t\t\t\tLEGALENTITYHR.STD_ID_LEG_ENT\n\n\t\t\tUNION\n\t\t\t-- INCIDENCIAS GHRS\n\t\t\tSELECT INC_TA.ID_ORGANIZATION,\n\t\t\t\tINC_TA.CCL_ID_HR,\n\t\t\t\tINC_TA.DT_START,\n\t\t\t\tINC_TA.DT_END,\n\t\t\t\tCAST(INC_TA.CCL_ID_INCIDENCIA AS VARCHAR) AS CCL_ID_ABSENCE,\n\t\t\t\t--H.SCO_ID_INCIDENCE,\n\t\t\t\t'TA' AS ORIGEN_INCIDENCIA\n\t\t\t\t, LEGALENTITYHR.STD_ID_LEG_ENT\n\t\t\t\tFROM M4SEDES_T_HR_INCIDENCIAS_TA AS INC_TA WITH(NOLOCK)\n\t\t\t\tINNER JOIN M4CCL_INCIDENCIAS_TEOR_TA AS PRES_TA WITH(NOLOCK)\n\t\t\t\tON PRES_TA.ID_ORGANIZATION = INC_TA.ID_ORGANIZATION\n\t\t\t\tAND PRES_TA.CCL_ID_INCIDENCIA = INC_TA.CCL_ID_INCIDENCIA\n\t\t\t\tAND PRES_TA.CCL_ID_WL = 'L'\n\t\t\t\t-- Se añade el cruce con M4SCO_H_HR_LEGENT para obtener la empresa\n\t\t\t\tINNER JOIN M4SCO_H_HR_LEGENT AS LEGALENTITYHR WITH (NOLOCK) \n\t\t\t\t  ON LEGALENTITYHR.STD_ID_HR = INC_TA.CCL_ID_HR\n\t\t\t\t  AND LEGALENTITYHR.STD_OR_HR_PERIOD = INC_TA.CCL_OR_HR_PERIOD\n\t\t\t\t  AND LEGALENTITYHR.ID_ORGANIZATION = INC_TA.ID_ORGANIZATION\n\t\t\t\t  AND INC_TA.DT_START BETWEEN LEGALENTITYHR.DT_START AND LEGALENTITYHR.DT_END\n\t\t\t\tWHERE\n\t\t\t\t\t(\n\t\t\t\t\tINC_TA.ID_ORGANIZATION IN ('NL')\n\t\t\t\t\t---- Se añade el filtro para la organización 0001 y la empresa. En la empresa se irán añadiendo códigos de empresa según se vayan migrando.\n\t\t\t\t\tOR \n\t\t\t\t\t(INC_TA.ID_ORGANIZATION IN ('0001') AND LEGALENTITYHR.STD_ID_LEG_ENT IN (SELECT ID_EMPRESA FROM @empresas emp ))\n\t\t\t\t\t)\n\t\t\t\t\tAND INC_TA.DT_START <= @FechaFin\n\t\t\t\t\tAND INC_TA.DT_END >= @FechaIni\n\t\t\t\tGROUP BY\n\t\t\t\t\tINC_TA.ID_ORGANIZATION,\n\t\t\t\t\tINC_TA.CCL_ID_HR,\n\t\t\t\t\tINC_TA.DT_START,\n\t\t\t\t\tINC_TA.DT_END,\n\t\t\t\t\tINC_TA.CCL_ID_INCIDENCIA,\n\t\t\t\t\tLEGALENTITYHR.STD_ID_LEG_ENT\n\t\t\t\t) ausencias ON\n\t\t\tausencias.CCL_ID_HR = ID_PERSONA\n\t\t\tAND ausencias.ID_ORGANIZATION = datos.ID_ORGANIZATION\n\t\t\tAND ID_FECHA BETWEEN ausencias.DT_START AND ausencias.DT_END\n\n\t\tGROUP BY\n\t\t\tID_FECHA,\n\t\t\tausencias.CCL_ID_HR,\n\t\t\tCCL_ID_ABSENCE,\n\t\t\tFECHA_ANTIGUEDAD,\n\t\t\tdatos.ID_ORGANIZATION,\n\t\t\tANTIGUEDAD,\n\t\t\tFECHA_ALTA_EMPRESA,\n\t\t\tFECHA_VENCIMIENTO,\n\t\t\tID_PUESTO,\n\t\t\tID_PUESTO_HR_TYPE,\n\t\t\tID_EMPRESA,\n\t\t\tID_EMPRESA_EXTERNA,\n\t\t\tGENERO,\n\t\t\tEDAD,\n\t\t\tID_TIPO_JORNADA,\n\t\t\tTIPO_JORNADA,\n\t\t\tID_TIPO_CONTRATO,\n\t\t\tTIPO_CONTRATO,\n\t\t\tID_ESTRUCTURA_ALMACEN,\n\t\t\tID_LUGAR_DE_TRABAJO,\n\t\t\tID_PERSONA,\n\t\t\tID_LOCAL,\n\t\t\tID_PERSONA_LOCAL,\n\t\t\tCOUNT_RAW,\n\t\t\tID_TIPO_PERSONA,\n\t\t\tPORC_REDUCCION_JORNADA,\n\t\t\tID_REDUCCION_JORNADA,\n\t\t\tDIVISION_SECCION,\n\t\t\tID_CATEGORIA,\n\t\t\tID_HORAS_CONTRATADAS,\n\t\t\tID_AREA_ALMACEN,\n\t\t\tdatos.ID_ORGANIZATION + '#' + ID_AREA_ALMACEN,\n\t\t\tMOD_REF_INDIVIDUAL,\n\t\t\tID_EQUIPO,\n\t\t\tID_ROL_EQUIPO,\n\t\t\tID_EQ_ORG,\n\t\t\tMOD_REF_EQUIPO,\n\t\t\tIdInternalTipoTurno,\n\t\t\tUni_org,\n\t\t\tID_UNIDAD_ORGANIZATIVA,\n\t\t\tID_NIVEL_ESTUDIOS,\n\t\t\tID_PAIS_META4_NACIONALIDAD_SECUNDARIA ,\n\t\t\tCCL_CENTRO_COSTE_ORIGEN ,\n\t\t\tPORCENTAJE_JORNADA_PARCIAL ,\n\t\t\tBAJA ,\n\t\t\tCCL_ID_UNIDAD_NEG,\n\t\t\tausencias.ORIGEN_INCIDENCIA,\n\t\t\tdatos.ID_MOTIVO_ALTA,\n\t\t\tdatos.ID_TIPO_CONTRATACION,\n\t\t\tdatos.MOTIVO_CONTRATACION,\n\t\t\tdatos.ID_MOTIVO_BAJA,\n\t\t\tdatos.ID_AGRUPACION_BAJA\n\n\n\nDROP TABLE #TEMPCTURNO;\nDROP TABLE #listaUOs;\nDROP TABLE #TEMPCALENDARIO;\nDROP TABLE #EMPRESA_GRUPO_DIVISION_SECCION;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "EMPLEADOS",
            "description": "Calcula el numero de empleados distintos a ultima fecha con datos que se esté filtrando.",
            "expression": "CALCULATE(CALCULATE (\n\t\t\t\t\t\t\t\t\t\tDISTINCTCOUNT ( PLANTILLA[ID_PERSONA] ),\n\t\t\t\t\t\t\t\t\t\tLASTNONBLANK (\n\t\t\t\t\t\t\t\t\t\tFECHA[FECHA],\n\t\t\t\t\t\t\t\t\t\tCALCULATE ( COUNT ( PLANTILLA[ID_PERSONA]) )\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t),ALL(INCIDENCIA))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "EMPLEADOS_AA",
            "description": "Calcula el numero de empleados distintos a ultima fecha con datos que se esté filtrando del año anterior",
            "expression": "IF(HASONEVALUE(FECHA[ANO]),\n\t\t\t\t\t\t\t\t\t\tCALCULATE([EMPLEADOS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_AA"
          },
          {
            "name": "MEDIA_EMPLEADOS",
            "description": "Numero de personas distintas / Numero de días del periodo analizado",
            "expression": "CALCULATE(IF(\nOR(ISBLANK(COUNT(PLANTILLA[ID_FECHA_PERSONA])),COUNT(PLANTILLA[ID_FECHA_PERSONA])=0)\n,BLANK(),DISTINCTCOUNT(PLANTILLA[ID_FECHA_PERSONA])/COUNTROWS(FECHA)),ALL(INCIDENCIA))",
            "formatString": "#,0.00",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "%EVENTUALIDAD",
            "description": "% de empleados eventuales sobre el total de empleados",
            "expression": "CALCULATE(IF(\n\t\t\t\t\t\t\t\t\t\tOR(ISBLANK([EMPLEADOS]),[EMPLEADOS]=0)\n\t\t\t\t\t\t\t\t\t\t,BLANK(),\n\t\t\t\t\t\t\t\t\t\t(CALCULATE([EMPLEADOS],TIPO_CONTRATO[TIPO_CONTRATO]=\"EVENTUAL\")/[EMPLEADOS])),ALL(INCIDENCIA))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "%EVENTUALIDAD_AA",
            "expression": "IF(HASONEVALUE(FECHA[ANO]),\n\t\t\t\t\t\t\t\t\t\tCALCULATE([%EVENTUALIDAD],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_AA"
          },
          {
            "name": "%EVENTUALIDAD_DAA",
            "expression": "IF(OR(ISBLANK([%EVENTUALIDAD]),[%EVENTUALIDAD]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([%EVENTUALIDAD_AA]),[%EVENTUALIDAD_AA]=0),BLANK(),([%EVENTUALIDAD]-[%EVENTUALIDAD_AA])/[%EVENTUALIDAD_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DAA"
          },
          {
            "name": "%EVENTUALIDAD_CIERRE",
            "expression": "CALCULATE([%EVENTUALIDAD],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "%EVENTUALIDAD_DCIERRE",
            "expression": "IF(OR(ISBLANK([%EVENTUALIDAD]),[%EVENTUALIDAD]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([%EVENTUALIDAD_CIERRE]),[%EVENTUALIDAD_CIERRE]=0),BLANK(),([%EVENTUALIDAD]-[%EVENTUALIDAD_CIERRE])/[%EVENTUALIDAD_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DCIERRE"
          },
          {
            "name": "MEDIA_EMPLEADOS_AA",
            "expression": "CALCULATE([MEDIA_EMPLEADOS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "displayFolder": "PLANTILLA_AA"
          },
          {
            "name": "MEDIA_EMPLEADOS_DAA",
            "expression": "IF(OR(ISBLANK([MEDIA_EMPLEADOS]),[MEDIA_EMPLEADOS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([MEDIA_EMPLEADOS_AA]),[MEDIA_EMPLEADOS_AA]=0),BLANK(),([MEDIA_EMPLEADOS]-[MEDIA_EMPLEADOS_AA])/[MEDIA_EMPLEADOS_AA]))",
            "formatString": "#,0.00",
            "displayFolder": "PLANTILLA_DAA"
          },
          {
            "name": "MEDIA_EMPLEADOS_CIERRE",
            "expression": "CALCULATE([MEDIA_EMPLEADOS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "MEDIA_EMPLEADOS_DCIERRE",
            "expression": "IF(OR(ISBLANK([MEDIA_EMPLEADOS]),[MEDIA_EMPLEADOS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([MEDIA_EMPLEADOS_CIERRE]),[MEDIA_EMPLEADOS_CIERRE]=0),BLANK(),([MEDIA_EMPLEADOS]-[MEDIA_EMPLEADOS_CIERRE])/[MEDIA_EMPLEADOS_CIERRE]))",
            "formatString": "#,0.00",
            "displayFolder": "PLANTILLA_DCIERRE"
          },
          {
            "name": "%TIEMPO_PARCIAL",
            "description": "Numero de empleados a tiempo parcial sobre el total de empleados",
            "expression": "CALCULATE(IF(\n\t\t\t\t\t\t\t\t\t\tOR(ISBLANK([EMPLEADOS]),[EMPLEADOS]=0)\n\t\t\t\t\t\t\t\t\t\t,0,\n\t\t\t\t\t\t\t\t\t\t(CALCULATE([EMPLEADOS],TIPO_JORNADA[TIPO_JORNADA]=\"TIEMPO PARCIAL\")/[EMPLEADOS])),ALL(INCIDENCIA))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "%TIEMPO_PARCIAL_AA",
            "expression": "IF(HASONEVALUE(FECHA[ANO]),\n\t\t\t\t\t\t\t\t\t\tCALCULATE([%TIEMPO_PARCIAL],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "PLANTILLA_AA"
          },
          {
            "name": "%TIEMPO_PARCIAL_DAA",
            "expression": "IF(OR(ISBLANK([%TIEMPO_PARCIAL]),[%TIEMPO_PARCIAL]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([%TIEMPO_PARCIAL_AA]),[%TIEMPO_PARCIAL_AA]=0),BLANK(),([%TIEMPO_PARCIAL]-[%TIEMPO_PARCIAL_AA])/[%TIEMPO_PARCIAL_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "PLANTILLA_DAA"
          },
          {
            "name": "%TIEMPO_PARCIAL_CIERRE",
            "expression": "CALCULATE([%TIEMPO_PARCIAL],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "%TIEMPO_PARCIAL_DCIERRE",
            "expression": "IF(OR(ISBLANK([%TIEMPO_PARCIAL]),[%TIEMPO_PARCIAL]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([%TIEMPO_PARCIAL_CIERRE]),[%TIEMPO_PARCIAL_CIERRE]=0),BLANK(),([%TIEMPO_PARCIAL]-[%TIEMPO_PARCIAL_CIERRE])/[%TIEMPO_PARCIAL_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "isHidden": true,
            "displayFolder": "PLANTILLA_DCIERRE"
          },
          {
            "name": "%EVENTUALIDAD_MEDIA",
            "description": "% media de empleados de tipo eventual sobre la media total de empleados",
            "expression": "CALCULATE(IF(\n\t\t\t\t\t\t\t\t\t\tOR(ISBLANK([MEDIA_EMPLEADOS]),[MEDIA_EMPLEADOS]=0)\n\t\t\t\t\t\t\t\t\t\t,BLANK(),\n\t\t\t\t\t\t\t\t\t\t(CALCULATE([MEDIA_EMPLEADOS],TIPO_CONTRATO[TIPO_CONTRATO]=\"EVENTUAL\")/[MEDIA_EMPLEADOS])),ALL(INCIDENCIA))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "%TIEMPO_PARCIAL_MEDIA",
            "description": "% media de empleados a tiempo parcial sobre la media de empleados",
            "expression": "CALCULATE(IF(\n\t\t\t\t\t\t\t\t\t\tOR(ISBLANK([MEDIA_EMPLEADOS]),[MEDIA_EMPLEADOS]=0)\n\t\t\t\t\t\t\t\t\t\t,BLANK(),\n\t\t\t\t\t\t\t\t\t\t(CALCULATE([MEDIA_EMPLEADOS],TIPO_JORNADA[TIPO_JORNADA]=\"TIEMPO PARCIAL\")/[MEDIA_EMPLEADOS])),ALL(INCIDENCIA))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "%EVENTUALIDAD_MEDIA_AA",
            "expression": "IF(HASONEVALUE(FECHA[ANO]),\n\t\t\t\t\t\t\t\t\t\tCALCULATE([%EVENTUALIDAD_MEDIA],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_AA"
          },
          {
            "name": "%TIEMPO_PARCIAL_MEDIA_AA",
            "expression": "IF(HASONEVALUE(FECHA[ANO]),\n\t\t\t\t\t\t\t\t\t\tCALCULATE([%TIEMPO_PARCIAL_MEDIA],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_AA"
          },
          {
            "name": "%EVENTUALIDAD_MEDIA_CIERRE",
            "expression": "CALCULATE([%EVENTUALIDAD_MEDIA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "%TIEMPO_PARCIAL_MEDIA_CIERRE",
            "expression": "CALCULATE([%TIEMPO_PARCIAL_MEDIA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "%EVENTUALIDAD_MEDIA_DAA",
            "expression": "IF(OR(ISBLANK([%EVENTUALIDAD_MEDIA]),[%EVENTUALIDAD_MEDIA]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([%EVENTUALIDAD_MEDIA_AA]),[%EVENTUALIDAD_MEDIA_AA]=0),BLANK(),([%EVENTUALIDAD_MEDIA]-[%EVENTUALIDAD_MEDIA_AA])/[%EVENTUALIDAD_MEDIA_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DAA"
          },
          {
            "name": "%EVENTUALIDAD_MEDIA_DCIERRE",
            "expression": "IF(OR(ISBLANK([%EVENTUALIDAD_MEDIA]),[%EVENTUALIDAD_MEDIA]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([%EVENTUALIDAD_MEDIA_CIERRE]),[%EVENTUALIDAD_MEDIA_CIERRE]=0),BLANK(),([%EVENTUALIDAD_MEDIA]-[%EVENTUALIDAD_MEDIA_CIERRE])/[%EVENTUALIDAD_MEDIA_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DCIERRE"
          },
          {
            "name": "ANTIGUEDAD_MEDIA",
            "description": "Media de la antiguedad  en años",
            "expression": "CALCULATE(AVERAGE([ANTIGUEDAD])/12,ALL(INCIDENCIA))",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "%TIEMPO_PARCIAL_MEDIA_DAA",
            "expression": "IF(OR(ISBLANK([%TIEMPO_PARCIAL_MEDIA]),[%TIEMPO_PARCIAL_MEDIA]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([%TIEMPO_PARCIAL_MEDIA_AA]),[%TIEMPO_PARCIAL_MEDIA_AA]=0),BLANK(),([%TIEMPO_PARCIAL_MEDIA]-[%TIEMPO_PARCIAL_MEDIA_AA])/[%TIEMPO_PARCIAL_MEDIA_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DAA"
          },
          {
            "name": "%TIEMPO_PARCIAL_MEDIA_DCIERRE",
            "expression": "IF(OR(ISBLANK([%TIEMPO_PARCIAL_MEDIA]),[%TIEMPO_PARCIAL_MEDIA]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([%TIEMPO_PARCIAL_MEDIA_CIERRE]),[%TIEMPO_PARCIAL_MEDIA_CIERRE]=0),BLANK(),([%TIEMPO_PARCIAL_MEDIA]-[%TIEMPO_PARCIAL_MEDIA_CIERRE])/[%TIEMPO_PARCIAL_MEDIA_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DCIERRE"
          },
          {
            "name": "EDAD_MEDIA",
            "description": "Media de edad",
            "expression": "CALCULATE(AVERAGE([EDAD]),ALL(INCIDENCIA))",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "%REDUCCION_JORNADA",
            "description": "Porcentaje de empleados con reduccion de jornada",
            "expression": "CALCULATE(CALCULATE(AVERAGE([PORCENTAJE_REDUCCION_JORNADA])/100, LASTNONBLANK(FECHA[FECHA], CALCULATE(AVERAGE([PORCENTAJE_REDUCCION_JORNADA])))),ALL(INCIDENCIA))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "%REDUCCION_JORNADA_AA",
            "expression": "CALCULATE([%REDUCCION_JORNADA],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_AA"
          },
          {
            "name": "%REDUCCION_JORNADA_ACUM",
            "expression": "IF(ISBLANK([%REDUCCION_JORNADA]),BLANK(),TOTALYTD([%REDUCCION_JORNADA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "%REDUCCION_JORNADA_DAA",
            "expression": "IF(ISBLANK([%REDUCCION_JORNADA]) || ISBLANK([%REDUCCION_JORNADA_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%REDUCCION_JORNADA_AA]=0,BLANK(),([%REDUCCION_JORNADA]-[%REDUCCION_JORNADA_AA])/[%REDUCCION_JORNADA_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DAA"
          },
          {
            "name": "%REDUCCION_JORNADA_ACUMAA",
            "expression": "CALCULATE([%REDUCCION_JORNADA_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_ACUMAA"
          },
          {
            "name": "%REDUCCION_JORNADA_DACUMAA",
            "expression": "IF(OR(ISBLANK([%REDUCCION_JORNADA_ACUM]),ISBLANK([%REDUCCION_JORNADA_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%REDUCCION_JORNADA_ACUMAA]=0,BLANK(),([%REDUCCION_JORNADA_ACUM]-[%REDUCCION_JORNADA_ACUMAA])/[%REDUCCION_JORNADA_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DACUMAA"
          },
          {
            "name": "%REDUCCION_JORNADA_CIERRE",
            "expression": "CALCULATE([%REDUCCION_JORNADA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "%REDUCCION_JORNADA_DCIERRE",
            "expression": "IF(OR(ISBLANK([%REDUCCION_JORNADA_ACUM]),ISBLANK([%REDUCCION_JORNADA_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%REDUCCION_JORNADA_CIERRE]=0,BLANK(),([%REDUCCION_JORNADA_ACUM]-[%REDUCCION_JORNADA_CIERRE])/[%REDUCCION_JORNADA_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DCIERRE"
          },
          {
            "name": "%REDUCCION_JORNADA_MEDIA",
            "description": "Porcentaje de empleados con reduccion de jornada medio",
            "expression": "CALCULATE(AVERAGE([PORCENTAJE_REDUCCION_JORNADA])/100,ALL(INCIDENCIA))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "%REDUCCION_JORNADA_MEDIA_AA",
            "expression": "CALCULATE([%REDUCCION_JORNADA_MEDIA],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_AA"
          },
          {
            "name": "%REDUCCION_JORNADA_MEDIA_ACUM",
            "expression": "IF(ISBLANK([%REDUCCION_JORNADA_MEDIA]),BLANK(),TOTALYTD([%REDUCCION_JORNADA_MEDIA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "%REDUCCION_JORNADA_MEDIA_DAA",
            "expression": "IF(ISBLANK([%REDUCCION_JORNADA_MEDIA]) || ISBLANK([%REDUCCION_JORNADA_MEDIA_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%REDUCCION_JORNADA_MEDIA_AA]=0,BLANK(),([%REDUCCION_JORNADA_MEDIA]-[%REDUCCION_JORNADA_MEDIA_AA])/[%REDUCCION_JORNADA_MEDIA_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DAA"
          },
          {
            "name": "%REDUCCION_JORNADA_MEDIA_ACUMAA",
            "expression": "CALCULATE([%REDUCCION_JORNADA_MEDIA_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_ACUMAA"
          },
          {
            "name": "%REDUCCION_JORNADA_MEDIA_DACUMAA",
            "expression": "IF(OR(ISBLANK([%REDUCCION_JORNADA_MEDIA_ACUM]),ISBLANK([%REDUCCION_JORNADA_MEDIA_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%REDUCCION_JORNADA_MEDIA_ACUMAA]=0,BLANK(),([%REDUCCION_JORNADA_MEDIA_ACUM]-[%REDUCCION_JORNADA_MEDIA_ACUMAA])/[%REDUCCION_JORNADA_MEDIA_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DACUMAA"
          },
          {
            "name": "%REDUCCION_JORNADA_MEDIA_CIERRE",
            "expression": "CALCULATE([%REDUCCION_JORNADA_MEDIA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "%REDUCCION_JORNADA_MEDIA_DCIERRE",
            "expression": "IF(OR(ISBLANK([%REDUCCION_JORNADA_MEDIA_ACUM]),ISBLANK([%REDUCCION_JORNADA_MEDIA_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%REDUCCION_JORNADA_MEDIA_CIERRE]=0,BLANK(),([%REDUCCION_JORNADA_MEDIA_ACUM]-[%REDUCCION_JORNADA_MEDIA_CIERRE])/[%REDUCCION_JORNADA_MEDIA_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DCIERRE"
          },
          {
            "name": "ANTIGUEDAD_MEDIA_AA",
            "expression": "IF(HASONEVALUE(FECHA[ANO]),CALCULATE([ANTIGUEDAD_MEDIA],DATEADD(FECHA[FECHA],-1,YEAR)\t))",
            "displayFolder": "PLANTILLA_AA"
          },
          {
            "name": "EDAD_MEDIA_AA",
            "expression": "IF(HASONEVALUE(FECHA[ANO]),CALCULATE([EDAD_MEDIA],DATEADD(FECHA[FECHA],-1,YEAR)\t))",
            "displayFolder": "PLANTILLA_AA"
          },
          {
            "name": "ANTIGUEDAD_MEDIA_DAA",
            "expression": "IF(OR(ISBLANK([ANTIGUEDAD_MEDIA]),[ANTIGUEDAD_MEDIA]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([ANTIGUEDAD_MEDIA_AA]),[ANTIGUEDAD_MEDIA_AA]=0),BLANK(),([ANTIGUEDAD_MEDIA]-[ANTIGUEDAD_MEDIA_AA])/[ANTIGUEDAD_MEDIA_AA]))",
            "displayFolder": "PLANTILLA_DAA"
          },
          {
            "name": "%EVENTUALIDAD_ACUM",
            "expression": "IF(ISBLANK([%EVENTUALIDAD]),BLANK(),TOTALYTD([%EVENTUALIDAD],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "%EVENTUALIDAD_MEDIA_ACUM",
            "expression": "IF(ISBLANK([%EVENTUALIDAD_MEDIA]),BLANK(),TOTALYTD([%EVENTUALIDAD_MEDIA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "%TIEMPO_PARCIAL_MEDIA_ACUM",
            "expression": "IF(ISBLANK([%TIEMPO_PARCIAL_MEDIA]),BLANK(),TOTALYTD([%TIEMPO_PARCIAL_MEDIA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "MEDIA_EMPLEADOS_ACUM",
            "expression": "IF(ISBLANK([MEDIA_EMPLEADOS]),BLANK(),TOTALYTD([MEDIA_EMPLEADOS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "EMPLEADOS_ACUM",
            "expression": "IF(ISBLANK([EMPLEADOS]),BLANK(),TOTALYTD([EMPLEADOS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "ANTIGUEDAD_MEDIA_ACUM",
            "expression": "IF(ISBLANK([ANTIGUEDAD_MEDIA]),BLANK(),TOTALYTD([ANTIGUEDAD_MEDIA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "EDAD_MEDIA_ACUM",
            "expression": "IF(ISBLANK([EDAD_MEDIA]),BLANK(),TOTALYTD([EDAD_MEDIA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "%EVENTUALIDAD_ACUMAA",
            "expression": "CALCULATE([%EVENTUALIDAD_ACUM],\tDATEADD(FECHA[FECHA],-1,YEAR))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_ACUMAA"
          },
          {
            "name": "%EVENTUALIDAD_MEDIA_ACUMAA",
            "expression": "CALCULATE([%EVENTUALIDAD_MEDIA_ACUM],\tDATEADD(FECHA[FECHA],-1,YEAR))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_ACUMAA"
          },
          {
            "name": "%TIEMPO_PARCIAL_MEDIA_ACUMAA",
            "expression": "CALCULATE([%TIEMPO_PARCIAL_MEDIA_ACUM],\tDATEADD(FECHA[FECHA],-1,YEAR))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_ACUMAA"
          },
          {
            "name": "MEDIA_EMPLEADOS_ACUMAA",
            "expression": "CALCULATE([MEDIA_EMPLEADOS_ACUM],\tDATEADD(FECHA[FECHA],-1,YEAR))",
            "displayFolder": "PLANTILLA_ACUMAA"
          },
          {
            "name": "EMPLEADOS_ACUMAA",
            "expression": "CALCULATE([EMPLEADOS_ACUM],\tDATEADD(FECHA[FECHA],-1,YEAR))",
            "displayFolder": "PLANTILLA_ACUMAA"
          },
          {
            "name": "ANTIGUEDAD_MEDIA_ACUMAA",
            "expression": "CALCULATE([ANTIGUEDAD_MEDIA_ACUM],\tDATEADD(FECHA[FECHA],-1,YEAR))",
            "displayFolder": "PLANTILLA_ACUMAA"
          },
          {
            "name": "EDAD_MEDIA_ACUMAA",
            "expression": "CALCULATE([EDAD_MEDIA_ACUM],\tDATEADD(FECHA[FECHA],-1,YEAR))",
            "displayFolder": "PLANTILLA_ACUMAA"
          },
          {
            "name": "%EVENTUALIDAD_DACUMAA",
            "expression": "IF(OR(ISBLANK([%EVENTUALIDAD_ACUM]),ISBLANK([%EVENTUALIDAD_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%EVENTUALIDAD_ACUMAA]=0,BLANK(),([%EVENTUALIDAD_ACUM]-[%EVENTUALIDAD_ACUMAA])/[%EVENTUALIDAD_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DACUMAA"
          },
          {
            "name": "%EVENTUALIDAD_MEDIA_DACUMAA",
            "expression": "IF(OR(ISBLANK([%EVENTUALIDAD_MEDIA_ACUM]),ISBLANK([%EVENTUALIDAD_MEDIA_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%EVENTUALIDAD_MEDIA_ACUMAA]=0,BLANK(),([%EVENTUALIDAD_MEDIA_ACUM]-[%EVENTUALIDAD_MEDIA_ACUMAA])/[%EVENTUALIDAD_MEDIA_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DACUMAA"
          },
          {
            "name": "%TIEMPO_PARCIAL_MEDIA_DACUMAA",
            "expression": "IF(OR(ISBLANK([%TIEMPO_PARCIAL_MEDIA_ACUM]),ISBLANK([%TIEMPO_PARCIAL_MEDIA_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%TIEMPO_PARCIAL_MEDIA_ACUMAA]=0,BLANK(),([%TIEMPO_PARCIAL_MEDIA_ACUM]-[%TIEMPO_PARCIAL_MEDIA_ACUMAA])/[%TIEMPO_PARCIAL_MEDIA_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DACUMAA"
          },
          {
            "name": "MEDIA_EMPLEADOS_DACUMAA",
            "expression": "IF(OR(ISBLANK([MEDIA_EMPLEADOS_ACUM]),ISBLANK([MEDIA_EMPLEADOS_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([MEDIA_EMPLEADOS_ACUMAA]=0,BLANK(),([MEDIA_EMPLEADOS_ACUM]-[MEDIA_EMPLEADOS_ACUMAA])/[MEDIA_EMPLEADOS_ACUMAA]))",
            "displayFolder": "PLANTILLA_DACUMAA"
          },
          {
            "name": "EMPLEADOS_DACUMAA",
            "expression": "IF(OR(ISBLANK([EMPLEADOS_ACUM]),ISBLANK([EMPLEADOS_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([EMPLEADOS_ACUMAA]=0,BLANK(),([EMPLEADOS_ACUM]-[EMPLEADOS_ACUMAA])/[EMPLEADOS_ACUMAA]))",
            "displayFolder": "PLANTILLA_DACUMAA"
          },
          {
            "name": "ANTIGUEDAD_MEDIA_DACUMAA",
            "expression": "IF(OR(ISBLANK([ANTIGUEDAD_MEDIA_ACUM]),ISBLANK([ANTIGUEDAD_MEDIA_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([ANTIGUEDAD_MEDIA_ACUMAA]=0,BLANK(),([ANTIGUEDAD_MEDIA_ACUM]-[ANTIGUEDAD_MEDIA_ACUMAA])/[ANTIGUEDAD_MEDIA_ACUMAA]))",
            "displayFolder": "PLANTILLA_DACUMAA"
          },
          {
            "name": "EDAD_MEDIA_DACUMAA",
            "expression": "IF(OR(ISBLANK([EDAD_MEDIA_ACUM]),ISBLANK([EDAD_MEDIA_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([EDAD_MEDIA_ACUMAA]=0,BLANK(),([EDAD_MEDIA_ACUM]-[EDAD_MEDIA_ACUMAA])/[EDAD_MEDIA_ACUMAA]))",
            "displayFolder": "PLANTILLA_DACUMAA"
          },
          {
            "name": "EDAD_MEDIA_DAA",
            "expression": "IF(OR(ISBLANK([EDAD_MEDIA]),[EDAD_MEDIA]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([EDAD_MEDIA_AA]),[EDAD_MEDIA]=0),BLANK(),([EDAD_MEDIA]-[EDAD_MEDIA_AA])/[EDAD_MEDIA_AA]))",
            "displayFolder": "PLANTILLA_DAA"
          },
          {
            "name": "EMPLEADOS_DAA",
            "expression": "IF(OR(ISBLANK([EMPLEADOS]),[EMPLEADOS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([EMPLEADOS_AA]),[EMPLEADOS]=0),BLANK(),([EMPLEADOS]-[EMPLEADOS_AA])/[EMPLEADOS_AA]))",
            "displayFolder": "PLANTILLA_DAA"
          },
          {
            "name": "EMPLEADOS_CIERRE",
            "expression": "CALCULATE([EMPLEADOS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "EDAD_MEDIA_CIERRE",
            "expression": "CALCULATE([EDAD_MEDIA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "ANTIGUEDAD_MEDIA_CIERRE",
            "expression": "CALCULATE([ANTIGUEDAD_MEDIA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "ANTIGUEDAD_MEDIA_DCIERRE",
            "expression": "IF(OR(ISBLANK([ANTIGUEDAD_MEDIA]),[ANTIGUEDAD_MEDIA]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([ANTIGUEDAD_MEDIA_CIERRE]),[ANTIGUEDAD_MEDIA_CIERRE]=0),BLANK(),([ANTIGUEDAD_MEDIA]-[ANTIGUEDAD_MEDIA_CIERRE])/[ANTIGUEDAD_MEDIA_CIERRE]))",
            "displayFolder": "PLANTILLA_DCIERRE"
          },
          {
            "name": "EDAD_MEDIA_DCIERRE",
            "expression": "IF(OR(ISBLANK([EDAD_MEDIA]),[EDAD_MEDIA]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([EDAD_MEDIA_CIERRE]),[EDAD_MEDIA_CIERRE]=0),BLANK(),([EDAD_MEDIA]-[EDAD_MEDIA_CIERRE])/[EDAD_MEDIA_CIERRE]))",
            "displayFolder": "PLANTILLA_DCIERRE"
          },
          {
            "name": "EMPLEADOS_DCIERRE",
            "expression": "IF(OR(ISBLANK([EMPLEADOS]),[EMPLEADOS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([EMPLEADOS_CIERRE]),[EMPLEADOS_CIERRE]=0),BLANK(),([EMPLEADOS]-[EMPLEADOS_CIERRE])/[EMPLEADOS_CIERRE]))",
            "displayFolder": "PLANTILLA_DCIERRE"
          },
          {
            "name": "VENCIMIENTOS",
            "description": "Sumatorio del numero de bajas contrato en el periodo filtrado",
            "expression": "CALCULATE(IF(SUM(PLANTILLA[BAJA_CO])<= 0, BLANK(),SUM(PLANTILLA[BAJA_CO])),ALL(INCIDENCIA))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "VENCIMIENTOS_AA",
            "expression": "IF(HASONEVALUE(FECHA[ANO]),\n\t\t\t\t\t\t\t\t\t\tCALCULATE([VENCIMIENTOS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_AA"
          },
          {
            "name": "VENCIMIENTOS_ACUM",
            "expression": "IF(ISBLANK([VENCIMIENTOS]),BLANK(),TOTALYTD([VENCIMIENTOS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "VENCIMIENTOS_ACUMAA",
            "expression": "CALCULATE([VENCIMIENTOS_ACUM],\tDATEADD(FECHA[FECHA],-1,YEAR))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_ACUMAA"
          },
          {
            "name": "VENCIMIENTOS_DACUMAA",
            "expression": "IF(OR(ISBLANK([VENCIMIENTOS_ACUM]),ISBLANK([VENCIMIENTOS_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([VENCIMIENTOS_ACUMAA]=0,BLANK(),([VENCIMIENTOS_ACUM]-[VENCIMIENTOS_ACUMAA])/[VENCIMIENTOS_ACUMAA]))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_DACUMAA"
          },
          {
            "name": "VENCIMIENTOS_DAA",
            "expression": "IF(OR(ISBLANK([VENCIMIENTOS]),[VENCIMIENTOS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([VENCIMIENTOS_AA]),[VENCIMIENTOS]=0),BLANK(),([VENCIMIENTOS]-[VENCIMIENTOS_AA])/[VENCIMIENTOS_AA]))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_DAA"
          },
          {
            "name": "VENCIMIENTOS_CIERRE",
            "expression": "CALCULATE([VENCIMIENTOS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "VENCIMIENTOS_DCIERRE",
            "expression": "IF(OR(ISBLANK([VENCIMIENTOS]),[VENCIMIENTOS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([VENCIMIENTOS_CIERRE]),[VENCIMIENTOS_CIERRE]=0),BLANK(),([VENCIMIENTOS]-[VENCIMIENTOS_CIERRE])/[VENCIMIENTOS_CIERRE]))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_DCIERRE"
          },
          {
            "name": "ALTAS_EMPRESA",
            "description": "Sumatorio del numero de altas en la empresa en el periodo seleccionado",
            "expression": "CALCULATE(IF(SUM(PLANTILLA[ALTA_EMP])<= 0, BLANK(),SUM(PLANTILLA[ALTA_EMP])),ALL(INCIDENCIA))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "ALTAS_EMPRESA_AA",
            "expression": "IF(HASONEVALUE(FECHA[ANO]),\n\t\t\t\t\t\t\t\t\t\tCALCULATE([ALTAS_EMPRESA],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_AA"
          },
          {
            "name": "ALTAS_EMPRESA_ACUM",
            "expression": "IF(ISBLANK([ALTAS_EMPRESA]),BLANK(),TOTALYTD([ALTAS_EMPRESA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "ALTAS_EMPRESA_ACUMAA",
            "expression": "CALCULATE([ALTAS_EMPRESA_ACUM],\tDATEADD(FECHA[FECHA],-1,YEAR))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_ACUMAA"
          },
          {
            "name": "ALTAS_EMPRESA_DACUMAA",
            "expression": "IF(OR(ISBLANK([ALTAS_EMPRESA_ACUM]),ISBLANK([ALTAS_EMPRESA_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([ALTAS_EMPRESA_ACUMAA]=0,BLANK(),([ALTAS_EMPRESA_ACUM]-[ALTAS_EMPRESA_ACUMAA])/[ALTAS_EMPRESA_ACUMAA]))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_DACUMAA"
          },
          {
            "name": "ALTAS_EMPRESA_DAA",
            "expression": "IF(OR(ISBLANK([ALTAS_EMPRESA]),[ALTAS_EMPRESA]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([ALTAS_EMPRESA_AA]),[ALTAS_EMPRESA]=0),BLANK(),([ALTAS_EMPRESA]-[ALTAS_EMPRESA_AA])/[ALTAS_EMPRESA_AA]))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_DAA"
          },
          {
            "name": "ALTAS_EMPRESA_CIERRE",
            "expression": "CALCULATE([ALTAS_EMPRESA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "ALTAS_EMPRESA_DCIERRE",
            "expression": "IF(OR(ISBLANK([ALTAS_EMPRESA]),[ALTAS_EMPRESA]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([ALTAS_EMPRESA_CIERRE]),[ALTAS_EMPRESA_CIERRE]=0),BLANK(),([ALTAS_EMPRESA]-[ALTAS_EMPRESA_CIERRE])/[ALTAS_EMPRESA_CIERRE]))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_DCIERRE"
          },
          {
            "name": "PLANTILLA_CONTRATADA_PLANIFICADA",
            "description": "Empleados - Numero de vencimientos futuros",
            "expression": "CALCULATE(IF(LASTNONBLANK(PLANTILLA[ID_FECHA],PLANTILLA[ID_FECHA])<TODAY(), [EMPLEADOS], [EMPLEADOS]-[VENCIMIENTOS_FUTUROS_ACUM_DIA_ANTERIOR]),ALL(INCIDENCIA))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "PLANTILLA_CONTRATADA_PLANIFICADA_CIERRE",
            "expression": "CALCULATE([PLANTILLA_CONTRATADA_PLANIFICADA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "PLANTILLA_MEDIA_CONTRATADA_PLANIFICADA",
            "description": "Plantilla media contando las apariciones de los empleados cada día / numero de dias con plantilla contratada planificada, restandole luego los vencimientos a futuro ",
            "expression": "CALCULATE(DIVIDE(SUM ( PLANTILLA[COUNT_RAW] ),COUNTROWS(FILTER (FECHA, (not ISBLANK ( [PLANTILLA_CONTRATADA_PLANIFICADA]))))) - [VENCIMIENTOS_FUTUROS_ACUM_DIA_ANTERIOR],ALL(INCIDENCIA))",
            "formatString": "#,0.00",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "PLANTILLA_MEDIA_CONTRATADA_PLANIFICADA_CIERRE",
            "expression": "CALCULATE([PLANTILLA_MEDIA_CONTRATADA_PLANIFICADA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "%EVENTUALIDAD_PLANIFICADA",
            "description": "% Eventualidad, pero utilizando la plantilla contratada planificada en el calculo si la fecha es >= Fecha actual",
            "expression": "CALCULATE(IF(LASTNONBLANK(PLANTILLA[ID_FECHA],PLANTILLA[ID_FECHA])<TODAY(),[%EVENTUALIDAD], DIVIDE((CALCULATE([PLANTILLA_CONTRATADA_PLANIFICADA],TIPO_CONTRATO[TIPO_CONTRATO]=\"EVENTUAL\")),[PLANTILLA_CONTRATADA_PLANIFICADA])),ALL(INCIDENCIA))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "%EVENTUALIDAD_PLANIFICADA_CIERRE",
            "expression": "CALCULATE([%EVENTUALIDAD_PLANIFICADA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "%EVENTUALIDAD_MEDIA_PLANIFICADA",
            "description": "%Eventualidad media, pero utilizando la plantilla media contratada planificada en el calculo si la fecha es >= al dia actual",
            "expression": "CALCULATE(IF(LASTNONBLANK(PLANTILLA[ID_FECHA],PLANTILLA[ID_FECHA])<TODAY(),[%EVENTUALIDAD_MEDIA], DIVIDE((CALCULATE([PLANTILLA_MEDIA_CONTRATADA_PLANIFICADA],TIPO_CONTRATO[TIPO_CONTRATO]=\"EVENTUAL\")),[PLANTILLA_MEDIA_CONTRATADA_PLANIFICADA])),ALL(INCIDENCIA))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "%EVENTUALIDAD_MEDIA_PLANIFICADA_CIERRE",
            "expression": "CALCULATE([%EVENTUALIDAD_MEDIA_PLANIFICADA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "%TIEMPO_PARCIAL_MEDIA_PLANIFICADA",
            "description": "%Tiempo parcial media, pero utilizando la plantilla media contratada planificada si la fecha es >= a la fecha actual",
            "expression": "CALCULATE(IF(LASTNONBLANK(PLANTILLA[ID_FECHA],PLANTILLA[ID_FECHA])<TODAY(),[%TIEMPO_PARCIAL_MEDIA],DIVIDE((CALCULATE([PLANTILLA_MEDIA_CONTRATADA_PLANIFICADA],TIPO_JORNADA[TIPO_JORNADA]=\"TIEMPO PARCIAL\")),[PLANTILLA_MEDIA_CONTRATADA_PLANIFICADA])),ALL(INCIDENCIA))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "%TIEMPO_PARCIAL_MEDIA_PLANIFICADA_CIERRE",
            "expression": "CALCULATE([%TIEMPO_PARCIAL_MEDIA_PLANIFICADA],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "VENCIMIENTOS_FUTUROS_ACUM_DIA_ANTERIOR",
            "expression": "CALCULATE([VENCIMIENTOS_FUTUROS_ACUM],\tDATEADD(LASTNONBLANK(FECHA[FECHA],FECHA[FECHA]),-1,DAY))",
            "isHidden": true,
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "VENCIMIENTOS_FUTUROS_ACUM",
            "description": "Numero de vencimientos acumulados desde hoy hasta el final del ejercicio fiscal",
            "expression": "IF(\n\tLASTNONBLANK(PLANTILLA[ID_FECHA],PLANTILLA[ID_FECHA])<TODAY()\n\t,BLANK()\n\t,TOTALYTD([VENCIMIENTOS],FECHA[FECHA],FECHA[FECHA]>=TODAY(),\"01/31\")\n)",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "PLANTILLA_CONTRATADA_PLANIFICADA_ACUM",
            "expression": "IF(ISBLANK([PLANTILLA_CONTRATADA_PLANIFICADA]),BLANK(),TOTALYTD([PLANTILLA_CONTRATADA_PLANIFICADA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "PLANTILLA_MEDIA_CONTRATADA_PLANIFICADA_ACUM",
            "expression": "IF(ISBLANK([PLANTILLA_MEDIA_CONTRATADA_PLANIFICADA]),BLANK(),TOTALYTD([PLANTILLA_MEDIA_CONTRATADA_PLANIFICADA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "%EVENTUALIDAD_PLANIFICADA_ACUM",
            "expression": "IF(ISBLANK([%EVENTUALIDAD_PLANIFICADA]),BLANK(),TOTALYTD([%EVENTUALIDAD_PLANIFICADA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "%EVENTUALIDAD_MEDIA_PLANIFICADA_ACUM",
            "expression": "IF(ISBLANK([%EVENTUALIDAD_MEDIA_PLANIFICADA]),BLANK(),TOTALYTD([%EVENTUALIDAD_MEDIA_PLANIFICADA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "%TIEMPO_PARCIAL_MEDIA_PLANIFICADA_ACUM",
            "expression": "IF(ISBLANK([%TIEMPO_PARCIAL_MEDIA_PLANIFICADA]),BLANK(),TOTALYTD([%TIEMPO_PARCIAL_MEDIA_PLANIFICADA],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "%JORNADA_PARCIAL",
            "description": "Media del % de empleados con jornada parcial",
            "expression": "CALCULATE(AVERAGE([PORCENTAJE_JORNADA_PARCIAL])/100,ALL(INCIDENCIA))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "%JORNADA_PARCIAL_DCIERRE",
            "expression": "IF(OR(ISBLANK([%JORNADA_PARCIAL_ACUM]),ISBLANK([%JORNADA_PARCIAL_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%JORNADA_PARCIAL_CIERRE]=0,BLANK(),([%JORNADA_PARCIAL_ACUM]-[%JORNADA_PARCIAL_CIERRE])/[%JORNADA_PARCIAL_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DCIERRE"
          },
          {
            "name": "%JORNADA_PARCIAL_ACUMAA",
            "expression": "CALCULATE([%JORNADA_PARCIAL_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_ACUMAA"
          },
          {
            "name": "%JORNADA_PARCIAL_DACUMAA",
            "expression": "IF(OR(ISBLANK([%JORNADA_PARCIAL_ACUM]),ISBLANK([%JORNADA_PARCIAL_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%JORNADA_PARCIAL_ACUMAA]=0,BLANK(),([%JORNADA_PARCIAL_ACUM]-[%JORNADA_PARCIAL_ACUMAA])/[%JORNADA_PARCIAL_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DACUMAA"
          },
          {
            "name": "%JORNADA_PARCIAL_CIERRE",
            "expression": "CALCULATE([%JORNADA_PARCIAL],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "%JORNADA_PARCIAL_AA",
            "expression": "CALCULATE([%JORNADA_PARCIAL],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_AA"
          },
          {
            "name": "%JORNADA_PARCIAL_ACUM",
            "expression": "IF(ISBLANK([%JORNADA_PARCIAL]),BLANK(),TOTALYTD([%JORNADA_PARCIAL],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "%JORNADA_PARCIAL_DAA",
            "expression": "IF(ISBLANK([%JORNADA_PARCIAL]) || ISBLANK([%JORNADA_PARCIAL_AA]),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([%JORNADA_PARCIAL_AA]=0,BLANK(),([%JORNADA_PARCIAL]-[%JORNADA_PARCIAL_AA])/[%JORNADA_PARCIAL_AA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DAA"
          },
          {
            "name": "BAJAS",
            "description": "Sumatorio del numero de bajas",
            "expression": "CALCULATE(IF(SUM([BAJA])<=0,BLANK(),SUM([BAJA])),ALL(INCIDENCIA))",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "BAJAS_ACUM",
            "expression": "IF(ISBLANK([BAJAS]),BLANK(),TOTALYTD([BAJAS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "BAJAS_AA",
            "expression": "IF(HASONEVALUE(FECHA[ANO]),CALCULATE([BAJAS],DATEADD(FECHA[FECHA],-1,YEAR)\t))",
            "displayFolder": "PLANTILLA_AA"
          },
          {
            "name": "BAJAS_DAA",
            "expression": "IF(OR(ISBLANK([BAJAS]),[BAJAS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([BAJAS_AA]),[BAJAS_AA]=0),BLANK(),([BAJAS]-[BAJAS_AA])/[BAJAS_AA]))",
            "displayFolder": "PLANTILLA_DAA"
          },
          {
            "name": "BAJAS_ACUMAA",
            "expression": "CALCULATE([BAJAS_ACUM],\tDATEADD(FECHA[FECHA],-1,YEAR))",
            "displayFolder": "PLANTILLA_ACUMAA"
          },
          {
            "name": "BAJAS_CIERRE",
            "expression": "CALCULATE([BAJAS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "BAJAS_DCIERRE",
            "expression": "IF(OR(ISBLANK([BAJAS]),ISBLANK([BAJAS_CIERRE])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([BAJAS_CIERRE]=0,BLANK(),([BAJAS_ACUM]-[BAJAS_CIERRE])/[BAJAS_CIERRE]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DCIERRE"
          },
          {
            "name": "BAJAS_DACUMAA",
            "expression": "IF(OR(ISBLANK([BAJAS_ACUM]),ISBLANK([BAJAS_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([BAJAS_ACUMAA]=0,BLANK(),([BAJAS_ACUM]-[BAJAS_ACUMAA])/[BAJAS_ACUMAA]))",
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %",
            "displayFolder": "PLANTILLA_DACUMAA"
          },
          {
            "name": "AUSENCIAS",
            "description": "Sumatorio del número de ausencias programadas",
            "expression": " IF(SUM(PLANTILLA[AUSENCIA_PROGRAMADA])=0,BLANK(),SUM(PLANTILLA[AUSENCIA_PROGRAMADA]))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA"
          },
          {
            "name": "AUSENCIAS_AA",
            "expression": "IF(HASONEVALUE(FECHA[ANO]),\n\t\t\t\t\t\t\t\t\t\tCALCULATE([AUSENCIAS],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_AA"
          },
          {
            "name": "AUSENCIAS_DAA",
            "expression": "IF(OR(ISBLANK([AUSENCIAS]),[AUSENCIAS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([AUSENCIAS_AA]),[%EVENTUALIDAD_AA]=0),BLANK(),([AUSENCIAS]-[AUSENCIAS_AA])/[AUSENCIAS_AA]))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_DAA"
          },
          {
            "name": "AUSENCIAS_CIERRE",
            "expression": "CALCULATE([AUSENCIAS],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_CIERRE"
          },
          {
            "name": "AUSENCIAS_DCIERRE",
            "expression": "IF(OR(ISBLANK([AUSENCIAS]),[AUSENCIAS]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([AUSENCIAS_CIERRE]),[AUSENCIAS_CIERRE]=0),BLANK(),([AUSENCIAS]-[AUSENCIAS_CIERRE])/[AUSENCIAS_CIERRE]))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_DCIERRE"
          },
          {
            "name": "AUSENCIAS_ACUM",
            "expression": "IF(ISBLANK([AUSENCIAS]),BLANK(),TOTALYTD([AUSENCIAS],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_ACUM"
          },
          {
            "name": "AUSENCIAS_ACUMAA",
            "expression": "CALCULATE([AUSENCIAS_ACUM],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0",
            "displayFolder": "PLANTILLA_ACUMAA"
          }
        ],
        "annotations": [
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @FechaIni DATE = '2022-09-21';\nDECLARE @FechaFin DATE = '2022-09-22';\n\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\nSELECT\n\tDENSE_RANK() OVER (\n\tORDER BY SCO_ID_REF_MOD) AS IDDimensionTipoTurno,\n\tSCO_ID_REF_MOD,\n\tNM_REF_MODESP,\n\tMd.CCL_ID_TP_TURNO,\n\tMT.CCL_NM_TP_TURNESP INTO\n\t\t#TEMPCTURNO\n\tFROM\n\t\tM4SCO_REF_MOD Md WITH (NOLOCK)\n\tINNER JOIN M4CCL_X_GA_TP_TUR MT WITH (NOLOCK) ON\n\t\tMd.CCL_ID_TP_TURNO = MT.CCL_ID_TP_TURNO;\n\nCREATE\n\tCLUSTERED INDEX IDX_CTEMPCTURNO ON\n\t#TEMPCTURNO(SCO_ID_REF_MOD);\n\nWITH listaUOs (nivel,\nSTD_ID_WU_CHILD,\nSTD_ID_WU_PARENT,\norden,\nSTD_DT_START,\nSTD_DT_END) AS (\nSELECT\n\t1,\n\tSTD_ID_WU_CHILD,\n\tSTD_ID_WU_PARENT,\n\tCAST(STD_ID_WU_CHILD AS VARCHAR(2000)),\n\tSTD_DT_START,\n\tSTD_DT_END\nFROM\n\tSTD_REL_WORK_UNIT WITH (NOLOCK)\nWHERE\n\tCOALESCE(STD_ID_WU_CHILD,\n\t'') IN ('1869')\nUNION ALL\nSELECT\n\tnivel + 1,\n\tp.STD_ID_WU_CHILD,\n\tp.STD_ID_WU_PARENT,\n\tCAST((orden + p.STD_ID_WU_CHILD) AS VARCHAR(2000)),\n\tp.STD_DT_START,\n\tp.STD_DT_END\nFROM\n\tlistaUOs l,\n\tSTD_REL_WORK_UNIT p WITH (NOLOCK)\nWHERE\n\tl.STD_ID_WU_CHILD = p.STD_ID_WU_PARENT ) SELECT\n\t* INTO\n\t\t#listaUOs\n\tFROM\n\t\tlistaUOs WITH (nolock);\n\nWITH TEMPCALENDARIO (FECHA) AS (\nSELECT\n\tCAST(@FechaIni AS DATE) AS FECHA\nUNION ALL\nSELECT\n\tDATEADD(DAY,\n\t1,\n\tFECHA)\nFROM\n\tTEMPCALENDARIO\nWHERE\n\tDATEADD(DAY,\n\t1,\n\tFECHA) < CAST(@FechaFin AS DATE) ) SELECT\n\t* INTO\n\t\t#TEMPCALENDARIO\n\tFROM\n\t\tTEMPCALENDARIO WITH (nolock);\n\nWITH EMPRESA_GRUPO_DIVISION_SECCION (ID_EMPRESA_GRUPO_DIVISION_SECCION ,\nID_EMPRESA_GRUPO ,\nNOMBRE_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION ,\nNOM_DIVSEC ) AS (\nSELECT\n\tID_DIVSEC,\n\tID_EMPRESA_GRUPO,\n\tEMPRESA_GRUPO,\n\tDIVISION,\n\tSECCION,\n\tNOM_DIVSEC\nFROM\n\t(\n\tSELECT\n\t\t64 AS ID_EMPRESA_GRUPO,\n\t\t'INDIPUNT' AS EMPRESA_GRUPO,\n\t\t91 AS DIVISION,\n\t\t15 AS SECCION,\n\t\t'649115' AS ID_DIVSEC,\n\t\t'INDIPUNT OPERARIOS [9115]' AS NOM_DIVSEC\n\t\tUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'991304' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [1304]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t5 AS SECCION,\n\t\t'991305' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [1305]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'998525' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'998537' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [8537]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t41 AS ID_EMPRESA_GRUPO,\n\t\t'PULL & BEAR LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'418525' AS ID_DIVSEC,\n\t\t'PULL & BEAR LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t41 AS ID_EMPRESA_GRUPO,\n\t\t'PULL & BEAR LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'418537' AS ID_DIVSEC,\n\t\t'PULL & BEAR LOGISTICA [8537]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t03 AS DIVISION,\n\t\t17 AS SECCION,\n\t\t'1890317' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [0317]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t03 AS SECCION,\n\t\t'1891303' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [1303]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'1898525' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t5 AS DIVISION,\n\t\t6 AS SECCION,\n\t\t'370506' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [0506]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t5 AS SECCION,\n\t\t'371305' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [1305]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t28 AS DIVISION,\n\t\t4 AS SECCION,\n\t\t'372804' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [2804]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'378525' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'378537' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [8537]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t9 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t18 AS SECCION,\n\t\t'91318' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [1318]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t32 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA HOME LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'328525' AS ID_DIVSEC,\n\t\t'ZARA HOME LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'431304' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [1304]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t05 AS SECCION,\n\t\t'431305' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [1305]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'438525' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'438537' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [8537]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'141300' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1300]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t12 AS SECCION,\n\t\t'141312' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1312]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t09 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'140900' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1312]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'268525' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t26 AS SECCION,\n\t\t'268526' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8526]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t27 AS SECCION,\n\t\t'268527' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8527]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t28 AS SECCION,\n\t\t'268528' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8528]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t29 AS SECCION,\n\t\t'268529' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8529]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'261300' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [1300]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t63 AS DIVISION,\n\t\t08 AS SECCION,\n\t\t'266308' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [6308]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t12 AS ID_EMPRESA_GRUPO,\n\t\t'LEFTIES LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t19 AS SECCION,\n\t\t'121319' AS ID_DIVSEC,\n\t\t'LEFTIES LOGISTICA [1319]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t23 AS ID_EMPRESA_GRUPO,\n\t\t'OYSHO LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t0 AS SECCION,\n\t\t'231300' AS ID_DIVSEC,\n\t\t'OYSHO LOGISTICA [1300]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t01 AS SECCION,\n\t\t'611301' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [1301]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'611304' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [1304]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'618525' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t357 AS ID_EMPRESA_GRUPO,\n\t\t'TORDERA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'3578525' AS ID_DIVSEC,\n\t\t'TORDERA LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t68 AS ID_EMPRESA_GRUPO,\n\t\t'FASHION LOGISTICS FORWARDERS' AS EMPRESA_GRUPO,\n\t\t00 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'680000' AS ID_DIVSEC,\n\t\t'FASHION LOGISTICS FORWARDERS []' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t330 AS ID_EMPRESA_GRUPO,\n\t\t'INDITEX LOGISTICA' AS EMPRESA_GRUPO,\n\t\t00 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'3300000' AS ID_DIVSEC,\n\t\t'INDITEX LOGISTICA []' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t51 AS DIVISION,\n\t\t73 AS SECCION,\n\t\t'205173' AS ID_DIVSEC,\n\t\t'TEMPE [205173]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t30 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'203000' AS ID_DIVSEC,\n\t\t'TEMPE [203000]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t51 AS DIVISION,\n\t\t34 AS SECCION,\n\t\t'205134' AS ID_DIVSEC,\n\t\t'TEMPE [205134]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t50 AS DIVISION,\n\t\t41 AS SECCION,\n\t\t'205041' AS ID_DIVSEC,\n\t\t'TEMPE [205041]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t398 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA CABANILLAS' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'3988525' AS ID_DIVSEC,\n\t\t'ALMACEN PAQUETE [8525]' AS NOM_DIVSEC ) Q_UNION ) SELECT\n\t* INTO\n\t\t#EMPRESA_GRUPO_DIVISION_SECCION\n\tFROM\n\t\tEMPRESA_GRUPO_DIVISION_SECCION WITH (nolock) \n\t\t\nSELECT\n\t\t\tCCL_CENTRO_COSTE_ORIGEN,\n\t\t\tID_FECHA,\n\t\t\tCASE\n\t\t\t\tWHEN ausencias.CCL_ID_HR IS NOT NULL THEN 1\n\t\t\t\tELSE 0\n\t\t\tEND AS AUSENCIA_PROGRAMADA,\n\t\t\tCASE ausencias.ORIGEN_INCIDENCIA\n\t\t\t\tWHEN 'TA' THEN 'TA' + '#' + datos.ID_ORGANIZATION + '#' + CAST(CCL_ID_ABSENCE AS VARCHAR) \n\t\t\t\tELSE datos.ID_ORGANIZATION + '#' + CAST(CCL_ID_ABSENCE AS VARCHAR) \n\t\t\t\tEND AS ID_ORG_AUSENCIA,\n\t\t\tFECHA_ANTIGUEDAD,\n\t\t\tdatos.ID_ORGANIZATION,\n\t\t\tANTIGUEDAD,\n\t\t\tFECHA_ALTA_EMPRESA,\n\t\t\tFECHA_VENCIMIENTO,\n\t\t\tID_PUESTO,\n\t\t\tID_PUESTO_HR_TYPE,\n\t\t\tID_EMPRESA,\n\t\t\tID_EMPRESA_EXTERNA,\n\t\t\tGENERO,\n\t\t\tEDAD,\n\t\t\tID_TIPO_JORNADA,\n\t\t\tTIPO_JORNADA,\n\t\t\tID_TIPO_CONTRATO,\n\t\t\tTIPO_CONTRATO,\n\t\t\tID_ESTRUCTURA_ALMACEN,\n\t\t\tID_LUGAR_DE_TRABAJO,\n\t\t\tID_PERSONA,\n\t\t\tID_LOCAL,\n\t\t\tID_PERSONA_LOCAL,\n\t\t\tCOUNT_RAW,\n\t\t\tID_TIPO_PERSONA,\n\t\t\tPORC_REDUCCION_JORNADA  AS PORCENTAJE_REDUCCION_JORNADA,\n\t\t\tCAST(ROUND(PORC_REDUCCION_JORNADA, 0, 1) AS INTEGER) AS TRAMO_PORC_REDUCCION,\n\t\t\tID_REDUCCION_JORNADA,\n\t\t\tDIVISION_SECCION,\n\t\t\tID_CATEGORIA,\n\t\t\tID_HORAS_CONTRATADAS,\n\t\t\tdatos.ID_ORGANIZATION + '#' + ID_AREA_ALMACEN AS ID_ORG_ALM,\n\t\t\tID_AREA_ALMACEN,\n\t\t\tMOD_REF_INDIVIDUAL,\n\t\t\tID_EQUIPO,\n\t\t\tID_ROL_EQUIPO,\n\t\t\tID_EQ_ORG,\n\t\t\tMOD_REF_EQUIPO,\n\t\t\tIdInternalTipoTurno,\n\t\t\tUni_org,\n\t\t\tID_UNIDAD_ORGANIZATIVA,\n\t\t\tID_NIVEL_ESTUDIOS,\n\t\t\tID_PAIS_META4_NACIONALIDAD_SECUNDARIA ,\n\t\t\tMAX((CASE WHEN datos.FECHA_ALTA_EMPRESA = datos.ID_FECHA AND COALESCE(empresa_anterior.STD_ID_LEG_ENT, 0) <> datos.ID_EMPRESA THEN 1 ELSE 0 END)) AS ALTA_EMP ,\n\t\t\tMAX( (CASE WHEN datos.FECHA_VENCIMIENTO = datos.ID_FECHA THEN 1 ELSE 0 END)) AS BAJA_CO ,\n\t\t\tCOALESCE(MOD_REF_INDIVIDUAL,\n\t\t\tMOD_REF_EQUIPO) AS ID_MODELO_REFERENCIA ,\n\t\t\tCOALESCE(PORCENTAJE_JORNADA_PARCIAL,\n\t\t\t100) AS PORCENTAJE_JORNADA_PARCIAL ,\n\t\t\tCOALESCE(ROUND(PORCENTAJE_JORNADA_PARCIAL, 0, 1),\n\t\t\t100) AS TRAMO_PORC_JORNADA_PARCIAL ,\n\t\t\tBAJA ,\n\t\t\tCCL_ID_UNIDAD_NEG AS ID_UNIDAD_NEGOCIO,\n\t\t\tausencias.ORIGEN_INCIDENCIA,\n\t\t\tdatos.ID_MOTIVO_ALTA,\n\t\t    datos.ID_TIPO_CONTRATACION,\n\t\t\tdatos.MOTIVO_CONTRATACION,\n\t\t\tdatos.ID_MOTIVO_BAJA,\n\t\t\tdatos.ID_AGRUPACION_BAJA\n\t\tFROM\n\t\t\t(\n\t\t\tSELECT\n\t\t\t\tT.FECHA AS ID_FECHA ,\n\t\t\t\tCAST(periodo.SSP_FEC_ANTIGUEDAD AS DATE) AS FECHA_ANTIGUEDAD ,\n\t\t\t\tperiodo.ID_ORGANIZATION ,\n\t\t\t\t(DATEDIFF(MONTH,\n\t\t\t\tperiodo.SSP_FEC_ANTIGUEDAD,\n\t\t\t\tT.FECHA)) AS ANTIGUEDAD ,\n\t\t\t\tlegalEntityHR.DT_START AS FECHA_ALTA_EMPRESA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN co.SSP_FEC_FIN_PV_CON IS NULL\n\t\t\t\t\tOR co.SSP_FEC_FIN_PV_CON < co.SSP_FEC_INI_CONTRA\n\t\t\t\t\tOR co.SSP_FEC_FIN_PV_CON < T.FECHA THEN CAST(co.SSP_FEC_FIN_CONTRA AS DATE)\n\t\t\t\t\tELSE CAST(\n\t\t\t\t\t(\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN co.SSP_FEC_FIN_PV_CON < co.SSP_FEC_FIN_CONTRA THEN co.SSP_FEC_FIN_PV_CON\n\t\t\t\t\t\tELSE co.SSP_FEC_FIN_CONTRA\n\t\t\t\t\tEND) AS DATE)\n\t\t\t\tEND AS FECHA_VENCIMIENTO ,\n\t\t\t\tm4pos.SCO_ID_JOB_CODE AS ID_PUESTO ,\n\t\t\t\tCONCAT(m4pos.SCO_ID_JOB_CODE,\n\t\t\t\t'#',\n\t\t\t\tperiodo.STD_ID_HR_TYPE) AS ID_PUESTO_HR_TYPE ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06')\n\t\t\t\t\tAND hrole.CCL_ID_CAMPO = 'EMPR_FUNC2' THEN hrole.CCL_CADENA\n\t\t\t\t\tELSE\n\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06') THEN CAST(SUBSTRING(hrole.CCL_CADENA, 3, 3) AS INT)\n\t\t\t\t\t\tELSE\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\tWHEN (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)) = 9\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_DIVISION, '.', '') = 13\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_SECCION, '.', '')= 18 THEN 37\n\t\t\t\t\t\t\tELSE (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT))\n\t\t\t\t\t\tEND\n\t\t\t\t\tEND\n\t\t\t\tEND AS ID_EMPRESA ,\n\t\t\t\tperiodo.STD_ID_EXTERN_ORG AS ID_EMPRESA_EXTERNA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN pe.STD_ID_GENDER = '1' THEN 'H'\n\t\t\t\t\tELSE 'M'\n\t\t\t\tEND AS GENERO ,\n\t\t\t\tDATEDIFF(YEAR,\n\t\t\t\tpe.STD_DT_BIRTH,\n\t\t\t\tT.FECHA) AS EDAD ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.CCL_TIEMPO_PARCIAL,\n\t\t\t\t\t'1') = '1' THEN 2\n\t\t\t\t\tELSE 1\n\t\t\t\tEND AS ID_TIPO_JORNADA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.CCL_TIEMPO_PARCIAL,\n\t\t\t\t\t'1') = '1' THEN 'TIEMPO PARCIAL'\n\t\t\t\t\tELSE 'TIEMPO COMPLETO'\n\t\t\t\tEND AS TIPO_JORNADA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.SSP_NO_DEFINIDO,\n\t\t\t\t\t'S') = 'S' THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND AS ID_TIPO_CONTRATO ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.SSP_NO_DEFINIDO,\n\t\t\t\t\t'S') = 'S' THEN 'INDEFINIDO'\n\t\t\t\t\tELSE 'EVENTUAL'\n\t\t\t\tEND AS TIPO_CONTRATO ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL'\n\t\t\t\t\tAND ceco.CCL_CENTRO_COSTE_ORIGEN <> '8525' THEN 2\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL'\n\t\t\t\t\tAND ceco.CCL_CENTRO_COSTE_ORIGEN = '8525' THEN 1\n\t\t\t\t\t--WHEN legalEntityHR.STD_ID_LEG_ENT=20 AND W.STD_ID_WU_TYPE <> 'TMPL' THEN null--MODIFICACION\n\t\t\t\t\tWHEN EGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION IS NOT NULL THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND AS ID_ESTRUCTURA_ALMACEN ,\n\t\t\t\tlt.STD_ID_WORK_LOCAT AS ID_LUGAR_DE_TRABAJO ,\n\t\t\t\tpe.STD_ID_PERSON AS ID_PERSONA ,\n\t\t\t\tperiodo.CCL_ID_PERSON AS ID_LOCAL ,\n\t\t\t\tCAST(pe.STD_ID_PERSON AS VARCHAR) + '#' + CAST(periodo.CCL_ID_PERSON AS VARCHAR) AS ID_PERSONA_LOCAL ,\n\t\t\t\t1 AS COUNT_RAW ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.STD_DT_END = T.FECHA THEN 1\n\t\t\t\t\tELSE 0\n\t\t\t\tEND AS BAJA ,\n\t\t\t\tperiodo.STD_ID_HR_TYPE AS ID_TIPO_PERSONA ,\n\t\t\t\tCOALESCE(GL.SSP_PORC_GLEGAL,\n\t\t\t\t0) AS PORC_REDUCCION_JORNADA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(GL.SSP_PORC_GLEGAL,\n\t\t\t\t\t0)>0 THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND AS ID_REDUCCION_JORNADA ,\n\t\t\t\thceco.CCL_COD_DIV_SECC DIVISION_SECCION ,\n\t\t\t\tcate.SSP_ID_CATEGORIA AS ID_CATEGORIA ,\n\t\t\t\tHTTH.CCL_ID_TP_HORA + '#' +(CAST(HTTH.CCL_HOR_TM_PARC AS VARCHAR)) AS ID_HORAS_CONTRATADAS ,\n\t\t\t\tM4AR.CCL_ID_AR_ALM AS ID_AREA_ALMACEN ,\n\t\t\t\tTUI.SCO_ID_REF_MOD AS MOD_REF_INDIVIDUAL ,\n\t\t\t\tEQ.SCO_ID_TEAM AS ID_EQUIPO ,\n\t\t\t\tEQ.SCO_ID_TEAM_ROLE AS ID_ROL_EQUIPO ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,\n\t\t\t\t\tEMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) IS NULL\n\t\t\t\t\tOR COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT) IS NULL\n\t\t\t\t\tOR EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM IS NULL THEN '-1'\n\t\t\t\t\tELSE COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,\n\t\t\t\t\tEMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) + '#' + COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)\n\t\t\t\tEND AS ID_EQ_ORG ,\n\t\t\t\tTUT.CCL_ID_MOD_REF AS MOD_REF_EQUIPO ,\n\t\t\t\tTPT.IDDimensionTipoTurno AS IdInternalTipoTurno ,\n\t\t\t\tuo.STD_ID_WU_CHILD AS Uni_org ,\n\t\t\t\tW.STD_ID_WORK_UNIT AS ID_UNIDAD_ORGANIZATIVA ,\n\t\t\t\tMAX(CASE WHEN LEV.STD_ID_DIP_LEVEL IN ('01', '02') THEN 1 WHEN LEV.STD_ID_DIP_LEVEL IN ('03') THEN 2 WHEN LEV.STD_ID_DIP_LEVEL IN ('11') THEN 3 WHEN LEV.STD_ID_DIP_LEVEL IN ('04', '09') THEN 4 WHEN LEV.STD_ID_DIP_LEVEL IN ('05', '10') THEN 5 WHEN LEV.STD_ID_DIP_LEVEL IN ('06', '07', '08') THEN 6 ELSE 0 END) AS ID_NIVEL_ESTUDIOS ,\n\t\t\t\tCOALESCE(MAX(NACIONALIDAD_SECUNDARIA.STD_ID_COUNTRY),\n\t\t\t\t'-1') AS ID_PAIS_META4_NACIONALIDAD_SECUNDARIA ,\n\t\t\t\tceco.CCL_CENTRO_COSTE_ORIGEN ,\n\t\t\t\tJP.SSP_VALOR_COEF_T_P AS PORCENTAJE_JORNADA_PARCIAL ,\n\t\t\t\tunineg.CCL_ID_UNIDAD_NEG\n\t\t\t\t,CASE WHEN periodo.STD_DT_END = T.FECHA\t\t\n\t\t\t\t\tTHEN CAST(MERCADO.CSP_ID_COUNTRY AS VARCHAR)+'#'+CAST(periodo.STD_ID_HRP_END_REA AS VARCHAR)\t\t\n\t\t\t\t\tELSE NULL\t\t\n\t\t\t\t\tEND AS ID_AGRUPACION_BAJA\n\t\t\t\t\t    ,CASE WHEN periodo.STD_DT_END = T.FECHA\t\t\n\t\t\t\t\t\t  THEN CAST(periodo.ID_ORGANIZATION AS VARCHAR) + '#' + CAST(periodo.STD_ID_HRP_END_REA AS VARCHAR)\t\t\n\t\t\t\t\t\t  ELSE NULL\t\t\n\t\t\t\t\t\t  END AS ID_MOTIVO_BAJA\n\t\t\t\t\t\t    ,CASE WHEN periodo.STD_DT_START = T.FECHA\t\t\n\t\t\t\t\t\t\t  THEN periodo.STD_ID_HRP_SRT_REA\t\t\n\t\t\t\t\t\t\t  ELSE NULL\t\t\n\t\t\t\t\t\t\t  END AS ID_MOTIVO_ALTA\n\t\t\t  ,co.SSP_MOTIVO_CONTRATO AS MOTIVO_CONTRATACION\t\n\t\t\t  ,TCI.SSP_TIPO_CONTRATACION AS ID_TIPO_CONTRATACION\n\t\t\tFROM\n\t\t\t\t#TEMPCALENDARIO AS T WITH (NOLOCK)\n\t\t\tINNER JOIN M4SCO_H_HR_POS m4hrpos WITH (NOLOCK) ON\n\t\t\t\tm4hrpos.SCO_DT_START <= T.FECHA\n\t\t\t\tAND m4hrpos.SCO_DT_END >= T.FECHA\n\n\t\t\tINNER JOIN M4SCO_POSITION m4pos WITH (NOLOCK) ON\n\t\t\t\tm4hrpos.SCO_ID_POSITION = m4pos.SCO_ID_POSITION\n\t\t\t\tAND m4pos.SCO_DT_START <= T.FECHA\n\t\t\t\tAND m4pos.SCO_DT_END >= T.FECHA\n\t\t\tINNER JOIN M4CCL_H_OR_UNI_NEG AS unineg WITH (NOLOCK) ON\n\t\t\t\tunineg.SCO_ID_POSITION = m4pos.SCO_ID_POSITION\n\t\t\t\tAND T.FECHA BETWEEN unineg.CCL_DT_START AND unineg.CCL_DT_END\n\t\t\tINNER JOIN STD_WORK_LOCATION lt WITH (NOLOCK) ON\n\t\t\t\tm4pos.SCO_ID_WORK_LOC = lt.STD_ID_WORK_LOCAT\n\t\t\tINNER JOIN M4SCO_HR_ROLE m4role WITH (NOLOCK) ON\n\t\t\t\tm4role.ID_ORGANIZATION = m4hrpos.ID_ORGANIZATION\n\t\t\t\tAND m4hrpos.SCO_ID_HR = m4role.SCO_ID_HR\n\t\t\t\tAND m4hrpos.SCO_OR_HR_ROLE = m4role.SCO_OR_HR_ROLE\n\t\t\t\tAND m4role.SCO_DT_START <= T.FECHA\n\t\t\t\tAND m4role.SCO_DT_END >= T.FECHA\n\t\t\tINNER JOIN STD_HR_PERIOD periodo WITH (NOLOCK) ON\n\t\t\t\tm4role.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND m4role.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND m4role.SCO_OR_HR_ROLE = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND periodo.STD_DT_START <= T.FECHA\n\t\t\t\tAND periodo.STD_DT_END >= T.FECHA\n\t\t\tINNER JOIN M4SCO_H_HR_LEGENT legalEntityHR WITH (NOLOCK) ON\n\t\t\t\tlegalEntityHR.STD_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND legalEntityHR.STD_OR_HR_PERIOD = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND legalEntityHR.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND legalEntityHR.DT_START <= T.FECHA\n\t\t\t\tAND legalEntityHR.DT_END >= T.FECHA\n\t\t\t\tAND legalEntityHR.STD_ID_LEG_ENT NOT IN ('NZ_ZARA',\n\t\t\t\t'SI001',\n\t\t\t\t'SI002')\n\t\t\tINNER JOIN STD_PERSON pe WITH (NOLOCK) ON\n\t\t\t\tpe.STD_ID_PERSON = m4hrpos.SCO_ID_HR\n\t\t\tINNER JOIN M4SSP_H_CONTRATOS co WITH (NOLOCK) ON\n\t\t\t\tco.ID_ORGANIZATION = m4role.ID_ORGANIZATION\n\t\t\t\tAND co.SSP_ID_HR = m4role.SCO_ID_HR\n\t\t\t\tAND co.SSP_OR_HR_PERIOD = m4role.SCO_OR_HR_PER\n\t\t\t\tAND co.SSP_FEC_INI_CONTRA <= T.FECHA\n\t\t\t\tAND co.SSP_FEC_FIN_CONTRA >= T.FECHA\n\t\t\tINNER JOIN M4SSP_CONTRATO_INT cz WITH (NOLOCK) ON\n\t\t\t\tcz.SSP_ID_CONT_INTERN = co.SSP_ID_CONT_INTERN\n\t\t\tINNER JOIN M4SSP_H_CENT_COS ceco WITH (NOLOCK) ON\n\t\t\t\tm4role.ID_ORGANIZATION = ceco.ID_ORGANIZATION\n\t\t\t\tAND m4role.SCO_ID_HR = ceco.SCO_ID_HR\n\t\t\t\tAND m4role.SCO_OR_HR_ROLE = ceco.SCO_OR_HR_ROLE\n\t\t\t\tAND ceco.SSP_FEC_INICIO <= T.FECHA\n\t\t\t\tAND ceco.SSP_FEC_FIN >= T.FECHA\n\t\t\tINNER JOIN M4CCL_H_CENT_COS hceco WITH (NOLOCK) ON\n\t\t\t\tceco.ID_ORGANIZATION = hceco.ID_ORGANIZATION\n\t\t\t\tAND ceco.SCO_ID_HR = hceco.SCO_ID_HR\n\t\t\t\tAND ceco.SCO_OR_HR_ROLE = hceco.SCO_OR_HR_ROLE\n\t\t\t\tAND ceco.SSP_FEC_INICIO = hceco.SSP_FEC_INICIO\n\t\t\tLEFT JOIN M4SSP_CONTRATO_INT AS TCI WITH (NOLOCK)\t\t\n\t\t\t\t on TCI.SSP_ID_CONT_INTERN = co.SSP_ID_CONT_INTERN\n\t\t\tLEFT JOIN M4GLB_HISTORICOS_ROLE AS hrole WITH (NOLOCK) ON\n\t\t\t\throle.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND hrole.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND hrole.SCO_OR_HR_ROLE = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND hrole.DT_START <= T.FECHA\n\t\t\t\tAND hrole.DT_END >= T.FECHA\n\t\t\t\tAND hrole.CCL_ID_CAMPO IN ( 'EMPR_FUNC' ,\n\t\t\t\t'EMPR_FUNC2')\n\t\t\tLEFT JOIN M4SSP_H_CATEGORIA cate WITH (NOLOCK) ON\n\t\t\t\tcate.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND cate.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND cate.SCO_OR_HR_ROLE = m4role.SCO_OR_HR_ROLE\n\t\t\t\tAND cate.SSP_FEC_INICIO <= T.FECHA\n\t\t\t\tAND cate.SSP_FEC_FIN >= T.FECHA\n\t\t\tLEFT JOIN M4CCL_H_HOR_TM_PAR AS HTTH WITH (NOLOCK) ON\n\t\t\t\tHTTH.ID_ORGANIZATION = m4role.ID_ORGANIZATION\n\t\t\t\tAND HTTH.SCO_ID_HR = m4hrpos.SCO_ID_HR\n\t\t\t\tAND HTTH.SCO_OR_HR_ROLE = m4role.SCO_OR_HR_ROLE\n\t\t\t\tAND HTTH.DT_START <= T.FECHA\n\t\t\t\tAND HTTH.DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4SSP_H_PORC_GLEGA AS GL WITH (NOLOCK) ON\n\t\t\t\tGL.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND GL.STD_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND GL.STD_OR_HR_PERIOD = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND GL.SSP_DT_START <= T.FECHA\n\t\t\t\tAND GL.SSP_DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4SSP_H_PORC_JORN AS JP WITH (NOLOCK) ON\n\t\t\t\tJP.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND JP.SSP_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND JP.SSP_OR_HR_PERIOD = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND JP.SSP_FEC_INI_JORN_P <= T.FECHA\n\t\t\t\tAND JP.SSP_FEC_FIN_JORN_P >= T.FECHA\n\t\t\tLEFT JOIN M4SCO_HR_THEOR_TIM TUI WITH (NOLOCK) ON\n\t\t\t\tTUI.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND TUI.STD_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND TUI.STD_OR_HR_PERIOD = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND TUI.DT_START <= T.FECHA\n\t\t\t\tAND TUI.DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4SCO_H_HR_TEAMS EQ WITH (NOLOCK) ON\n\t\t\t\tEQ.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND EQ.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND EQ.SCO_OR_ROLE = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND EQ.SCO_DT_START <= T.FECHA\n\t\t\t\tAND EQ.SCO_DT_END >= T.FECHA\n\t\t\t\tAND EQ.CCL_ID_LEG_ENT = legalEntityHR.STD_ID_LEG_ENT\n\t\t\tLEFT JOIN M4CCL_H_GT_MR_TEAM TUT WITH (NOLOCK) ON\n\t\t\t\tTUT.ID_ORGANIZATION = EQ.ID_ORGANIZATION\n\t\t\t\tAND TUT.CCL_ID_TEAM = EQ.SCO_ID_TEAM\n\t\t\t\tAND TUT.CCL_DT_START <= T.FECHA\n\t\t\t\tAND TUT.CCL_DT_END >= T.FECHA\n\t\t\t\tAND TUT.CCL_ID_LEG_ENT = legalEntityHR.STD_ID_LEG_ENT\n\t\t\tLEFT JOIN #TEMPCTURNO AS TPT WITH (NOLOCK) ON\n\t\t\t\tTPT.SCO_ID_REF_MOD = isnull(TUI.SCO_ID_REF_MOD ,\n\t\t\t\tTUT.CCL_ID_MOD_REF)\n\t\t\tLEFT JOIN M4CCL_VW_EMP_AR_EQUI M4AR WITH (NOLOCK) ON\n\t\t\t\tM4AR.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND M4AR.CCL_ID_LEG_ENT = legalEntityHR.STD_ID_LEG_ENT\n\t\t\t\tAND M4AR.CCL_ID_TEAM = EQ.SCO_ID_TEAM\n\t\t\tLEFT JOIN #EMPRESA_GRUPO_DIVISION_SECCION EGDS WITH (NOLOCK) ON\n\t\t\t\tEGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION = CAST\n\t\t\t\t(\n\t\t\t\t\tCASE\n\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06')\n\t\t\t\t\tAND hrole.CCL_ID_CAMPO = 'EMPR_FUNC2' THEN hrole.CCL_CADENA\n\t\t\t\t\tELSE\n\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06') THEN CAST(SUBSTRING(hrole.CCL_CADENA, 3, 3) AS INT)\n\t\t\t\t\t\tELSE\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\tWHEN (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)) = 9\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_DIVISION, '.', '') = 13\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_SECCION, '.', '')= 18 THEN 37\n\t\t\t\t\t\t\tELSE (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT))\n\t\t\t\t\t\tEND\n\t\t\t\t\tEND\n\t\t\t\tEND AS VARCHAR (3))+\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL' THEN CAST(ceco.CCL_CENTRO_COSTE_ORIGEN AS VARCHAR(10))\n\t\t\t\t\tELSE CAST(hceco.CCL_COD_DIV_SECC AS VARCHAR (10))\n\t\t\t\tEND\n\t\t\tLEFT JOIN #listaUOs uo WITH (NOLOCK) ON\n\t\t\t\tm4pos.SCO_ID_WORK_UNIT = uo.STD_ID_WU_CHILD\n\t\t\t\tAND uo.STD_DT_START <= T.FECHA\n\t\t\t\tAND uo.STD_DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4GLB_H_HR_TEAMS_ORG EXCEP_EMPL WITH (NOLOCK) ON\n\t\t\t\tEXCEP_EMPL.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND EXCEP_EMPL.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND EXCEP_EMPL.SCO_OR_ROLE = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND EXCEP_EMPL.SCO_DT_START <= T.FECHA\n\t\t\t\tAND EXCEP_EMPL.SCO_DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4CCL_H_GA_EM_EQUI AS EMPRESA_EQUIPO_AGOP WITH (NOLOCK) ON\n\t\t\t\tEMPRESA_EQUIPO_AGOP.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND EMPRESA_EQUIPO_AGOP.CCL_ID_LEG_ENT = COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)\n\t\t\t\tAND EQ.SCO_ID_TEAM = EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM\n\t\t\t\tAND EMPRESA_EQUIPO_AGOP.CCL_DT_START <= T.FECHA\n\t\t\t\tAND EMPRESA_EQUIPO_AGOP.CCL_DT_END >= T.FECHA\n\t\t\tLEFT JOIN STD_WORK_UNIT AS W WITH (NOLOCK) ON\n\t\t\t\tW.STD_ID_WORK_UNIT = m4pos.SCO_ID_WORK_UNIT\n\t\t\tLEFT JOIN STD_HR_ACAD_BACKGR HNIV WITH (NOLOCK) ON\n\t\t\t\tHNIV.STD_ID_HR = pe.STD_ID_PERSON\n\t\t\t\tAND HNIV.STD_DT_START <= T.FECHA\n\t\t\tLEFT JOIN STD_LU_EDU_DIPLOMA DIP WITH (NOLOCK) ON\n\t\t\t\tDIP.STD_ID_DIPLOMA = HNIV.STD_ID_DIPLOMA\n\t\t\tLEFT JOIN STD_LU_EDU_DIP_LEV LEV WITH (NOLOCK) ON\n\t\t\t\tLEV.STD_ID_DIP_LEVEL = DIP.STD_ID_DIP_LEVEL\n\t\t\tLEFT JOIN STD_HR_NAT NACIONALIDAD_SECUNDARIA WITH (NOLOCK) ON\n\t\t\t\tpe.STD_ID_PERSON = NACIONALIDAD_SECUNDARIA.STD_ID_HR\n\t\t\t\tAND NACIONALIDAD_SECUNDARIA.DT_START <= T.FECHA\n\t\t\t\tAND NACIONALIDAD_SECUNDARIA.DT_END >= T.FECHA\n\t\t\t\tAND NACIONALIDAD_SECUNDARIA.STD_PRIMARY_COUNTR = 0\n\t\t\t\t   LEFT JOIN M4CCL_ORIGEN_DATOS_SINCRO AS ODS WITH (NOLOCK) \t\t\n\t\t\t\t\t\tON ODS.CCL_ID_ORIGEN = periodo.CCL_ID_ORIGEN\t\t\n\t\t\n\t\t\t\t\tLEFT JOIN STD_COUNTRY AS MERCADO WITH (NOLOCK) \t\t\n\t\t\t\t\t\tON MERCADO.CSP_ID_COUNTRY = ODS.CCL_ID_PAIS\n\t\t\tWHERE\n\t\t\t\t(REPLACE(periodo.STD_ID_HR_TYPE, '.', '')= '01'\n\t\t\t\tOR REPLACE(periodo.STD_ID_HR_TYPE, '.', '')= '06'\n\t\t\t\tOR REPLACE(periodo.STD_ID_HR_TYPE, '.', '')= '02')\n\t\t\t\tAND\n\t\t\t\t(CASE\n\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06')\n\t\t\t\t\tAND hrole.CCL_ID_CAMPO = 'EMPR_FUNC2' THEN hrole.CCL_CADENA\n\t\t\t\t\tELSE\n\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06') THEN CAST(SUBSTRING(hrole.CCL_CADENA, 3, 3) AS INT)\n\t\t\t\t\t\tELSE\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\tWHEN (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)) = 9\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_DIVISION, '.', '') = 13\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_SECCION, '.', '')= 18 THEN 37\n\t\t\t\t\t\t\tELSE (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT))\n\t\t\t\t\t\tEND\n\t\t\t\t\tEND\n\t\t\t\tEND) IN (SELECT ID_EMPRESA FROM @empresas)\n\t\t\t\tand 1 = (case when legalEntityHR.STD_ID_LEG_ENT=20 AND W.STD_ID_WU_TYPE <> 'TMPL' then 0 else 1 end )\n\t\t\t\t\n\t\t\tGROUP BY\n\t\t\tlegalEntityHR.STD_ID_LEG_ENT,\n\t\t\tW.STD_ID_WU_TYPE,\n\t\t\thceco.CCL_COD_DIV_SECC,\n\t\t\tEGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\t\t\t\tT.FECHA ,\n\t\t\t\tCAST(periodo.SSP_FEC_ANTIGUEDAD AS DATE) ,\n\t\t\t\t(DATEDIFF(MONTH,\n\t\t\t\tperiodo.SSP_FEC_ANTIGUEDAD,\n\t\t\t\tT.FECHA)) ,\n\t\t\t\tlegalEntityHR.DT_START ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN co.SSP_FEC_FIN_PV_CON IS NULL\n\t\t\t\t\tOR co.SSP_FEC_FIN_PV_CON < co.SSP_FEC_INI_CONTRA\n\t\t\t\t\tOR co.SSP_FEC_FIN_PV_CON < T.FECHA THEN CAST(co.SSP_FEC_FIN_CONTRA AS DATE)\n\t\t\t\t\tELSE CAST(\n\t\t\t\t\t(\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN co.SSP_FEC_FIN_PV_CON < co.SSP_FEC_FIN_CONTRA THEN co.SSP_FEC_FIN_PV_CON\n\t\t\t\t\t\tELSE co.SSP_FEC_FIN_CONTRA\n\t\t\t\t\tEND) AS DATE)\n\t\t\t\tEND ,\n\t\t\t\tm4pos.SCO_ID_JOB_CODE ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06')\n\t\t\t\t\tAND hrole.CCL_ID_CAMPO = 'EMPR_FUNC2' THEN hrole.CCL_CADENA\n\t\t\t\t\tELSE\n\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06') THEN CAST(SUBSTRING(hrole.CCL_CADENA, 3, 3) AS INT)\n\t\t\t\t\t\tELSE\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\tWHEN (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)) = 9\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_DIVISION, '.', '') = 13\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_SECCION, '.', '')= 18 THEN 37\n\t\t\t\t\t\t\tELSE (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT))\n\t\t\t\t\t\tEND\n\t\t\t\t\tEND\n\t\t\t\tEND ,\n\t\t\t\tperiodo.STD_ID_EXTERN_ORG ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN pe.STD_ID_GENDER = '1' THEN 'H'\n\t\t\t\t\tELSE 'M'\n\t\t\t\tEND ,\n\t\t\t\tDATEDIFF(YEAR,\n\t\t\t\tpe.STD_DT_BIRTH,\n\t\t\t\tT.FECHA) ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.CCL_TIEMPO_PARCIAL,\n\t\t\t\t\t'1') = '1' THEN 2\n\t\t\t\t\tELSE 1\n\t\t\t\tEND ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.CCL_TIEMPO_PARCIAL,\n\t\t\t\t\t'1') = '1' THEN 'TIEMPO PARCIAL'\n\t\t\t\t\tELSE 'TIEMPO COMPLETO'\n\t\t\t\tEND ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.SSP_NO_DEFINIDO,\n\t\t\t\t\t'S') = 'S' THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.SSP_NO_DEFINIDO,\n\t\t\t\t\t'S') = 'S' THEN 'INDEFINIDO'\n\t\t\t\t\tELSE 'EVENTUAL'\n\t\t\t\tEND ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL'\n\t\t\t\t\tAND ceco.CCL_CENTRO_COSTE_ORIGEN <> '8525' THEN 2\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL'\n\t\t\t\t\tAND ceco.CCL_CENTRO_COSTE_ORIGEN = '8525' THEN 1\n\t\t\t\t\tWHEN EGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION IS NOT NULL THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND ,\n\t\t\t\tlt.STD_ID_WORK_LOCAT ,\n\t\t\t\tpe.STD_ID_PERSON ,\n\t\t\t\tperiodo.CCL_ID_PERSON ,\n\t\t\t\tCAST(pe.STD_ID_PERSON AS VARCHAR) + '#' + CAST(periodo.CCL_ID_PERSON AS VARCHAR) ,\n\t\t\t\tperiodo.STD_ID_HR_TYPE ,\n\t\t\t\tCOALESCE(GL.SSP_PORC_GLEGAL,\n\t\t\t\t0) ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(GL.SSP_PORC_GLEGAL,\n\t\t\t\t\t0)>0 THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND ,\n\t\t\t\thceco.CCL_COD_DIV_SECC ,\n\t\t\t\tcate.SSP_ID_CATEGORIA ,\n\t\t\t\tHTTH.CCL_ID_TP_HORA + '#' +(CAST(HTTH.CCL_HOR_TM_PARC AS VARCHAR)) ,\n\t\t\t\tM4AR.CCL_ID_AR_ALM ,\n\t\t\t\tTUI.SCO_ID_REF_MOD ,\n\t\t\t\tEQ.SCO_ID_TEAM ,\n\t\t\t\tEQ.SCO_ID_TEAM_ROLE ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,\n\t\t\t\t\tEMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) IS NULL\n\t\t\t\t\tOR COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT) IS NULL\n\t\t\t\t\tOR EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM IS NULL THEN '-1'\n\t\t\t\t\tELSE COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,\n\t\t\t\t\tEMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) + '#' + COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)\n\t\t\t\tEND ,\n\t\t\t\tTUT.CCL_ID_MOD_REF ,\n\t\t\t\tTPT.IDDimensionTipoTurno ,\n\t\t\t\tuo.STD_ID_WU_CHILD ,\n\t\t\t\tW.STD_ID_WORK_UNIT ,\n\t\t\t\tperiodo.ID_ORGANIZATION ,\n\t\t\t\tceco.CCL_CENTRO_COSTE_ORIGEN ,\n\t\t\t\tJP.SSP_VALOR_COEF_T_P ,\n\t\t\t\tco.SSP_MOTIVO_CONTRATO ,\n\t\t\t    TCI.SSP_TIPO_CONTRATACION,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.STD_DT_END = T.FECHA THEN 1\n\t\t\t\t\tELSE 0\n\t\t\t\tEND ,\n\t\t\t\tCCL_ID_UNIDAD_NEG\n\t\t\t\t,CASE WHEN periodo.STD_DT_END = T.FECHA\t\t\n\t\t\t\t\tTHEN CAST(MERCADO.CSP_ID_COUNTRY AS VARCHAR)+'#'+CAST(periodo.STD_ID_HRP_END_REA AS VARCHAR)\t\t\n\t\t\t\t\tELSE NULL\t\t\n\t\t\t\t\tEND \n\t\t\t\t\t    ,CASE WHEN periodo.STD_DT_END = T.FECHA\t\t\n\t\t\t\t\t\t  THEN CAST(periodo.ID_ORGANIZATION AS VARCHAR) + '#' + CAST(periodo.STD_ID_HRP_END_REA AS VARCHAR)\t\t\n\t\t\t\t\t\t  ELSE NULL\t\t\n\t\t\t\t\t\t  END \n\t\t\t\t\t\t    ,CASE WHEN periodo.STD_DT_START = T.FECHA\t\t\n\t\t\t\t\t\t\t  THEN periodo.STD_ID_HRP_SRT_REA\t\t\n\t\t\t\t\t\t\t  ELSE NULL\t\t\n\t\t\t\t\t\t\t  END \n\t\t\t\t ) datos\n\t\tLEFT JOIN M4SCO_H_HR_LEGENT AS empresa_anterior WITH (NOLOCK) ON\n\t\t\tempresa_anterior.STD_ID_HR = datos.ID_PERSONA\n\t\t\tAND DATEADD(DAY, -1, datos.ID_FECHA) BETWEEN empresa_anterior.DT_START AND empresa_anterior.DT_END\n\t\t\tAND empresa_anterior.ID_ORGANIZATION = datos.ID_ORGANIZATION\n\t\t\tAND empresa_anterior.STD_ID_LEG_ENT NOT IN ('NZ_ZARA',\n\t\t\t'SI001',\n\t\t\t'SI002')\n\t\tLEFT JOIN (\n\t\t\t\t\t-- AUSENCIAS GHRS\n\t\t\tSELECT ABS_TA.ID_ORGANIZATION,\n\t\t\t\tABS_TA.CCL_ID_HR,\n\t\t\t\tABS_TA.DT_START,\n\t\t\t\tABS_TA.DT_END,\n\t\t\t\tCAST(ABS_TA. CCL_ID_ABSENCE AS VARCHAR) AS CCL_ID_ABSENCE,\n\t\t\t\t'TA' AS ORIGEN_INCIDENCIA\n\t\t\t\t\t, LEGALENTITYHR.STD_ID_LEG_ENT\n\t\t\t\tFROM M4CCL_HR_ABSENCES_TA ABS_TA WITH(NOLOCK)\n\t\t\t\t-- Se añade el cruce con M4SCO_H_HR_LEGENT para obtener la empresa\n\t\t\t\tINNER JOIN M4SCO_H_HR_LEGENT AS LEGALENTITYHR WITH (NOLOCK) \n\t\t\t\t  ON LEGALENTITYHR.STD_ID_HR = ABS_TA.CCL_ID_HR\n\t\t\t\t  AND LEGALENTITYHR.STD_OR_HR_PERIOD = ABS_TA.CCL_OR_HR_PERIOD\n\t\t\t\t  AND LEGALENTITYHR.ID_ORGANIZATION = ABS_TA.ID_ORGANIZATION\n\t\t\t\t  AND ABS_TA.DT_START BETWEEN LEGALENTITYHR.DT_START AND LEGALENTITYHR.DT_END\n\t\t\t\tWHERE\n\t\t\t\t\t(\n\t\t\t\t\tABS_TA.ID_ORGANIZATION IN ('NL')\n\t\t\t\t\t---- Se añade el filtro para la organización 0001 y la empresa. En la empresa se irán añadiendo códigos de empresa según se vayan migrando.\n\t\t\t\t\tOR \n\t\t\t\t\t(ABS_TA.ID_ORGANIZATION IN ('0001') AND LEGALENTITYHR.STD_ID_LEG_ENT IN (SELECT ID_EMPRESA FROM @empresas emp ))\n\t\t\t\t\t)\n\t\t\t\t\tAND ABS_TA.DT_START <= @FechaFin\n\t\t\t\t\tAND ABS_TA.DT_END >= @FechaIni\n\t\t\t\tGROUP BY\n\t\t\t\t\tABS_TA.ID_ORGANIZATION,\n\t\t\t\t\tABS_TA.CCL_ID_HR,\n\t\t\t\t\tABS_TA.DT_START,\n\t\t\t\t\tABS_TA.DT_END,\n\t\t\t\t\tABS_TA.CCL_ID_ABSENCE,\n\t\t\t\t\tLEGALENTITYHR.STD_ID_LEG_ENT\n\n\t\t\tUNION\n\t\t\t-- INCIDENCIAS GHRS\n\t\t\tSELECT INC_TA.ID_ORGANIZATION,\n\t\t\t\tINC_TA.CCL_ID_HR,\n\t\t\t\tINC_TA.DT_START,\n\t\t\t\tINC_TA.DT_END,\n\t\t\t\tCAST(INC_TA.CCL_ID_INCIDENCIA AS VARCHAR) AS CCL_ID_ABSENCE,\n\t\t\t\t--H.SCO_ID_INCIDENCE,\n\t\t\t\t'TA' AS ORIGEN_INCIDENCIA\n\t\t\t\t, LEGALENTITYHR.STD_ID_LEG_ENT\n\t\t\t\tFROM M4SEDES_T_HR_INCIDENCIAS_TA AS INC_TA WITH(NOLOCK)\n\t\t\t\tINNER JOIN M4CCL_INCIDENCIAS_TEOR_TA AS PRES_TA WITH(NOLOCK)\n\t\t\t\tON PRES_TA.ID_ORGANIZATION = INC_TA.ID_ORGANIZATION\n\t\t\t\tAND PRES_TA.CCL_ID_INCIDENCIA = INC_TA.CCL_ID_INCIDENCIA\n\t\t\t\tAND PRES_TA.CCL_ID_WL = 'L'\n\t\t\t\t-- Se añade el cruce con M4SCO_H_HR_LEGENT para obtener la empresa\n\t\t\t\tINNER JOIN M4SCO_H_HR_LEGENT AS LEGALENTITYHR WITH (NOLOCK) \n\t\t\t\t  ON LEGALENTITYHR.STD_ID_HR = INC_TA.CCL_ID_HR\n\t\t\t\t  AND LEGALENTITYHR.STD_OR_HR_PERIOD = INC_TA.CCL_OR_HR_PERIOD\n\t\t\t\t  AND LEGALENTITYHR.ID_ORGANIZATION = INC_TA.ID_ORGANIZATION\n\t\t\t\t  AND INC_TA.DT_START BETWEEN LEGALENTITYHR.DT_START AND LEGALENTITYHR.DT_END\n\t\t\t\tWHERE\n\t\t\t\t\t(\n\t\t\t\t\tINC_TA.ID_ORGANIZATION IN ('NL')\n\t\t\t\t\t---- Se añade el filtro para la organización 0001 y la empresa. En la empresa se irán añadiendo códigos de empresa según se vayan migrando.\n\t\t\t\t\tOR \n\t\t\t\t\t(INC_TA.ID_ORGANIZATION IN ('0001') AND LEGALENTITYHR.STD_ID_LEG_ENT IN (SELECT ID_EMPRESA FROM @empresas emp ))\n\t\t\t\t\t)\n\t\t\t\t\tAND INC_TA.DT_START <= @FechaFin\n\t\t\t\t\tAND INC_TA.DT_END >= @FechaIni\n\t\t\t\tGROUP BY\n\t\t\t\t\tINC_TA.ID_ORGANIZATION,\n\t\t\t\t\tINC_TA.CCL_ID_HR,\n\t\t\t\t\tINC_TA.DT_START,\n\t\t\t\t\tINC_TA.DT_END,\n\t\t\t\t\tINC_TA.CCL_ID_INCIDENCIA,\n\t\t\t\t\tLEGALENTITYHR.STD_ID_LEG_ENT\n\t\t\t\t) ausencias ON\n\t\t\tausencias.CCL_ID_HR = ID_PERSONA\n\t\t\tAND ausencias.ID_ORGANIZATION = datos.ID_ORGANIZATION\n\t\t\tAND ID_FECHA BETWEEN ausencias.DT_START AND ausencias.DT_END\n\n\t\tGROUP BY\n\t\t\tID_FECHA,\n\t\t\tausencias.CCL_ID_HR,\n\t\t\tCCL_ID_ABSENCE,\n\t\t\tFECHA_ANTIGUEDAD,\n\t\t\tdatos.ID_ORGANIZATION,\n\t\t\tANTIGUEDAD,\n\t\t\tFECHA_ALTA_EMPRESA,\n\t\t\tFECHA_VENCIMIENTO,\n\t\t\tID_PUESTO,\n\t\t\tID_PUESTO_HR_TYPE,\n\t\t\tID_EMPRESA,\n\t\t\tID_EMPRESA_EXTERNA,\n\t\t\tGENERO,\n\t\t\tEDAD,\n\t\t\tID_TIPO_JORNADA,\n\t\t\tTIPO_JORNADA,\n\t\t\tID_TIPO_CONTRATO,\n\t\t\tTIPO_CONTRATO,\n\t\t\tID_ESTRUCTURA_ALMACEN,\n\t\t\tID_LUGAR_DE_TRABAJO,\n\t\t\tID_PERSONA,\n\t\t\tID_LOCAL,\n\t\t\tID_PERSONA_LOCAL,\n\t\t\tCOUNT_RAW,\n\t\t\tID_TIPO_PERSONA,\n\t\t\tPORC_REDUCCION_JORNADA,\n\t\t\tID_REDUCCION_JORNADA,\n\t\t\tDIVISION_SECCION,\n\t\t\tID_CATEGORIA,\n\t\t\tID_HORAS_CONTRATADAS,\n\t\t\tID_AREA_ALMACEN,\n\t\t\tdatos.ID_ORGANIZATION + '#' + ID_AREA_ALMACEN,\n\t\t\tMOD_REF_INDIVIDUAL,\n\t\t\tID_EQUIPO,\n\t\t\tID_ROL_EQUIPO,\n\t\t\tID_EQ_ORG,\n\t\t\tMOD_REF_EQUIPO,\n\t\t\tIdInternalTipoTurno,\n\t\t\tUni_org,\n\t\t\tID_UNIDAD_ORGANIZATIVA,\n\t\t\tID_NIVEL_ESTUDIOS,\n\t\t\tID_PAIS_META4_NACIONALIDAD_SECUNDARIA ,\n\t\t\tCCL_CENTRO_COSTE_ORIGEN ,\n\t\t\tPORCENTAJE_JORNADA_PARCIAL ,\n\t\t\tBAJA ,\n\t\t\tCCL_ID_UNIDAD_NEG,\n\t\t\tausencias.ORIGEN_INCIDENCIA,\n\t\t\tdatos.ID_MOTIVO_ALTA,\n\t\t\tdatos.ID_TIPO_CONTRATACION,\n\t\t\tdatos.MOTIVO_CONTRATACION,\n\t\t\tdatos.ID_MOTIVO_BAJA,\n\t\t\tdatos.ID_AGRUPACION_BAJA\n\n\n\nDROP TABLE #TEMPCTURNO;\nDROP TABLE #listaUOs;\nDROP TABLE #TEMPCALENDARIO;\nDROP TABLE #EMPRESA_GRUPO_DIVISION_SECCION;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "DECLARE @FechaIni DATE = '2022-09-21';\nDECLARE @FechaFin DATE = '2022-09-22';\n\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\nSELECT\n\tDENSE_RANK() OVER (\n\tORDER BY SCO_ID_REF_MOD) AS IDDimensionTipoTurno,\n\tSCO_ID_REF_MOD,\n\tNM_REF_MODESP,\n\tMd.CCL_ID_TP_TURNO,\n\tMT.CCL_NM_TP_TURNESP INTO\n\t\t#TEMPCTURNO\n\tFROM\n\t\tM4SCO_REF_MOD Md WITH (NOLOCK)\n\tINNER JOIN M4CCL_X_GA_TP_TUR MT WITH (NOLOCK) ON\n\t\tMd.CCL_ID_TP_TURNO = MT.CCL_ID_TP_TURNO;\n\nCREATE\n\tCLUSTERED INDEX IDX_CTEMPCTURNO ON\n\t#TEMPCTURNO(SCO_ID_REF_MOD);\n\nWITH listaUOs (nivel,\nSTD_ID_WU_CHILD,\nSTD_ID_WU_PARENT,\norden,\nSTD_DT_START,\nSTD_DT_END) AS (\nSELECT\n\t1,\n\tSTD_ID_WU_CHILD,\n\tSTD_ID_WU_PARENT,\n\tCAST(STD_ID_WU_CHILD AS VARCHAR(2000)),\n\tSTD_DT_START,\n\tSTD_DT_END\nFROM\n\tSTD_REL_WORK_UNIT WITH (NOLOCK)\nWHERE\n\tCOALESCE(STD_ID_WU_CHILD,\n\t'') IN ('1869')\nUNION ALL\nSELECT\n\tnivel + 1,\n\tp.STD_ID_WU_CHILD,\n\tp.STD_ID_WU_PARENT,\n\tCAST((orden + p.STD_ID_WU_CHILD) AS VARCHAR(2000)),\n\tp.STD_DT_START,\n\tp.STD_DT_END\nFROM\n\tlistaUOs l,\n\tSTD_REL_WORK_UNIT p WITH (NOLOCK)\nWHERE\n\tl.STD_ID_WU_CHILD = p.STD_ID_WU_PARENT ) SELECT\n\t* INTO\n\t\t#listaUOs\n\tFROM\n\t\tlistaUOs WITH (nolock);\n\nWITH TEMPCALENDARIO (FECHA) AS (\nSELECT\n\tCAST(@FechaIni AS DATE) AS FECHA\nUNION ALL\nSELECT\n\tDATEADD(DAY,\n\t1,\n\tFECHA)\nFROM\n\tTEMPCALENDARIO\nWHERE\n\tDATEADD(DAY,\n\t1,\n\tFECHA) < CAST(@FechaFin AS DATE) ) SELECT\n\t* INTO\n\t\t#TEMPCALENDARIO\n\tFROM\n\t\tTEMPCALENDARIO WITH (nolock);\n\nWITH EMPRESA_GRUPO_DIVISION_SECCION (ID_EMPRESA_GRUPO_DIVISION_SECCION ,\nID_EMPRESA_GRUPO ,\nNOMBRE_EMPRESA_GRUPO ,\nDIVISION ,\nSECCION ,\nNOM_DIVSEC ) AS (\nSELECT\n\tID_DIVSEC,\n\tID_EMPRESA_GRUPO,\n\tEMPRESA_GRUPO,\n\tDIVISION,\n\tSECCION,\n\tNOM_DIVSEC\nFROM\n\t(\n\tSELECT\n\t\t64 AS ID_EMPRESA_GRUPO,\n\t\t'INDIPUNT' AS EMPRESA_GRUPO,\n\t\t91 AS DIVISION,\n\t\t15 AS SECCION,\n\t\t'649115' AS ID_DIVSEC,\n\t\t'INDIPUNT OPERARIOS [9115]' AS NOM_DIVSEC\n\t\tUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'991304' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [1304]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t5 AS SECCION,\n\t\t'991305' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [1305]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'998525' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t99 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'998537' AS ID_DIVSEC,\n\t\t'ZARA LOGISTICA [8537]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t41 AS ID_EMPRESA_GRUPO,\n\t\t'PULL & BEAR LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'418525' AS ID_DIVSEC,\n\t\t'PULL & BEAR LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t41 AS ID_EMPRESA_GRUPO,\n\t\t'PULL & BEAR LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'418537' AS ID_DIVSEC,\n\t\t'PULL & BEAR LOGISTICA [8537]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t03 AS DIVISION,\n\t\t17 AS SECCION,\n\t\t'1890317' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [0317]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t03 AS SECCION,\n\t\t'1891303' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [1303]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t189 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA LEON' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'1898525' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA LEON [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t5 AS DIVISION,\n\t\t6 AS SECCION,\n\t\t'370506' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [0506]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t5 AS SECCION,\n\t\t'371305' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [1305]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t28 AS DIVISION,\n\t\t4 AS SECCION,\n\t\t'372804' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [2804]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'378525' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t37 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'378537' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [8537]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t9 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA LOGISTICA MECO' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t18 AS SECCION,\n\t\t'91318' AS ID_DIVSEC,\n\t\t'PLATAFORMA LOGISTICA MECO [1318]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t32 AS ID_EMPRESA_GRUPO,\n\t\t'ZARA HOME LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'328525' AS ID_DIVSEC,\n\t\t'ZARA HOME LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'431304' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [1304]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t05 AS SECCION,\n\t\t'431305' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [1305]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'438525' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t43 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA EUROPA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t37 AS SECCION,\n\t\t'438537' AS ID_DIVSEC,\n\t\t'PLATAFORMA EUROPA [8537]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'141300' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1300]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t12 AS SECCION,\n\t\t'141312' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1312]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t14 AS ID_EMPRESA_GRUPO,\n\t\t'STRADIVARIUS LOGISTICA' AS EMPRESA_GRUPO,\n\t\t09 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'140900' AS ID_DIVSEC,\n\t\t'STRADIVARIUS LOGISTICA [1312]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'268525' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t26 AS SECCION,\n\t\t'268526' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8526]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t27 AS SECCION,\n\t\t'268527' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8527]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t28 AS SECCION,\n\t\t'268528' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8528]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t29 AS SECCION,\n\t\t'268529' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [8529]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'261300' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [1300]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t26 AS ID_EMPRESA_GRUPO,\n\t\t'BERSHKA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t63 AS DIVISION,\n\t\t08 AS SECCION,\n\t\t'266308' AS ID_DIVSEC,\n\t\t'BERSHKA LOGISTICA [6308]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t12 AS ID_EMPRESA_GRUPO,\n\t\t'LEFTIES LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t19 AS SECCION,\n\t\t'121319' AS ID_DIVSEC,\n\t\t'LEFTIES LOGISTICA [1319]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t23 AS ID_EMPRESA_GRUPO,\n\t\t'OYSHO LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t0 AS SECCION,\n\t\t'231300' AS ID_DIVSEC,\n\t\t'OYSHO LOGISTICA [1300]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t01 AS SECCION,\n\t\t'611301' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [1301]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t13 AS DIVISION,\n\t\t04 AS SECCION,\n\t\t'611304' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [1304]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t61 AS ID_EMPRESA_GRUPO,\n\t\t'MASSIMO DUTTI LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'618525' AS ID_DIVSEC,\n\t\t'MASSIMO DUTTI LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t357 AS ID_EMPRESA_GRUPO,\n\t\t'TORDERA LOGISTICA' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'3578525' AS ID_DIVSEC,\n\t\t'TORDERA LOGISTICA [8525]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t68 AS ID_EMPRESA_GRUPO,\n\t\t'FASHION LOGISTICS FORWARDERS' AS EMPRESA_GRUPO,\n\t\t00 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'680000' AS ID_DIVSEC,\n\t\t'FASHION LOGISTICS FORWARDERS []' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t330 AS ID_EMPRESA_GRUPO,\n\t\t'INDITEX LOGISTICA' AS EMPRESA_GRUPO,\n\t\t00 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'3300000' AS ID_DIVSEC,\n\t\t'INDITEX LOGISTICA []' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t51 AS DIVISION,\n\t\t73 AS SECCION,\n\t\t'205173' AS ID_DIVSEC,\n\t\t'TEMPE [205173]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t30 AS DIVISION,\n\t\t00 AS SECCION,\n\t\t'203000' AS ID_DIVSEC,\n\t\t'TEMPE [203000]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t51 AS DIVISION,\n\t\t34 AS SECCION,\n\t\t'205134' AS ID_DIVSEC,\n\t\t'TEMPE [205134]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t20 AS ID_EMPRESA_GRUPO,\n\t\t'TEMPE' AS EMPRESA_GRUPO,\n\t\t50 AS DIVISION,\n\t\t41 AS SECCION,\n\t\t'205041' AS ID_DIVSEC,\n\t\t'TEMPE [205041]' AS NOM_DIVSEC\nUNION\n\tSELECT\n\t\t398 AS ID_EMPRESA_GRUPO,\n\t\t'PLATAFORMA CABANILLAS' AS EMPRESA_GRUPO,\n\t\t85 AS DIVISION,\n\t\t25 AS SECCION,\n\t\t'3988525' AS ID_DIVSEC,\n\t\t'ALMACEN PAQUETE [8525]' AS NOM_DIVSEC ) Q_UNION ) SELECT\n\t* INTO\n\t\t#EMPRESA_GRUPO_DIVISION_SECCION\n\tFROM\n\t\tEMPRESA_GRUPO_DIVISION_SECCION WITH (nolock) \n\t\t\nSELECT\n\t\t\tCCL_CENTRO_COSTE_ORIGEN,\n\t\t\tID_FECHA,\n\t\t\tCASE\n\t\t\t\tWHEN ausencias.CCL_ID_HR IS NOT NULL THEN 1\n\t\t\t\tELSE 0\n\t\t\tEND AS AUSENCIA_PROGRAMADA,\n\t\t\tCASE ausencias.ORIGEN_INCIDENCIA\n\t\t\t\tWHEN 'TA' THEN 'TA' + '#' + datos.ID_ORGANIZATION + '#' + CAST(CCL_ID_ABSENCE AS VARCHAR) \n\t\t\t\tELSE datos.ID_ORGANIZATION + '#' + CAST(CCL_ID_ABSENCE AS VARCHAR) \n\t\t\t\tEND AS ID_ORG_AUSENCIA,\n\t\t\tFECHA_ANTIGUEDAD,\n\t\t\tdatos.ID_ORGANIZATION,\n\t\t\tANTIGUEDAD,\n\t\t\tFECHA_ALTA_EMPRESA,\n\t\t\tFECHA_VENCIMIENTO,\n\t\t\tID_PUESTO,\n\t\t\tID_PUESTO_HR_TYPE,\n\t\t\tID_EMPRESA,\n\t\t\tID_EMPRESA_EXTERNA,\n\t\t\tGENERO,\n\t\t\tEDAD,\n\t\t\tID_TIPO_JORNADA,\n\t\t\tTIPO_JORNADA,\n\t\t\tID_TIPO_CONTRATO,\n\t\t\tTIPO_CONTRATO,\n\t\t\tID_ESTRUCTURA_ALMACEN,\n\t\t\tID_LUGAR_DE_TRABAJO,\n\t\t\tID_PERSONA,\n\t\t\tID_LOCAL,\n\t\t\tID_PERSONA_LOCAL,\n\t\t\tCOUNT_RAW,\n\t\t\tID_TIPO_PERSONA,\n\t\t\tPORC_REDUCCION_JORNADA  AS PORCENTAJE_REDUCCION_JORNADA,\n\t\t\tCAST(ROUND(PORC_REDUCCION_JORNADA, 0, 1) AS INTEGER) AS TRAMO_PORC_REDUCCION,\n\t\t\tID_REDUCCION_JORNADA,\n\t\t\tDIVISION_SECCION,\n\t\t\tID_CATEGORIA,\n\t\t\tID_HORAS_CONTRATADAS,\n\t\t\tdatos.ID_ORGANIZATION + '#' + ID_AREA_ALMACEN AS ID_ORG_ALM,\n\t\t\tID_AREA_ALMACEN,\n\t\t\tMOD_REF_INDIVIDUAL,\n\t\t\tID_EQUIPO,\n\t\t\tID_ROL_EQUIPO,\n\t\t\tID_EQ_ORG,\n\t\t\tMOD_REF_EQUIPO,\n\t\t\tIdInternalTipoTurno,\n\t\t\tUni_org,\n\t\t\tID_UNIDAD_ORGANIZATIVA,\n\t\t\tID_NIVEL_ESTUDIOS,\n\t\t\tID_PAIS_META4_NACIONALIDAD_SECUNDARIA ,\n\t\t\tMAX((CASE WHEN datos.FECHA_ALTA_EMPRESA = datos.ID_FECHA AND COALESCE(empresa_anterior.STD_ID_LEG_ENT, 0) <> datos.ID_EMPRESA THEN 1 ELSE 0 END)) AS ALTA_EMP ,\n\t\t\tMAX( (CASE WHEN datos.FECHA_VENCIMIENTO = datos.ID_FECHA THEN 1 ELSE 0 END)) AS BAJA_CO ,\n\t\t\tCOALESCE(MOD_REF_INDIVIDUAL,\n\t\t\tMOD_REF_EQUIPO) AS ID_MODELO_REFERENCIA ,\n\t\t\tCOALESCE(PORCENTAJE_JORNADA_PARCIAL,\n\t\t\t100) AS PORCENTAJE_JORNADA_PARCIAL ,\n\t\t\tCOALESCE(ROUND(PORCENTAJE_JORNADA_PARCIAL, 0, 1),\n\t\t\t100) AS TRAMO_PORC_JORNADA_PARCIAL ,\n\t\t\tBAJA ,\n\t\t\tCCL_ID_UNIDAD_NEG AS ID_UNIDAD_NEGOCIO,\n\t\t\tausencias.ORIGEN_INCIDENCIA,\n\t\t\tdatos.ID_MOTIVO_ALTA,\n\t\t    datos.ID_TIPO_CONTRATACION,\n\t\t\tdatos.MOTIVO_CONTRATACION,\n\t\t\tdatos.ID_MOTIVO_BAJA,\n\t\t\tdatos.ID_AGRUPACION_BAJA\n\t\tFROM\n\t\t\t(\n\t\t\tSELECT\n\t\t\t\tT.FECHA AS ID_FECHA ,\n\t\t\t\tCAST(periodo.SSP_FEC_ANTIGUEDAD AS DATE) AS FECHA_ANTIGUEDAD ,\n\t\t\t\tperiodo.ID_ORGANIZATION ,\n\t\t\t\t(DATEDIFF(MONTH,\n\t\t\t\tperiodo.SSP_FEC_ANTIGUEDAD,\n\t\t\t\tT.FECHA)) AS ANTIGUEDAD ,\n\t\t\t\tlegalEntityHR.DT_START AS FECHA_ALTA_EMPRESA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN co.SSP_FEC_FIN_PV_CON IS NULL\n\t\t\t\t\tOR co.SSP_FEC_FIN_PV_CON < co.SSP_FEC_INI_CONTRA\n\t\t\t\t\tOR co.SSP_FEC_FIN_PV_CON < T.FECHA THEN CAST(co.SSP_FEC_FIN_CONTRA AS DATE)\n\t\t\t\t\tELSE CAST(\n\t\t\t\t\t(\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN co.SSP_FEC_FIN_PV_CON < co.SSP_FEC_FIN_CONTRA THEN co.SSP_FEC_FIN_PV_CON\n\t\t\t\t\t\tELSE co.SSP_FEC_FIN_CONTRA\n\t\t\t\t\tEND) AS DATE)\n\t\t\t\tEND AS FECHA_VENCIMIENTO ,\n\t\t\t\tm4pos.SCO_ID_JOB_CODE AS ID_PUESTO ,\n\t\t\t\tCONCAT(m4pos.SCO_ID_JOB_CODE,\n\t\t\t\t'#',\n\t\t\t\tperiodo.STD_ID_HR_TYPE) AS ID_PUESTO_HR_TYPE ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06')\n\t\t\t\t\tAND hrole.CCL_ID_CAMPO = 'EMPR_FUNC2' THEN hrole.CCL_CADENA\n\t\t\t\t\tELSE\n\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06') THEN CAST(SUBSTRING(hrole.CCL_CADENA, 3, 3) AS INT)\n\t\t\t\t\t\tELSE\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\tWHEN (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)) = 9\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_DIVISION, '.', '') = 13\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_SECCION, '.', '')= 18 THEN 37\n\t\t\t\t\t\t\tELSE (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT))\n\t\t\t\t\t\tEND\n\t\t\t\t\tEND\n\t\t\t\tEND AS ID_EMPRESA ,\n\t\t\t\tperiodo.STD_ID_EXTERN_ORG AS ID_EMPRESA_EXTERNA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN pe.STD_ID_GENDER = '1' THEN 'H'\n\t\t\t\t\tELSE 'M'\n\t\t\t\tEND AS GENERO ,\n\t\t\t\tDATEDIFF(YEAR,\n\t\t\t\tpe.STD_DT_BIRTH,\n\t\t\t\tT.FECHA) AS EDAD ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.CCL_TIEMPO_PARCIAL,\n\t\t\t\t\t'1') = '1' THEN 2\n\t\t\t\t\tELSE 1\n\t\t\t\tEND AS ID_TIPO_JORNADA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.CCL_TIEMPO_PARCIAL,\n\t\t\t\t\t'1') = '1' THEN 'TIEMPO PARCIAL'\n\t\t\t\t\tELSE 'TIEMPO COMPLETO'\n\t\t\t\tEND AS TIPO_JORNADA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.SSP_NO_DEFINIDO,\n\t\t\t\t\t'S') = 'S' THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND AS ID_TIPO_CONTRATO ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.SSP_NO_DEFINIDO,\n\t\t\t\t\t'S') = 'S' THEN 'INDEFINIDO'\n\t\t\t\t\tELSE 'EVENTUAL'\n\t\t\t\tEND AS TIPO_CONTRATO ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL'\n\t\t\t\t\tAND ceco.CCL_CENTRO_COSTE_ORIGEN <> '8525' THEN 2\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL'\n\t\t\t\t\tAND ceco.CCL_CENTRO_COSTE_ORIGEN = '8525' THEN 1\n\t\t\t\t\t--WHEN legalEntityHR.STD_ID_LEG_ENT=20 AND W.STD_ID_WU_TYPE <> 'TMPL' THEN null--MODIFICACION\n\t\t\t\t\tWHEN EGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION IS NOT NULL THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND AS ID_ESTRUCTURA_ALMACEN ,\n\t\t\t\tlt.STD_ID_WORK_LOCAT AS ID_LUGAR_DE_TRABAJO ,\n\t\t\t\tpe.STD_ID_PERSON AS ID_PERSONA ,\n\t\t\t\tperiodo.CCL_ID_PERSON AS ID_LOCAL ,\n\t\t\t\tCAST(pe.STD_ID_PERSON AS VARCHAR) + '#' + CAST(periodo.CCL_ID_PERSON AS VARCHAR) AS ID_PERSONA_LOCAL ,\n\t\t\t\t1 AS COUNT_RAW ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.STD_DT_END = T.FECHA THEN 1\n\t\t\t\t\tELSE 0\n\t\t\t\tEND AS BAJA ,\n\t\t\t\tperiodo.STD_ID_HR_TYPE AS ID_TIPO_PERSONA ,\n\t\t\t\tCOALESCE(GL.SSP_PORC_GLEGAL,\n\t\t\t\t0) AS PORC_REDUCCION_JORNADA ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(GL.SSP_PORC_GLEGAL,\n\t\t\t\t\t0)>0 THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND AS ID_REDUCCION_JORNADA ,\n\t\t\t\thceco.CCL_COD_DIV_SECC DIVISION_SECCION ,\n\t\t\t\tcate.SSP_ID_CATEGORIA AS ID_CATEGORIA ,\n\t\t\t\tHTTH.CCL_ID_TP_HORA + '#' +(CAST(HTTH.CCL_HOR_TM_PARC AS VARCHAR)) AS ID_HORAS_CONTRATADAS ,\n\t\t\t\tM4AR.CCL_ID_AR_ALM AS ID_AREA_ALMACEN ,\n\t\t\t\tTUI.SCO_ID_REF_MOD AS MOD_REF_INDIVIDUAL ,\n\t\t\t\tEQ.SCO_ID_TEAM AS ID_EQUIPO ,\n\t\t\t\tEQ.SCO_ID_TEAM_ROLE AS ID_ROL_EQUIPO ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,\n\t\t\t\t\tEMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) IS NULL\n\t\t\t\t\tOR COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT) IS NULL\n\t\t\t\t\tOR EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM IS NULL THEN '-1'\n\t\t\t\t\tELSE COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,\n\t\t\t\t\tEMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) + '#' + COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)\n\t\t\t\tEND AS ID_EQ_ORG ,\n\t\t\t\tTUT.CCL_ID_MOD_REF AS MOD_REF_EQUIPO ,\n\t\t\t\tTPT.IDDimensionTipoTurno AS IdInternalTipoTurno ,\n\t\t\t\tuo.STD_ID_WU_CHILD AS Uni_org ,\n\t\t\t\tW.STD_ID_WORK_UNIT AS ID_UNIDAD_ORGANIZATIVA ,\n\t\t\t\tMAX(CASE WHEN LEV.STD_ID_DIP_LEVEL IN ('01', '02') THEN 1 WHEN LEV.STD_ID_DIP_LEVEL IN ('03') THEN 2 WHEN LEV.STD_ID_DIP_LEVEL IN ('11') THEN 3 WHEN LEV.STD_ID_DIP_LEVEL IN ('04', '09') THEN 4 WHEN LEV.STD_ID_DIP_LEVEL IN ('05', '10') THEN 5 WHEN LEV.STD_ID_DIP_LEVEL IN ('06', '07', '08') THEN 6 ELSE 0 END) AS ID_NIVEL_ESTUDIOS ,\n\t\t\t\tCOALESCE(MAX(NACIONALIDAD_SECUNDARIA.STD_ID_COUNTRY),\n\t\t\t\t'-1') AS ID_PAIS_META4_NACIONALIDAD_SECUNDARIA ,\n\t\t\t\tceco.CCL_CENTRO_COSTE_ORIGEN ,\n\t\t\t\tJP.SSP_VALOR_COEF_T_P AS PORCENTAJE_JORNADA_PARCIAL ,\n\t\t\t\tunineg.CCL_ID_UNIDAD_NEG\n\t\t\t\t,CASE WHEN periodo.STD_DT_END = T.FECHA\t\t\n\t\t\t\t\tTHEN CAST(MERCADO.CSP_ID_COUNTRY AS VARCHAR)+'#'+CAST(periodo.STD_ID_HRP_END_REA AS VARCHAR)\t\t\n\t\t\t\t\tELSE NULL\t\t\n\t\t\t\t\tEND AS ID_AGRUPACION_BAJA\n\t\t\t\t\t    ,CASE WHEN periodo.STD_DT_END = T.FECHA\t\t\n\t\t\t\t\t\t  THEN CAST(periodo.ID_ORGANIZATION AS VARCHAR) + '#' + CAST(periodo.STD_ID_HRP_END_REA AS VARCHAR)\t\t\n\t\t\t\t\t\t  ELSE NULL\t\t\n\t\t\t\t\t\t  END AS ID_MOTIVO_BAJA\n\t\t\t\t\t\t    ,CASE WHEN periodo.STD_DT_START = T.FECHA\t\t\n\t\t\t\t\t\t\t  THEN periodo.STD_ID_HRP_SRT_REA\t\t\n\t\t\t\t\t\t\t  ELSE NULL\t\t\n\t\t\t\t\t\t\t  END AS ID_MOTIVO_ALTA\n\t\t\t  ,co.SSP_MOTIVO_CONTRATO AS MOTIVO_CONTRATACION\t\n\t\t\t  ,TCI.SSP_TIPO_CONTRATACION AS ID_TIPO_CONTRATACION\n\t\t\tFROM\n\t\t\t\t#TEMPCALENDARIO AS T WITH (NOLOCK)\n\t\t\tINNER JOIN M4SCO_H_HR_POS m4hrpos WITH (NOLOCK) ON\n\t\t\t\tm4hrpos.SCO_DT_START <= T.FECHA\n\t\t\t\tAND m4hrpos.SCO_DT_END >= T.FECHA\n\n\t\t\tINNER JOIN M4SCO_POSITION m4pos WITH (NOLOCK) ON\n\t\t\t\tm4hrpos.SCO_ID_POSITION = m4pos.SCO_ID_POSITION\n\t\t\t\tAND m4pos.SCO_DT_START <= T.FECHA\n\t\t\t\tAND m4pos.SCO_DT_END >= T.FECHA\n\t\t\tINNER JOIN M4CCL_H_OR_UNI_NEG AS unineg WITH (NOLOCK) ON\n\t\t\t\tunineg.SCO_ID_POSITION = m4pos.SCO_ID_POSITION\n\t\t\t\tAND T.FECHA BETWEEN unineg.CCL_DT_START AND unineg.CCL_DT_END\n\t\t\tINNER JOIN STD_WORK_LOCATION lt WITH (NOLOCK) ON\n\t\t\t\tm4pos.SCO_ID_WORK_LOC = lt.STD_ID_WORK_LOCAT\n\t\t\tINNER JOIN M4SCO_HR_ROLE m4role WITH (NOLOCK) ON\n\t\t\t\tm4role.ID_ORGANIZATION = m4hrpos.ID_ORGANIZATION\n\t\t\t\tAND m4hrpos.SCO_ID_HR = m4role.SCO_ID_HR\n\t\t\t\tAND m4hrpos.SCO_OR_HR_ROLE = m4role.SCO_OR_HR_ROLE\n\t\t\t\tAND m4role.SCO_DT_START <= T.FECHA\n\t\t\t\tAND m4role.SCO_DT_END >= T.FECHA\n\t\t\tINNER JOIN STD_HR_PERIOD periodo WITH (NOLOCK) ON\n\t\t\t\tm4role.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND m4role.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND m4role.SCO_OR_HR_ROLE = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND periodo.STD_DT_START <= T.FECHA\n\t\t\t\tAND periodo.STD_DT_END >= T.FECHA\n\t\t\tINNER JOIN M4SCO_H_HR_LEGENT legalEntityHR WITH (NOLOCK) ON\n\t\t\t\tlegalEntityHR.STD_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND legalEntityHR.STD_OR_HR_PERIOD = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND legalEntityHR.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND legalEntityHR.DT_START <= T.FECHA\n\t\t\t\tAND legalEntityHR.DT_END >= T.FECHA\n\t\t\t\tAND legalEntityHR.STD_ID_LEG_ENT NOT IN ('NZ_ZARA',\n\t\t\t\t'SI001',\n\t\t\t\t'SI002')\n\t\t\tINNER JOIN STD_PERSON pe WITH (NOLOCK) ON\n\t\t\t\tpe.STD_ID_PERSON = m4hrpos.SCO_ID_HR\n\t\t\tINNER JOIN M4SSP_H_CONTRATOS co WITH (NOLOCK) ON\n\t\t\t\tco.ID_ORGANIZATION = m4role.ID_ORGANIZATION\n\t\t\t\tAND co.SSP_ID_HR = m4role.SCO_ID_HR\n\t\t\t\tAND co.SSP_OR_HR_PERIOD = m4role.SCO_OR_HR_PER\n\t\t\t\tAND co.SSP_FEC_INI_CONTRA <= T.FECHA\n\t\t\t\tAND co.SSP_FEC_FIN_CONTRA >= T.FECHA\n\t\t\tINNER JOIN M4SSP_CONTRATO_INT cz WITH (NOLOCK) ON\n\t\t\t\tcz.SSP_ID_CONT_INTERN = co.SSP_ID_CONT_INTERN\n\t\t\tINNER JOIN M4SSP_H_CENT_COS ceco WITH (NOLOCK) ON\n\t\t\t\tm4role.ID_ORGANIZATION = ceco.ID_ORGANIZATION\n\t\t\t\tAND m4role.SCO_ID_HR = ceco.SCO_ID_HR\n\t\t\t\tAND m4role.SCO_OR_HR_ROLE = ceco.SCO_OR_HR_ROLE\n\t\t\t\tAND ceco.SSP_FEC_INICIO <= T.FECHA\n\t\t\t\tAND ceco.SSP_FEC_FIN >= T.FECHA\n\t\t\tINNER JOIN M4CCL_H_CENT_COS hceco WITH (NOLOCK) ON\n\t\t\t\tceco.ID_ORGANIZATION = hceco.ID_ORGANIZATION\n\t\t\t\tAND ceco.SCO_ID_HR = hceco.SCO_ID_HR\n\t\t\t\tAND ceco.SCO_OR_HR_ROLE = hceco.SCO_OR_HR_ROLE\n\t\t\t\tAND ceco.SSP_FEC_INICIO = hceco.SSP_FEC_INICIO\n\t\t\tLEFT JOIN M4SSP_CONTRATO_INT AS TCI WITH (NOLOCK)\t\t\n\t\t\t\t on TCI.SSP_ID_CONT_INTERN = co.SSP_ID_CONT_INTERN\n\t\t\tLEFT JOIN M4GLB_HISTORICOS_ROLE AS hrole WITH (NOLOCK) ON\n\t\t\t\throle.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND hrole.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND hrole.SCO_OR_HR_ROLE = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND hrole.DT_START <= T.FECHA\n\t\t\t\tAND hrole.DT_END >= T.FECHA\n\t\t\t\tAND hrole.CCL_ID_CAMPO IN ( 'EMPR_FUNC' ,\n\t\t\t\t'EMPR_FUNC2')\n\t\t\tLEFT JOIN M4SSP_H_CATEGORIA cate WITH (NOLOCK) ON\n\t\t\t\tcate.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND cate.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND cate.SCO_OR_HR_ROLE = m4role.SCO_OR_HR_ROLE\n\t\t\t\tAND cate.SSP_FEC_INICIO <= T.FECHA\n\t\t\t\tAND cate.SSP_FEC_FIN >= T.FECHA\n\t\t\tLEFT JOIN M4CCL_H_HOR_TM_PAR AS HTTH WITH (NOLOCK) ON\n\t\t\t\tHTTH.ID_ORGANIZATION = m4role.ID_ORGANIZATION\n\t\t\t\tAND HTTH.SCO_ID_HR = m4hrpos.SCO_ID_HR\n\t\t\t\tAND HTTH.SCO_OR_HR_ROLE = m4role.SCO_OR_HR_ROLE\n\t\t\t\tAND HTTH.DT_START <= T.FECHA\n\t\t\t\tAND HTTH.DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4SSP_H_PORC_GLEGA AS GL WITH (NOLOCK) ON\n\t\t\t\tGL.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND GL.STD_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND GL.STD_OR_HR_PERIOD = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND GL.SSP_DT_START <= T.FECHA\n\t\t\t\tAND GL.SSP_DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4SSP_H_PORC_JORN AS JP WITH (NOLOCK) ON\n\t\t\t\tJP.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND JP.SSP_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND JP.SSP_OR_HR_PERIOD = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND JP.SSP_FEC_INI_JORN_P <= T.FECHA\n\t\t\t\tAND JP.SSP_FEC_FIN_JORN_P >= T.FECHA\n\t\t\tLEFT JOIN M4SCO_HR_THEOR_TIM TUI WITH (NOLOCK) ON\n\t\t\t\tTUI.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND TUI.STD_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND TUI.STD_OR_HR_PERIOD = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND TUI.DT_START <= T.FECHA\n\t\t\t\tAND TUI.DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4SCO_H_HR_TEAMS EQ WITH (NOLOCK) ON\n\t\t\t\tEQ.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND EQ.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND EQ.SCO_OR_ROLE = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND EQ.SCO_DT_START <= T.FECHA\n\t\t\t\tAND EQ.SCO_DT_END >= T.FECHA\n\t\t\t\tAND EQ.CCL_ID_LEG_ENT = legalEntityHR.STD_ID_LEG_ENT\n\t\t\tLEFT JOIN M4CCL_H_GT_MR_TEAM TUT WITH (NOLOCK) ON\n\t\t\t\tTUT.ID_ORGANIZATION = EQ.ID_ORGANIZATION\n\t\t\t\tAND TUT.CCL_ID_TEAM = EQ.SCO_ID_TEAM\n\t\t\t\tAND TUT.CCL_DT_START <= T.FECHA\n\t\t\t\tAND TUT.CCL_DT_END >= T.FECHA\n\t\t\t\tAND TUT.CCL_ID_LEG_ENT = legalEntityHR.STD_ID_LEG_ENT\n\t\t\tLEFT JOIN #TEMPCTURNO AS TPT WITH (NOLOCK) ON\n\t\t\t\tTPT.SCO_ID_REF_MOD = isnull(TUI.SCO_ID_REF_MOD ,\n\t\t\t\tTUT.CCL_ID_MOD_REF)\n\t\t\tLEFT JOIN M4CCL_VW_EMP_AR_EQUI M4AR WITH (NOLOCK) ON\n\t\t\t\tM4AR.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND M4AR.CCL_ID_LEG_ENT = legalEntityHR.STD_ID_LEG_ENT\n\t\t\t\tAND M4AR.CCL_ID_TEAM = EQ.SCO_ID_TEAM\n\t\t\tLEFT JOIN #EMPRESA_GRUPO_DIVISION_SECCION EGDS WITH (NOLOCK) ON\n\t\t\t\tEGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION = CAST\n\t\t\t\t(\n\t\t\t\t\tCASE\n\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06')\n\t\t\t\t\tAND hrole.CCL_ID_CAMPO = 'EMPR_FUNC2' THEN hrole.CCL_CADENA\n\t\t\t\t\tELSE\n\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06') THEN CAST(SUBSTRING(hrole.CCL_CADENA, 3, 3) AS INT)\n\t\t\t\t\t\tELSE\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\tWHEN (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)) = 9\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_DIVISION, '.', '') = 13\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_SECCION, '.', '')= 18 THEN 37\n\t\t\t\t\t\t\tELSE (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT))\n\t\t\t\t\t\tEND\n\t\t\t\t\tEND\n\t\t\t\tEND AS VARCHAR (3))+\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL' THEN CAST(ceco.CCL_CENTRO_COSTE_ORIGEN AS VARCHAR(10))\n\t\t\t\t\tELSE CAST(hceco.CCL_COD_DIV_SECC AS VARCHAR (10))\n\t\t\t\tEND\n\t\t\tLEFT JOIN #listaUOs uo WITH (NOLOCK) ON\n\t\t\t\tm4pos.SCO_ID_WORK_UNIT = uo.STD_ID_WU_CHILD\n\t\t\t\tAND uo.STD_DT_START <= T.FECHA\n\t\t\t\tAND uo.STD_DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4GLB_H_HR_TEAMS_ORG EXCEP_EMPL WITH (NOLOCK) ON\n\t\t\t\tEXCEP_EMPL.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND EXCEP_EMPL.SCO_ID_HR = periodo.STD_ID_HR\n\t\t\t\tAND EXCEP_EMPL.SCO_OR_ROLE = periodo.STD_OR_HR_PERIOD\n\t\t\t\tAND EXCEP_EMPL.SCO_DT_START <= T.FECHA\n\t\t\t\tAND EXCEP_EMPL.SCO_DT_END >= T.FECHA\n\t\t\tLEFT JOIN M4CCL_H_GA_EM_EQUI AS EMPRESA_EQUIPO_AGOP WITH (NOLOCK) ON\n\t\t\t\tEMPRESA_EQUIPO_AGOP.ID_ORGANIZATION = periodo.ID_ORGANIZATION\n\t\t\t\tAND EMPRESA_EQUIPO_AGOP.CCL_ID_LEG_ENT = COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)\n\t\t\t\tAND EQ.SCO_ID_TEAM = EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM\n\t\t\t\tAND EMPRESA_EQUIPO_AGOP.CCL_DT_START <= T.FECHA\n\t\t\t\tAND EMPRESA_EQUIPO_AGOP.CCL_DT_END >= T.FECHA\n\t\t\tLEFT JOIN STD_WORK_UNIT AS W WITH (NOLOCK) ON\n\t\t\t\tW.STD_ID_WORK_UNIT = m4pos.SCO_ID_WORK_UNIT\n\t\t\tLEFT JOIN STD_HR_ACAD_BACKGR HNIV WITH (NOLOCK) ON\n\t\t\t\tHNIV.STD_ID_HR = pe.STD_ID_PERSON\n\t\t\t\tAND HNIV.STD_DT_START <= T.FECHA\n\t\t\tLEFT JOIN STD_LU_EDU_DIPLOMA DIP WITH (NOLOCK) ON\n\t\t\t\tDIP.STD_ID_DIPLOMA = HNIV.STD_ID_DIPLOMA\n\t\t\tLEFT JOIN STD_LU_EDU_DIP_LEV LEV WITH (NOLOCK) ON\n\t\t\t\tLEV.STD_ID_DIP_LEVEL = DIP.STD_ID_DIP_LEVEL\n\t\t\tLEFT JOIN STD_HR_NAT NACIONALIDAD_SECUNDARIA WITH (NOLOCK) ON\n\t\t\t\tpe.STD_ID_PERSON = NACIONALIDAD_SECUNDARIA.STD_ID_HR\n\t\t\t\tAND NACIONALIDAD_SECUNDARIA.DT_START <= T.FECHA\n\t\t\t\tAND NACIONALIDAD_SECUNDARIA.DT_END >= T.FECHA\n\t\t\t\tAND NACIONALIDAD_SECUNDARIA.STD_PRIMARY_COUNTR = 0\n\t\t\t\t   LEFT JOIN M4CCL_ORIGEN_DATOS_SINCRO AS ODS WITH (NOLOCK) \t\t\n\t\t\t\t\t\tON ODS.CCL_ID_ORIGEN = periodo.CCL_ID_ORIGEN\t\t\n\t\t\n\t\t\t\t\tLEFT JOIN STD_COUNTRY AS MERCADO WITH (NOLOCK) \t\t\n\t\t\t\t\t\tON MERCADO.CSP_ID_COUNTRY = ODS.CCL_ID_PAIS\n\t\t\tWHERE\n\t\t\t\t(REPLACE(periodo.STD_ID_HR_TYPE, '.', '')= '01'\n\t\t\t\tOR REPLACE(periodo.STD_ID_HR_TYPE, '.', '')= '06'\n\t\t\t\tOR REPLACE(periodo.STD_ID_HR_TYPE, '.', '')= '02')\n\t\t\t\tAND\n\t\t\t\t(CASE\n\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06')\n\t\t\t\t\tAND hrole.CCL_ID_CAMPO = 'EMPR_FUNC2' THEN hrole.CCL_CADENA\n\t\t\t\t\tELSE\n\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06') THEN CAST(SUBSTRING(hrole.CCL_CADENA, 3, 3) AS INT)\n\t\t\t\t\t\tELSE\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\tWHEN (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)) = 9\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_DIVISION, '.', '') = 13\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_SECCION, '.', '')= 18 THEN 37\n\t\t\t\t\t\t\tELSE (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT))\n\t\t\t\t\t\tEND\n\t\t\t\t\tEND\n\t\t\t\tEND) IN (SELECT ID_EMPRESA FROM @empresas)\n\t\t\t\tand 1 = (case when legalEntityHR.STD_ID_LEG_ENT=20 AND W.STD_ID_WU_TYPE <> 'TMPL' then 0 else 1 end )\n\t\t\t\t\n\t\t\tGROUP BY\n\t\t\tlegalEntityHR.STD_ID_LEG_ENT,\n\t\t\tW.STD_ID_WU_TYPE,\n\t\t\thceco.CCL_COD_DIV_SECC,\n\t\t\tEGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION,\n\t\t\t\tT.FECHA ,\n\t\t\t\tCAST(periodo.SSP_FEC_ANTIGUEDAD AS DATE) ,\n\t\t\t\t(DATEDIFF(MONTH,\n\t\t\t\tperiodo.SSP_FEC_ANTIGUEDAD,\n\t\t\t\tT.FECHA)) ,\n\t\t\t\tlegalEntityHR.DT_START ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN co.SSP_FEC_FIN_PV_CON IS NULL\n\t\t\t\t\tOR co.SSP_FEC_FIN_PV_CON < co.SSP_FEC_INI_CONTRA\n\t\t\t\t\tOR co.SSP_FEC_FIN_PV_CON < T.FECHA THEN CAST(co.SSP_FEC_FIN_CONTRA AS DATE)\n\t\t\t\t\tELSE CAST(\n\t\t\t\t\t(\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN co.SSP_FEC_FIN_PV_CON < co.SSP_FEC_FIN_CONTRA THEN co.SSP_FEC_FIN_PV_CON\n\t\t\t\t\t\tELSE co.SSP_FEC_FIN_CONTRA\n\t\t\t\t\tEND) AS DATE)\n\t\t\t\tEND ,\n\t\t\t\tm4pos.SCO_ID_JOB_CODE ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06')\n\t\t\t\t\tAND hrole.CCL_ID_CAMPO = 'EMPR_FUNC2' THEN hrole.CCL_CADENA\n\t\t\t\t\tELSE\n\t\t\t\t\tCASE\n\t\t\t\t\t\tWHEN REPLACE(periodo.STD_ID_HR_TYPE, '.', '') IN ('02','06') THEN CAST(SUBSTRING(hrole.CCL_CADENA, 3, 3) AS INT)\n\t\t\t\t\t\tELSE\n\t\t\t\t\t\tCASE\n\t\t\t\t\t\t\tWHEN (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)) = 9\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_DIVISION, '.', '') = 13\n\t\t\t\t\t\t\tAND REPLACE(hceco.CCL_SECCION, '.', '')= 18 THEN 37\n\t\t\t\t\t\t\tELSE (CONVERT(INT,\n\t\t\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT))\n\t\t\t\t\t\tEND\n\t\t\t\t\tEND\n\t\t\t\tEND ,\n\t\t\t\tperiodo.STD_ID_EXTERN_ORG ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN pe.STD_ID_GENDER = '1' THEN 'H'\n\t\t\t\t\tELSE 'M'\n\t\t\t\tEND ,\n\t\t\t\tDATEDIFF(YEAR,\n\t\t\t\tpe.STD_DT_BIRTH,\n\t\t\t\tT.FECHA) ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.CCL_TIEMPO_PARCIAL,\n\t\t\t\t\t'1') = '1' THEN 2\n\t\t\t\t\tELSE 1\n\t\t\t\tEND ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.CCL_TIEMPO_PARCIAL,\n\t\t\t\t\t'1') = '1' THEN 'TIEMPO PARCIAL'\n\t\t\t\t\tELSE 'TIEMPO COMPLETO'\n\t\t\t\tEND ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.SSP_NO_DEFINIDO,\n\t\t\t\t\t'S') = 'S' THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(cz.SSP_NO_DEFINIDO,\n\t\t\t\t\t'S') = 'S' THEN 'INDEFINIDO'\n\t\t\t\t\tELSE 'EVENTUAL'\n\t\t\t\tEND ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL'\n\t\t\t\t\tAND ceco.CCL_CENTRO_COSTE_ORIGEN <> '8525' THEN 2\n\t\t\t\t\tWHEN periodo.ID_ORGANIZATION = 'NL'\n\t\t\t\t\tAND ceco.CCL_CENTRO_COSTE_ORIGEN = '8525' THEN 1\n\t\t\t\t\tWHEN EGDS.ID_EMPRESA_GRUPO_DIVISION_SECCION IS NOT NULL THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND ,\n\t\t\t\tlt.STD_ID_WORK_LOCAT ,\n\t\t\t\tpe.STD_ID_PERSON ,\n\t\t\t\tperiodo.CCL_ID_PERSON ,\n\t\t\t\tCAST(pe.STD_ID_PERSON AS VARCHAR) + '#' + CAST(periodo.CCL_ID_PERSON AS VARCHAR) ,\n\t\t\t\tperiodo.STD_ID_HR_TYPE ,\n\t\t\t\tCOALESCE(GL.SSP_PORC_GLEGAL,\n\t\t\t\t0) ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(GL.SSP_PORC_GLEGAL,\n\t\t\t\t\t0)>0 THEN 1\n\t\t\t\t\tELSE 2\n\t\t\t\tEND ,\n\t\t\t\thceco.CCL_COD_DIV_SECC ,\n\t\t\t\tcate.SSP_ID_CATEGORIA ,\n\t\t\t\tHTTH.CCL_ID_TP_HORA + '#' +(CAST(HTTH.CCL_HOR_TM_PARC AS VARCHAR)) ,\n\t\t\t\tM4AR.CCL_ID_AR_ALM ,\n\t\t\t\tTUI.SCO_ID_REF_MOD ,\n\t\t\t\tEQ.SCO_ID_TEAM ,\n\t\t\t\tEQ.SCO_ID_TEAM_ROLE ,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,\n\t\t\t\t\tEMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) IS NULL\n\t\t\t\t\tOR COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT) IS NULL\n\t\t\t\t\tOR EMPRESA_EQUIPO_AGOP.CCL_ID_TEAM IS NULL THEN '-1'\n\t\t\t\t\tELSE COALESCE(EXCEP_EMPL.SCO_ID_TEAM_ORG,\n\t\t\t\t\tEMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP) + '#' + COALESCE(EXCEP_EMPL.CCL_ID_LEG_ENT,\n\t\t\t\t\tlegalEntityHR.STD_ID_LEG_ENT)\n\t\t\t\tEND ,\n\t\t\t\tTUT.CCL_ID_MOD_REF ,\n\t\t\t\tTPT.IDDimensionTipoTurno ,\n\t\t\t\tuo.STD_ID_WU_CHILD ,\n\t\t\t\tW.STD_ID_WORK_UNIT ,\n\t\t\t\tperiodo.ID_ORGANIZATION ,\n\t\t\t\tceco.CCL_CENTRO_COSTE_ORIGEN ,\n\t\t\t\tJP.SSP_VALOR_COEF_T_P ,\n\t\t\t\tco.SSP_MOTIVO_CONTRATO ,\n\t\t\t    TCI.SSP_TIPO_CONTRATACION,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN periodo.STD_DT_END = T.FECHA THEN 1\n\t\t\t\t\tELSE 0\n\t\t\t\tEND ,\n\t\t\t\tCCL_ID_UNIDAD_NEG\n\t\t\t\t,CASE WHEN periodo.STD_DT_END = T.FECHA\t\t\n\t\t\t\t\tTHEN CAST(MERCADO.CSP_ID_COUNTRY AS VARCHAR)+'#'+CAST(periodo.STD_ID_HRP_END_REA AS VARCHAR)\t\t\n\t\t\t\t\tELSE NULL\t\t\n\t\t\t\t\tEND \n\t\t\t\t\t    ,CASE WHEN periodo.STD_DT_END = T.FECHA\t\t\n\t\t\t\t\t\t  THEN CAST(periodo.ID_ORGANIZATION AS VARCHAR) + '#' + CAST(periodo.STD_ID_HRP_END_REA AS VARCHAR)\t\t\n\t\t\t\t\t\t  ELSE NULL\t\t\n\t\t\t\t\t\t  END \n\t\t\t\t\t\t    ,CASE WHEN periodo.STD_DT_START = T.FECHA\t\t\n\t\t\t\t\t\t\t  THEN periodo.STD_ID_HRP_SRT_REA\t\t\n\t\t\t\t\t\t\t  ELSE NULL\t\t\n\t\t\t\t\t\t\t  END \n\t\t\t\t ) datos\n\t\tLEFT JOIN M4SCO_H_HR_LEGENT AS empresa_anterior WITH (NOLOCK) ON\n\t\t\tempresa_anterior.STD_ID_HR = datos.ID_PERSONA\n\t\t\tAND DATEADD(DAY, -1, datos.ID_FECHA) BETWEEN empresa_anterior.DT_START AND empresa_anterior.DT_END\n\t\t\tAND empresa_anterior.ID_ORGANIZATION = datos.ID_ORGANIZATION\n\t\t\tAND empresa_anterior.STD_ID_LEG_ENT NOT IN ('NZ_ZARA',\n\t\t\t'SI001',\n\t\t\t'SI002')\n\t\tLEFT JOIN (\n\t\t\t\t\t-- AUSENCIAS GHRS\n\t\t\tSELECT ABS_TA.ID_ORGANIZATION,\n\t\t\t\tABS_TA.CCL_ID_HR,\n\t\t\t\tABS_TA.DT_START,\n\t\t\t\tABS_TA.DT_END,\n\t\t\t\tCAST(ABS_TA. CCL_ID_ABSENCE AS VARCHAR) AS CCL_ID_ABSENCE,\n\t\t\t\t'TA' AS ORIGEN_INCIDENCIA\n\t\t\t\t\t, LEGALENTITYHR.STD_ID_LEG_ENT\n\t\t\t\tFROM M4CCL_HR_ABSENCES_TA ABS_TA WITH(NOLOCK)\n\t\t\t\t-- Se añade el cruce con M4SCO_H_HR_LEGENT para obtener la empresa\n\t\t\t\tINNER JOIN M4SCO_H_HR_LEGENT AS LEGALENTITYHR WITH (NOLOCK) \n\t\t\t\t  ON LEGALENTITYHR.STD_ID_HR = ABS_TA.CCL_ID_HR\n\t\t\t\t  AND LEGALENTITYHR.STD_OR_HR_PERIOD = ABS_TA.CCL_OR_HR_PERIOD\n\t\t\t\t  AND LEGALENTITYHR.ID_ORGANIZATION = ABS_TA.ID_ORGANIZATION\n\t\t\t\t  AND ABS_TA.DT_START BETWEEN LEGALENTITYHR.DT_START AND LEGALENTITYHR.DT_END\n\t\t\t\tWHERE\n\t\t\t\t\t(\n\t\t\t\t\tABS_TA.ID_ORGANIZATION IN ('NL')\n\t\t\t\t\t---- Se añade el filtro para la organización 0001 y la empresa. En la empresa se irán añadiendo códigos de empresa según se vayan migrando.\n\t\t\t\t\tOR \n\t\t\t\t\t(ABS_TA.ID_ORGANIZATION IN ('0001') AND LEGALENTITYHR.STD_ID_LEG_ENT IN (SELECT ID_EMPRESA FROM @empresas emp ))\n\t\t\t\t\t)\n\t\t\t\t\tAND ABS_TA.DT_START <= @FechaFin\n\t\t\t\t\tAND ABS_TA.DT_END >= @FechaIni\n\t\t\t\tGROUP BY\n\t\t\t\t\tABS_TA.ID_ORGANIZATION,\n\t\t\t\t\tABS_TA.CCL_ID_HR,\n\t\t\t\t\tABS_TA.DT_START,\n\t\t\t\t\tABS_TA.DT_END,\n\t\t\t\t\tABS_TA.CCL_ID_ABSENCE,\n\t\t\t\t\tLEGALENTITYHR.STD_ID_LEG_ENT\n\n\t\t\tUNION\n\t\t\t-- INCIDENCIAS GHRS\n\t\t\tSELECT INC_TA.ID_ORGANIZATION,\n\t\t\t\tINC_TA.CCL_ID_HR,\n\t\t\t\tINC_TA.DT_START,\n\t\t\t\tINC_TA.DT_END,\n\t\t\t\tCAST(INC_TA.CCL_ID_INCIDENCIA AS VARCHAR) AS CCL_ID_ABSENCE,\n\t\t\t\t--H.SCO_ID_INCIDENCE,\n\t\t\t\t'TA' AS ORIGEN_INCIDENCIA\n\t\t\t\t, LEGALENTITYHR.STD_ID_LEG_ENT\n\t\t\t\tFROM M4SEDES_T_HR_INCIDENCIAS_TA AS INC_TA WITH(NOLOCK)\n\t\t\t\tINNER JOIN M4CCL_INCIDENCIAS_TEOR_TA AS PRES_TA WITH(NOLOCK)\n\t\t\t\tON PRES_TA.ID_ORGANIZATION = INC_TA.ID_ORGANIZATION\n\t\t\t\tAND PRES_TA.CCL_ID_INCIDENCIA = INC_TA.CCL_ID_INCIDENCIA\n\t\t\t\tAND PRES_TA.CCL_ID_WL = 'L'\n\t\t\t\t-- Se añade el cruce con M4SCO_H_HR_LEGENT para obtener la empresa\n\t\t\t\tINNER JOIN M4SCO_H_HR_LEGENT AS LEGALENTITYHR WITH (NOLOCK) \n\t\t\t\t  ON LEGALENTITYHR.STD_ID_HR = INC_TA.CCL_ID_HR\n\t\t\t\t  AND LEGALENTITYHR.STD_OR_HR_PERIOD = INC_TA.CCL_OR_HR_PERIOD\n\t\t\t\t  AND LEGALENTITYHR.ID_ORGANIZATION = INC_TA.ID_ORGANIZATION\n\t\t\t\t  AND INC_TA.DT_START BETWEEN LEGALENTITYHR.DT_START AND LEGALENTITYHR.DT_END\n\t\t\t\tWHERE\n\t\t\t\t\t(\n\t\t\t\t\tINC_TA.ID_ORGANIZATION IN ('NL')\n\t\t\t\t\t---- Se añade el filtro para la organización 0001 y la empresa. En la empresa se irán añadiendo códigos de empresa según se vayan migrando.\n\t\t\t\t\tOR \n\t\t\t\t\t(INC_TA.ID_ORGANIZATION IN ('0001') AND LEGALENTITYHR.STD_ID_LEG_ENT IN (SELECT ID_EMPRESA FROM @empresas emp ))\n\t\t\t\t\t)\n\t\t\t\t\tAND INC_TA.DT_START <= @FechaFin\n\t\t\t\t\tAND INC_TA.DT_END >= @FechaIni\n\t\t\t\tGROUP BY\n\t\t\t\t\tINC_TA.ID_ORGANIZATION,\n\t\t\t\t\tINC_TA.CCL_ID_HR,\n\t\t\t\t\tINC_TA.DT_START,\n\t\t\t\t\tINC_TA.DT_END,\n\t\t\t\t\tINC_TA.CCL_ID_INCIDENCIA,\n\t\t\t\t\tLEGALENTITYHR.STD_ID_LEG_ENT\n\t\t\t\t) ausencias ON\n\t\t\tausencias.CCL_ID_HR = ID_PERSONA\n\t\t\tAND ausencias.ID_ORGANIZATION = datos.ID_ORGANIZATION\n\t\t\tAND ID_FECHA BETWEEN ausencias.DT_START AND ausencias.DT_END\n\n\t\tGROUP BY\n\t\t\tID_FECHA,\n\t\t\tausencias.CCL_ID_HR,\n\t\t\tCCL_ID_ABSENCE,\n\t\t\tFECHA_ANTIGUEDAD,\n\t\t\tdatos.ID_ORGANIZATION,\n\t\t\tANTIGUEDAD,\n\t\t\tFECHA_ALTA_EMPRESA,\n\t\t\tFECHA_VENCIMIENTO,\n\t\t\tID_PUESTO,\n\t\t\tID_PUESTO_HR_TYPE,\n\t\t\tID_EMPRESA,\n\t\t\tID_EMPRESA_EXTERNA,\n\t\t\tGENERO,\n\t\t\tEDAD,\n\t\t\tID_TIPO_JORNADA,\n\t\t\tTIPO_JORNADA,\n\t\t\tID_TIPO_CONTRATO,\n\t\t\tTIPO_CONTRATO,\n\t\t\tID_ESTRUCTURA_ALMACEN,\n\t\t\tID_LUGAR_DE_TRABAJO,\n\t\t\tID_PERSONA,\n\t\t\tID_LOCAL,\n\t\t\tID_PERSONA_LOCAL,\n\t\t\tCOUNT_RAW,\n\t\t\tID_TIPO_PERSONA,\n\t\t\tPORC_REDUCCION_JORNADA,\n\t\t\tID_REDUCCION_JORNADA,\n\t\t\tDIVISION_SECCION,\n\t\t\tID_CATEGORIA,\n\t\t\tID_HORAS_CONTRATADAS,\n\t\t\tID_AREA_ALMACEN,\n\t\t\tdatos.ID_ORGANIZATION + '#' + ID_AREA_ALMACEN,\n\t\t\tMOD_REF_INDIVIDUAL,\n\t\t\tID_EQUIPO,\n\t\t\tID_ROL_EQUIPO,\n\t\t\tID_EQ_ORG,\n\t\t\tMOD_REF_EQUIPO,\n\t\t\tIdInternalTipoTurno,\n\t\t\tUni_org,\n\t\t\tID_UNIDAD_ORGANIZATIVA,\n\t\t\tID_NIVEL_ESTUDIOS,\n\t\t\tID_PAIS_META4_NACIONALIDAD_SECUNDARIA ,\n\t\t\tCCL_CENTRO_COSTE_ORIGEN ,\n\t\t\tPORCENTAJE_JORNADA_PARCIAL ,\n\t\t\tBAJA ,\n\t\t\tCCL_ID_UNIDAD_NEG,\n\t\t\tausencias.ORIGEN_INCIDENCIA,\n\t\t\tdatos.ID_MOTIVO_ALTA,\n\t\t\tdatos.ID_TIPO_CONTRATACION,\n\t\t\tdatos.MOTIVO_CONTRATACION,\n\t\t\tdatos.ID_MOTIVO_BAJA,\n\t\t\tdatos.ID_AGRUPACION_BAJA\n\n\n\nDROP TABLE #TEMPCTURNO;\nDROP TABLE #listaUOs;\nDROP TABLE #TEMPCALENDARIO;\nDROP TABLE #EMPRESA_GRUPO_DIVISION_SECCION;"
          }
        ]
      },
      {
        "name": "EMPRESA_EXTERNA",
        "columns": [
          {
            "name": "ID_EMPRESA_EXTERNA",
            "dataType": "string",
            "sourceColumn": "ID_EMPRESA_EXTERNA"
          },
          {
            "name": "DESCRIPCION_EMPRESA_EXTERNA",
            "dataType": "string",
            "sourceColumn": "DESCRIPCION_EMPRESA_EXTERNA"
          }
        ],
        "partitions": [
          {
            "name": "Query",
            "source": {
              "type": "query",
              "query": "SELECT STD_ID_EXTERN_ORG AS ID_EMPRESA_EXTERNA, STD_N_EXT_ORGESP AS DESCRIPCION_EMPRESA_EXTERNA\nFROM STD_EXTERNAL_ORG WITH (NOLOCK)\nWHERE GETDATE () BETWEEN STD_DT_START AND STD_DT_END\nand STD_ID_EXTERN_ORG<>'e000058'",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT STD_ID_EXTERN_ORG AS ID_EMPRESA_EXTERNA, STD_N_EXT_ORGESP AS DESCRIPCION_EMPRESA_EXTERNA\nFROM STD_EXTERNAL_ORG WITH (NOLOCK)\nWHERE GETDATE () BETWEEN STD_DT_START AND STD_DT_END\nand STD_ID_EXTERN_ORG<>'e000058'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT STD_ID_EXTERN_ORG AS ID_EMPRESA_EXTERNA, STD_N_EXT_ORGESP AS DESCRIPCION_EMPRESA_EXTERNA\nFROM STD_EXTERNAL_ORG WITH (NOLOCK)\nWHERE GETDATE () BETWEEN STD_DT_START AND STD_DT_END\nand STD_ID_EXTERN_ORG<>'e000058'"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT STD_ID_EXTERN_ORG AS ID_EMPRESA_EXTERNA, STD_N_EXT_ORGESP AS DESCRIPCION_EMPRESA_EXTERNA\nFROM STD_EXTERNAL_ORG WITH (NOLOCK)\nWHERE GETDATE () BETWEEN STD_DT_START AND STD_DT_END\nand STD_ID_EXTERN_ORG<>'e000058'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "TIPO_TURNO",
        "columns": [
          {
            "name": "IdInternalTipoTurno",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "IdInternalTipoTurno"
          },
          {
            "name": "ID_MODELO_REFERENCIA",
            "dataType": "string",
            "sourceColumn": "ID_MODELO_REFERENCIA"
          },
          {
            "name": "MODELO_REFERENCIA",
            "dataType": "string",
            "sourceColumn": "MODELO_REFERENCIA"
          },
          {
            "name": "ID_TIPO_TURNO",
            "dataType": "double",
            "sourceColumn": "ID_TIPO_TURNO"
          },
          {
            "name": "TIPO_TURNO",
            "dataType": "string",
            "sourceColumn": "TIPO_TURNO"
          }
        ],
        "partitions": [
          {
            "name": "TIPO_TURNO",
            "source": {
              "type": "query",
              "query": "SELECT IdInternalTipoTurno,ID_MODELO_REFERENCIA, MODELO_REFERENCIA,ID_TIPO_TURNO,TIPO_TURNO FROM\n    (SELECT DENSE_RANK() \n        OVER (ORDER BY SCO_ID_REF_MOD) AS IdInternalTipoTurno, \n\t\tROW_NUMBER() OVER (PARTITION BY UPPER(Md.SCO_ID_REF_MOD) \n\t\t\t\tORDER BY CASE WHEN Md.SCO_ID_REF_MOD = UPPER(Md.SCO_ID_REF_MOD) THEN 1 ELSE 0 END DESC) AS RNK,\n         SCO_ID_REF_MOD as  'ID_MODELO_REFERENCIA',NM_REF_MODESP  as 'MODELO_REFERENCIA',Md.CCL_ID_TP_TURNO as ID_TIPO_TURNO ,MT.CCL_NM_TP_TURNESP as 'TIPO_TURNO'\n   from  M4SCO_REF_MOD Md  WITH (NOLOCK) inner join M4CCL_X_GA_TP_TUR MT  WITH (NOLOCK)\non Md.CCL_ID_TP_TURNO=MT.CCL_ID_TP_TURNO\n ) AS EMP WHERE RNK=1",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT IdInternalTipoTurno,ID_MODELO_REFERENCIA, MODELO_REFERENCIA,ID_TIPO_TURNO,TIPO_TURNO FROM\n    (SELECT DENSE_RANK() \n        OVER (ORDER BY SCO_ID_REF_MOD) AS IdInternalTipoTurno, \n\t\tROW_NUMBER() OVER (PARTITION BY UPPER(Md.SCO_ID_REF_MOD) \n\t\t\t\tORDER BY CASE WHEN Md.SCO_ID_REF_MOD = UPPER(Md.SCO_ID_REF_MOD) THEN 1 ELSE 0 END DESC) AS RNK,\n         SCO_ID_REF_MOD as  'ID_MODELO_REFERENCIA',NM_REF_MODESP  as 'MODELO_REFERENCIA',Md.CCL_ID_TP_TURNO as ID_TIPO_TURNO ,MT.CCL_NM_TP_TURNESP as 'TIPO_TURNO'\n   from  M4SCO_REF_MOD Md  WITH (NOLOCK) inner join M4CCL_X_GA_TP_TUR MT  WITH (NOLOCK)\non Md.CCL_ID_TP_TURNO=MT.CCL_ID_TP_TURNO\n ) AS EMP WHERE RNK=1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT IdInternalTipoTurno,ID_MODELO_REFERENCIA, MODELO_REFERENCIA,ID_TIPO_TURNO,TIPO_TURNO FROM\n    (SELECT DENSE_RANK() \n        OVER (ORDER BY SCO_ID_REF_MOD) AS IdInternalTipoTurno, \n\t\tROW_NUMBER() OVER (PARTITION BY UPPER(Md.SCO_ID_REF_MOD) \n\t\t\t\tORDER BY CASE WHEN Md.SCO_ID_REF_MOD = UPPER(Md.SCO_ID_REF_MOD) THEN 1 ELSE 0 END DESC) AS RNK,\n         SCO_ID_REF_MOD as  'ID_MODELO_REFERENCIA',NM_REF_MODESP  as 'MODELO_REFERENCIA',Md.CCL_ID_TP_TURNO as ID_TIPO_TURNO ,MT.CCL_NM_TP_TURNESP as 'TIPO_TURNO'\n   from  M4SCO_REF_MOD Md  WITH (NOLOCK) inner join M4CCL_X_GA_TP_TUR MT  WITH (NOLOCK)\non Md.CCL_ID_TP_TURNO=MT.CCL_ID_TP_TURNO\n ) AS EMP WHERE RNK=1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT IdInternalTipoTurno,ID_MODELO_REFERENCIA, MODELO_REFERENCIA,ID_TIPO_TURNO,TIPO_TURNO FROM\n    (SELECT DENSE_RANK() \n        OVER (ORDER BY SCO_ID_REF_MOD) AS IdInternalTipoTurno, \n\t\tROW_NUMBER() OVER (PARTITION BY UPPER(Md.SCO_ID_REF_MOD) \n\t\t\t\tORDER BY CASE WHEN Md.SCO_ID_REF_MOD = UPPER(Md.SCO_ID_REF_MOD) THEN 1 ELSE 0 END DESC) AS RNK,\n         SCO_ID_REF_MOD as  'ID_MODELO_REFERENCIA',NM_REF_MODESP  as 'MODELO_REFERENCIA',Md.CCL_ID_TP_TURNO as ID_TIPO_TURNO ,MT.CCL_NM_TP_TURNESP as 'TIPO_TURNO'\n   from  M4SCO_REF_MOD Md  WITH (NOLOCK) inner join M4CCL_X_GA_TP_TUR MT  WITH (NOLOCK)\non Md.CCL_ID_TP_TURNO=MT.CCL_ID_TP_TURNO\n ) AS EMP WHERE RNK=1"
          }
        ]
      },
      {
        "name": "UNIDAD_ORGANIZATIVA",
        "columns": [
          {
            "name": "ID_UNIDAD_ORGANIZATIVA",
            "dataType": "string",
            "sourceColumn": "ID_UNIDAD_ORGANIZATIVA"
          },
          {
            "name": "UNIDAD_ORGANIZATIVA",
            "dataType": "string",
            "sourceColumn": "UNIDAD_ORGANIZATIVA"
          },
          {
            "name": "TIPO_UNIDAD_ORGANIZATIVA",
            "dataType": "string",
            "sourceColumn": "TIPO_UNIDAD_ORGANIZATIVA"
          },
          {
            "name": "LEVEL1",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LEVEL1"
          },
          {
            "name": "NIVEL1",
            "dataType": "string",
            "sourceColumn": "LEVEL1_DESC"
          },
          {
            "name": "LEVEL2",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LEVEL2"
          },
          {
            "name": "NIVEL2",
            "dataType": "string",
            "sourceColumn": "LEVEL2_DESC"
          },
          {
            "name": "LEVEL3",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LEVEL3"
          },
          {
            "name": "NIVEL3",
            "dataType": "string",
            "sourceColumn": "LEVEL3_DESC"
          },
          {
            "name": "LEVEL4",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LEVEL4"
          },
          {
            "name": "NIVEL4",
            "dataType": "string",
            "sourceColumn": "LEVEL4_DESC"
          },
          {
            "name": "LEVEL5",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LEVEL5"
          },
          {
            "name": "NIVEL5",
            "dataType": "string",
            "sourceColumn": "LEVEL5_DESC"
          },
          {
            "name": "LEVEL6",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LEVEL6"
          },
          {
            "name": "NIVEL6",
            "dataType": "string",
            "sourceColumn": "LEVEL6_DESC"
          },
          {
            "name": "LEVEL7",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LEVEL7"
          },
          {
            "name": "NIVEL7",
            "dataType": "string",
            "sourceColumn": "LEVEL7_DESC"
          },
          {
            "name": "LEVEL8",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LEVEL8"
          },
          {
            "name": "NIVEL8",
            "dataType": "string",
            "sourceColumn": "LEVEL8_DESC"
          },
          {
            "name": "LEVEL9",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LEVEL9"
          },
          {
            "name": "NIVEL9",
            "dataType": "string",
            "sourceColumn": "LEVEL9_DESC"
          },
          {
            "name": "LEVEL10",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LEVEL10"
          },
          {
            "name": "NIVEL10",
            "dataType": "string",
            "sourceColumn": "LEVEL10_DESC"
          }
        ],
        "partitions": [
          {
            "name": "UNIDAD_ORGANIZATIVA",
            "source": {
              "type": "query",
              "query": "WITH\nDATOS AS \n(\n SELECT \n  COALESCE(R.STD_ID_WU_PARENT, '') AS PARENT,\n  COALESCE(R.STD_ID_WU_CHILD, '') AS CHILD,\n  1 AS NIVEL, \n  CAST(COALESCE(R.STD_ID_WU_PARENT,'')  + '-#-' + COALESCE(R.STD_ID_WU_CHILD, '') AS VARCHAR(2000))  AS H\n FROM \n        STD_REL_WORK_UNIT R with (nolock)\n WHERE \n        (COALESCE(R.STD_ID_WU_PARENT, '') in ('ROOT') AND YEAR(R.STD_DT_END)>3000) --OR (COALESCE(R.STD_ID_WU_PARENT, '')= '236')\n \n UNION ALL\n\n SELECT\n  COALESCE(R.STD_ID_WU_PARENT, '') AS PARENT,\n  COALESCE(R.STD_ID_WU_CHILD, '') AS CHILD,\n  D.NIVEL +1 AS NIVEL,\n  CAST(D.H + '-#-' + COALESCE(R.STD_ID_WU_CHILD, '') AS VARCHAR(2000)) AS H\n FROM\n  STD_REL_WORK_UNIT R with (nolock)\n  INNER JOIN DATOS D\n  ON D.CHILD = R.STD_ID_WU_PARENT AND YEAR(R.STD_DT_END)>3000\n) \n\n,\nINDICES AS(\nSELECT \n CHILD AS ID,\n NIVEL,  \n CHARINDEX('-#-',H) AS IX1,\n\n CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) AS IX2,\n\n CASE WHEN CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1)>0 THEN  \n CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1)\n ELSE  0 END AS IX3,\n\n CASE WHEN CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1)>0 THEN \n CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1)\n ELSE  0 END AS IX4,\n\n CASE WHEN CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1)>0 AND CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1)>0 THEN \n CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1)\n ELSE  0 END AS IX5,\n\n CASE WHEN CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1)>0 AND CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1)>0 THEN \n CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1)\n ELSE  0 END AS IX6,\n\n CASE WHEN CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1)>0 AND \n     CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1)>0 AND\n  CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1)>0 AND\n  CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1)>0 THEN \n CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1) +1)\n ELSE  0 END AS IX7,\n\n CASE WHEN CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1) +1)>0 AND\n     CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1)>0 AND \n     CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1)>0 AND\n  CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1)>0 AND\n  CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1)>0 THEN \n CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1) +1) +1)\n ELSE  0 END AS IX8,\n\n CASE WHEN CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1) +1) +1)>0 AND\n     CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1) +1)>0 AND\n     CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1)>0 AND \n     CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1)>0 AND\n  CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1)>0 AND\n  CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1)>0 THEN \n CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1) +1) +1) +1)\n ELSE  0 END AS IX9,\n\n CASE WHEN CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1) +1) +1) +1)>0 AND\n  CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1) +1) +1)>0 AND\n     CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1) +1)>0 AND\n     CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1)>0 AND \n     CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1)>0 AND\n  CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1)>0 AND\n  CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1)>0 THEN \n CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1) +1) +1) +1) +1)\n ELSE  0 END AS IX10,\n\n CASE WHEN CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1) +1) +1) +1) +1)>0 AND\n  CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1) +1) +1) +1)>0 AND\n  CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1) +1) +1)>0 AND\n     CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1) +1)>0 AND\n     CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1)>0 AND \n     CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1)>0 AND\n  CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1)>0 AND\n  CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1)>0 THEN \n CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H,CHARINDEX('-#-',H)+1) +1) +1) +1) +1) +1) +1) +1) +1) +1)\n ELSE  0 END AS IX11,\n\n H \nFROM \n DATOS \n\n)\n, \nWORK_UNITS AS\n(SELECT \n ID,\n SUBSTRING(H,0,IX1) AS LEVEL1,\n CASE WHEN (IX2-IX1) >0 THEN SUBSTRING(H,(IX1+3),(IX2-IX1-3)) ELSE NULL END AS LEVEL2,\n CASE WHEN (IX3-IX2) >0 THEN SUBSTRING(H,(IX2+3),(IX3-IX2-3)) ELSE NULL END AS LEVEL3,\n CASE WHEN (IX4-IX3) >0 THEN SUBSTRING(H,(IX3+3),(IX4-IX3-3)) ELSE NULL END AS LEVEL4,\n CASE WHEN (IX5-IX4) >0 THEN SUBSTRING(H,(IX4+3),(IX5-IX4-3)) ELSE NULL END AS LEVEL5,\n CASE WHEN (IX6-IX5) >0 THEN SUBSTRING(H,(IX5+3),(IX6-IX5-3)) ELSE NULL END AS LEVEL6,\n CASE WHEN (IX7-IX6) >0 THEN SUBSTRING(H,(IX6+3),(IX7-IX6-3)) ELSE NULL END AS LEVEL7,\n CASE WHEN (IX8-IX7) >0 THEN SUBSTRING(H,(IX7+3),(IX8-IX7-3)) ELSE NULL END AS LEVEL8,\n CASE WHEN (IX9-IX8) >0 THEN SUBSTRING(H,(IX8+3),(IX9-IX8-3)) ELSE NULL END AS LEVEL9,\n CASE WHEN (IX10-IX9) >0 THEN SUBSTRING(H,(IX9+3),(IX10-IX9-3)) ELSE NULL END AS LEVEL10,\n CASE WHEN (IX11-IX10) >0 THEN SUBSTRING(H,(IX10+3),(IX11-IX10-3)) ELSE NULL END AS LEVEL11\nFROM \n INDICES \n)\n\n\nSELECT\n WU.ID AS ID_UNIDAD_ORGANIZATIVA, W0.STD_N_WORK_UNITESP + ' [' + CAST(WU.ID AS NVARCHAR) + ']' AS UNIDAD_ORGANIZATIVA,\n W0.STD_ID_WU_TYPE AS TIPO_UNIDAD_ORGANIZATIVA,\n CASE WHEN WU.LEVEL2  IS NULL THEN ID ELSE WU.LEVEL2  END AS LEVEL1 , CASE WHEN W2.STD_N_WORK_UNITESP  IS NULL THEN W0.STD_N_WORK_UNITESP ELSE W2.STD_N_WORK_UNITESP  END + ' [' + CAST(CASE WHEN WU.LEVEL2  IS NULL THEN ID ELSE WU.LEVEL2  END AS NVARCHAR) + ']' AS LEVEL1_DESC,\n CASE WHEN WU.LEVEL3  IS NULL THEN ID ELSE WU.LEVEL3  END AS LEVEL2 , CASE WHEN W3.STD_N_WORK_UNITESP  IS NULL THEN W0.STD_N_WORK_UNITESP ELSE W3.STD_N_WORK_UNITESP  END + ' [' + CAST(CASE WHEN WU.LEVEL3  IS NULL THEN ID ELSE WU.LEVEL3  END AS NVARCHAR) + ']' AS LEVEL2_DESC,\n CASE WHEN WU.LEVEL4  IS NULL THEN ID ELSE WU.LEVEL4  END AS LEVEL3 , CASE WHEN W4.STD_N_WORK_UNITESP  IS NULL THEN W0.STD_N_WORK_UNITESP ELSE W4.STD_N_WORK_UNITESP  END + ' [' + CAST(CASE WHEN WU.LEVEL4  IS NULL THEN ID ELSE WU.LEVEL4  END AS NVARCHAR) + ']' AS LEVEL3_DESC,\n CASE WHEN WU.LEVEL5  IS NULL THEN ID ELSE WU.LEVEL5  END AS LEVEL4 , CASE WHEN W5.STD_N_WORK_UNITESP  IS NULL THEN W0.STD_N_WORK_UNITESP ELSE W5.STD_N_WORK_UNITESP  END + ' [' + CAST(CASE WHEN WU.LEVEL5  IS NULL THEN ID ELSE WU.LEVEL5  END AS NVARCHAR) + ']' AS LEVEL4_DESC,\n CASE WHEN WU.LEVEL6  IS NULL THEN ID ELSE WU.LEVEL6  END AS LEVEL5 , CASE WHEN W6.STD_N_WORK_UNITESP  IS NULL THEN W0.STD_N_WORK_UNITESP ELSE W6.STD_N_WORK_UNITESP  END + ' [' + CAST(CASE WHEN WU.LEVEL6  IS NULL THEN ID ELSE WU.LEVEL6  END AS NVARCHAR) + ']' AS LEVEL5_DESC,\n CASE WHEN WU.LEVEL7  IS NULL THEN ID ELSE WU.LEVEL7  END AS LEVEL6 , CASE WHEN W7.STD_N_WORK_UNITESP  IS NULL THEN W0.STD_N_WORK_UNITESP ELSE W7.STD_N_WORK_UNITESP  END + ' [' + CAST(CASE WHEN WU.LEVEL7  IS NULL THEN ID ELSE WU.LEVEL7 END AS NVARCHAR) + ']' AS LEVEL6_DESC,\n CASE WHEN WU.LEVEL8  IS NULL THEN ID ELSE WU.LEVEL8  END AS LEVEL7 , CASE WHEN W8.STD_N_WORK_UNITESP  IS NULL THEN W0.STD_N_WORK_UNITESP ELSE W8.STD_N_WORK_UNITESP  END + ' [' + CAST(CASE WHEN WU.LEVEL8  IS NULL THEN ID ELSE WU.LEVEL8  END AS NVARCHAR) + ']' AS LEVEL7_DESC,\n CASE WHEN WU.LEVEL9  IS NULL THEN ID ELSE WU.LEVEL9  END AS LEVEL8 , CASE WHEN W9.STD_N_WORK_UNITESP  IS NULL THEN W0.STD_N_WORK_UNITESP ELSE W9.STD_N_WORK_UNITESP  END + ' [' + CAST(CASE WHEN WU.LEVEL9  IS NULL THEN ID ELSE WU.LEVEL9  END AS NVARCHAR) + ']' AS LEVEL8_DESC,\n CASE WHEN WU.LEVEL10 IS NULL THEN ID ELSE WU.LEVEL10 END AS LEVEL9  , CASE WHEN W10.STD_N_WORK_UNITESP IS NULL THEN W0.STD_N_WORK_UNITESP ELSE W10.STD_N_WORK_UNITESP END + ' [' + CAST(CASE WHEN WU.LEVEL10 IS NULL THEN ID ELSE WU.LEVEL10 END AS NVARCHAR) + ']' AS LEVEL9_DESC,\n CASE WHEN WU.LEVEL11 IS NULL THEN ID ELSE WU.LEVEL11 END AS LEVEL10 , CASE WHEN W11.STD_N_WORK_UNITESP IS NULL THEN W0.STD_N_WORK_UNITESP ELSE W11.STD_N_WORK_UNITESP END + ' [' + CAST(CASE WHEN WU.LEVEL11 IS NULL THEN ID ELSE WU.LEVEL11 END AS NVARCHAR) + ']' AS LEVEL10_DESC\n\nFROM \n WORK_UNITS WU\n\n LEFT JOIN STD_WORK_UNIT AS W0\n ON WU.ID = W0.STD_ID_WORK_UNIT\n\n LEFT JOIN STD_WORK_UNIT AS W1\n ON WU.LEVEL1 = W1.STD_ID_WORK_UNIT\n\n LEFT JOIN STD_WORK_UNIT AS W2\n ON WU.LEVEL2 = W2.STD_ID_WORK_UNIT\n\n LEFT JOIN STD_WORK_UNIT AS W3\n ON WU.LEVEL3 = W3.STD_ID_WORK_UNIT\n\n LEFT JOIN STD_WORK_UNIT AS W4\n ON WU.LEVEL4 = W4.STD_ID_WORK_UNIT\n\n LEFT JOIN STD_WORK_UNIT AS W5\n ON WU.LEVEL5 = W5.STD_ID_WORK_UNIT\n\n LEFT JOIN STD_WORK_UNIT AS W6\n ON WU.LEVEL6 = W6.STD_ID_WORK_UNIT\n\n LEFT JOIN STD_WORK_UNIT AS W7\n ON WU.LEVEL7 = W7.STD_ID_WORK_UNIT\n\n LEFT JOIN STD_WORK_UNIT AS W8\n ON WU.LEVEL8 = W8.STD_ID_WORK_UNIT\n\n LEFT JOIN STD_WORK_UNIT AS W9\n ON WU.LEVEL9 = W9.STD_ID_WORK_UNIT\n\n LEFT JOIN STD_WORK_UNIT AS W10\n ON WU.LEVEL10 = W10.STD_ID_WORK_UNIT\n\n LEFT JOIN STD_WORK_UNIT AS W11\n ON WU.LEVEL11 = W11.STD_ID_WORK_UNIT\n\nWHERE CASE WHEN WU.LEVEL2  IS NULL THEN ID ELSE WU.LEVEL2  END <>'7440'\n\nOPTION (MAXRECURSION 32767)",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "hierarchies": [
          {
            "name": "JERARQUIA UNID ORG",
            "levels": [
              {
                "name": "NIVEL1",
                "ordinal": 0,
                "column": "NIVEL1"
              },
              {
                "name": "NIVEL2",
                "ordinal": 1,
                "column": "NIVEL2"
              },
              {
                "name": "NIVEL3",
                "ordinal": 2,
                "column": "NIVEL3"
              },
              {
                "name": "NIVEL4",
                "ordinal": 3,
                "column": "NIVEL4"
              },
              {
                "name": "NIVEL5",
                "ordinal": 4,
                "column": "NIVEL5"
              },
              {
                "name": "NIVEL6",
                "ordinal": 5,
                "column": "NIVEL6"
              },
              {
                "name": "NIVEL7",
                "ordinal": 6,
                "column": "NIVEL7"
              },
              {
                "name": "NIVEL8",
                "ordinal": 7,
                "column": "NIVEL8"
              },
              {
                "name": "NIVEL9",
                "ordinal": 8,
                "column": "NIVEL9"
              },
              {
                "name": "NIVEL10",
                "ordinal": 9,
                "column": "NIVEL10"
              }
            ]
          }
        ]
      },
      {
        "name": "ROL_EQUIPO",
        "columns": [
          {
            "name": "ID_ROL_EQUIPO",
            "dataType": "string",
            "sourceColumn": "ID_ROL_EQUIPO"
          },
          {
            "name": "ROL_EQUIPO",
            "dataType": "string",
            "sourceColumn": "ROL_EQUIPO"
          }
        ],
        "partitions": [
          {
            "name": "ROL_EQUIPO",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SELECT SCO_ID_TEAM_ROLE AS ID_ROL_EQUIPO,SCO_NM_TEAM_ROLESP AS ROL_EQUIPO FROM M4SCO_X_T_R_T WITH(NOLOCK)",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT SCO_ID_TEAM_ROLE AS ID_ROL_EQUIPO,SCO_NM_TEAM_ROLESP AS ROL_EQUIPO FROM M4SCO_X_T_R_T WITH(NOLOCK)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT SCO_ID_TEAM_ROLE AS ID_ROL_EQUIPO,SCO_NM_TEAM_ROLESP AS ROL_EQUIPO FROM M4SCO_X_T_R_T WITH(NOLOCK)"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ROL_EQUIPO"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT SCO_ID_TEAM_ROLE AS ID_ROL_EQUIPO,SCO_NM_TEAM_ROLESP AS ROL_EQUIPO FROM M4SCO_X_T_R_T WITH(NOLOCK)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "AUSENCIAS",
        "columns": [
          {
            "name": "ID_ORGANIZATION",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_ORGANIZATION",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "AUSENCIA",
            "dataType": "string",
            "sourceColumn": "AUSENCIA",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ID_ORG_AUSENCIA",
            "dataType": "string",
            "sourceColumn": "ID_ORG_AUSENCIA"
          },
          {
            "name": "ID_AUSENCIA",
            "dataType": "string",
            "sourceColumn": "ID_AUSENCIA"
          }
        ],
        "partitions": [
          {
            "name": "Consulta",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "-- Variable de tabla que recoge las empresas que están en GPA y las que están en GHRS.\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\n--- Ausencias GHRS\nSELECT 'TA' + '#' + ID_ORGANIZATION+'#'+cast(CCL_ID_ABSENCE as varchar) AS ID_ORG_AUSENCIA, \nID_ORGANIZATION\tAS ID_ORGANIZATION, \ncast(CCL_ID_ABSENCE AS nvarchar(9)) AS ID_AUSENCIA, \nCASE WHEN\n ID_ORGANIZATION='0001' THEN CCL_NM_ABSENCEESP\n\t ELSE CCL_NM_ABSENCEENG END AS AUSENCIA\nFROM M4CCL_ABSENCES_TA WITH(NOLOCK)\nWHERE ID_ORGANIZATION IN ('NL','0001')\n-- Ausencias generales y de logística\nAND CCL_ID_WL_TYPE IN ('P', 'L')",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Variable de tabla que recoge las empresas que están en GPA y las que están en GHRS.\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\n--- Ausencias GHRS\nSELECT 'TA' + '#' + ID_ORGANIZATION+'#'+cast(CCL_ID_ABSENCE as varchar) AS ID_ORG_AUSENCIA, \nID_ORGANIZATION\tAS ID_ORGANIZATION, \ncast(CCL_ID_ABSENCE AS nvarchar(9)) AS ID_AUSENCIA, \nCASE WHEN\n ID_ORGANIZATION='0001' THEN CCL_NM_ABSENCEESP\n\t ELSE CCL_NM_ABSENCEENG END AS AUSENCIA\nFROM M4CCL_ABSENCES_TA WITH(NOLOCK)\nWHERE ID_ORGANIZATION IN ('NL','0001')\n-- Ausencias generales y de logística\nAND CCL_ID_WL_TYPE IN ('P', 'L')</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "-- Variable de tabla que recoge las empresas que están en GPA y las que están en GHRS.\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\n--- Ausencias GHRS\nSELECT 'TA' + '#' + ID_ORGANIZATION+'#'+cast(CCL_ID_ABSENCE as varchar) AS ID_ORG_AUSENCIA, \nID_ORGANIZATION\tAS ID_ORGANIZATION, \ncast(CCL_ID_ABSENCE AS nvarchar(9)) AS ID_AUSENCIA, \nCASE WHEN\n ID_ORGANIZATION='0001' THEN CCL_NM_ABSENCEESP\n\t ELSE CCL_NM_ABSENCEENG END AS AUSENCIA\nFROM M4CCL_ABSENCES_TA WITH(NOLOCK)\nWHERE ID_ORGANIZATION IN ('NL','0001')\n-- Ausencias generales y de logística\nAND CCL_ID_WL_TYPE IN ('P', 'L')"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Consulta"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Variable de tabla que recoge las empresas que están en GPA y las que están en GHRS.\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\n--- Ausencias GHRS\nSELECT 'TA' + '#' + ID_ORGANIZATION+'#'+cast(CCL_ID_ABSENCE as varchar) AS ID_ORG_AUSENCIA, \nID_ORGANIZATION\tAS ID_ORGANIZATION, \ncast(CCL_ID_ABSENCE AS nvarchar(9)) AS ID_AUSENCIA, \nCASE WHEN\n ID_ORGANIZATION='0001' THEN CCL_NM_ABSENCEESP\n\t ELSE CCL_NM_ABSENCEENG END AS AUSENCIA\nFROM M4CCL_ABSENCES_TA WITH(NOLOCK)\nWHERE ID_ORGANIZATION IN ('NL','0001')\n-- Ausencias generales y de logística\nAND CCL_ID_WL_TYPE IN ('P', 'L')</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "TRAMOS_JORNADA_PARCIAL",
        "columns": [
          {
            "name": "%JORNADA_PARCIAL",
            "dataType": "int64",
            "sourceColumn": "PORCENTAJE",
            "sourceProviderType": "Integer"
          },
          {
            "name": "TRAMO_JORNADA",
            "dataType": "string",
            "sourceColumn": "TRAMO_JORNADA",
            "sortByColumn": "ORDEN"
          },
          {
            "name": "ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ORDEN"
          }
        ],
        "partitions": [
          {
            "name": "JORNADA_PARCIAL",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "WITH INTERVALO (PORCENTAJE, TRAMO_JORNADA, ORDEN) AS \n(\n    SELECT 0, cast('0 - 20 %' as varchar(10)), 0 AS ORDEN\nUNION ALL\n    SELECT \n            PORCENTAJE+1, \n\t\t\tCASE WHEN PORCENTAJE +1 BETWEEN 0 AND 20 THEN cast('0 - 20%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 20 AND 40 THEN cast('21 - 40%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 40 AND 60 THEN cast('41 - 60%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 60 AND 80 THEN cast('61 - 80%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 80 AND 99 THEN cast('81 - 99%'  as varchar(10))\n\t\t\t\tELSE '100%'\n\t\t\tEND,\n\t\t\tCASE WHEN PORCENTAJE +1 BETWEEN 0 AND 20 THEN 0\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 20 AND 40 THEN 1\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 40 AND 60 THEN 2\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 60 AND 80 THEN 3\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 80 AND 99 THEN 4\n\t\t\t\tELSE 5\n\t\t\tEND\n    FROM\n            INTERVALO \n    WHERE \n            PORCENTAJE <100\n)\n\nselect * from INTERVALO\nOPTION(MAXRECURSION 32767);",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>WITH INTERVALO (PORCENTAJE, TRAMO_JORNADA, ORDEN) AS \n(\n    SELECT 0, cast('0 - 20 %' as varchar(10)), 0 AS ORDEN\nUNION ALL\n    SELECT \n            PORCENTAJE+1, \n\t\t\tCASE WHEN PORCENTAJE +1 BETWEEN 0 AND 20 THEN cast('0 - 20%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 20 AND 40 THEN cast('21 - 40%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 40 AND 60 THEN cast('41 - 60%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 60 AND 80 THEN cast('61 - 80%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 80 AND 99 THEN cast('81 - 99%'  as varchar(10))\n\t\t\t\tELSE '100%'\n\t\t\tEND,\n\t\t\tCASE WHEN PORCENTAJE +1 BETWEEN 0 AND 20 THEN 0\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 20 AND 40 THEN 1\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 40 AND 60 THEN 2\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 60 AND 80 THEN 3\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 80 AND 99 THEN 4\n\t\t\t\tELSE 5\n\t\t\tEND\n    FROM\n            INTERVALO \n    WHERE \n            PORCENTAJE <100\n)\n\nselect * from INTERVALO\nOPTION(MAXRECURSION 32767);</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "WITH INTERVALO (PORCENTAJE, TRAMO_JORNADA, ORDEN) AS \n(\n    SELECT 0, cast('0 - 20 %' as varchar(10)), 0 AS ORDEN\nUNION ALL\n    SELECT \n            PORCENTAJE+1, \n\t\t\tCASE WHEN PORCENTAJE +1 BETWEEN 0 AND 20 THEN cast('0 - 20%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 20 AND 40 THEN cast('21 - 40%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 40 AND 60 THEN cast('41 - 60%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 60 AND 80 THEN cast('61 - 80%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 80 AND 99 THEN cast('81 - 99%'  as varchar(10))\n\t\t\t\tELSE '100%'\n\t\t\tEND,\n\t\t\tCASE WHEN PORCENTAJE +1 BETWEEN 0 AND 20 THEN 0\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 20 AND 40 THEN 1\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 40 AND 60 THEN 2\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 60 AND 80 THEN 3\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 80 AND 99 THEN 4\n\t\t\t\tELSE 5\n\t\t\tEND\n    FROM\n            INTERVALO \n    WHERE \n            PORCENTAJE <100\n)\n\nselect * from INTERVALO\nOPTION(MAXRECURSION 32767);"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "JORNADA_PARCIAL"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>WITH INTERVALO (PORCENTAJE, TRAMO_JORNADA, ORDEN) AS \n(\n    SELECT 0, cast('0 - 20 %' as varchar(10)), 0 AS ORDEN\nUNION ALL\n    SELECT \n            PORCENTAJE+1, \n\t\t\tCASE WHEN PORCENTAJE +1 BETWEEN 0 AND 20 THEN cast('0 - 20%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 20 AND 40 THEN cast('21 - 40%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 40 AND 60 THEN cast('41 - 60%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 60 AND 80 THEN cast('61 - 80%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 80 AND 99 THEN cast('81 - 99%'  as varchar(10))\n\t\t\t\tELSE '100%'\n\t\t\tEND,\n\t\t\tCASE WHEN PORCENTAJE +1 BETWEEN 0 AND 20 THEN 0\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 20 AND 40 THEN 1\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 40 AND 60 THEN 2\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 60 AND 80 THEN 3\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 80 AND 99 THEN 4\n\t\t\t\tELSE 5\n\t\t\tEND\n    FROM\n            INTERVALO \n    WHERE \n            PORCENTAJE <100\n)\n\nselect * from INTERVALO\nOPTION(MAXRECURSION 32767);</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "REDUCCION_JORNADA",
        "columns": [
          {
            "name": "%REDUCCION_JORNADA",
            "dataType": "int64",
            "sourceColumn": "PORCENTAJE",
            "sourceProviderType": "Integer"
          },
          {
            "name": "TRAMO_REDUCCION",
            "dataType": "string",
            "sourceColumn": "TRAMO_REDUCCION",
            "sortByColumn": "ORDEN",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ORDEN"
          },
          {
            "type": "calculated",
            "name": "REDUCCION_JORNADA",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(REDUCCION_JORNADA[%REDUCCION_JORNADA]=0,\"NO\",\"SI\")"
          }
        ],
        "partitions": [
          {
            "name": "TREDUCCION_JORNADA",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "WITH INTERVALO (PORCENTAJE, TRAMO_REDUCCION,ORDEN) AS \n(\n    SELECT 0, cast('0 - 20%' as varchar(10)), 0 AS ORDEN\nUNION ALL\n    SELECT \n            PORCENTAJE+1, \n\t\t\tCASE WHEN PORCENTAJE +1 BETWEEN 0 AND 20 THEN cast('0 - 20%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 20 AND 40 THEN cast('21 - 40%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 40 AND 60 THEN cast('41 - 60%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 60 AND 80 THEN cast('61 - 80%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 80 AND 99 THEN cast('81 - 99%'  as varchar(10))\n\t\t\t\tELSE '100%'\n\t\t\tEND,\n\t\t\tCASE WHEN PORCENTAJE +1 BETWEEN 0 AND 20 THEN 0\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 20 AND 40 THEN 1\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 40 AND 60 THEN 2\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 60 AND 80 THEN 3\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 80 AND 99 THEN 4\n\t\t\t\tELSE 5\n\t\t\tEND\n    FROM\n            INTERVALO \n    WHERE \n            PORCENTAJE <100\n)\n\nselect * from INTERVALO\nOPTION(MAXRECURSION 32767);",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>WITH INTERVALO (PORCENTAJE, TRAMO_REDUCCION,ORDEN) AS \n(\n    SELECT 0, cast('0 - 20%' as varchar(10)), 0 AS ORDEN\nUNION ALL\n    SELECT \n            PORCENTAJE+1, \n\t\t\tCASE WHEN PORCENTAJE +1 BETWEEN 0 AND 20 THEN cast('0 - 20%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 20 AND 40 THEN cast('21 - 40%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 40 AND 60 THEN cast('41 - 60%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 60 AND 80 THEN cast('61 - 80%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 80 AND 99 THEN cast('81 - 99%'  as varchar(10))\n\t\t\t\tELSE '100%'\n\t\t\tEND,\n\t\t\tCASE WHEN PORCENTAJE +1 BETWEEN 0 AND 20 THEN 0\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 20 AND 40 THEN 1\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 40 AND 60 THEN 2\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 60 AND 80 THEN 3\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 80 AND 99 THEN 4\n\t\t\t\tELSE 5\n\t\t\tEND\n    FROM\n            INTERVALO \n    WHERE \n            PORCENTAJE <100\n)\n\nselect * from INTERVALO\nOPTION(MAXRECURSION 32767);</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "WITH INTERVALO (PORCENTAJE, TRAMO_REDUCCION,ORDEN) AS \n(\n    SELECT 0, cast('0 - 20%' as varchar(10)), 0 AS ORDEN\nUNION ALL\n    SELECT \n            PORCENTAJE+1, \n\t\t\tCASE WHEN PORCENTAJE +1 BETWEEN 0 AND 20 THEN cast('0 - 20%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 20 AND 40 THEN cast('21 - 40%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 40 AND 60 THEN cast('41 - 60%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 60 AND 80 THEN cast('61 - 80%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 80 AND 99 THEN cast('81 - 99%'  as varchar(10))\n\t\t\t\tELSE '100%'\n\t\t\tEND,\n\t\t\tCASE WHEN PORCENTAJE +1 BETWEEN 0 AND 20 THEN 0\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 20 AND 40 THEN 1\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 40 AND 60 THEN 2\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 60 AND 80 THEN 3\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 80 AND 99 THEN 4\n\t\t\t\tELSE 5\n\t\t\tEND\n    FROM\n            INTERVALO \n    WHERE \n            PORCENTAJE <100\n)\n\nselect * from INTERVALO\nOPTION(MAXRECURSION 32767);"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "TREDUCCION_JORNADA"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>WITH INTERVALO (PORCENTAJE, TRAMO_REDUCCION,ORDEN) AS \n(\n    SELECT 0, cast('0 - 20%' as varchar(10)), 0 AS ORDEN\nUNION ALL\n    SELECT \n            PORCENTAJE+1, \n\t\t\tCASE WHEN PORCENTAJE +1 BETWEEN 0 AND 20 THEN cast('0 - 20%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 20 AND 40 THEN cast('21 - 40%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 40 AND 60 THEN cast('41 - 60%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 60 AND 80 THEN cast('61 - 80%'  as varchar(10))\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 80 AND 99 THEN cast('81 - 99%'  as varchar(10))\n\t\t\t\tELSE '100%'\n\t\t\tEND,\n\t\t\tCASE WHEN PORCENTAJE +1 BETWEEN 0 AND 20 THEN 0\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 20 AND 40 THEN 1\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 40 AND 60 THEN 2\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 60 AND 80 THEN 3\n\t\t\t\tWHEN PORCENTAJE +1 BETWEEN 80 AND 99 THEN 4\n\t\t\t\tELSE 5\n\t\t\tEND\n    FROM\n            INTERVALO \n    WHERE \n            PORCENTAJE <100\n)\n\nselect * from INTERVALO\nOPTION(MAXRECURSION 32767);</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "UNIDAD_NEGOCIO",
        "columns": [
          {
            "name": "ID_UNIDAD_NEGOCIO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_UNIDAD_NEGOCIO",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "UNIDAD_DE_NEGOCIO",
            "dataType": "string",
            "sourceColumn": "UNIDAD_DE_NEGOCIO",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "AGRUPACION",
            "dataType": "string",
            "sourceColumn": "AGRUPACION"
          }
        ],
        "partitions": [
          {
            "name": "UNIDAD_NEGOCIO",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SELECT\n  OUN.CCL_ID_UNIDAD_NEG AS ID_UNIDAD_NEGOCIO,\n  OUN.CCL_NM_UNIDAD_NEGESP AS UNIDAD_DE_NEGOCIO,\n  CASE WHEN OUN.CCL_ID_UNIDAD_NEG = '1' THEN 'ZARA'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '101' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '102' THEN 'TEMPE'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '103' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '104' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '105' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '106' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '107' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '110' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '11' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '14' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '18' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '2' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '3' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '4' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '6' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '7' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '8' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '9' THEN 'RESTO'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = 'R' THEN 'RESTO'\n  ELSE ''\n  END AS AGRUPACION\nFROM\nM4CCL_OR_UNID_NEG AS OUN WITH(NOLOCK)",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT\n  OUN.CCL_ID_UNIDAD_NEG AS ID_UNIDAD_NEGOCIO,\n  OUN.CCL_NM_UNIDAD_NEGESP AS UNIDAD_DE_NEGOCIO,\n  CASE WHEN OUN.CCL_ID_UNIDAD_NEG = '1' THEN 'ZARA'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '101' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '102' THEN 'TEMPE'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '103' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '104' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '105' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '106' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '107' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '110' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '11' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '14' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '18' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '2' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '3' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '4' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '6' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '7' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '8' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '9' THEN 'RESTO'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = 'R' THEN 'RESTO'\n  ELSE ''\n  END AS AGRUPACION\nFROM\nM4CCL_OR_UNID_NEG AS OUN WITH(NOLOCK)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "hierarchies": [
          {
            "name": "UNIDAD_NEGOCIO",
            "levels": [
              {
                "name": "AGRUPACION",
                "ordinal": 0,
                "column": "AGRUPACION"
              },
              {
                "name": "UNIDAD_DE_NEGOCIO",
                "ordinal": 1,
                "column": "UNIDAD_DE_NEGOCIO"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT\n  OUN.CCL_ID_UNIDAD_NEG AS ID_UNIDAD_NEGOCIO,\n  OUN.CCL_NM_UNIDAD_NEGESP AS UNIDAD_DE_NEGOCIO,\n  CASE WHEN OUN.CCL_ID_UNIDAD_NEG = '1' THEN 'ZARA'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '101' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '102' THEN 'TEMPE'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '103' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '104' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '105' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '106' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '107' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '110' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '11' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '14' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '18' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '2' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '3' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '4' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '6' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '7' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '8' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '9' THEN 'RESTO'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = 'R' THEN 'RESTO'\n  ELSE ''\n  END AS AGRUPACION\nFROM\nM4CCL_OR_UNID_NEG AS OUN WITH(NOLOCK)"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "UNIDAD_NEGOCIO"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT\n  OUN.CCL_ID_UNIDAD_NEG AS ID_UNIDAD_NEGOCIO,\n  OUN.CCL_NM_UNIDAD_NEGESP AS UNIDAD_DE_NEGOCIO,\n  CASE WHEN OUN.CCL_ID_UNIDAD_NEG = '1' THEN 'ZARA'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '101' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '102' THEN 'TEMPE'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '103' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '104' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '105' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '106' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '107' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '110' THEN 'INDITEX'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '11' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '14' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '18' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '2' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '3' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '4' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '6' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '7' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '8' THEN 'CADENAS'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = '9' THEN 'RESTO'\n  WHEN OUN.CCL_ID_UNIDAD_NEG = 'R' THEN 'RESTO'\n  ELSE ''\n  END AS AGRUPACION\nFROM\nM4CCL_OR_UNID_NEG AS OUN WITH(NOLOCK)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "TAREA",
        "columns": [
          {
            "name": "ID_ORGANIZACION",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_ORGANIZACION",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ID_TAREA_ORGANIZACION",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_TAREA_ORGANIZACION",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ID_TAREA",
            "dataType": "double",
            "sourceColumn": "ID_TAREA",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "TAREA",
            "dataType": "string",
            "sourceColumn": "TAREA",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "TAREA",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SELECT ID_ORGANIZATION AS ID_ORGANIZACION,\n\t\t\tCAST(CCL_ID_TASK AS VARCHAR)+'#'+ CAST(ID_ORGANIZATION AS VARCHAR) AS ID_TAREA_ORGANIZACION,\n\t\t\tCCL_ID_TASK AS ID_TAREA,\n\t\t\tCCL_TASK_DESCESP AS TAREA \n\t\t\tFROM M4CCL_TASKS_TA WITH(NOLOCK)",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID_ORGANIZATION AS ID_ORGANIZACION,\n\t\t\tCAST(CCL_ID_TASK AS VARCHAR)+'#'+ CAST(ID_ORGANIZATION AS VARCHAR) AS ID_TAREA_ORGANIZACION,\n\t\t\tCCL_ID_TASK AS ID_TAREA,\n\t\t\tCCL_TASK_DESCESP AS TAREA \n\t\t\tFROM M4CCL_TASKS_TA WITH(NOLOCK)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT ID_ORGANIZATION AS ID_ORGANIZACION,\n\t\t\tCAST(CCL_ID_TASK AS VARCHAR)+'#'+ CAST(ID_ORGANIZATION AS VARCHAR) AS ID_TAREA_ORGANIZACION,\n\t\t\tCCL_ID_TASK AS ID_TAREA,\n\t\t\tCCL_TASK_DESCESP AS TAREA \n\t\t\tFROM M4CCL_TASKS_TA WITH(NOLOCK)"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "TAREA"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID_ORGANIZATION AS ID_ORGANIZACION,\n\t\t\tCAST(CCL_ID_TASK AS VARCHAR)+'#'+ CAST(ID_ORGANIZATION AS VARCHAR) AS ID_TAREA_ORGANIZACION,\n\t\t\tCCL_ID_TASK AS ID_TAREA,\n\t\t\tCCL_TASK_DESCESP AS TAREA \n\t\t\tFROM M4CCL_TASKS_TA WITH(NOLOCK)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "ZONA",
        "columns": [
          {
            "name": "ID_ZONA",
            "dataType": "string",
            "sourceColumn": "ID_ZONA",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ZONA",
            "dataType": "string",
            "sourceColumn": "ZONA",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "ZONA",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SELECT GLB_ID_ZONA AS ID_ZONA,GLB_NM_ZONAESP AS ZONA\n\t\t\tFROM M4GLB_GA_ZONA_ALM WITH(NOLOCK)\n\t\t\tWHERE GETDATE() BETWEEN GLB_FEC_INICIO AND GLB_FEC_FIN",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT GLB_ID_ZONA AS ID_ZONA,GLB_NM_ZONAESP AS ZONA\n\t\t\tFROM M4GLB_GA_ZONA_ALM WITH(NOLOCK)\n\t\t\tWHERE GETDATE() BETWEEN GLB_FEC_INICIO AND GLB_FEC_FIN</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT GLB_ID_ZONA AS ID_ZONA,GLB_NM_ZONAESP AS ZONA\n\t\t\tFROM M4GLB_GA_ZONA_ALM WITH(NOLOCK)\n\t\t\tWHERE GETDATE() BETWEEN GLB_FEC_INICIO AND GLB_FEC_FIN"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ZONA"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT GLB_ID_ZONA AS ID_ZONA,GLB_NM_ZONAESP AS ZONA\n\t\t\tFROM M4GLB_GA_ZONA_ALM WITH(NOLOCK)\n\t\t\tWHERE GETDATE() BETWEEN GLB_FEC_INICIO AND GLB_FEC_FIN</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "MAPEO_AUSENCIA_INCIDENCIA",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_ORG_INCIDENCIA",
            "dataType": "string",
            "sourceColumn": "ID_ORG_INCIDENCIA",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ID_ORG_AUSENCIA",
            "dataType": "string",
            "sourceColumn": "ID_ORG_AUSENCIA"
          }
        ],
        "partitions": [
          {
            "name": "MAPEO_AUSENCIA_INCIDENCIA",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "-- Variable de tabla que recoge las empresas que están en GPA y las que están en GHRS.\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\n-- AUSENCIA - AUSENCIA GHRS\nSELECT \n-- TODO. Modificación para añadir la correspondencia entre ausencias - incidencias para España.  La relación debería ser 1 a 1.\nCASE WHEN CAR_ABS.CCL_ID_CARACTERISTICA = -1 AND ABS_TA.ID_ORGANIZATION= 'NL' THEN 'TA#0001#-1#N/A'\nELSE\n\t    'TA' + '#' + ABS_TA.ID_ORGANIZATION+'#'+CAR_ABS.CCL_ID_CARACTERISTICA +'#'+ \n\t\tCASE ABS_TA.ID_ORGANIZATION\n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar) \n\t\t\tEND\nEND AS ID_ORG_INCIDENCIA,\n'TA' +'#'+\nCAR_ABS.ID_ORGANIZATION +'#'+\nCASE ABS_TA.ID_ORGANIZATION\n\tWHEN 'NL' THEN CAST(CAR_ABS2.CCL_ID_ABSENCE AS VARCHAR) \n\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar) \n\tEND AS ID_ORG_AUSENCIA\nFROM \n-- TODO. Modificación para añadir la tabla M4CCL_ABSENCES_TA de la que se obtienen las ausencias para España\nM4CCL_ABSENCES_TA ABS_TA WITH(NOLOCK)\nLEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS WITH(NOLOCK)\n    ON ABS_TA.ID_ORGANIZATION = CAR_ABS.ID_ORGANIZATION\n    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS.CCL_ID_ABSENCE\n    AND CAR_ABS.CCL_ID_TP_CARACTERISTICA='INC' \n\t\t\t \nLEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS2 WITH (NOLOCK)\n    ON ABS_TA.ID_ORGANIZATION = CAR_ABS2.ID_ORGANIZATION\n    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS2.CCL_ID_ABSENCE\n    AND CAR_ABS2.ID_ORGANIZATION IN ('NL')\n    AND CAR_ABS2.CCL_ID_TP_CARACTERISTICA='CORP'\nWHERE CAR_ABS.ID_ORGANIZATION IN ('NL',\t'0001')\n-- TODO. Modificación para añadir el filtro por ID_ORGANIZATION en la tabla M4CCL_ABSENCES_TA\nAND ABS_TA.ID_ORGANIZATION IN ('NL', '0001')\n\nUNION\n-- AUSENCIA - INCIDENCIA GHRS\nSELECT DISTINCT\n'TA' + '#' + INC_TA.ID_ORGANIZATION+'#'+ '-1' +'#'+ \nCAST(INC_TA.CCL_ID_INCIDENCIA AS varchar) AS ID_ORG_INCIDENCIA,\n'TA' + '#' + INC_TA.ID_ORGANIZATION +'#'+ \nCAST(INC_TA.CCL_ID_INCIDENCIA AS varchar) AS ID_ORG_AUSENCIA\nFROM M4CCL_INCIDENCIAS_TEOR_TA AS INC_TA WITH(NOLOCK)\nWHERE INC_TA.ID_ORGANIZATION = '0001'\n-- Cogemos solamente las incidencias de logística\nAND INC_TA.CCL_ID_WL = 'L'",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Variable de tabla que recoge las empresas que están en GPA y las que están en GHRS.\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\n-- AUSENCIA - AUSENCIA GHRS\nSELECT \n-- TODO. Modificación para añadir la correspondencia entre ausencias - incidencias para España.  La relación debería ser 1 a 1.\nCASE WHEN CAR_ABS.CCL_ID_CARACTERISTICA = -1 AND ABS_TA.ID_ORGANIZATION= 'NL' THEN 'TA#0001#-1#N/A'\nELSE\n\t    'TA' + '#' + ABS_TA.ID_ORGANIZATION+'#'+CAR_ABS.CCL_ID_CARACTERISTICA +'#'+ \n\t\tCASE ABS_TA.ID_ORGANIZATION\n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar) \n\t\t\tEND\nEND AS ID_ORG_INCIDENCIA,\n'TA' +'#'+\nCAR_ABS.ID_ORGANIZATION +'#'+\nCASE ABS_TA.ID_ORGANIZATION\n\tWHEN 'NL' THEN CAST(CAR_ABS2.CCL_ID_ABSENCE AS VARCHAR) \n\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar) \n\tEND AS ID_ORG_AUSENCIA\nFROM \n-- TODO. Modificación para añadir la tabla M4CCL_ABSENCES_TA de la que se obtienen las ausencias para España\nM4CCL_ABSENCES_TA ABS_TA WITH(NOLOCK)\nLEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS WITH(NOLOCK)\n    ON ABS_TA.ID_ORGANIZATION = CAR_ABS.ID_ORGANIZATION\n    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS.CCL_ID_ABSENCE\n    AND CAR_ABS.CCL_ID_TP_CARACTERISTICA='INC' \n\t\t\t \nLEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS2 WITH (NOLOCK)\n    ON ABS_TA.ID_ORGANIZATION = CAR_ABS2.ID_ORGANIZATION\n    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS2.CCL_ID_ABSENCE\n    AND CAR_ABS2.ID_ORGANIZATION IN ('NL')\n    AND CAR_ABS2.CCL_ID_TP_CARACTERISTICA='CORP'\nWHERE CAR_ABS.ID_ORGANIZATION IN ('NL',\t'0001')\n-- TODO. Modificación para añadir el filtro por ID_ORGANIZATION en la tabla M4CCL_ABSENCES_TA\nAND ABS_TA.ID_ORGANIZATION IN ('NL', '0001')\n\nUNION\n-- AUSENCIA - INCIDENCIA GHRS\nSELECT DISTINCT\n'TA' + '#' + INC_TA.ID_ORGANIZATION+'#'+ '-1' +'#'+ \nCAST(INC_TA.CCL_ID_INCIDENCIA AS varchar) AS ID_ORG_INCIDENCIA,\n'TA' + '#' + INC_TA.ID_ORGANIZATION +'#'+ \nCAST(INC_TA.CCL_ID_INCIDENCIA AS varchar) AS ID_ORG_AUSENCIA\nFROM M4CCL_INCIDENCIAS_TEOR_TA AS INC_TA WITH(NOLOCK)\nWHERE INC_TA.ID_ORGANIZATION = '0001'\n-- Cogemos solamente las incidencias de logística\nAND INC_TA.CCL_ID_WL = 'L'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "-- Variable de tabla que recoge las empresas que están en GPA y las que están en GHRS.\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\n-- AUSENCIA - AUSENCIA GHRS\nSELECT \n-- TODO. Modificación para añadir la correspondencia entre ausencias - incidencias para España.  La relación debería ser 1 a 1.\nCASE WHEN CAR_ABS.CCL_ID_CARACTERISTICA = -1 AND ABS_TA.ID_ORGANIZATION= 'NL' THEN 'TA#0001#-1#N/A'\nELSE\n\t    'TA' + '#' + ABS_TA.ID_ORGANIZATION+'#'+CAR_ABS.CCL_ID_CARACTERISTICA +'#'+ \n\t\tCASE ABS_TA.ID_ORGANIZATION\n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar) \n\t\t\tEND\nEND AS ID_ORG_INCIDENCIA,\n'TA' +'#'+\nCAR_ABS.ID_ORGANIZATION +'#'+\nCASE ABS_TA.ID_ORGANIZATION\n\tWHEN 'NL' THEN CAST(CAR_ABS2.CCL_ID_ABSENCE AS VARCHAR) \n\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar) \n\tEND AS ID_ORG_AUSENCIA\nFROM \n-- TODO. Modificación para añadir la tabla M4CCL_ABSENCES_TA de la que se obtienen las ausencias para España\nM4CCL_ABSENCES_TA ABS_TA WITH(NOLOCK)\nLEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS WITH(NOLOCK)\n    ON ABS_TA.ID_ORGANIZATION = CAR_ABS.ID_ORGANIZATION\n    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS.CCL_ID_ABSENCE\n    AND CAR_ABS.CCL_ID_TP_CARACTERISTICA='INC' \n\t\t\t \nLEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS2 WITH (NOLOCK)\n    ON ABS_TA.ID_ORGANIZATION = CAR_ABS2.ID_ORGANIZATION\n    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS2.CCL_ID_ABSENCE\n    AND CAR_ABS2.ID_ORGANIZATION IN ('NL')\n    AND CAR_ABS2.CCL_ID_TP_CARACTERISTICA='CORP'\nWHERE CAR_ABS.ID_ORGANIZATION IN ('NL',\t'0001')\n-- TODO. Modificación para añadir el filtro por ID_ORGANIZATION en la tabla M4CCL_ABSENCES_TA\nAND ABS_TA.ID_ORGANIZATION IN ('NL', '0001')\n\nUNION\n-- AUSENCIA - INCIDENCIA GHRS\nSELECT DISTINCT\n'TA' + '#' + INC_TA.ID_ORGANIZATION+'#'+ '-1' +'#'+ \nCAST(INC_TA.CCL_ID_INCIDENCIA AS varchar) AS ID_ORG_INCIDENCIA,\n'TA' + '#' + INC_TA.ID_ORGANIZATION +'#'+ \nCAST(INC_TA.CCL_ID_INCIDENCIA AS varchar) AS ID_ORG_AUSENCIA\nFROM M4CCL_INCIDENCIAS_TEOR_TA AS INC_TA WITH(NOLOCK)\nWHERE INC_TA.ID_ORGANIZATION = '0001'\n-- Cogemos solamente las incidencias de logística\nAND INC_TA.CCL_ID_WL = 'L'"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "MAPEO_AUSENCIA_INCIDENCIA"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Variable de tabla que recoge las empresas que están en GPA y las que están en GHRS.\nDECLARE @empresas TABLE (ID_EMPRESA nvarchar(18))\nINSERT INTO @empresas VALUES\n('14'),   \n('23'),\n('26'),\n('32'),\n('37'),\n('41'),\n('43'),\n('61'),\n('99'),\n('189'),\n('398'),\n('506'),\n('12'),\n('20'),\n('64'),\n('68'),\n('330'),\n('357');\n\n-- AUSENCIA - AUSENCIA GHRS\nSELECT \n-- TODO. Modificación para añadir la correspondencia entre ausencias - incidencias para España.  La relación debería ser 1 a 1.\nCASE WHEN CAR_ABS.CCL_ID_CARACTERISTICA = -1 AND ABS_TA.ID_ORGANIZATION= 'NL' THEN 'TA#0001#-1#N/A'\nELSE\n\t    'TA' + '#' + ABS_TA.ID_ORGANIZATION+'#'+CAR_ABS.CCL_ID_CARACTERISTICA +'#'+ \n\t\tCASE ABS_TA.ID_ORGANIZATION\n\t\t\tWHEN 'NL' THEN CAR_ABS2.CCL_ID_CARACTERISTICA \n\t\t\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar) \n\t\t\tEND\nEND AS ID_ORG_INCIDENCIA,\n'TA' +'#'+\nCAR_ABS.ID_ORGANIZATION +'#'+\nCASE ABS_TA.ID_ORGANIZATION\n\tWHEN 'NL' THEN CAST(CAR_ABS2.CCL_ID_ABSENCE AS VARCHAR) \n\tWHEN '0001' THEN CAST(ABS_TA.CCL_ID_ABSENCE as varchar) \n\tEND AS ID_ORG_AUSENCIA\nFROM \n-- TODO. Modificación para añadir la tabla M4CCL_ABSENCES_TA de la que se obtienen las ausencias para España\nM4CCL_ABSENCES_TA ABS_TA WITH(NOLOCK)\nLEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS WITH(NOLOCK)\n    ON ABS_TA.ID_ORGANIZATION = CAR_ABS.ID_ORGANIZATION\n    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS.CCL_ID_ABSENCE\n    AND CAR_ABS.CCL_ID_TP_CARACTERISTICA='INC' \n\t\t\t \nLEFT JOIN M4CCL_ABS_CARACTERISTICA_ABSEN CAR_ABS2 WITH (NOLOCK)\n    ON ABS_TA.ID_ORGANIZATION = CAR_ABS2.ID_ORGANIZATION\n    AND ABS_TA.CCL_ID_ABSENCE = CAR_ABS2.CCL_ID_ABSENCE\n    AND CAR_ABS2.ID_ORGANIZATION IN ('NL')\n    AND CAR_ABS2.CCL_ID_TP_CARACTERISTICA='CORP'\nWHERE CAR_ABS.ID_ORGANIZATION IN ('NL',\t'0001')\n-- TODO. Modificación para añadir el filtro por ID_ORGANIZATION en la tabla M4CCL_ABSENCES_TA\nAND ABS_TA.ID_ORGANIZATION IN ('NL', '0001')\n\nUNION\n-- AUSENCIA - INCIDENCIA GHRS\nSELECT DISTINCT\n'TA' + '#' + INC_TA.ID_ORGANIZATION+'#'+ '-1' +'#'+ \nCAST(INC_TA.CCL_ID_INCIDENCIA AS varchar) AS ID_ORG_INCIDENCIA,\n'TA' + '#' + INC_TA.ID_ORGANIZATION +'#'+ \nCAST(INC_TA.CCL_ID_INCIDENCIA AS varchar) AS ID_ORG_AUSENCIA\nFROM M4CCL_INCIDENCIAS_TEOR_TA AS INC_TA WITH(NOLOCK)\nWHERE INC_TA.ID_ORGANIZATION = '0001'\n-- Cogemos solamente las incidencias de logística\nAND INC_TA.CCL_ID_WL = 'L'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "IMPORTE_CONCEPTOS",
        "isHidden": true,
        "columns": [
          {
            "name": "FECHA",
            "dataType": "dateTime",
            "sourceColumn": "FECHA",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ID_CONCEPTO",
            "dataType": "string",
            "sourceColumn": "ID_CONCEPTO",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ID_EMPRESA_GRUPO",
            "dataType": "int64",
            "sourceColumn": "ID_EMPRESA_GRUPO",
            "sourceProviderType": "Integer"
          },
          {
            "name": "DIVISION",
            "dataType": "int64",
            "sourceColumn": "DIVISION",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "SECCION",
            "dataType": "int64",
            "sourceColumn": "SECCION",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "ID_EMPRESA_CONCEPTO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_EMPRESA_CONCEPTO"
          },
          {
            "name": "DIVISION_SECCION",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "DIVISION_SECCION"
          },
          {
            "type": "calculated",
            "name": "SIGNO",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "RELATED(AGRUPACION_CONCEPTOS_COSTE[SIGNO])"
          },
          {
            "type": "calculated",
            "name": "IMPTE",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "[IMPORTE_RAW] * [SIGNO]"
          },
          {
            "name": "IMPORTE_RAW",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "IMPORTE_RAW"
          }
        ],
        "partitions": [
          {
            "name": "BASE",
            "source": {
              "type": "query",
              "query": "select                 cast(LAST_DAY(CES.ANO || '-' || CES.MES || '-' || '01') as DATE) AS FECHA\n                      , CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400 AS ID_CONCEPTO\n                      , LPAD(CES.DIVISION,2, '0') as DIVISION\n                      , LPAD(CES.SECCION,2, '0') as SECCION\n                      , LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0') as DIVISION_SECCION\n\t\t\t\t\t  , CES.ID_EMPRESA_GRUPO||'#'|| TRIM(CS.COD_CONCEPTO_AS400)||'#'||CES.ANO AS ID_EMPRESA_CONCEPTO \n                      , sum(DOUBLE(decrypt_char(CES.IMPORTE, 'ee6u7xjgRsRR6g8dRQfLuHkF+4FGUlpy6naR0Ck66wYWX2uoe'))) AS IMPORTE_RAW\n                      from RRHH.CONCEPTO_EMPLEADO_SALARIO CES\n                      LEFT JOIN RRHH.CONCEPTO_SALARIO CS\n                      ON CS.ID_CONCEPTO_SALARIO = CES.ID_CONCEPTO_SALARIO\n                      where CES.ID_PAIS = 11\n                      and ANO =YEAR(TO_DATE('2020-11-01', 'YYYY-MM-DD')) and MES = MONTH(TO_DATE('2020-11-01', 'YYYY-MM-DD'))\n                      and ((ID_EMPRESA_GRUPO in (64,99,37,43,189) AND LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0') IN ('1304','1305','8525','9115')))\n                      group by \n                      CES.ANO\n                      , CES.MES\n                      , CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400\n                      , LPAD(CES.DIVISION,2, '0')\n                      , LPAD(CES.SECCION,2, '0')\n                      , LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0')\n                      WITH UR;",
              "dataSource": "AXINDB26V1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select                 cast(LAST_DAY(CES.ANO || '-' || CES.MES || '-' || '01') as DATE) AS FECHA\n                      , CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400 AS ID_CONCEPTO\n                      , LPAD(CES.DIVISION,2, '0') as DIVISION\n                      , LPAD(CES.SECCION,2, '0') as SECCION\n                      , LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0') as DIVISION_SECCION\n\t\t\t\t\t  , CES.ID_EMPRESA_GRUPO||'#'|| TRIM(CS.COD_CONCEPTO_AS400)||'#'||CES.ANO AS ID_EMPRESA_CONCEPTO \n                      , sum(DOUBLE(decrypt_char(CES.IMPORTE, 'ee6u7xjgRsRR6g8dRQfLuHkF+4FGUlpy6naR0Ck66wYWX2uoe'))) AS IMPORTE_RAW\n                      from RRHH.CONCEPTO_EMPLEADO_SALARIO CES\n                      LEFT JOIN RRHH.CONCEPTO_SALARIO CS\n                      ON CS.ID_CONCEPTO_SALARIO = CES.ID_CONCEPTO_SALARIO\n                      where CES.ID_PAIS = 11\n                      and ANO =YEAR(TO_DATE('2020-11-01', 'YYYY-MM-DD')) and MES = MONTH(TO_DATE('2020-11-01', 'YYYY-MM-DD'))\n                      and ((ID_EMPRESA_GRUPO in (64,99,37,43,189) AND LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0') IN ('1304','1305','8525','9115')))\n                      group by \n                      CES.ANO\n                      , CES.MES\n                      , CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400\n                      , LPAD(CES.DIVISION,2, '0')\n                      , LPAD(CES.SECCION,2, '0')\n                      , LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0')\n                      WITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          },
          {
            "name": "IMPORTE_CONCEPTOS",
            "mode": "import",
            "source": {
              "type": "query",
              "query": "select                 cast(LAST_DAY(CES.ANO || '-' || CES.MES || '-' || '01') as DATE) AS FECHA\n                      , CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400 AS ID_CONCEPTO\n                      , LPAD(CES.DIVISION,2, '0') as DIVISION\n                      , LPAD(CES.SECCION,2, '0') as SECCION\n                      , LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0') as DIVISION_SECCION\n\t\t\t\t\t  , CES.ID_EMPRESA_GRUPO||'#'|| TRIM(CS.COD_CONCEPTO_AS400)||'#'||CES.ANO AS ID_EMPRESA_CONCEPTO \n                      , sum(DOUBLE(decrypt_char(CES.IMPORTE, 'ee6u7xjgRsRR6g8dRQfLuHkF+4FGUlpy6naR0Ck66wYWX2uoe'))) AS IMPORTE_RAW\n                      from RRHH.CONCEPTO_EMPLEADO_SALARIO CES\n                      LEFT JOIN RRHH.CONCEPTO_SALARIO CS\n                      ON CS.ID_CONCEPTO_SALARIO = CES.ID_CONCEPTO_SALARIO\n                      where CES.ID_PAIS = 11\n                      and ANO =YEAR(TO_DATE('2020-12-01', 'YYYY-MM-DD')) and MES = MONTH(TO_DATE('2020-12-01', 'YYYY-MM-DD'))\n                      and ((ID_EMPRESA_GRUPO in (64,99,37,43,189) AND LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0') IN ('1304','1305','8525','9115')))\n                      group by \n                      CES.ANO\n                      , CES.MES\n                      , CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400\n                      , LPAD(CES.DIVISION,2, '0')\n                      , LPAD(CES.SECCION,2, '0')\n                      , LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0')\n                      WITH UR;",
              "dataSource": "AXINDB26V1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select                 cast(LAST_DAY(CES.ANO || '-' || CES.MES || '-' || '01') as DATE) AS FECHA\n                      , CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400 AS ID_CONCEPTO\n                      , LPAD(CES.DIVISION,2, '0') as DIVISION\n                      , LPAD(CES.SECCION,2, '0') as SECCION\n                      , LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0') as DIVISION_SECCION\n\t\t\t\t\t  , CES.ID_EMPRESA_GRUPO||'#'|| TRIM(CS.COD_CONCEPTO_AS400)||'#'||CES.ANO AS ID_EMPRESA_CONCEPTO \n                      , sum(DOUBLE(decrypt_char(CES.IMPORTE, 'ee6u7xjgRsRR6g8dRQfLuHkF+4FGUlpy6naR0Ck66wYWX2uoe'))) AS IMPORTE_RAW\n                      from RRHH.CONCEPTO_EMPLEADO_SALARIO CES\n                      LEFT JOIN RRHH.CONCEPTO_SALARIO CS\n                      ON CS.ID_CONCEPTO_SALARIO = CES.ID_CONCEPTO_SALARIO\n                      where CES.ID_PAIS = 11\n                      and ANO =YEAR(TO_DATE('2020-12-01', 'YYYY-MM-DD')) and MES = MONTH(TO_DATE('2020-12-01', 'YYYY-MM-DD'))\n                      and ((ID_EMPRESA_GRUPO in (64,99,37,43,189) AND LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0') IN ('1304','1305','8525','9115')))\n                      group by \n                      CES.ANO\n                      , CES.MES\n                      , CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400\n                      , LPAD(CES.DIVISION,2, '0')\n                      , LPAD(CES.SECCION,2, '0')\n                      , LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0')\n                      WITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          },
          {
            "name": "IMPORTE_CONCEPTOS 2",
            "mode": "import",
            "source": {
              "type": "query",
              "query": "select                 cast(LAST_DAY(CES.ANO || '-' || CES.MES || '-' || '01') as DATE) AS FECHA\n                      , CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400 AS ID_CONCEPTO\n                      , LPAD(CES.DIVISION,2, '0') as DIVISION\n                      , LPAD(CES.SECCION,2, '0') as SECCION\n                      , LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0') as DIVISION_SECCION\n\t\t\t\t\t  , CES.ID_EMPRESA_GRUPO||'#'|| TRIM(CS.COD_CONCEPTO_AS400)||'#'||CES.ANO AS ID_EMPRESA_CONCEPTO \n                      , sum(DOUBLE(decrypt_char(CES.IMPORTE, 'ee6u7xjgRsRR6g8dRQfLuHkF+4FGUlpy6naR0Ck66wYWX2uoe'))) AS IMPORTE_RAW\n                      from RRHH.CONCEPTO_EMPLEADO_SALARIO CES\n                      LEFT JOIN RRHH.CONCEPTO_SALARIO CS\n                      ON CS.ID_CONCEPTO_SALARIO = CES.ID_CONCEPTO_SALARIO\n                      where CES.ID_PAIS = 11\n                      and ANO =YEAR(TO_DATE('2021-01-01', 'YYYY-MM-DD')) and MES = MONTH(TO_DATE('2021-01-01', 'YYYY-MM-DD'))\n                      and ((ID_EMPRESA_GRUPO in (64,99,37,43,189) AND LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0') IN ('1304','1305','8525','9115')))\n                      group by \n                      CES.ANO\n                      , CES.MES\n                      , CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400\n                      , LPAD(CES.DIVISION,2, '0')\n                      , LPAD(CES.SECCION,2, '0')\n                      , LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0')\n                      WITH UR;",
              "dataSource": "AXINDB26V1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select                 cast(LAST_DAY(CES.ANO || '-' || CES.MES || '-' || '01') as DATE) AS FECHA\n                      , CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400 AS ID_CONCEPTO\n                      , LPAD(CES.DIVISION,2, '0') as DIVISION\n                      , LPAD(CES.SECCION,2, '0') as SECCION\n                      , LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0') as DIVISION_SECCION\n\t\t\t\t\t  , CES.ID_EMPRESA_GRUPO||'#'|| TRIM(CS.COD_CONCEPTO_AS400)||'#'||CES.ANO AS ID_EMPRESA_CONCEPTO \n                      , sum(DOUBLE(decrypt_char(CES.IMPORTE, 'ee6u7xjgRsRR6g8dRQfLuHkF+4FGUlpy6naR0Ck66wYWX2uoe'))) AS IMPORTE_RAW\n                      from RRHH.CONCEPTO_EMPLEADO_SALARIO CES\n                      LEFT JOIN RRHH.CONCEPTO_SALARIO CS\n                      ON CS.ID_CONCEPTO_SALARIO = CES.ID_CONCEPTO_SALARIO\n                      where CES.ID_PAIS = 11\n                      and ANO =YEAR(TO_DATE('2021-01-01', 'YYYY-MM-DD')) and MES = MONTH(TO_DATE('2021-01-01', 'YYYY-MM-DD'))\n                      and ((ID_EMPRESA_GRUPO in (64,99,37,43,189) AND LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0') IN ('1304','1305','8525','9115')))\n                      group by \n                      CES.ANO\n                      , CES.MES\n                      , CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400\n                      , LPAD(CES.DIVISION,2, '0')\n                      , LPAD(CES.SECCION,2, '0')\n                      , LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0')\n                      WITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "IMPORTE",
            "expression": " SUMX( IMPORTE_CONCEPTOS, IF(RELATED(AGRUPACION_CONCEPTOS_COSTE[CONCEPTO_SIMULADOR])=\"NO CLASIFICADO\",blank(),[IMPTE]))",
            "formatString": "#,0.00",
            "isHidden": true,
            "displayFolder": "IMPORTES"
          },
          {
            "name": "IMPORTE_ACUM",
            "expression": "IF(ISBLANK([IMPORTE]),BLANK(),TOTALYTD([IMPORTE],FECHA[FECHA],ALL(FECHA[FECHA]),\"1/31\"))",
            "formatString": "#,0.00",
            "isHidden": true,
            "displayFolder": "IMPORTES_ACUM"
          },
          {
            "name": "IMPORTE_AA",
            "expression": "CALCULATE([IMPORTE],\n\t\t\t\t\t\t\t\t\t\tDATEADD(FECHA[FECHA],-1,YEAR)\n\t\t\t\t\t\t\t\t\t\t)",
            "formatString": "#,0.00",
            "isHidden": true,
            "displayFolder": "IMPORTES_AA"
          },
          {
            "name": "IMPORTE_DAA",
            "expression": "IF(OR(ISBLANK([IMPORTE]),[IMPORTE]=0),BLANK(),\nIF(OR(ISBLANK([IMPORTE_AA]),[IMPORTE_AA]=0),BLANK(),([IMPORTE]-[IMPORTE_AA])/[IMPORTE_AA]))",
            "formatString": "#,0.00",
            "isHidden": true
          },
          {
            "name": "IMPORTE_ACUMAA",
            "expression": "CALCULATE([IMPORTE_ACUM],\tDATEADD(FECHA[FECHA],-1,YEAR))",
            "formatString": "#,0.00",
            "isHidden": true
          },
          {
            "name": "IMPORTE_DCIERRE",
            "expression": "IF(OR(ISBLANK([IMPORTE]),[IMPORTE]=0),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF(OR(ISBLANK([IMPORTE_CIERRE]),[IMPORTE_CIERRE]=0),BLANK(),([IMPORTE]-[IMPORTE_CIERRE])/[IMPORTE_CIERRE]))",
            "formatString": "#,0.00",
            "isHidden": true
          },
          {
            "name": "IMPORTE_CIERRE",
            "expression": "CALCULATE([IMPORTE],PREVIOUSYEAR(FECHA[FECHA],\"1/31\"))",
            "formatString": "#,0.00",
            "isHidden": true
          },
          {
            "name": "IMPORTE_DACUMAA",
            "expression": "IF(OR(ISBLANK([IMPORTE_ACUM]),ISBLANK([IMPORTE_ACUMAA])),BLANK(),\n\t\t\t\t\t\t\t\t\t\tIF([IMPORTE_ACUMAA]=0,BLANK(),([IMPORTE_ACUM]-[IMPORTE_ACUMAA])/[IMPORTE_ACUMAA]))",
            "formatString": "#,0.00",
            "isHidden": true
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select                 cast(LAST_DAY(CES.ANO || '-' || CES.MES || '-' || '01') as DATE) AS FECHA\n                      , CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400 AS ID_CONCEPTO\n                      , LPAD(CES.DIVISION,2, '0') as DIVISION\n                      , LPAD(CES.SECCION,2, '0') as SECCION\n                      , LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0') as DIVISION_SECCION\n\t\t\t\t\t  , CES.ID_EMPRESA_GRUPO||'#'|| TRIM(CS.COD_CONCEPTO_AS400)||'#'||CES.ANO AS ID_EMPRESA_CONCEPTO \n                      , sum(DOUBLE(decrypt_char(CES.IMPORTE, 'ee6u7xjgRsRR6g8dRQfLuHkF+4FGUlpy6naR0Ck66wYWX2uoe'))) AS IMPORTE_RAW\n                      from RRHH.CONCEPTO_EMPLEADO_SALARIO CES\n                      LEFT JOIN RRHH.CONCEPTO_SALARIO CS\n                      ON CS.ID_CONCEPTO_SALARIO = CES.ID_CONCEPTO_SALARIO\n                      where CES.ID_PAIS = 11\n                      and ANO =YEAR(TO_DATE('2021-01-01', 'YYYY-MM-DD')) and MES = MONTH(TO_DATE('2020-11-01', 'YYYY-MM-DD'))\n                      and ((ID_EMPRESA_GRUPO in (64,99,37,43,189) AND LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0') IN ('1304','1305','8525','9115')))\n                      group by \n                      CES.ANO\n                      , CES.MES\n                      , CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400\n                      , LPAD(CES.DIVISION,2, '0')\n                      , LPAD(CES.SECCION,2, '0')\n                      , LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0')\n                      WITH UR;"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "IMPORTE_CONCEPTOS"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select                 cast(LAST_DAY(CES.ANO || '-' || CES.MES || '-' || '01') as DATE) AS FECHA\n                      , CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400 AS ID_CONCEPTO\n                      , LPAD(CES.DIVISION,2, '0') as DIVISION\n                      , LPAD(CES.SECCION,2, '0') as SECCION\n                      , LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0') as DIVISION_SECCION\n\t\t\t\t\t  , CES.ID_EMPRESA_GRUPO||'#'|| TRIM(CS.COD_CONCEPTO_AS400)||'#'||CES.ANO AS ID_EMPRESA_CONCEPTO \n                      , sum(DOUBLE(decrypt_char(CES.IMPORTE, 'ee6u7xjgRsRR6g8dRQfLuHkF+4FGUlpy6naR0Ck66wYWX2uoe'))) AS IMPORTE_RAW\n                      from RRHH.CONCEPTO_EMPLEADO_SALARIO CES\n                      LEFT JOIN RRHH.CONCEPTO_SALARIO CS\n                      ON CS.ID_CONCEPTO_SALARIO = CES.ID_CONCEPTO_SALARIO\n                      where CES.ID_PAIS = 11\n                      and ANO =YEAR(TO_DATE('2020-11-01', 'YYYY-MM-DD')) and MES = MONTH(TO_DATE('2020-11-01', 'YYYY-MM-DD'))\n                      and ((ID_EMPRESA_GRUPO in (64,99,37,43,189) AND LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0') IN ('1304','1305','8525','9115')))\n                      group by \n                      CES.ANO\n                      , CES.MES\n                      , CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400\n                      , LPAD(CES.DIVISION,2, '0')\n                      , LPAD(CES.SECCION,2, '0')\n                      , LPAD(CES.DIVISION,2, '0') || LPAD(CES.SECCION,2, '0')\n                      WITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "AGRUPACION_CONCEPTOS_AUX",
        "isHidden": true,
        "columns": [
          {
            "name": "COD_CONCEPTO_AS400",
            "dataType": "string",
            "sourceColumn": "COD_CONCEPTO_AS400",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DESCRIPCION",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "DESCRIPCION",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DESCRIPCION_LARGA",
            "dataType": "string",
            "sourceColumn": "DESCRIPCION_LARGA",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "AGRUPACION",
            "dataType": "string",
            "sourceColumn": "AGRUPACION",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SIGNO",
            "dataType": "int64",
            "sourceColumn": "SIGNO",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ANO_FISCAL",
            "dataType": "int64",
            "sourceColumn": "ANO_FISCAL"
          },
          {
            "name": "ID_EMPRESA_CONCEPTO_AGR",
            "dataType": "string",
            "sourceColumn": "ID_EMPRESA_CONCEPTO_AGR"
          },
          {
            "name": "AGRUPACION_COSTE",
            "dataType": "string",
            "sourceColumn": "AGRUPACION_COSTE"
          },
          {
            "name": "ID_EMPRESA_CONCEPTO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_EMPRESA_CONCEPTO"
          }
        ],
        "partitions": [
          {
            "name": "AGRUPACION_CONCEPTOS",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SELECT T2.ID_EMPRESA_CONCEPTO, T2.ID_EMPRESA_CONCEPTO_AGR,T2.COD_CONCEPTO_AS400,T2.DESCRIPCION,T2.DESCRIPCION_LARGA,T2.AGRUPACION,T2.SIGNO,T2.ANO_FISCAL,\nCOALESCE(AGRUP_COS.DESCRIPCION,'NO CLASIFICADO') AS AGRUPACION_COSTE FROM (\n\nSELECT \nDISTINCT EL.ID_EMPRESA_GRUPO ||'#'||MC.COD_CONCEPTO_AS400 ||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO,\nEL.ID_EMPRESA_GRUPO ||'#'||MC.COD_CONCEPTO_AS400  AS ID_EMPRESA_CONCEPTO_AGR,\nMC.COD_CONCEPTO_AS400,\nCC.DESCRIPCION,\nCC.DESCRIPCION_LARGA,\nSUBSTR(CC.DESCRIPCION_LARGA,1,CASE WHEN LOCATE('(',CC.DESCRIPCION_LARGA) = 0 THEN 100 ELSE LOCATE('(',CC.DESCRIPCION_LARGA)-1 END) AS AGRUPACION,\n--COALESCE(AGRUP_COS.DESCRIPCION,'NO CLASIFICADO') AS AGRUPACION_COSTE,\nCASE WHEN MC.OPERACION = 'R' THEN -1 ELSE 1 END AS SIGNO,\nELAF.ANO_FISCAL AS ANO_FISCAL\nFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\nON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\nINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\nON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \nON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\nAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n\nUNION\n\n\tSELECT ID_EMPRESA_CONCEPTO,ID_EMPRESA_CONCEPTO_AGR,DESCRIPCION AS COD_CONCEPTO_AS400, \n\tDESCRIPCION_CONCEPTO AS DESCRIPCION,\n\tDESCRIPCION_CONCEPTO AS DESCRIPCION_LARGA, \n\tDESCRIPCION_CONCEPTO AS AGRUPACION,\n\t1 AS SIGNO,\n\tANO_FISCAL FROM(\n\tSELECT ANO_FISCAL,ID_EMPRESA_GRUPO,DESCRIPCION_CONCEPTO, CC.DESCRIPCION\n\t--,ID_EMPRESA_GRUPO ||'#'||DCM.DESCRIPCION_CONCEPTO ||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\t,ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION  AS ID_EMPRESA_CONCEPTO_AGR\n\t, ID_EMPRESA_GRUPO ||'#'|| CC.DESCRIPCION||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\tFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \n\tJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\n\tON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\n\tINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\n\tON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\n\tON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\n\tLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\n\tON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \n\tAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND DCM.NUMERO_MES_ANO = CM.NUMERO_MES\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\n\tON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\n\tAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\n\t-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\n\tON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\t\t\n\tLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\n\tFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \n\tGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \n\tON MC.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\tAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tWHERE C.ES_BLOQUEADO = 2\n\n\t) AS T \n\tWHERE T.ID_EMPRESA_CONCEPTO NOT IN (\t\n\t\t\t\tSELECT \n\t\t\t\tDISTINCT EL.ID_EMPRESA_GRUPO ||'#'||MC.COD_CONCEPTO_AS400 ||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\t\t\t\tFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\t\t\t\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\t\t\t\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\t\t\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\t\t\t\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\t\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\t\t\t\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\t\t\t\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n\t\t\t\t--WHERE ID_EMPRESA_GRUPO = 37\n\t\t\t\t-- GROUP BY EL.ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION_LARGA ||'#'|| ELAF.ANO_FISCAL , CC.DESCRIPCION_LARGA\t,ID_EMPRESA_CONCEPTO_AGR\n\t\t\t\t)\n\tGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,ID_EMPRESA_CONCEPTO,DESCRIPCION_CONCEPTO, DESCRIPCION,ID_EMPRESA_CONCEPTO_AGR ) AS T2\nLEFT JOIN(SELECT '189#ACTIVI' AS ID_EMPRESA_CONCEPTO, 'HORAS TARDE' AS DESCRIPCION FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#AYUDAS SOCIALES', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#BENEFI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#COMPERSONA', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#COTIZACION COMEDOR', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DESPLAZAMIENTOS', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DESPNT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DIFJCC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DOMINGOT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DTOHORAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#EXTRA DICIEMBRE (DICIE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#EXTRA JUNIO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#EXTRA MARZO (MARZO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#GRATVOL', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HEFET', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HENE0T', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HENOR', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HOJC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORA EXTRA', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORA FESTIVA (HFEST)', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORA NOCTURNA (HNOCT)', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORA SABADO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORAS DOMINGO NOCHE', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORAS DOMINGO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORASFST', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORASFTT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HRSABVAC', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HRTARVAC', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE06', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#INDEMNIZACIONES', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#ITC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#ITCNC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KABSENT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KATRASO2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KCUOTAP', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KCUOTAP_2', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KGUARDSUB', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KINDEMNIDP', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KINDEMNIRT', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KINDEMNIZA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#LVAC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#MSABT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#NOCTUVACT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PAGA SEPTIEMBRE (SEPTI)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLTARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUS APOYO', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUS DE PACTO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUS DE TARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUSC', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUSCOM', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRESATEL', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRIMA VACACIONAL (PVACA)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRIMA VINCULACION', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#SABADODIAT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#SALARIO BASE (SBASE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#TSABT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#VARIABLE ABSENTISMO (PASIS)', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#VIAJNEXTO', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ACTIVI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ACTIVI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AP', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AVOLUN', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYUDAS SOCIALES PAGO MES CONCRETO', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYUDAS SOCIALES', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#BENEFI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COMISIT', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COTIZACIÓN AUTOBUS', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COTIZACIÓN CESTA DE NAVIDAD', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COTIZACION COMEDOR', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COTIZACIÓN PRÉSTAMOS', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DESPLA', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DESPNT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DIFJCC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DTDIASPSC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DTOHORAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#EXTRA DICIEMBRE (DICIE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#EXTRA JUNIO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#EXTRA MARZO (MARZO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#EXTRA SEMANA SANTA', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#FESTIVIDAD EN DOMINGOS EXTRA', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#Festividad en domingos extras', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#GRATVOL', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HE', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HENE0T', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HENOR', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HOJC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORA EXTRA', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORA FESTIVA (HFEST)', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORA NOCTURNA (HNOCT)', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORAS DOMINGO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORASFSPT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORASFTT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE01', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE02', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE03', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE06', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE07', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE08', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#INCENTIVOT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#Incremento jornada turno de refuerzo', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#INDEMNIZACIONES', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ITC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ITCNC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KABSENT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KATRASO2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KCUOTAP', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KCUOTAP_2', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KDIFER2', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KGUARDSUB', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KINDEMNIDP', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KINDEMNIRT', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KINDEMNIZA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KPREMIOVAC', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#LVAC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#NO PAGOS', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#Nocturnidad en horas extras', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#NOCTURNIDAD EN VACACIONES', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#OTROS CONCEPTOS NUEVO CONVENIO 1%', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PAGA SEPTIEMBRE (SEPTI)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLTARDE', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE CARGA M', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE DESCARGA M', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE PACTO (AGOSTO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE PACTO (FEBRERO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE TARDE EVENTUALES y PLUS DE TARDE PERSONAL FIJO ', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE TARDE EVENTUALES', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE TARDE PERSONAL FIJO ', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS TURNO DE REFUERZO APOYOS y PLUS TURNO DE REFUERZO OPERARIOS', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS TURNO DE REFUERZO APOYOS', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS TURNO DE REFUERZO OPERARIOS', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUSC+', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUSDT', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PRIMA DESPLAZAMIENTO HOLANDA', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PRIMA VACACIONAL (PVACA)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#SALARIO BASE (SBASE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#TRANSCOT', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#VARIABLE ABSENTISMO (PASIS)', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#VARIABLE DE ABSENTISMO (SEMESTRAL)', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#VIAJNEXTO', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#AYDC' , 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#CAIF', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#COMISIT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#COTIZACIÓN CESTA DE NAVIDAD', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#COTIZACION COMEDOR', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DESPLA', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DESPNT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DIFJCC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DTDIASANCC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DTOHORAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#FESTIVO DÍA DEL PILAR', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#FESTIVO JUEVES SANTO', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#FESTNLT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#FIESTA', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#GRATVOL', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HCFET', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HE', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HEDOMT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HEFET', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HENE0T', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HENOCT', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HENOR', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HOATPT', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRDOMT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRDOMVAC', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRSAB', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRSABT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRSABVAC', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRSABVACT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRTART', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRTARVAC', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRTARVACT', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPDOMAP', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE01', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE02', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE06', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPSABAP', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#ITC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#ITCNC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#JULIO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KCUOTAP_2', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KDIFER2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KGUARDSUB', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KINDEMNIDP', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KINDEMNIRT', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KINDEMNIZA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KPLUSAPOYO', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#LVAC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#NAVIDAD', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#NOCTUVAC', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#NOCTUVACT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PAGA PLATAF EUROPA ANTIG', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PAGA PLATAFORMA EUROPA', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLCG', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLCGHE', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLDCG', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLUS DE TARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLUSJIRREG', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PRPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PTARD', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#TRANS', 'PLUSES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#VESTU', 'PLUSES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#VIAJNEXTO', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ACONV', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ACTIVI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ANTIGU', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ASISTE', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AVOLUN', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYUDEXTRA2', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYUN', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#BENEFI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#COMPERSONA', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#COMPGP', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#COMPLEMENTO GENEROS DE PUNTO (DICIE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#COMPLEMENTO GENEROS DE PUNTO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DPUR', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DTDIASANCC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DTOHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE01', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE02', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE06', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#INCENTIVOT', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#KCOMPLES', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PLUS DE PACTO (DICIEMBRE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PLUS DE PACTO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PLUS PERMANENCIA (PRIZE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PLUSRTURNO', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PRIZE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#TRANSCOT', 'PLUSES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGU', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGÜEDAD DICIEMBRE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGÜEDAD JUNIO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGÜEDAD MARZO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGÜEDAD', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ARTICULO 16', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AVOLUN', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYUDAS SOCIALES', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYUDEXTRA2', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#BENEFI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#BOLSA DE VACACIONES', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COMISIT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COMPLEMENTO NOCTURNO', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COMPLEMENTO TARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COTIZACIÓN CESTA DE NAVIDAD', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COTIZACION COMEDOR', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#CTFNOCHE', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#CTFTARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DESPLA', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DESPNT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DIFERENCIA SALARIAL', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DIFERENCIAS HORAS EVENTUALES', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DIFJCC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DOMINGOT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DTDIASPSC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DTOHORAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#EXTRA DICIEMBRE (DICIE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#EXTRA JUNIO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#EXTRA MARZO (MARZO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#GARANTIA SALARIAL', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HE', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HENOR', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HOAL16COT', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HOALT', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HOJC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA EXTRA', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA FESTIVA (HFEST)', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA LUNES NOCHE', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA NOCTURNA (HNOCT)', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA SABADO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA VIERNES NOCHE', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORAS DOMINGO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORASFSPT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORASFT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE01', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE03', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE06', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#INCENTIVOT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ITC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ITCNC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KATRASO2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KCUOTAP', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KDIFER2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KGUARDSUB', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KINDEMNIZA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#LUNESNOCT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#LVAC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PAGA SEPTIEMBRE (SEPTI)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PLCG', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PLUS DE TARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PLUS TRANSPORTE (PTPTE)', 'PLUSES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PREMIOT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PREMIOVAC', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PRIMA VACACIONAL (PVACA)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PRIZE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#RESALTAS', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#SABADODIAT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#SABADONOCT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#SALARIO BASE (SBASE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#TRANSCOT', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#TURNO', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#VARIABLE ABSENTISMO (PASIS)', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#VIAJNEXTO', 'OTROS' FROM SYSIBM.SYSDUMMY1\n\t) AS AGRUP_COS\n\tON AGRUP_COS.ID_EMPRESA_CONCEPTO = T2.ID_EMPRESA_CONCEPTO_AGR\nGROUP BY T2.ID_EMPRESA_CONCEPTO, T2.ID_EMPRESA_CONCEPTO_AGR,T2.COD_CONCEPTO_AS400,T2.DESCRIPCION,T2.DESCRIPCION_LARGA,T2.AGRUPACION,T2.SIGNO,T2.ANO_FISCAL,COALESCE(AGRUP_COS.DESCRIPCION,'NO CLASIFICADO')\nWITH UR;",
              "dataSource": "AXINDB26FINV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT T2.ID_EMPRESA_CONCEPTO, T2.ID_EMPRESA_CONCEPTO_AGR,T2.COD_CONCEPTO_AS400,T2.DESCRIPCION,T2.DESCRIPCION_LARGA,T2.AGRUPACION,T2.SIGNO,T2.ANO_FISCAL,\nCOALESCE(AGRUP_COS.DESCRIPCION,'NO CLASIFICADO') AS AGRUPACION_COSTE FROM (\n\nSELECT \nDISTINCT EL.ID_EMPRESA_GRUPO ||'#'||MC.COD_CONCEPTO_AS400 ||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO,\nEL.ID_EMPRESA_GRUPO ||'#'||MC.COD_CONCEPTO_AS400  AS ID_EMPRESA_CONCEPTO_AGR,\nMC.COD_CONCEPTO_AS400,\nCC.DESCRIPCION,\nCC.DESCRIPCION_LARGA,\nSUBSTR(CC.DESCRIPCION_LARGA,1,CASE WHEN LOCATE('(',CC.DESCRIPCION_LARGA) = 0 THEN 100 ELSE LOCATE('(',CC.DESCRIPCION_LARGA)-1 END) AS AGRUPACION,\n--COALESCE(AGRUP_COS.DESCRIPCION,'NO CLASIFICADO') AS AGRUPACION_COSTE,\nCASE WHEN MC.OPERACION = 'R' THEN -1 ELSE 1 END AS SIGNO,\nELAF.ANO_FISCAL AS ANO_FISCAL\nFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\nON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\nINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\nON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \nON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\nAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n\nUNION\n\n\tSELECT ID_EMPRESA_CONCEPTO,ID_EMPRESA_CONCEPTO_AGR,DESCRIPCION AS COD_CONCEPTO_AS400, \n\tDESCRIPCION_CONCEPTO AS DESCRIPCION,\n\tDESCRIPCION_CONCEPTO AS DESCRIPCION_LARGA, \n\tDESCRIPCION_CONCEPTO AS AGRUPACION,\n\t1 AS SIGNO,\n\tANO_FISCAL FROM(\n\tSELECT ANO_FISCAL,ID_EMPRESA_GRUPO,DESCRIPCION_CONCEPTO, CC.DESCRIPCION\n\t--,ID_EMPRESA_GRUPO ||'#'||DCM.DESCRIPCION_CONCEPTO ||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\t,ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION  AS ID_EMPRESA_CONCEPTO_AGR\n\t, ID_EMPRESA_GRUPO ||'#'|| CC.DESCRIPCION||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\tFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \n\tJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\n\tON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\n\tINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\n\tON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\n\tON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\n\tLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\n\tON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \n\tAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND DCM.NUMERO_MES_ANO = CM.NUMERO_MES\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\n\tON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\n\tAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\n\t-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\n\tON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\t\t\n\tLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\n\tFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \n\tGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \n\tON MC.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\tAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tWHERE C.ES_BLOQUEADO = 2\n\n\t) AS T \n\tWHERE T.ID_EMPRESA_CONCEPTO NOT IN (\t\n\t\t\t\tSELECT \n\t\t\t\tDISTINCT EL.ID_EMPRESA_GRUPO ||'#'||MC.COD_CONCEPTO_AS400 ||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\t\t\t\tFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\t\t\t\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\t\t\t\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\t\t\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\t\t\t\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\t\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\t\t\t\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\t\t\t\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n\t\t\t\t--WHERE ID_EMPRESA_GRUPO = 37\n\t\t\t\t-- GROUP BY EL.ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION_LARGA ||'#'|| ELAF.ANO_FISCAL , CC.DESCRIPCION_LARGA\t,ID_EMPRESA_CONCEPTO_AGR\n\t\t\t\t)\n\tGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,ID_EMPRESA_CONCEPTO,DESCRIPCION_CONCEPTO, DESCRIPCION,ID_EMPRESA_CONCEPTO_AGR ) AS T2\nLEFT JOIN(SELECT '189#ACTIVI' AS ID_EMPRESA_CONCEPTO, 'HORAS TARDE' AS DESCRIPCION FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#AYUDAS SOCIALES', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#BENEFI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#COMPERSONA', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#COTIZACION COMEDOR', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DESPLAZAMIENTOS', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DESPNT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DIFJCC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DOMINGOT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DTOHORAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#EXTRA DICIEMBRE (DICIE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#EXTRA JUNIO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#EXTRA MARZO (MARZO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#GRATVOL', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HEFET', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HENE0T', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HENOR', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HOJC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORA EXTRA', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORA FESTIVA (HFEST)', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORA NOCTURNA (HNOCT)', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORA SABADO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORAS DOMINGO NOCHE', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORAS DOMINGO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORASFST', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORASFTT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HRSABVAC', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HRTARVAC', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE06', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#INDEMNIZACIONES', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#ITC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#ITCNC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KABSENT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KATRASO2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KCUOTAP', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KCUOTAP_2', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KGUARDSUB', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KINDEMNIDP', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KINDEMNIRT', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KINDEMNIZA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#LVAC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#MSABT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#NOCTUVACT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PAGA SEPTIEMBRE (SEPTI)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLTARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUS APOYO', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUS DE PACTO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUS DE TARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUSC', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUSCOM', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRESATEL', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRIMA VACACIONAL (PVACA)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRIMA VINCULACION', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#SABADODIAT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#SALARIO BASE (SBASE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#TSABT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#VARIABLE ABSENTISMO (PASIS)', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#VIAJNEXTO', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ACTIVI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ACTIVI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AP', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AVOLUN', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYUDAS SOCIALES PAGO MES CONCRETO', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYUDAS SOCIALES', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#BENEFI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COMISIT', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COTIZACIÓN AUTOBUS', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COTIZACIÓN CESTA DE NAVIDAD', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COTIZACION COMEDOR', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COTIZACIÓN PRÉSTAMOS', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DESPLA', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DESPNT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DIFJCC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DTDIASPSC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DTOHORAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#EXTRA DICIEMBRE (DICIE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#EXTRA JUNIO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#EXTRA MARZO (MARZO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#EXTRA SEMANA SANTA', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#FESTIVIDAD EN DOMINGOS EXTRA', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#Festividad en domingos extras', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#GRATVOL', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HE', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HENE0T', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HENOR', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HOJC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORA EXTRA', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORA FESTIVA (HFEST)', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORA NOCTURNA (HNOCT)', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORAS DOMINGO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORASFSPT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORASFTT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE01', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE02', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE03', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE06', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE07', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE08', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#INCENTIVOT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#Incremento jornada turno de refuerzo', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#INDEMNIZACIONES', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ITC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ITCNC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KABSENT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KATRASO2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KCUOTAP', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KCUOTAP_2', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KDIFER2', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KGUARDSUB', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KINDEMNIDP', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KINDEMNIRT', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KINDEMNIZA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KPREMIOVAC', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#LVAC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#NO PAGOS', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#Nocturnidad en horas extras', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#NOCTURNIDAD EN VACACIONES', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#OTROS CONCEPTOS NUEVO CONVENIO 1%', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PAGA SEPTIEMBRE (SEPTI)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLTARDE', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE CARGA M', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE DESCARGA M', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE PACTO (AGOSTO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE PACTO (FEBRERO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE TARDE EVENTUALES y PLUS DE TARDE PERSONAL FIJO ', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE TARDE EVENTUALES', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE TARDE PERSONAL FIJO ', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS TURNO DE REFUERZO APOYOS y PLUS TURNO DE REFUERZO OPERARIOS', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS TURNO DE REFUERZO APOYOS', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS TURNO DE REFUERZO OPERARIOS', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUSC+', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUSDT', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PRIMA DESPLAZAMIENTO HOLANDA', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PRIMA VACACIONAL (PVACA)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#SALARIO BASE (SBASE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#TRANSCOT', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#VARIABLE ABSENTISMO (PASIS)', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#VARIABLE DE ABSENTISMO (SEMESTRAL)', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#VIAJNEXTO', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#AYDC' , 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#CAIF', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#COMISIT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#COTIZACIÓN CESTA DE NAVIDAD', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#COTIZACION COMEDOR', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DESPLA', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DESPNT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DIFJCC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DTDIASANCC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DTOHORAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#FESTIVO DÍA DEL PILAR', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#FESTIVO JUEVES SANTO', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#FESTNLT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#FIESTA', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#GRATVOL', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HCFET', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HE', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HEDOMT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HEFET', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HENE0T', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HENOCT', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HENOR', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HOATPT', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRDOMT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRDOMVAC', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRSAB', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRSABT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRSABVAC', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRSABVACT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRTART', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRTARVAC', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRTARVACT', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPDOMAP', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE01', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE02', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE06', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPSABAP', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#ITC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#ITCNC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#JULIO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KCUOTAP_2', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KDIFER2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KGUARDSUB', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KINDEMNIDP', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KINDEMNIRT', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KINDEMNIZA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KPLUSAPOYO', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#LVAC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#NAVIDAD', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#NOCTUVAC', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#NOCTUVACT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PAGA PLATAF EUROPA ANTIG', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PAGA PLATAFORMA EUROPA', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLCG', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLCGHE', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLDCG', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLUS DE TARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLUSJIRREG', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PRPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PTARD', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#TRANS', 'PLUSES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#VESTU', 'PLUSES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#VIAJNEXTO', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ACONV', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ACTIVI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ANTIGU', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ASISTE', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AVOLUN', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYUDEXTRA2', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYUN', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#BENEFI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#COMPERSONA', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#COMPGP', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#COMPLEMENTO GENEROS DE PUNTO (DICIE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#COMPLEMENTO GENEROS DE PUNTO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DPUR', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DTDIASANCC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DTOHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE01', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE02', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE06', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#INCENTIVOT', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#KCOMPLES', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PLUS DE PACTO (DICIEMBRE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PLUS DE PACTO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PLUS PERMANENCIA (PRIZE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PLUSRTURNO', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PRIZE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#TRANSCOT', 'PLUSES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGU', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGÜEDAD DICIEMBRE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGÜEDAD JUNIO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGÜEDAD MARZO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGÜEDAD', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ARTICULO 16', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AVOLUN', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYUDAS SOCIALES', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYUDEXTRA2', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#BENEFI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#BOLSA DE VACACIONES', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COMISIT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COMPLEMENTO NOCTURNO', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COMPLEMENTO TARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COTIZACIÓN CESTA DE NAVIDAD', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COTIZACION COMEDOR', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#CTFNOCHE', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#CTFTARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DESPLA', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DESPNT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DIFERENCIA SALARIAL', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DIFERENCIAS HORAS EVENTUALES', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DIFJCC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DOMINGOT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DTDIASPSC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DTOHORAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#EXTRA DICIEMBRE (DICIE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#EXTRA JUNIO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#EXTRA MARZO (MARZO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#GARANTIA SALARIAL', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HE', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HENOR', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HOAL16COT', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HOALT', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HOJC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA EXTRA', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA FESTIVA (HFEST)', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA LUNES NOCHE', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA NOCTURNA (HNOCT)', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA SABADO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA VIERNES NOCHE', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORAS DOMINGO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORASFSPT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORASFT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE01', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE03', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE06', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#INCENTIVOT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ITC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ITCNC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KATRASO2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KCUOTAP', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KDIFER2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KGUARDSUB', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KINDEMNIZA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#LUNESNOCT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#LVAC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PAGA SEPTIEMBRE (SEPTI)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PLCG', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PLUS DE TARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PLUS TRANSPORTE (PTPTE)', 'PLUSES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PREMIOT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PREMIOVAC', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PRIMA VACACIONAL (PVACA)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PRIZE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#RESALTAS', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#SABADODIAT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#SABADONOCT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#SALARIO BASE (SBASE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#TRANSCOT', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#TURNO', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#VARIABLE ABSENTISMO (PASIS)', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#VIAJNEXTO', 'OTROS' FROM SYSIBM.SYSDUMMY1\n\t) AS AGRUP_COS\n\tON AGRUP_COS.ID_EMPRESA_CONCEPTO = T2.ID_EMPRESA_CONCEPTO_AGR\nGROUP BY T2.ID_EMPRESA_CONCEPTO, T2.ID_EMPRESA_CONCEPTO_AGR,T2.COD_CONCEPTO_AS400,T2.DESCRIPCION,T2.DESCRIPCION_LARGA,T2.AGRUPACION,T2.SIGNO,T2.ANO_FISCAL,COALESCE(AGRUP_COS.DESCRIPCION,'NO CLASIFICADO')\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT T2.ID_EMPRESA_CONCEPTO, T2.ID_EMPRESA_CONCEPTO_AGR,T2.COD_CONCEPTO_AS400,T2.DESCRIPCION,T2.DESCRIPCION_LARGA,T2.AGRUPACION,T2.SIGNO,T2.ANO_FISCAL,\nCOALESCE(AGRUP_COS.DESCRIPCION,'NO CLASIFICADO') AS AGRUPACION_COSTE FROM (\n\nSELECT \nDISTINCT EL.ID_EMPRESA_GRUPO ||'#'||MC.COD_CONCEPTO_AS400 ||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO,\nEL.ID_EMPRESA_GRUPO ||'#'||MC.COD_CONCEPTO_AS400  AS ID_EMPRESA_CONCEPTO_AGR,\nMC.COD_CONCEPTO_AS400,\nCC.DESCRIPCION,\nCC.DESCRIPCION_LARGA,\nSUBSTR(CC.DESCRIPCION_LARGA,1,CASE WHEN LOCATE('(',CC.DESCRIPCION_LARGA) = 0 THEN 100 ELSE LOCATE('(',CC.DESCRIPCION_LARGA)-1 END) AS AGRUPACION,\n--COALESCE(AGRUP_COS.DESCRIPCION,'NO CLASIFICADO') AS AGRUPACION_COSTE,\nCASE WHEN MC.OPERACION = 'R' THEN -1 ELSE 1 END AS SIGNO,\nELAF.ANO_FISCAL AS ANO_FISCAL\nFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\nON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\nINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\nON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \nON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\nAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n\nUNION\n\n\tSELECT ID_EMPRESA_CONCEPTO,ID_EMPRESA_CONCEPTO_AGR,DESCRIPCION AS COD_CONCEPTO_AS400, \n\tDESCRIPCION_CONCEPTO AS DESCRIPCION,\n\tDESCRIPCION_CONCEPTO AS DESCRIPCION_LARGA, \n\tDESCRIPCION_CONCEPTO AS AGRUPACION,\n\t1 AS SIGNO,\n\tANO_FISCAL FROM(\n\tSELECT ANO_FISCAL,ID_EMPRESA_GRUPO,DESCRIPCION_CONCEPTO, CC.DESCRIPCION\n\t--,ID_EMPRESA_GRUPO ||'#'||DCM.DESCRIPCION_CONCEPTO ||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\t,ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION  AS ID_EMPRESA_CONCEPTO_AGR\n\t, ID_EMPRESA_GRUPO ||'#'|| CC.DESCRIPCION||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\tFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \n\tJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\n\tON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\n\tINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\n\tON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\n\tON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\n\tLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\n\tON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \n\tAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND DCM.NUMERO_MES_ANO = CM.NUMERO_MES\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\n\tON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\n\tAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\n\t-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\n\tON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\t\t\n\tLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\n\tFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \n\tGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \n\tON MC.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\tAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tWHERE C.ES_BLOQUEADO = 2\n\n\t) AS T \n\tWHERE T.ID_EMPRESA_CONCEPTO NOT IN (\t\n\t\t\t\tSELECT \n\t\t\t\tDISTINCT EL.ID_EMPRESA_GRUPO ||'#'||MC.COD_CONCEPTO_AS400 ||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\t\t\t\tFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\t\t\t\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\t\t\t\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\t\t\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\t\t\t\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\t\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\t\t\t\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\t\t\t\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n\t\t\t\t--WHERE ID_EMPRESA_GRUPO = 37\n\t\t\t\t-- GROUP BY EL.ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION_LARGA ||'#'|| ELAF.ANO_FISCAL , CC.DESCRIPCION_LARGA\t,ID_EMPRESA_CONCEPTO_AGR\n\t\t\t\t)\n\tGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,ID_EMPRESA_CONCEPTO,DESCRIPCION_CONCEPTO, DESCRIPCION,ID_EMPRESA_CONCEPTO_AGR ) AS T2\nLEFT JOIN(SELECT '189#ACTIVI' AS ID_EMPRESA_CONCEPTO, 'HORAS TARDE' AS DESCRIPCION FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#AYUDAS SOCIALES', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#BENEFI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#COMPERSONA', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#COTIZACION COMEDOR', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DESPLAZAMIENTOS', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DESPNT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DIFJCC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DOMINGOT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DTOHORAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#EXTRA DICIEMBRE (DICIE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#EXTRA JUNIO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#EXTRA MARZO (MARZO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#GRATVOL', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HEFET', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HENE0T', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HENOR', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HOJC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORA EXTRA', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORA FESTIVA (HFEST)', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORA NOCTURNA (HNOCT)', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORA SABADO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORAS DOMINGO NOCHE', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORAS DOMINGO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORASFST', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORASFTT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HRSABVAC', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HRTARVAC', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE06', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#INDEMNIZACIONES', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#ITC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#ITCNC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KABSENT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KATRASO2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KCUOTAP', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KCUOTAP_2', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KGUARDSUB', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KINDEMNIDP', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KINDEMNIRT', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KINDEMNIZA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#LVAC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#MSABT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#NOCTUVACT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PAGA SEPTIEMBRE (SEPTI)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLTARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUS APOYO', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUS DE PACTO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUS DE TARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUSC', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUSCOM', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRESATEL', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRIMA VACACIONAL (PVACA)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRIMA VINCULACION', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#SABADODIAT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#SALARIO BASE (SBASE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#TSABT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#VARIABLE ABSENTISMO (PASIS)', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#VIAJNEXTO', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ACTIVI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ACTIVI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AP', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AVOLUN', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYUDAS SOCIALES PAGO MES CONCRETO', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYUDAS SOCIALES', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#BENEFI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COMISIT', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COTIZACIÓN AUTOBUS', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COTIZACIÓN CESTA DE NAVIDAD', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COTIZACION COMEDOR', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COTIZACIÓN PRÉSTAMOS', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DESPLA', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DESPNT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DIFJCC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DTDIASPSC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DTOHORAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#EXTRA DICIEMBRE (DICIE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#EXTRA JUNIO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#EXTRA MARZO (MARZO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#EXTRA SEMANA SANTA', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#FESTIVIDAD EN DOMINGOS EXTRA', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#Festividad en domingos extras', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#GRATVOL', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HE', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HENE0T', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HENOR', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HOJC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORA EXTRA', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORA FESTIVA (HFEST)', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORA NOCTURNA (HNOCT)', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORAS DOMINGO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORASFSPT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORASFTT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE01', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE02', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE03', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE06', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE07', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE08', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#INCENTIVOT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#Incremento jornada turno de refuerzo', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#INDEMNIZACIONES', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ITC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ITCNC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KABSENT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KATRASO2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KCUOTAP', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KCUOTAP_2', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KDIFER2', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KGUARDSUB', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KINDEMNIDP', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KINDEMNIRT', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KINDEMNIZA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KPREMIOVAC', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#LVAC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#NO PAGOS', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#Nocturnidad en horas extras', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#NOCTURNIDAD EN VACACIONES', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#OTROS CONCEPTOS NUEVO CONVENIO 1%', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PAGA SEPTIEMBRE (SEPTI)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLTARDE', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE CARGA M', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE DESCARGA M', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE PACTO (AGOSTO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE PACTO (FEBRERO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE TARDE EVENTUALES y PLUS DE TARDE PERSONAL FIJO ', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE TARDE EVENTUALES', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE TARDE PERSONAL FIJO ', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS TURNO DE REFUERZO APOYOS y PLUS TURNO DE REFUERZO OPERARIOS', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS TURNO DE REFUERZO APOYOS', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS TURNO DE REFUERZO OPERARIOS', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUSC+', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUSDT', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PRIMA DESPLAZAMIENTO HOLANDA', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PRIMA VACACIONAL (PVACA)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#SALARIO BASE (SBASE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#TRANSCOT', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#VARIABLE ABSENTISMO (PASIS)', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#VARIABLE DE ABSENTISMO (SEMESTRAL)', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#VIAJNEXTO', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#AYDC' , 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#CAIF', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#COMISIT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#COTIZACIÓN CESTA DE NAVIDAD', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#COTIZACION COMEDOR', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DESPLA', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DESPNT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DIFJCC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DTDIASANCC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DTOHORAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#FESTIVO DÍA DEL PILAR', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#FESTIVO JUEVES SANTO', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#FESTNLT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#FIESTA', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#GRATVOL', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HCFET', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HE', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HEDOMT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HEFET', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HENE0T', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HENOCT', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HENOR', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HOATPT', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRDOMT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRDOMVAC', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRSAB', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRSABT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRSABVAC', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRSABVACT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRTART', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRTARVAC', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRTARVACT', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPDOMAP', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE01', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE02', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE06', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPSABAP', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#ITC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#ITCNC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#JULIO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KCUOTAP_2', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KDIFER2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KGUARDSUB', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KINDEMNIDP', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KINDEMNIRT', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KINDEMNIZA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KPLUSAPOYO', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#LVAC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#NAVIDAD', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#NOCTUVAC', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#NOCTUVACT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PAGA PLATAF EUROPA ANTIG', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PAGA PLATAFORMA EUROPA', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLCG', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLCGHE', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLDCG', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLUS DE TARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLUSJIRREG', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PRPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PTARD', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#TRANS', 'PLUSES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#VESTU', 'PLUSES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#VIAJNEXTO', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ACONV', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ACTIVI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ANTIGU', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ASISTE', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AVOLUN', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYUDEXTRA2', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYUN', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#BENEFI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#COMPERSONA', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#COMPGP', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#COMPLEMENTO GENEROS DE PUNTO (DICIE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#COMPLEMENTO GENEROS DE PUNTO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DPUR', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DTDIASANCC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DTOHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE01', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE02', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE06', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#INCENTIVOT', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#KCOMPLES', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PLUS DE PACTO (DICIEMBRE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PLUS DE PACTO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PLUS PERMANENCIA (PRIZE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PLUSRTURNO', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PRIZE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#TRANSCOT', 'PLUSES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGU', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGÜEDAD DICIEMBRE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGÜEDAD JUNIO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGÜEDAD MARZO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGÜEDAD', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ARTICULO 16', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AVOLUN', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYUDAS SOCIALES', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYUDEXTRA2', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#BENEFI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#BOLSA DE VACACIONES', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COMISIT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COMPLEMENTO NOCTURNO', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COMPLEMENTO TARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COTIZACIÓN CESTA DE NAVIDAD', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COTIZACION COMEDOR', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#CTFNOCHE', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#CTFTARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DESPLA', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DESPNT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DIFERENCIA SALARIAL', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DIFERENCIAS HORAS EVENTUALES', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DIFJCC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DOMINGOT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DTDIASPSC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DTOHORAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#EXTRA DICIEMBRE (DICIE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#EXTRA JUNIO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#EXTRA MARZO (MARZO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#GARANTIA SALARIAL', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HE', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HENOR', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HOAL16COT', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HOALT', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HOJC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA EXTRA', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA FESTIVA (HFEST)', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA LUNES NOCHE', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA NOCTURNA (HNOCT)', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA SABADO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA VIERNES NOCHE', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORAS DOMINGO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORASFSPT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORASFT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE01', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE03', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE06', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#INCENTIVOT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ITC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ITCNC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KATRASO2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KCUOTAP', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KDIFER2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KGUARDSUB', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KINDEMNIZA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#LUNESNOCT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#LVAC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PAGA SEPTIEMBRE (SEPTI)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PLCG', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PLUS DE TARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PLUS TRANSPORTE (PTPTE)', 'PLUSES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PREMIOT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PREMIOVAC', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PRIMA VACACIONAL (PVACA)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PRIZE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#RESALTAS', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#SABADODIAT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#SABADONOCT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#SALARIO BASE (SBASE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#TRANSCOT', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#TURNO', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#VARIABLE ABSENTISMO (PASIS)', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#VIAJNEXTO', 'OTROS' FROM SYSIBM.SYSDUMMY1\n\t) AS AGRUP_COS\n\tON AGRUP_COS.ID_EMPRESA_CONCEPTO = T2.ID_EMPRESA_CONCEPTO_AGR\nGROUP BY T2.ID_EMPRESA_CONCEPTO, T2.ID_EMPRESA_CONCEPTO_AGR,T2.COD_CONCEPTO_AS400,T2.DESCRIPCION,T2.DESCRIPCION_LARGA,T2.AGRUPACION,T2.SIGNO,T2.ANO_FISCAL,COALESCE(AGRUP_COS.DESCRIPCION,'NO CLASIFICADO')\nWITH UR;"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "AGRUPACION_CONCEPTOS"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT T2.ID_EMPRESA_CONCEPTO, T2.ID_EMPRESA_CONCEPTO_AGR,T2.COD_CONCEPTO_AS400,T2.DESCRIPCION,T2.DESCRIPCION_LARGA,T2.AGRUPACION,T2.SIGNO,T2.ANO_FISCAL,\nCOALESCE(AGRUP_COS.DESCRIPCION,'NO CLASIFICADO') AS AGRUPACION_COSTE FROM (\n\nSELECT \nDISTINCT EL.ID_EMPRESA_GRUPO ||'#'||MC.COD_CONCEPTO_AS400 ||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO,\nEL.ID_EMPRESA_GRUPO ||'#'||MC.COD_CONCEPTO_AS400  AS ID_EMPRESA_CONCEPTO_AGR,\nMC.COD_CONCEPTO_AS400,\nCC.DESCRIPCION,\nCC.DESCRIPCION_LARGA,\nSUBSTR(CC.DESCRIPCION_LARGA,1,CASE WHEN LOCATE('(',CC.DESCRIPCION_LARGA) = 0 THEN 100 ELSE LOCATE('(',CC.DESCRIPCION_LARGA)-1 END) AS AGRUPACION,\n--COALESCE(AGRUP_COS.DESCRIPCION,'NO CLASIFICADO') AS AGRUPACION_COSTE,\nCASE WHEN MC.OPERACION = 'R' THEN -1 ELSE 1 END AS SIGNO,\nELAF.ANO_FISCAL AS ANO_FISCAL\nFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\nON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\nINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\nON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \nON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\nAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n\nUNION\n\n\tSELECT ID_EMPRESA_CONCEPTO,ID_EMPRESA_CONCEPTO_AGR,DESCRIPCION AS COD_CONCEPTO_AS400, \n\tDESCRIPCION_CONCEPTO AS DESCRIPCION,\n\tDESCRIPCION_CONCEPTO AS DESCRIPCION_LARGA, \n\tDESCRIPCION_CONCEPTO AS AGRUPACION,\n\t1 AS SIGNO,\n\tANO_FISCAL FROM(\n\tSELECT ANO_FISCAL,ID_EMPRESA_GRUPO,DESCRIPCION_CONCEPTO, CC.DESCRIPCION\n\t--,ID_EMPRESA_GRUPO ||'#'||DCM.DESCRIPCION_CONCEPTO ||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\t,ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION  AS ID_EMPRESA_CONCEPTO_AGR\n\t, ID_EMPRESA_GRUPO ||'#'|| CC.DESCRIPCION||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\tFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \n\tJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\n\tON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\n\tINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\n\tON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\n\tON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\n\tLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\n\tON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \n\tAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND DCM.NUMERO_MES_ANO = CM.NUMERO_MES\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\n\tON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\n\tAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\n\t-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\n\tON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\t\t\n\tLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\n\tFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \n\tGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \n\tON MC.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\tAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tWHERE C.ES_BLOQUEADO = 2\n\n\t) AS T \n\tWHERE T.ID_EMPRESA_CONCEPTO NOT IN (\t\n\t\t\t\tSELECT \n\t\t\t\tDISTINCT EL.ID_EMPRESA_GRUPO ||'#'||MC.COD_CONCEPTO_AS400 ||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\t\t\t\tFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\t\t\t\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\t\t\t\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\t\t\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\t\t\t\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\t\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\t\t\t\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\t\t\t\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n\t\t\t\t--WHERE ID_EMPRESA_GRUPO = 37\n\t\t\t\t-- GROUP BY EL.ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION_LARGA ||'#'|| ELAF.ANO_FISCAL , CC.DESCRIPCION_LARGA\t,ID_EMPRESA_CONCEPTO_AGR\n\t\t\t\t)\n\tGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,ID_EMPRESA_CONCEPTO,DESCRIPCION_CONCEPTO, DESCRIPCION,ID_EMPRESA_CONCEPTO_AGR ) AS T2\nLEFT JOIN(SELECT '189#ACTIVI' AS ID_EMPRESA_CONCEPTO, 'HORAS TARDE' AS DESCRIPCION FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#AYUDAS SOCIALES', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#BENEFI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#COMPERSONA', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#COTIZACION COMEDOR', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DESPLAZAMIENTOS', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DESPNT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DIFJCC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DOMINGOT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#DTOHORAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#EXTRA DICIEMBRE (DICIE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#EXTRA JUNIO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#EXTRA MARZO (MARZO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#GRATVOL', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HEFET', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HENE0T', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HENOR', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HOJC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORA EXTRA', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORA FESTIVA (HFEST)', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORA NOCTURNA (HNOCT)', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORA SABADO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORAS DOMINGO NOCHE', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORAS DOMINGO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORASFST', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HORASFTT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HRSABVAC', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#HRTARVAC', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE06', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#INDEMNIZACIONES', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#ITC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#ITCNC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KABSENT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KATRASO2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KCUOTAP', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KCUOTAP_2', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KGUARDSUB', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KINDEMNIDP', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KINDEMNIRT', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KINDEMNIZA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#LVAC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#MSABT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#NOCTUVACT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PAGA SEPTIEMBRE (SEPTI)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLTARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUS APOYO', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUS DE PACTO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUS DE TARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUSC', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PLUSCOM', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRESATEL', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRIMA VACACIONAL (PVACA)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#PRIMA VINCULACION', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#SABADODIAT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#SALARIO BASE (SBASE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#TSABT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#VARIABLE ABSENTISMO (PASIS)', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '189#VIAJNEXTO', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ACTIVI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ACTIVI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AP', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AVOLUN', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYUDAS SOCIALES PAGO MES CONCRETO', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYUDAS SOCIALES', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#BENEFI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COMISIT', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COTIZACIÓN AUTOBUS', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COTIZACIÓN CESTA DE NAVIDAD', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COTIZACION COMEDOR', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#COTIZACIÓN PRÉSTAMOS', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DESPLA', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DESPNT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DIFJCC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DTDIASPSC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#DTOHORAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#EXTRA DICIEMBRE (DICIE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#EXTRA JUNIO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#EXTRA MARZO (MARZO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#EXTRA SEMANA SANTA', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#FESTIVIDAD EN DOMINGOS EXTRA', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#Festividad en domingos extras', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#GRATVOL', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HE', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HENE0T', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HENOR', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HOJC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORA EXTRA', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORA FESTIVA (HFEST)', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORA NOCTURNA (HNOCT)', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORAS DOMINGO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORASFSPT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#HORASFTT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE01', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE02', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE03', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE06', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE07', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE08', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#INCENTIVOT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#Incremento jornada turno de refuerzo', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#INDEMNIZACIONES', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ITC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#ITCNC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KABSENT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KATRASO2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KCUOTAP', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KCUOTAP_2', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KDIFER2', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KGUARDSUB', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KINDEMNIDP', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KINDEMNIRT', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KINDEMNIZA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KPREMIOVAC', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#LVAC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#NO PAGOS', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#Nocturnidad en horas extras', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#NOCTURNIDAD EN VACACIONES', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#OTROS CONCEPTOS NUEVO CONVENIO 1%', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PAGA SEPTIEMBRE (SEPTI)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLTARDE', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE CARGA M', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE DESCARGA M', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE PACTO (AGOSTO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE PACTO (FEBRERO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE TARDE EVENTUALES y PLUS DE TARDE PERSONAL FIJO ', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE TARDE EVENTUALES', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS DE TARDE PERSONAL FIJO ', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS TURNO DE REFUERZO APOYOS y PLUS TURNO DE REFUERZO OPERARIOS', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS TURNO DE REFUERZO APOYOS', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUS TURNO DE REFUERZO OPERARIOS', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUSC+', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PLUSDT', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PRIMA DESPLAZAMIENTO HOLANDA', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#PRIMA VACACIONAL (PVACA)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#SALARIO BASE (SBASE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#TRANSCOT', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#VARIABLE ABSENTISMO (PASIS)', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#VARIABLE DE ABSENTISMO (SEMESTRAL)', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '37#VIAJNEXTO', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#AYDC' , 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#CAIF', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#COMISIT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#COTIZACIÓN CESTA DE NAVIDAD', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#COTIZACION COMEDOR', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DESPLA', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DESPNT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DIFJCC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DTDIASANCC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#DTOHORAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#FESTIVO DÍA DEL PILAR', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#FESTIVO JUEVES SANTO', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#FESTNLT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#FIESTA', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#GRATVOL', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HCFET', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HE', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HEDOMT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HEFET', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HENE0T', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HENOCT', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HENOR', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HOATPT', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRDOMT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRDOMVAC', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRSAB', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRSABT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRSABVAC', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRSABVACT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRTART', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRTARVAC', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#HRTARVACT', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPDOMAP', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE01', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE02', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE06', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#IMPSABAP', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#ITC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#ITCNC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#JULIO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KCUOTAP_2', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KDIFER2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KGUARDSUB', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KINDEMNIDP', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KINDEMNIRT', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KINDEMNIZA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KPLUSAPOYO', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#LVAC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#NAVIDAD', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#NOCTUVAC', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#NOCTUVACT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PAGA PLATAF EUROPA ANTIG', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PAGA PLATAFORMA EUROPA', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLCG', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLCGHE', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLDCG', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLUS DE TARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PLUSJIRREG', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PRPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#PTARD', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#TRANS', 'PLUSES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#VESTU', 'PLUSES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '43#VIAJNEXTO', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ACONV', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ACTIVI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ANTIGU', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ASISTE', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AVOLUN', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYUDEXTRA2', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#AYUN', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#BENEFI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#COMPERSONA', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#COMPGP', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#COMPLEMENTO GENEROS DE PUNTO (DICIE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#COMPLEMENTO GENEROS DE PUNTO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DPUR', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DTDIASANCC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#DTOHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE01', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE02', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE06', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#INCENTIVOT', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#KCOMPLES', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PLUS DE PACTO (DICIEMBRE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PLUS DE PACTO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PLUS PERMANENCIA (PRIZE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PLUSRTURNO', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#PRIZE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#TRANSCOT', 'PLUSES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '64#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGU', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGÜEDAD DICIEMBRE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGÜEDAD JUNIO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGÜEDAD MARZO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ANTIGÜEDAD', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ARTICULO 16', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AVOLUN', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYDC', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYKID', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYUDAS SOCIALES', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYUDEXTRA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#AYUDEXTRA2', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#BENEFI', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#BOLSA DE VACACIONES', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COMISIT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COMPLEMENTO NOCTURNO', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COMPLEMENTO TARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COTIZACIÓN CESTA DE NAVIDAD', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#COTIZACION COMEDOR', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#CTFNOCHE', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#CTFTARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#CUOTAE', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DESPLA', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DESPNT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DEVOLUCION SS', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DIFERENCIA SALARIAL', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DIFERENCIAS HORAS EVENTUALES', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DIFJCC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DOMINGOT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DTDIASPSC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DTODIAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DTOHFT', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#DTOHORAHGC', 'DESCUENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#EXTRA DICIEMBRE (DICIE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#EXTRA JUNIO (JUNIO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#EXTRA MARZO (MARZO)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#GARANTIA SALARIAL', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#GRATBODA', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#GRATMAT', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HE', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HENOR', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HOAL16COT', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HOALT', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HOJC', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA EXTRA', 'HORAS EXTRAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA FESTIVA (HFEST)', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA LUNES NOCHE', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA NOCTURNA (HNOCT)', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA SABADO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORA VIERNES NOCHE', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORAS DOMINGO', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORASFSPT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#HORASFT', 'HORAS FESTIVAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE01', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE03', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE04', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE05', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE06', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE21', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#IMPPE22', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#INCENTIVOT', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ITC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#ITCNC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KATRASO', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KATRASO2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KCUOTAP', 'SEGURIDAD SOCIAL' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KDIFER', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KDIFER2', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KGUARDSUB', 'AYUDAS SOCIALES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KINDEMNIZA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#KPRESFIINT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#LUNESNOCT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#LVAC', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#NOCTUT', 'HORAS NOCTURNAS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PAGA SEPTIEMBRE (SEPTI)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PLCG', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PLUS DE TARDE', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PLUS TRANSPORTE (PTPTE)', 'PLUSES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PREMIOT', 'OTROS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PREMIOVAC', 'COMPLEMENTOS' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PRENEM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PRESCOM', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PRIMA VACACIONAL (PVACA)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#PRIZE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#RESALTAS', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#SABADODIAT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#SABADONOCT', 'HORAS FIN DE SEMANA' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#SABASE', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#SALARIO BASE (SBASE)', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#TRANSCOT', 'SALARIO FIJO' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#TURNO', 'HORAS TARDE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#VACA', 'INDEMNIZACIONES' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#VARIABLE ABSENTISMO (PASIS)', 'VARIABLE' FROM SYSIBM.SYSDUMMY1 UNION ALL\nSELECT '99#VIAJNEXTO', 'OTROS' FROM SYSIBM.SYSDUMMY1\n\t) AS AGRUP_COS\n\tON AGRUP_COS.ID_EMPRESA_CONCEPTO = T2.ID_EMPRESA_CONCEPTO_AGR\nGROUP BY T2.ID_EMPRESA_CONCEPTO, T2.ID_EMPRESA_CONCEPTO_AGR,T2.COD_CONCEPTO_AS400,T2.DESCRIPCION,T2.DESCRIPCION_LARGA,T2.AGRUPACION,T2.SIGNO,T2.ANO_FISCAL,COALESCE(AGRUP_COS.DESCRIPCION,'NO CLASIFICADO')\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "MOTIVO_ALTA",
        "columns": [
          {
            "name": "ID_MOTIVO_ALTA",
            "dataType": "string",
            "sourceColumn": "ID_MOTIVO_ALTA",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "MOTIVO_ALTA",
            "dataType": "string",
            "sourceColumn": "MOTIVO_ALTA",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "MOTIVO_ALTA",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SELECT STD_ID_HRP_SRT_REA AS ID_MOTIVO_ALTA, STD_START_REAESP MOTIVO_ALTA\n\t\t\t\t\t\t\t\t\t\t\tFROM STD_LU_HRP_BEG_RE WITH(NOLOCK)",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT STD_ID_HRP_SRT_REA AS ID_MOTIVO_ALTA, STD_START_REAESP MOTIVO_ALTA\n\t\t\t\t\t\t\t\t\t\t\tFROM STD_LU_HRP_BEG_RE WITH(NOLOCK)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT STD_ID_HRP_SRT_REA AS ID_MOTIVO_ALTA, STD_START_REAESP MOTIVO_ALTA\n\t\t\t\t\t\t\t\t\t\t\tFROM STD_LU_HRP_BEG_RE WITH(NOLOCK)"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "MOTIVO_ALTA"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT STD_ID_HRP_SRT_REA AS ID_MOTIVO_ALTA, STD_START_REAESP MOTIVO_ALTA\n\t\t\t\t\t\t\t\t\t\t\tFROM STD_LU_HRP_BEG_RE WITH(NOLOCK)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "MOTIVO_BAJA",
        "columns": [
          {
            "name": "ID_MOTIVO_BAJA",
            "dataType": "string",
            "sourceColumn": "ID_MOTIVO_BAJA",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "MOTIVO_BAJA",
            "dataType": "string",
            "sourceColumn": "MOTIVO_BAJA",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "MOTIVO_BAJA",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SELECT\n\t\t\t\t\t\t\t\t\t\t\tLHER.ID_ORGANIZATION + '#' +\n\t\t\t\t\t\t\t\t\t\t\tLHER.STD_ID_HRP_END_REA AS ID_MOTIVO_BAJA,\n\t\t\t\t\t\t\t\t\t\t\tLHER.STD_END_REASONESP AS MOTIVO_BAJA\n\t\t\t\t\t\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t\t\t\t\tSTD_LU_HRP_END_RE LHER WITH(NOLOCK)",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT\n\t\t\t\t\t\t\t\t\t\t\tLHER.ID_ORGANIZATION + '#' +\n\t\t\t\t\t\t\t\t\t\t\tLHER.STD_ID_HRP_END_REA AS ID_MOTIVO_BAJA,\n\t\t\t\t\t\t\t\t\t\t\tLHER.STD_END_REASONESP AS MOTIVO_BAJA\n\t\t\t\t\t\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t\t\t\t\tSTD_LU_HRP_END_RE LHER WITH(NOLOCK)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT\n\t\t\t\t\t\t\t\t\t\t\tLHER.ID_ORGANIZATION + '#' +\n\t\t\t\t\t\t\t\t\t\t\tLHER.STD_ID_HRP_END_REA AS ID_MOTIVO_BAJA,\n\t\t\t\t\t\t\t\t\t\t\tLHER.STD_END_REASONESP AS MOTIVO_BAJA\n\t\t\t\t\t\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t\t\t\t\tSTD_LU_HRP_END_RE LHER WITH(NOLOCK)"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "MOTIVO_BAJA"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT\n\t\t\t\t\t\t\t\t\t\t\tLHER.ID_ORGANIZATION + '#' +\n\t\t\t\t\t\t\t\t\t\t\tLHER.STD_ID_HRP_END_REA AS ID_MOTIVO_BAJA,\n\t\t\t\t\t\t\t\t\t\t\tLHER.STD_END_REASONESP AS MOTIVO_BAJA\n\t\t\t\t\t\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t\t\t\t\tSTD_LU_HRP_END_RE LHER WITH(NOLOCK)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "PRESUPUESTO_EMPRESA_CONCEPTOS",
        "isHidden": true,
        "columns": [
          {
            "name": "FECHA",
            "dataType": "string",
            "sourceColumn": "FECHA",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ID_EMPRESA_GRUPO",
            "dataType": "int64",
            "sourceColumn": "ID_EMPRESA_GRUPO",
            "sourceProviderType": "Integer"
          },
          {
            "name": "NUMERO_MES",
            "dataType": "int64",
            "sourceColumn": "NUMERO_MES"
          },
          {
            "name": "COSTE_MES_CONCEPTO",
            "dataType": "double",
            "sourceColumn": "COSTE_MES_CONCEPTO"
          },
          {
            "name": "COSTE_MES_CONCEPTO_SS",
            "dataType": "double",
            "sourceColumn": "COSTE_MES_CONCEPTO_SS"
          },
          {
            "name": "COSTE_HORA_MES_CONCEPTO",
            "dataType": "double",
            "sourceColumn": "COSTE_HORA_MES_CONCEPTO"
          },
          {
            "name": "ID_EMPRESA_CONCEPTO",
            "dataType": "string",
            "sourceColumn": "ID_EMPRESA_CONCEPTO"
          }
        ],
        "partitions": [
          {
            "name": "PRESUPUESTO_COSTE_EMPRESA",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SELECT \nID_EMPRESA_GRUPO ||'#'||COALESCE(CC.DESCRIPCION, CC2.DESCRIPCION) ||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \nCASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END  || LPAD(CM.NUMERO_MES,2,'00')||'01' AS FECHA,ID_EMPRESA_GRUPO,NUMERO_MES,\t\t \nSUM(DCM.IMPORTE_BRUTO) AS COSTE_MES_CONCEPTO, \nSUM(DCM.IMPORTE_BRUTO / HORAS_EFECTIVAS_MES) AS COSTE_HORA_MES_CONCEPTO,\nSUM(DCM.IMPORTE_SS) AS COSTE_MES_CONCEPTO_SS\n\nFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \nJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\nON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\nINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\nON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\nON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\nLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\nON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \nAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CASE WHEN DCM.NUMERO_MES_ANO =13 THEN 1 ELSE DCM.NUMERO_MES_ANO END = CM.NUMERO_MES\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\nON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\nAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\n-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\nON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc2\nON cc2.ID_CONCEPTO_CALCULO = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL \n\nLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\nFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \nGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \nON MC.ID_CONCEPTO_CALCULO = COALESCE(CC.ID_CONCEPTO_CALCULO, CC2.ID_CONCEPTO_CALCULO)-- CCAF.ID_CONCEPTO_CALCULO\nAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nWHERE C.ES_BLOQUEADO = 2\n\nGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,NUMERO_MES,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END  || LPAD(CM.NUMERO_MES,2,'00')||'01',ID_EMPRESA_GRUPO ||'#'||COALESCE(CC.DESCRIPCION, CC2.DESCRIPCION)||'#'|| ANO_FISCAL\n\nUNION\nSELECT \nID_EMPRESA_GRUPO ||'#'||'SEGURIDAD SOCIAL' ||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \nCASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END  || LPAD(CM.NUMERO_MES,2,'00')||'01' AS FECHA,ID_EMPRESA_GRUPO,NUMERO_MES,\t\t \nSUM(DCM.IMPORTE_SS) AS COSTE_MES_CONCEPTO, \nSUM(DCM.IMPORTE_SS/ HORAS_EFECTIVAS_MES) AS COSTE_HORA_MES_CONCEPTO,\n0 AS COSTE_MES_CONCEPTO_SS\nFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \nJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\nON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\nINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\nON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\nON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\nLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\nON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \nAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CASE WHEN DCM.NUMERO_MES_ANO =13 THEN 1 ELSE DCM.NUMERO_MES_ANO END = CM.NUMERO_MES\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\nON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\nAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\n-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\nON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\nLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\nFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \nGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \nON MC.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\nAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nWHERE C.ES_BLOQUEADO = 2\nGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,NUMERO_MES,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END  || LPAD(CM.NUMERO_MES,2,'00')||'01',ID_EMPRESA_GRUPO ||'#'||'SEGURIDAD SOCIAL' ||'#'|| ANO_FISCAL\n\nWITH UR;",
              "dataSource": "AXINDB26FINV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT \nID_EMPRESA_GRUPO ||'#'||COALESCE(CC.DESCRIPCION, CC2.DESCRIPCION) ||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \nCASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END  || LPAD(CM.NUMERO_MES,2,'00')||'01' AS FECHA,ID_EMPRESA_GRUPO,NUMERO_MES,\t\t \nSUM(DCM.IMPORTE_BRUTO) AS COSTE_MES_CONCEPTO, \nSUM(DCM.IMPORTE_BRUTO / HORAS_EFECTIVAS_MES) AS COSTE_HORA_MES_CONCEPTO,\nSUM(DCM.IMPORTE_SS) AS COSTE_MES_CONCEPTO_SS\n\nFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \nJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\nON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\nINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\nON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\nON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\nLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\nON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \nAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CASE WHEN DCM.NUMERO_MES_ANO =13 THEN 1 ELSE DCM.NUMERO_MES_ANO END = CM.NUMERO_MES\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\nON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\nAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\n-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\nON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc2\nON cc2.ID_CONCEPTO_CALCULO = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL \n\nLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\nFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \nGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \nON MC.ID_CONCEPTO_CALCULO = COALESCE(CC.ID_CONCEPTO_CALCULO, CC2.ID_CONCEPTO_CALCULO)-- CCAF.ID_CONCEPTO_CALCULO\nAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nWHERE C.ES_BLOQUEADO = 2\n\nGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,NUMERO_MES,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END  || LPAD(CM.NUMERO_MES,2,'00')||'01',ID_EMPRESA_GRUPO ||'#'||COALESCE(CC.DESCRIPCION, CC2.DESCRIPCION)||'#'|| ANO_FISCAL\n\nUNION\nSELECT \nID_EMPRESA_GRUPO ||'#'||'SEGURIDAD SOCIAL' ||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \nCASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END  || LPAD(CM.NUMERO_MES,2,'00')||'01' AS FECHA,ID_EMPRESA_GRUPO,NUMERO_MES,\t\t \nSUM(DCM.IMPORTE_SS) AS COSTE_MES_CONCEPTO, \nSUM(DCM.IMPORTE_SS/ HORAS_EFECTIVAS_MES) AS COSTE_HORA_MES_CONCEPTO,\n0 AS COSTE_MES_CONCEPTO_SS\nFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \nJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\nON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\nINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\nON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\nON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\nLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\nON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \nAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CASE WHEN DCM.NUMERO_MES_ANO =13 THEN 1 ELSE DCM.NUMERO_MES_ANO END = CM.NUMERO_MES\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\nON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\nAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\n-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\nON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\nLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\nFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \nGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \nON MC.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\nAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nWHERE C.ES_BLOQUEADO = 2\nGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,NUMERO_MES,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END  || LPAD(CM.NUMERO_MES,2,'00')||'01',ID_EMPRESA_GRUPO ||'#'||'SEGURIDAD SOCIAL' ||'#'|| ANO_FISCAL\n\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT \nID_EMPRESA_GRUPO ||'#'||COALESCE(CC.DESCRIPCION, CC2.DESCRIPCION) ||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \nCASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END  || LPAD(CM.NUMERO_MES,2,'00')||'01' AS FECHA,ID_EMPRESA_GRUPO,NUMERO_MES,\t\t \nSUM(DCM.IMPORTE_BRUTO) AS COSTE_MES_CONCEPTO, \nSUM(DCM.IMPORTE_BRUTO / HORAS_EFECTIVAS_MES) AS COSTE_HORA_MES_CONCEPTO,\nSUM(DCM.IMPORTE_SS) AS COSTE_MES_CONCEPTO_SS\n\nFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \nJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\nON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\nINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\nON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\nON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\nLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\nON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \nAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CASE WHEN DCM.NUMERO_MES_ANO =13 THEN 1 ELSE DCM.NUMERO_MES_ANO END = CM.NUMERO_MES\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\nON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\nAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\n-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\nON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc2\nON cc2.ID_CONCEPTO_CALCULO = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL \n\nLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\nFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \nGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \nON MC.ID_CONCEPTO_CALCULO = COALESCE(CC.ID_CONCEPTO_CALCULO, CC2.ID_CONCEPTO_CALCULO)-- CCAF.ID_CONCEPTO_CALCULO\nAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nWHERE C.ES_BLOQUEADO = 2\n\nGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,NUMERO_MES,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END  || LPAD(CM.NUMERO_MES,2,'00')||'01',ID_EMPRESA_GRUPO ||'#'||COALESCE(CC.DESCRIPCION, CC2.DESCRIPCION)||'#'|| ANO_FISCAL\n\nUNION\nSELECT \nID_EMPRESA_GRUPO ||'#'||'SEGURIDAD SOCIAL' ||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \nCASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END  || LPAD(CM.NUMERO_MES,2,'00')||'01' AS FECHA,ID_EMPRESA_GRUPO,NUMERO_MES,\t\t \nSUM(DCM.IMPORTE_SS) AS COSTE_MES_CONCEPTO, \nSUM(DCM.IMPORTE_SS/ HORAS_EFECTIVAS_MES) AS COSTE_HORA_MES_CONCEPTO,\n0 AS COSTE_MES_CONCEPTO_SS\nFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \nJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\nON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\nINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\nON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\nON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\nLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\nON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \nAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CASE WHEN DCM.NUMERO_MES_ANO =13 THEN 1 ELSE DCM.NUMERO_MES_ANO END = CM.NUMERO_MES\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\nON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\nAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\n-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\nON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\nLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\nFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \nGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \nON MC.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\nAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nWHERE C.ES_BLOQUEADO = 2\nGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,NUMERO_MES,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END  || LPAD(CM.NUMERO_MES,2,'00')||'01',ID_EMPRESA_GRUPO ||'#'||'SEGURIDAD SOCIAL' ||'#'|| ANO_FISCAL\n\nWITH UR;"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "PRESUPUESTO_COSTE_EMPRESA"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT \nID_EMPRESA_GRUPO ||'#'||COALESCE(CC.DESCRIPCION, CC2.DESCRIPCION) ||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \nCASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END  || LPAD(CM.NUMERO_MES,2,'00')||'01' AS FECHA,ID_EMPRESA_GRUPO,NUMERO_MES,\t\t \nSUM(DCM.IMPORTE_BRUTO) AS COSTE_MES_CONCEPTO, \nSUM(DCM.IMPORTE_BRUTO / HORAS_EFECTIVAS_MES) AS COSTE_HORA_MES_CONCEPTO,\nSUM(DCM.IMPORTE_SS) AS COSTE_MES_CONCEPTO_SS\n\nFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \nJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\nON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\nINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\nON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\nON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\nLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\nON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \nAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CASE WHEN DCM.NUMERO_MES_ANO =13 THEN 1 ELSE DCM.NUMERO_MES_ANO END = CM.NUMERO_MES\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\nON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\nAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\n-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\nON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc2\nON cc2.ID_CONCEPTO_CALCULO = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL \n\nLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\nFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \nGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \nON MC.ID_CONCEPTO_CALCULO = COALESCE(CC.ID_CONCEPTO_CALCULO, CC2.ID_CONCEPTO_CALCULO)-- CCAF.ID_CONCEPTO_CALCULO\nAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nWHERE C.ES_BLOQUEADO = 2\n\nGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,NUMERO_MES,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END  || LPAD(CM.NUMERO_MES,2,'00')||'01',ID_EMPRESA_GRUPO ||'#'||COALESCE(CC.DESCRIPCION, CC2.DESCRIPCION)||'#'|| ANO_FISCAL\n\nUNION\nSELECT \nID_EMPRESA_GRUPO ||'#'||'SEGURIDAD SOCIAL' ||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \nCASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END  || LPAD(CM.NUMERO_MES,2,'00')||'01' AS FECHA,ID_EMPRESA_GRUPO,NUMERO_MES,\t\t \nSUM(DCM.IMPORTE_SS) AS COSTE_MES_CONCEPTO, \nSUM(DCM.IMPORTE_SS/ HORAS_EFECTIVAS_MES) AS COSTE_HORA_MES_CONCEPTO,\n0 AS COSTE_MES_CONCEPTO_SS\nFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \nJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\nON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\nINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\nON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\nON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\nLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\nON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \nAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CASE WHEN DCM.NUMERO_MES_ANO =13 THEN 1 ELSE DCM.NUMERO_MES_ANO END = CM.NUMERO_MES\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\nON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\nAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\n-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\nLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\nON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\nLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\nFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \nGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \nON MC.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\nAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nWHERE C.ES_BLOQUEADO = 2\nGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,NUMERO_MES,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END  || LPAD(CM.NUMERO_MES,2,'00')||'01',ID_EMPRESA_GRUPO ||'#'||'SEGURIDAD SOCIAL' ||'#'|| ANO_FISCAL\n\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "PRESUPUESTO_EMPRESA",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_EMPRESA_GRUPO",
            "dataType": "int64",
            "sourceColumn": "ID_EMPRESA_GRUPO",
            "sourceProviderType": "Integer"
          },
          {
            "name": "FECHA",
            "dataType": "string",
            "sourceColumn": "FECHA",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "HORAS_EFECTIVAS_MES",
            "dataType": "double",
            "sourceColumn": "HORAS_EFECTIVAS_MES",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "HORAS_TEORICAS_INDEFINIDOS_MES",
            "dataType": "double",
            "sourceColumn": "HORAS_TEORICAS_INDEFINIDOS_MES",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "COSTE_PERIODIFICADO_MES",
            "dataType": "double",
            "sourceColumn": "COSTE_PERIODIFICADO_MES",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "HORAS_TRABAJO_NECESARIAS",
            "dataType": "double",
            "sourceColumn": "HORAS_TRABAJO_NECESARIAS",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "HORAS_COMPLEMENTARIAS",
            "dataType": "int64",
            "sourceColumn": "HORAS_COMPLEMENTARIAS",
            "sourceProviderType": "Integer"
          },
          {
            "name": "HORAS_EXTRAS",
            "dataType": "int64",
            "sourceColumn": "HORAS_EXTRAS",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PORCENTAJE_ABSENTISMO_EVENTUALES",
            "dataType": "double",
            "sourceColumn": "PORCENTAJE_ABSENTISMO_EVENTUALES",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "PORCENTAJE_ABSENTISMO_FIJOS",
            "dataType": "double",
            "sourceColumn": "PORCENTAJE_ABSENTISMO_FIJOS",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "COSTE_MES",
            "dataType": "double",
            "sourceColumn": "COSTE_MES"
          },
          {
            "name": "COSTE_HORA_MES",
            "dataType": "double",
            "sourceColumn": "COSTE_HORA_MES"
          },
          {
            "name": "HORAS_EFECTIVAS_INDEFINIDOS",
            "dataType": "double",
            "sourceColumn": "HORAS_EFECTIVAS_INDEFINIDOS"
          },
          {
            "name": "HORAS_EFECTIVAS_EVENTUALES",
            "dataType": "double",
            "sourceColumn": "HORAS_EFECTIVAS_EVENTUALES"
          },
          {
            "name": "HORAS_TEORICAS_TOTALES",
            "dataType": "double",
            "sourceColumn": "HORAS_TEORICAS_TOTALES"
          },
          {
            "name": "HORAS_TEORICAS_EVENTUALES",
            "dataType": "double",
            "sourceColumn": "HORAS_TEORICAS_EVENTUALES"
          }
        ],
        "partitions": [
          {
            "name": "PRESUPUESTO_HORAS_EMPRESA",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SELECT ID_EMPRESA_GRUPO,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END || LPAD(CM.NUMERO_MES,2,'00')||'01' AS FECHA,\nMAX(HORAS_EFECTIVAS_MES) AS HORAS_EFECTIVAS_MES,\nMAX(HORAS_TEORICAS_INDEFINIDOS_MES) - (MAX(HORAS_TEORICAS_INDEFINIDOS_MES) * (CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS DOUBLE)/100)) AS HORAS_EFECTIVAS_INDEFINIDOS,\nMAX(HORAS_EFECTIVAS_MES) - \n(MAX(HORAS_TEORICAS_INDEFINIDOS_MES) - (MAX(HORAS_TEORICAS_INDEFINIDOS_MES) * (CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS DOUBLE)/100))) -\nMAX(PCDM2.HORAS_EXTRAS) - MAX(PCDM2.HORAS_COMPLEMENTARIAS) AS HORAS_EFECTIVAS_EVENTUALES,\nMAX(HORAS_TEORICAS_INDEFINIDOS_MES)+ ((MAX(HORAS_EFECTIVAS_MES) - \n(MAX(HORAS_TEORICAS_INDEFINIDOS_MES) - (MAX(HORAS_TEORICAS_INDEFINIDOS_MES) * (CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS DOUBLE)/100))) -\nMAX(PCDM2.HORAS_EXTRAS) - MAX(PCDM2.HORAS_COMPLEMENTARIAS)) / (1-(CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_EVENTUALES) AS DOUBLE)/100))) AS HORAS_TEORICAS_TOTALES,\n(MAX(HORAS_EFECTIVAS_MES) - \n(MAX(HORAS_TEORICAS_INDEFINIDOS_MES) - (MAX(HORAS_TEORICAS_INDEFINIDOS_MES) * (CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS DOUBLE)/100))) -\nMAX(PCDM2.HORAS_EXTRAS) - MAX(PCDM2.HORAS_COMPLEMENTARIAS)) / (1-(CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_EVENTUALES) AS DOUBLE)/100)) AS HORAS_TEORICAS_EVENTUALES,\nMAX(HORAS_TEORICAS_INDEFINIDOS_MES) AS HORAS_TEORICAS_INDEFINIDOS_MES,\nMAX(CM.COSTE_PERIODIFICADO_MES) AS COSTE_PERIODIFICADO_MES,\n-- MAX(ELAFM.HORAS_TRABAJO_NECESARIAS) AS HORAS_TRABAJO_NECESARIAS,\nMAX(PCDM2.HORAS_NECESARIAS_ESCENARIO) AS HORAS_TRABAJO_NECESARIAS,\n\nMAX(PCDM2.HORAS_COMPLEMENTARIAS) AS HORAS_COMPLEMENTARIAS,\nMAX(PCDM2.HORAS_EXTRAS) AS HORAS_EXTRAS,\nMAX(PCDM2.PORCENTAJE_ABSENTISMO_EVENTUALES) AS PORCENTAJE_ABSENTISMO_EVENTUALES,\nMAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS PORCENTAJE_ABSENTISMO_FIJOS,\nMAX(CM.COSTE_MES) AS COSTE_MES,\nMAX(CM.COSTE_HORA_MES) AS COSTE_HORA_MES\nFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \nJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\nON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\nINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\nON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\nON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\nLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\nON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \nAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND DCM.NUMERO_MES_ANO = CM.NUMERO_MES\nLEFT JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL_MES ELAFM\nON ELAFM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND ELAFM.NUMERO_MES_FISCAL+2 = CASE WHEN CM.NUMERO_MES= 1 THEN 13 ELSE CM.NUMERO_MES END\nLEFT JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL_MES ELAFM2\nON ELAFM2.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND ELAFM2.NUMERO_MES_FISCAL+1 =  CM.NUMERO_MES --mal\nLEFT JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO_DETALLE_MES  PCDM2\nON PCDM2.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO\nAND PCDM2.ID_EMPRESA_LOGISTICA_ANO_FISCAL_MES = ELAFM2.ID_EMPRESA_LOGISTICA_ANO_FISCAL_MES\nWHERE C.ES_BLOQUEADO = 2\nGROUP BY ID_EMPRESA_GRUPO,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END,NUMERO_MES\nORDER BY ID_EMPRESA_GRUPO,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END,NUMERO_MES\n\nWITH UR;",
              "dataSource": "AXINDB26FINV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID_EMPRESA_GRUPO,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END || LPAD(CM.NUMERO_MES,2,'00')||'01' AS FECHA,\nMAX(HORAS_EFECTIVAS_MES) AS HORAS_EFECTIVAS_MES,\nMAX(HORAS_TEORICAS_INDEFINIDOS_MES) - (MAX(HORAS_TEORICAS_INDEFINIDOS_MES) * (CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS DOUBLE)/100)) AS HORAS_EFECTIVAS_INDEFINIDOS,\nMAX(HORAS_EFECTIVAS_MES) - \n(MAX(HORAS_TEORICAS_INDEFINIDOS_MES) - (MAX(HORAS_TEORICAS_INDEFINIDOS_MES) * (CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS DOUBLE)/100))) -\nMAX(PCDM2.HORAS_EXTRAS) - MAX(PCDM2.HORAS_COMPLEMENTARIAS) AS HORAS_EFECTIVAS_EVENTUALES,\nMAX(HORAS_TEORICAS_INDEFINIDOS_MES)+ ((MAX(HORAS_EFECTIVAS_MES) - \n(MAX(HORAS_TEORICAS_INDEFINIDOS_MES) - (MAX(HORAS_TEORICAS_INDEFINIDOS_MES) * (CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS DOUBLE)/100))) -\nMAX(PCDM2.HORAS_EXTRAS) - MAX(PCDM2.HORAS_COMPLEMENTARIAS)) / (1-(CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_EVENTUALES) AS DOUBLE)/100))) AS HORAS_TEORICAS_TOTALES,\n(MAX(HORAS_EFECTIVAS_MES) - \n(MAX(HORAS_TEORICAS_INDEFINIDOS_MES) - (MAX(HORAS_TEORICAS_INDEFINIDOS_MES) * (CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS DOUBLE)/100))) -\nMAX(PCDM2.HORAS_EXTRAS) - MAX(PCDM2.HORAS_COMPLEMENTARIAS)) / (1-(CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_EVENTUALES) AS DOUBLE)/100)) AS HORAS_TEORICAS_EVENTUALES,\nMAX(HORAS_TEORICAS_INDEFINIDOS_MES) AS HORAS_TEORICAS_INDEFINIDOS_MES,\nMAX(CM.COSTE_PERIODIFICADO_MES) AS COSTE_PERIODIFICADO_MES,\n-- MAX(ELAFM.HORAS_TRABAJO_NECESARIAS) AS HORAS_TRABAJO_NECESARIAS,\nMAX(PCDM2.HORAS_NECESARIAS_ESCENARIO) AS HORAS_TRABAJO_NECESARIAS,\n\nMAX(PCDM2.HORAS_COMPLEMENTARIAS) AS HORAS_COMPLEMENTARIAS,\nMAX(PCDM2.HORAS_EXTRAS) AS HORAS_EXTRAS,\nMAX(PCDM2.PORCENTAJE_ABSENTISMO_EVENTUALES) AS PORCENTAJE_ABSENTISMO_EVENTUALES,\nMAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS PORCENTAJE_ABSENTISMO_FIJOS,\nMAX(CM.COSTE_MES) AS COSTE_MES,\nMAX(CM.COSTE_HORA_MES) AS COSTE_HORA_MES\nFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \nJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\nON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\nINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\nON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\nON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\nLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\nON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \nAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND DCM.NUMERO_MES_ANO = CM.NUMERO_MES\nLEFT JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL_MES ELAFM\nON ELAFM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND ELAFM.NUMERO_MES_FISCAL+2 = CASE WHEN CM.NUMERO_MES= 1 THEN 13 ELSE CM.NUMERO_MES END\nLEFT JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL_MES ELAFM2\nON ELAFM2.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND ELAFM2.NUMERO_MES_FISCAL+1 =  CM.NUMERO_MES --mal\nLEFT JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO_DETALLE_MES  PCDM2\nON PCDM2.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO\nAND PCDM2.ID_EMPRESA_LOGISTICA_ANO_FISCAL_MES = ELAFM2.ID_EMPRESA_LOGISTICA_ANO_FISCAL_MES\nWHERE C.ES_BLOQUEADO = 2\nGROUP BY ID_EMPRESA_GRUPO,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END,NUMERO_MES\nORDER BY ID_EMPRESA_GRUPO,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END,NUMERO_MES\n\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT ID_EMPRESA_GRUPO,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END || LPAD(CM.NUMERO_MES,2,'00')||'01' AS FECHA,\nMAX(HORAS_EFECTIVAS_MES) AS HORAS_EFECTIVAS_MES,\nMAX(HORAS_TEORICAS_INDEFINIDOS_MES) - (MAX(HORAS_TEORICAS_INDEFINIDOS_MES) * (CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS DOUBLE)/100)) AS HORAS_EFECTIVAS_INDEFINIDOS,\nMAX(HORAS_EFECTIVAS_MES) - \n(MAX(HORAS_TEORICAS_INDEFINIDOS_MES) - (MAX(HORAS_TEORICAS_INDEFINIDOS_MES) * (CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS DOUBLE)/100))) -\nMAX(PCDM2.HORAS_EXTRAS) - MAX(PCDM2.HORAS_COMPLEMENTARIAS) AS HORAS_EFECTIVAS_EVENTUALES,\nMAX(HORAS_TEORICAS_INDEFINIDOS_MES)+ ((MAX(HORAS_EFECTIVAS_MES) - \n(MAX(HORAS_TEORICAS_INDEFINIDOS_MES) - (MAX(HORAS_TEORICAS_INDEFINIDOS_MES) * (CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS DOUBLE)/100))) -\nMAX(PCDM2.HORAS_EXTRAS) - MAX(PCDM2.HORAS_COMPLEMENTARIAS)) / (1-(CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_EVENTUALES) AS DOUBLE)/100))) AS HORAS_TEORICAS_TOTALES,\n(MAX(HORAS_EFECTIVAS_MES) - \n(MAX(HORAS_TEORICAS_INDEFINIDOS_MES) - (MAX(HORAS_TEORICAS_INDEFINIDOS_MES) * (CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS DOUBLE)/100))) -\nMAX(PCDM2.HORAS_EXTRAS) - MAX(PCDM2.HORAS_COMPLEMENTARIAS)) / (1-(CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_EVENTUALES) AS DOUBLE)/100)) AS HORAS_TEORICAS_EVENTUALES,\nMAX(HORAS_TEORICAS_INDEFINIDOS_MES) AS HORAS_TEORICAS_INDEFINIDOS_MES,\nMAX(CM.COSTE_PERIODIFICADO_MES) AS COSTE_PERIODIFICADO_MES,\n-- MAX(ELAFM.HORAS_TRABAJO_NECESARIAS) AS HORAS_TRABAJO_NECESARIAS,\nMAX(PCDM2.HORAS_NECESARIAS_ESCENARIO) AS HORAS_TRABAJO_NECESARIAS,\n\nMAX(PCDM2.HORAS_COMPLEMENTARIAS) AS HORAS_COMPLEMENTARIAS,\nMAX(PCDM2.HORAS_EXTRAS) AS HORAS_EXTRAS,\nMAX(PCDM2.PORCENTAJE_ABSENTISMO_EVENTUALES) AS PORCENTAJE_ABSENTISMO_EVENTUALES,\nMAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS PORCENTAJE_ABSENTISMO_FIJOS,\nMAX(CM.COSTE_MES) AS COSTE_MES,\nMAX(CM.COSTE_HORA_MES) AS COSTE_HORA_MES\nFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \nJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\nON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\nINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\nON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\nON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\nLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\nON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \nAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND DCM.NUMERO_MES_ANO = CM.NUMERO_MES\nLEFT JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL_MES ELAFM\nON ELAFM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND ELAFM.NUMERO_MES_FISCAL+2 = CASE WHEN CM.NUMERO_MES= 1 THEN 13 ELSE CM.NUMERO_MES END\nLEFT JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL_MES ELAFM2\nON ELAFM2.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND ELAFM2.NUMERO_MES_FISCAL+1 =  CM.NUMERO_MES --mal\nLEFT JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO_DETALLE_MES  PCDM2\nON PCDM2.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO\nAND PCDM2.ID_EMPRESA_LOGISTICA_ANO_FISCAL_MES = ELAFM2.ID_EMPRESA_LOGISTICA_ANO_FISCAL_MES\nWHERE C.ES_BLOQUEADO = 2\nGROUP BY ID_EMPRESA_GRUPO,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END,NUMERO_MES\nORDER BY ID_EMPRESA_GRUPO,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END,NUMERO_MES\n\nWITH UR;"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "PRESUPUESTO_HORAS_EMPRESA"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID_EMPRESA_GRUPO,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END || LPAD(CM.NUMERO_MES,2,'00')||'01' AS FECHA,\nMAX(HORAS_EFECTIVAS_MES) AS HORAS_EFECTIVAS_MES,\nMAX(HORAS_TEORICAS_INDEFINIDOS_MES) - (MAX(HORAS_TEORICAS_INDEFINIDOS_MES) * (CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS DOUBLE)/100)) AS HORAS_EFECTIVAS_INDEFINIDOS,\nMAX(HORAS_EFECTIVAS_MES) - \n(MAX(HORAS_TEORICAS_INDEFINIDOS_MES) - (MAX(HORAS_TEORICAS_INDEFINIDOS_MES) * (CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS DOUBLE)/100))) -\nMAX(PCDM2.HORAS_EXTRAS) - MAX(PCDM2.HORAS_COMPLEMENTARIAS) AS HORAS_EFECTIVAS_EVENTUALES,\nMAX(HORAS_TEORICAS_INDEFINIDOS_MES)+ ((MAX(HORAS_EFECTIVAS_MES) - \n(MAX(HORAS_TEORICAS_INDEFINIDOS_MES) - (MAX(HORAS_TEORICAS_INDEFINIDOS_MES) * (CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS DOUBLE)/100))) -\nMAX(PCDM2.HORAS_EXTRAS) - MAX(PCDM2.HORAS_COMPLEMENTARIAS)) / (1-(CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_EVENTUALES) AS DOUBLE)/100))) AS HORAS_TEORICAS_TOTALES,\n(MAX(HORAS_EFECTIVAS_MES) - \n(MAX(HORAS_TEORICAS_INDEFINIDOS_MES) - (MAX(HORAS_TEORICAS_INDEFINIDOS_MES) * (CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS DOUBLE)/100))) -\nMAX(PCDM2.HORAS_EXTRAS) - MAX(PCDM2.HORAS_COMPLEMENTARIAS)) / (1-(CAST(MAX(PCDM2.PORCENTAJE_ABSENTISMO_EVENTUALES) AS DOUBLE)/100)) AS HORAS_TEORICAS_EVENTUALES,\nMAX(HORAS_TEORICAS_INDEFINIDOS_MES) AS HORAS_TEORICAS_INDEFINIDOS_MES,\nMAX(CM.COSTE_PERIODIFICADO_MES) AS COSTE_PERIODIFICADO_MES,\n-- MAX(ELAFM.HORAS_TRABAJO_NECESARIAS) AS HORAS_TRABAJO_NECESARIAS,\nMAX(PCDM2.HORAS_NECESARIAS_ESCENARIO) AS HORAS_TRABAJO_NECESARIAS,\n\nMAX(PCDM2.HORAS_COMPLEMENTARIAS) AS HORAS_COMPLEMENTARIAS,\nMAX(PCDM2.HORAS_EXTRAS) AS HORAS_EXTRAS,\nMAX(PCDM2.PORCENTAJE_ABSENTISMO_EVENTUALES) AS PORCENTAJE_ABSENTISMO_EVENTUALES,\nMAX(PCDM2.PORCENTAJE_ABSENTISMO_FIJOS) AS PORCENTAJE_ABSENTISMO_FIJOS,\nMAX(CM.COSTE_MES) AS COSTE_MES,\nMAX(CM.COSTE_HORA_MES) AS COSTE_HORA_MES\nFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \nJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\nON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\nINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\nON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\nON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\nLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\nON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \nAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND DCM.NUMERO_MES_ANO = CM.NUMERO_MES\nLEFT JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL_MES ELAFM\nON ELAFM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND ELAFM.NUMERO_MES_FISCAL+2 = CASE WHEN CM.NUMERO_MES= 1 THEN 13 ELSE CM.NUMERO_MES END\nLEFT JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL_MES ELAFM2\nON ELAFM2.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\nAND ELAFM2.NUMERO_MES_FISCAL+1 =  CM.NUMERO_MES --mal\nLEFT JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO_DETALLE_MES  PCDM2\nON PCDM2.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO\nAND PCDM2.ID_EMPRESA_LOGISTICA_ANO_FISCAL_MES = ELAFM2.ID_EMPRESA_LOGISTICA_ANO_FISCAL_MES\nWHERE C.ES_BLOQUEADO = 2\nGROUP BY ID_EMPRESA_GRUPO,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END,NUMERO_MES\nORDER BY ID_EMPRESA_GRUPO,CASE WHEN CM.NUMERO_MES = 1 THEN ANO_FISCAL+1 ELSE ANO_FISCAL END,NUMERO_MES\n\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "CONCEPTO_SIMULADOR",
        "columns": [
          {
            "name": "DESCRIPCION_LARGA",
            "dataType": "string",
            "sourceColumn": "DESCRIPCION_LARGA",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ID_EMPRESA_GRUPO",
            "dataType": "int64",
            "sourceColumn": "ID_EMPRESA_GRUPO"
          },
          {
            "name": "ANO",
            "dataType": "int64",
            "sourceColumn": "ANO"
          },
          {
            "name": "ID_EMPRESA_CONCEPTO_AS400",
            "dataType": "string",
            "sourceColumn": "ID_EMPRESA_CONCEPTO_AS400"
          },
          {
            "name": "ID_EMPRESA_CONCEPTO_SIMULADOR",
            "dataType": "string",
            "sourceColumn": "ID_EMPRESA_CONCEPTO_SIMULADOR"
          }
        ],
        "partitions": [
          {
            "name": "AUX_NEXO_CONCEPTOS",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "--GENERA TODOS LOS CONCEPTOS POSIBLES, QUE O BIEN TENGAN DATO O BIEN ESTEN EN LA TABLA MAESTRA (union+not in para evitar duplicados)\nSELECT \n\tDISTINCT EL.ID_EMPRESA_GRUPO,ELAF.ANO_FISCAL AS ANO, EL.ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO_SIMULADOR,\n\tCC.DESCRIPCION_LARGA,\n\tMAX(EL.ID_EMPRESA_GRUPO ||'#'|| CASE MC.ID_CONCEPTO_CALCULO \n\t\tWHEN 248 -- SEGURIDAD SOCIAL \n\t\t\tTHEN 'CUOTAE'\n\t\tELSE  COD_CONCEPTO_AS400 END\n\t\t||'#'|| ELAF.ANO_FISCAL\n\t\t) AS ID_EMPRESA_CONCEPTO_AS400\n\t\t\n\tFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n\n\tGROUP BY EL.ID_EMPRESA_GRUPO,ELAF.ANO_FISCAL,EL.ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION ||'#'|| ELAF.ANO_FISCAL , CC.DESCRIPCION_LARGA\n\t\nUNION\n\tSELECT  ID_EMPRESA_GRUPO,\n\tANO_FISCAL,\n\tID_EMPRESA_CONCEPTO AS ID_EMPRESA_CONCEPTO_SIMULADOR,\n\tDESCRIPCION_CONCEPTO AS DESCRIPCION_LARGA,\n\tID_EMPRESA_CONCEPTO AS ID_EMPRESA_CONCEPTO_AS400 FROM(\n\tSELECT ID_EMPRESA_GRUPO,ANO_FISCAL,\n\tID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION ||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO,\n\tANO_FISCAL || LPAD(CM.NUMERO_MES,2,'00')||'01' AS FECHA,NUMERO_MES,\n\tDCM.DESCRIPCION_CONCEPTO,\n\tDCM.IMPORTE_TOTAL AS COSTE_MES_CONCEPTO, DCM.IMPORTE_TOTAL / HORAS_EFECTIVAS_MES AS COSTE_HORA_MES_CONCEPTO\n\tFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \n\tJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\n\tON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\n\tINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\n\tON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\n\tON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\n\tLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\n\tON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \n\tAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND DCM.NUMERO_MES_ANO = CM.NUMERO_MES\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\n\tON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\n\tAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\n\t-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\n\tON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\t\n\tLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\n\tFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \n\tGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \n\tON MC.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\tAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tWHERE C.ES_BLOQUEADO = 2\n\n\t) AS T \n\tWHERE ID_EMPRESA_CONCEPTO NOT IN (\t\n\t\tSELECT DISTINCT EL.ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO_SIMULADOR\n\t\t\tFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\t\t\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\t\t\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\t\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\t\t\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\t\t\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\t\t\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\t\t\n\n\t\t\t\t)\n\tGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,ID_EMPRESA_CONCEPTO,DESCRIPCION_CONCEPTO\nWITH UR;",
              "dataSource": "AXINDB26FINV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>--GENERA TODOS LOS CONCEPTOS POSIBLES, QUE O BIEN TENGAN DATO O BIEN ESTEN EN LA TABLA MAESTRA (union+not in para evitar duplicados)\nSELECT \n\tDISTINCT EL.ID_EMPRESA_GRUPO,ELAF.ANO_FISCAL AS ANO, EL.ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO_SIMULADOR,\n\tCC.DESCRIPCION_LARGA,\n\tMAX(EL.ID_EMPRESA_GRUPO ||'#'|| CASE MC.ID_CONCEPTO_CALCULO \n\t\tWHEN 248 -- SEGURIDAD SOCIAL \n\t\t\tTHEN 'CUOTAE'\n\t\tELSE  COD_CONCEPTO_AS400 END\n\t\t||'#'|| ELAF.ANO_FISCAL\n\t\t) AS ID_EMPRESA_CONCEPTO_AS400\n\t\t\n\tFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n\n\tGROUP BY EL.ID_EMPRESA_GRUPO,ELAF.ANO_FISCAL,EL.ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION ||'#'|| ELAF.ANO_FISCAL , CC.DESCRIPCION_LARGA\n\t\nUNION\n\tSELECT  ID_EMPRESA_GRUPO,\n\tANO_FISCAL,\n\tID_EMPRESA_CONCEPTO AS ID_EMPRESA_CONCEPTO_SIMULADOR,\n\tDESCRIPCION_CONCEPTO AS DESCRIPCION_LARGA,\n\tID_EMPRESA_CONCEPTO AS ID_EMPRESA_CONCEPTO_AS400 FROM(\n\tSELECT ID_EMPRESA_GRUPO,ANO_FISCAL,\n\tID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION ||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO,\n\tANO_FISCAL || LPAD(CM.NUMERO_MES,2,'00')||'01' AS FECHA,NUMERO_MES,\n\tDCM.DESCRIPCION_CONCEPTO,\n\tDCM.IMPORTE_TOTAL AS COSTE_MES_CONCEPTO, DCM.IMPORTE_TOTAL / HORAS_EFECTIVAS_MES AS COSTE_HORA_MES_CONCEPTO\n\tFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \n\tJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\n\tON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\n\tINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\n\tON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\n\tON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\n\tLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\n\tON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \n\tAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND DCM.NUMERO_MES_ANO = CM.NUMERO_MES\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\n\tON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\n\tAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\n\t-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\n\tON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\t\n\tLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\n\tFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \n\tGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \n\tON MC.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\tAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tWHERE C.ES_BLOQUEADO = 2\n\n\t) AS T \n\tWHERE ID_EMPRESA_CONCEPTO NOT IN (\t\n\t\tSELECT DISTINCT EL.ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO_SIMULADOR\n\t\t\tFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\t\t\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\t\t\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\t\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\t\t\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\t\t\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\t\t\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\t\t\n\n\t\t\t\t)\n\tGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,ID_EMPRESA_CONCEPTO,DESCRIPCION_CONCEPTO\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "--GENERA TODOS LOS CONCEPTOS POSIBLES, QUE O BIEN TENGAN DATO O BIEN ESTEN EN LA TABLA MAESTRA (union+not in para evitar duplicados)\nSELECT \n\tDISTINCT EL.ID_EMPRESA_GRUPO,ELAF.ANO_FISCAL AS ANO, EL.ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO_SIMULADOR,\n\tCC.DESCRIPCION_LARGA,\n\tMAX(EL.ID_EMPRESA_GRUPO ||'#'|| CASE MC.ID_CONCEPTO_CALCULO \n\t\tWHEN 248 -- SEGURIDAD SOCIAL \n\t\t\tTHEN 'CUOTAE'\n\t\tELSE  COD_CONCEPTO_AS400 END\n\t\t||'#'|| ELAF.ANO_FISCAL\n\t\t) AS ID_EMPRESA_CONCEPTO_AS400\n\t\t\n\tFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n\n\tGROUP BY EL.ID_EMPRESA_GRUPO,ELAF.ANO_FISCAL,EL.ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION ||'#'|| ELAF.ANO_FISCAL , CC.DESCRIPCION_LARGA\n\t\nUNION\n\tSELECT  ID_EMPRESA_GRUPO,\n\tANO_FISCAL,\n\tID_EMPRESA_CONCEPTO AS ID_EMPRESA_CONCEPTO_SIMULADOR,\n\tDESCRIPCION_CONCEPTO AS DESCRIPCION_LARGA,\n\tID_EMPRESA_CONCEPTO AS ID_EMPRESA_CONCEPTO_AS400 FROM(\n\tSELECT ID_EMPRESA_GRUPO,ANO_FISCAL,\n\tID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION ||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO,\n\tANO_FISCAL || LPAD(CM.NUMERO_MES,2,'00')||'01' AS FECHA,NUMERO_MES,\n\tDCM.DESCRIPCION_CONCEPTO,\n\tDCM.IMPORTE_TOTAL AS COSTE_MES_CONCEPTO, DCM.IMPORTE_TOTAL / HORAS_EFECTIVAS_MES AS COSTE_HORA_MES_CONCEPTO\n\tFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \n\tJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\n\tON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\n\tINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\n\tON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\n\tON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\n\tLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\n\tON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \n\tAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND DCM.NUMERO_MES_ANO = CM.NUMERO_MES\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\n\tON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\n\tAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\n\t-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\n\tON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\t\n\tLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\n\tFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \n\tGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \n\tON MC.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\tAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tWHERE C.ES_BLOQUEADO = 2\n\n\t) AS T \n\tWHERE ID_EMPRESA_CONCEPTO NOT IN (\t\n\t\tSELECT DISTINCT EL.ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO_SIMULADOR\n\t\t\tFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\t\t\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\t\t\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\t\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\t\t\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\t\t\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\t\t\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\t\t\n\n\t\t\t\t)\n\tGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,ID_EMPRESA_CONCEPTO,DESCRIPCION_CONCEPTO\nWITH UR;"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "AUX_NEXO_CONCEPTOS"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>--GENERA TODOS LOS CONCEPTOS POSIBLES, QUE O BIEN TENGAN DATO O BIEN ESTEN EN LA TABLA MAESTRA (union+not in para evitar duplicados)\nSELECT \n\tDISTINCT EL.ID_EMPRESA_GRUPO,ELAF.ANO_FISCAL AS ANO, EL.ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO_SIMULADOR,\n\tCC.DESCRIPCION_LARGA,\n\tMAX(EL.ID_EMPRESA_GRUPO ||'#'|| CASE MC.ID_CONCEPTO_CALCULO \n\t\tWHEN 248 -- SEGURIDAD SOCIAL \n\t\t\tTHEN 'CUOTAE'\n\t\tELSE  COD_CONCEPTO_AS400 END\n\t\t||'#'|| ELAF.ANO_FISCAL\n\t\t) AS ID_EMPRESA_CONCEPTO_AS400\n\t\t\n\tFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n\n\tGROUP BY EL.ID_EMPRESA_GRUPO,ELAF.ANO_FISCAL,EL.ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION ||'#'|| ELAF.ANO_FISCAL , CC.DESCRIPCION_LARGA\n\t\nUNION\n\tSELECT  ID_EMPRESA_GRUPO,\n\tANO_FISCAL,\n\tID_EMPRESA_CONCEPTO AS ID_EMPRESA_CONCEPTO_SIMULADOR,\n\tDESCRIPCION_CONCEPTO AS DESCRIPCION_LARGA,\n\tID_EMPRESA_CONCEPTO AS ID_EMPRESA_CONCEPTO_AS400 FROM(\n\tSELECT ID_EMPRESA_GRUPO,ANO_FISCAL,\n\tID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION ||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO,\n\tANO_FISCAL || LPAD(CM.NUMERO_MES,2,'00')||'01' AS FECHA,NUMERO_MES,\n\tDCM.DESCRIPCION_CONCEPTO,\n\tDCM.IMPORTE_TOTAL AS COSTE_MES_CONCEPTO, DCM.IMPORTE_TOTAL / HORAS_EFECTIVAS_MES AS COSTE_HORA_MES_CONCEPTO\n\tFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \n\tJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\n\tON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\n\tINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\n\tON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\n\tON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\n\tLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\n\tON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \n\tAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND DCM.NUMERO_MES_ANO = CM.NUMERO_MES\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\n\tON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\n\tAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\n\t-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\n\tON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\t\n\tLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\n\tFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \n\tGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \n\tON MC.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\tAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tWHERE C.ES_BLOQUEADO = 2\n\n\t) AS T \n\tWHERE ID_EMPRESA_CONCEPTO NOT IN (\t\n\t\tSELECT DISTINCT EL.ID_EMPRESA_GRUPO ||'#'||CC.DESCRIPCION||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO_SIMULADOR\n\t\t\tFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\t\t\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\t\t\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\t\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\t\t\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\t\t\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\t\t\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\t\t\n\n\t\t\t\t)\n\tGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,ID_EMPRESA_CONCEPTO,DESCRIPCION_CONCEPTO\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "DIM_CONCEPTOS_SIMULADOR",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_EMPRESA_GRUPO",
            "dataType": "int64",
            "sourceColumn": "ID_EMPRESA_GRUPO",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ID_CONCEPTO",
            "dataType": "string",
            "sourceColumn": "ID_CONCEPTO",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ID_EMPRESA_CONCEPTO",
            "dataType": "string",
            "sourceColumn": "ID_EMPRESA_CONCEPTO",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ANO_FISCAL",
            "dataType": "int64",
            "sourceColumn": "ANO_FISCAL"
          }
        ],
        "partitions": [
          {
            "name": "DIM_CONCEPTOS_SIMULADOR",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SELECT \n\tDISTINCT  ELAF.ANO_FISCAL,EL.ID_EMPRESA_GRUPO, COD_CONCEPTO_AS400 AS ID_CONCEPTO,\n\tEL.ID_EMPRESA_GRUPO ||'#'||COD_CONCEPTO_AS400||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\tFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n--\tWHERE ID_EMPRESA_GRUPO = 37\n\n\tGROUP BY EL.ID_EMPRESA_GRUPO,EL.ID_EMPRESA_GRUPO ||'#'||COD_CONCEPTO_AS400 ||'#'|| ELAF.ANO_FISCAL ,  ELAF.ANO_FISCAL,COD_CONCEPTO_AS400\nUNION\n\tSELECT  ANO_FISCAL,ID_EMPRESA_GRUPO,DESCRIPCION_CONCEPTO AS ID_CONCEPTO, ID_EMPRESA_CONCEPTO FROM(\n\tSELECT ANO_FISCAL,ID_EMPRESA_GRUPO, CC.DESCRIPCION DESCRIPCION_CONCEPTO,\n\tID_EMPRESA_GRUPO ||'#'|| CC.DESCRIPCION||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\tFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \n\tJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\n\tON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\n\tINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\n\tON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\n\tON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\n\tLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\n\tON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \n\tAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND DCM.NUMERO_MES_ANO = CM.NUMERO_MES\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\n\tON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\n\tAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\t-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\n\tON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\t\n\tLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\n\tFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \n\tGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \n\tON MC.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\tAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tWHERE C.ES_BLOQUEADO = 2\n\n\t) AS T \n\tWHERE ID_EMPRESA_CONCEPTO NOT IN (\t\n\t\tSELECT DISTINCT EL.ID_EMPRESA_GRUPO ||'#'||COD_CONCEPTO_AS400||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\t\tFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\t\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\t\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\t\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\t\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\t\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n\t\t\t\t)\n\tGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,ID_EMPRESA_CONCEPTO,DESCRIPCION_CONCEPTO\nWITH UR;",
              "dataSource": "AXINDB26FINV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT \n\tDISTINCT  ELAF.ANO_FISCAL,EL.ID_EMPRESA_GRUPO, COD_CONCEPTO_AS400 AS ID_CONCEPTO,\n\tEL.ID_EMPRESA_GRUPO ||'#'||COD_CONCEPTO_AS400||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\tFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n--\tWHERE ID_EMPRESA_GRUPO = 37\n\n\tGROUP BY EL.ID_EMPRESA_GRUPO,EL.ID_EMPRESA_GRUPO ||'#'||COD_CONCEPTO_AS400 ||'#'|| ELAF.ANO_FISCAL ,  ELAF.ANO_FISCAL,COD_CONCEPTO_AS400\nUNION\n\tSELECT  ANO_FISCAL,ID_EMPRESA_GRUPO,DESCRIPCION_CONCEPTO AS ID_CONCEPTO, ID_EMPRESA_CONCEPTO FROM(\n\tSELECT ANO_FISCAL,ID_EMPRESA_GRUPO, CC.DESCRIPCION DESCRIPCION_CONCEPTO,\n\tID_EMPRESA_GRUPO ||'#'|| CC.DESCRIPCION||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\tFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \n\tJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\n\tON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\n\tINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\n\tON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\n\tON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\n\tLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\n\tON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \n\tAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND DCM.NUMERO_MES_ANO = CM.NUMERO_MES\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\n\tON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\n\tAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\t-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\n\tON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\t\n\tLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\n\tFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \n\tGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \n\tON MC.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\tAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tWHERE C.ES_BLOQUEADO = 2\n\n\t) AS T \n\tWHERE ID_EMPRESA_CONCEPTO NOT IN (\t\n\t\tSELECT DISTINCT EL.ID_EMPRESA_GRUPO ||'#'||COD_CONCEPTO_AS400||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\t\tFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\t\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\t\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\t\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\t\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\t\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n\t\t\t\t)\n\tGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,ID_EMPRESA_CONCEPTO,DESCRIPCION_CONCEPTO\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT \n\tDISTINCT  ELAF.ANO_FISCAL,EL.ID_EMPRESA_GRUPO, COD_CONCEPTO_AS400 AS ID_CONCEPTO,\n\tEL.ID_EMPRESA_GRUPO ||'#'||COD_CONCEPTO_AS400||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\tFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n--\tWHERE ID_EMPRESA_GRUPO = 37\n\n\tGROUP BY EL.ID_EMPRESA_GRUPO,EL.ID_EMPRESA_GRUPO ||'#'||COD_CONCEPTO_AS400 ||'#'|| ELAF.ANO_FISCAL ,  ELAF.ANO_FISCAL,COD_CONCEPTO_AS400\nUNION\n\tSELECT  ANO_FISCAL,ID_EMPRESA_GRUPO,DESCRIPCION_CONCEPTO AS ID_CONCEPTO, ID_EMPRESA_CONCEPTO FROM(\n\tSELECT ANO_FISCAL,ID_EMPRESA_GRUPO, CC.DESCRIPCION DESCRIPCION_CONCEPTO,\n\tID_EMPRESA_GRUPO ||'#'|| CC.DESCRIPCION||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\tFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \n\tJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\n\tON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\n\tINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\n\tON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\n\tON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\n\tLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\n\tON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \n\tAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND DCM.NUMERO_MES_ANO = CM.NUMERO_MES\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\n\tON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\n\tAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\t-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\n\tON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\t\n\tLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\n\tFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \n\tGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \n\tON MC.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\tAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tWHERE C.ES_BLOQUEADO = 2\n\n\t) AS T \n\tWHERE ID_EMPRESA_CONCEPTO NOT IN (\t\n\t\tSELECT DISTINCT EL.ID_EMPRESA_GRUPO ||'#'||COD_CONCEPTO_AS400||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\t\tFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\t\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\t\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\t\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\t\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\t\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n\t\t\t\t)\n\tGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,ID_EMPRESA_CONCEPTO,DESCRIPCION_CONCEPTO\nWITH UR;"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DIM_CONCEPTOS_SIMULADOR"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT \n\tDISTINCT  ELAF.ANO_FISCAL,EL.ID_EMPRESA_GRUPO, COD_CONCEPTO_AS400 AS ID_CONCEPTO,\n\tEL.ID_EMPRESA_GRUPO ||'#'||COD_CONCEPTO_AS400||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\tFROM  CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n--\tWHERE ID_EMPRESA_GRUPO = 37\n\n\tGROUP BY EL.ID_EMPRESA_GRUPO,EL.ID_EMPRESA_GRUPO ||'#'||COD_CONCEPTO_AS400 ||'#'|| ELAF.ANO_FISCAL ,  ELAF.ANO_FISCAL,COD_CONCEPTO_AS400\nUNION\n\tSELECT  ANO_FISCAL,ID_EMPRESA_GRUPO,DESCRIPCION_CONCEPTO AS ID_CONCEPTO, ID_EMPRESA_CONCEPTO FROM(\n\tSELECT ANO_FISCAL,ID_EMPRESA_GRUPO, CC.DESCRIPCION DESCRIPCION_CONCEPTO,\n\tID_EMPRESA_GRUPO ||'#'|| CC.DESCRIPCION||'#'|| ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\tFROM CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA A \n\tJOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL B\n\tON A.ID_EMPRESA_LOGISTICA = B.ID_EMPRESA_LOGISTICA\n\tINNER JOIN CONTROL_GESTION_RRHH.PROCESO_CALCULO C\n\tON B.ID_EMPRESA_LOGISTICA_ANO_FISCAL = C.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tINNER JOIN CONTROL_GESTION_RRHH.COSTE_TOTAL_MENSUALIZADO CM\n\tON CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = B.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND CM.ID_PROCESO_CALCULO = C.ID_PROCESO_CALCULO\n\tLEFT JOIN CONTROL_GESTION_RRHH.DETALLE_COSTE_MENSUALIZADO DCM\n\tON DCM.ID_PROCESO_CALCULO = CM.ID_PROCESO_CALCULO \n\tAND DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tAND DCM.NUMERO_MES_ANO = CM.NUMERO_MES\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO_ANO_FISCAL CCAF\n\tON CCAF.ID_CONCEPTO_CALCULO_ANO_FISCAL = DCM.ID_CONCEPTO_CALCULO_ANO_FISCAL\n\tAND CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = DCM.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\t-- Cruce con el maestro de conceptos. Se hace a través de la tabla CONCEPTO_CALCULO_ANO_FISCAL\n\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO cc\n\tON cc.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\t\n\tLEFT JOIN (SELECT ID_EMPRESA_LOGISTICA_ANO_FISCAL,ID_CONCEPTO_CALCULO,MAX(COD_CONCEPTO_AS400)  AS COD_CONCEPTO_AS400\n\tFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO \n\tGROUP BY ID_EMPRESA_LOGISTICA_ANO_FISCAL, ID_CONCEPTO_CALCULO) MC    \n\tON MC.ID_CONCEPTO_CALCULO = CCAF.ID_CONCEPTO_CALCULO\n\tAND MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL = CCAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\tWHERE C.ES_BLOQUEADO = 2\n\n\t) AS T \n\tWHERE ID_EMPRESA_CONCEPTO NOT IN (\t\n\t\tSELECT DISTINCT EL.ID_EMPRESA_GRUPO ||'#'||COD_CONCEPTO_AS400||'#'|| ELAF.ANO_FISCAL AS ID_EMPRESA_CONCEPTO\n\t\tFROM CONTROL_GESTION_RRHH.MAPEO_CONCEPTO MC\n\t\tLEFT JOIN CONTROL_GESTION_RRHH.CONCEPTO_CALCULO CC\n\t\tON CC.ID_CONCEPTO_CALCULO  = MC.ID_CONCEPTO_CALCULO\n\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA_ANO_FISCAL ELAF\n\t\tON ELAF.ID_EMPRESA_LOGISTICA_ANO_FISCAL = MC.ID_EMPRESA_LOGISTICA_ANO_FISCAL\n\t\tINNER JOIN CONTROL_GESTION_RRHH.EMPRESA_LOGISTICA EL \n\t\tON EL.ID_EMPRESA_LOGISTICA = ELAF.ID_EMPRESA_LOGISTICA\n\t\tAND EL.ID_EMPRESA_GRUPO IN (64,37,43,99,189)\n\t\t\t\t)\n\tGROUP BY ID_EMPRESA_GRUPO,ANO_FISCAL,ID_EMPRESA_CONCEPTO,DESCRIPCION_CONCEPTO\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "DIM_CONCEPTOS_DB26",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_EMPRESA_GRUPO",
            "dataType": "int64",
            "sourceColumn": "ID_EMPRESA_GRUPO",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ID_CONCEPTO",
            "dataType": "string",
            "sourceColumn": "ID_CONCEPTO",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ID_EMPRESA_CONCEPTO",
            "dataType": "string",
            "sourceColumn": "ID_EMPRESA_CONCEPTO",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ANO",
            "dataType": "int64",
            "sourceColumn": "ANO"
          }
        ],
        "partitions": [
          {
            "name": "DIM_CONCEPTOS_DB26",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "select               DISTINCT CES.ANO,CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400 AS ID_CONCEPTO\n\t\t\t\t\t  , CES.ID_EMPRESA_GRUPO||'#'||TRIM(CS.COD_CONCEPTO_AS400)||'#'|| CES.ANO AS ID_EMPRESA_CONCEPTO\n                      from RRHH.CONCEPTO_EMPLEADO_SALARIO CES\n                      LEFT JOIN RRHH.CONCEPTO_SALARIO CS\n                      ON CS.ID_CONCEPTO_SALARIO = CES.ID_CONCEPTO_SALARIO\n                      where (ID_EMPRESA_GRUPO in (64,99,37,43,189))\n                      WITH ur",
              "dataSource": "AXINDB26V1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select               DISTINCT CES.ANO,CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400 AS ID_CONCEPTO\n\t\t\t\t\t  , CES.ID_EMPRESA_GRUPO||'#'||TRIM(CS.COD_CONCEPTO_AS400)||'#'|| CES.ANO AS ID_EMPRESA_CONCEPTO\n                      from RRHH.CONCEPTO_EMPLEADO_SALARIO CES\n                      LEFT JOIN RRHH.CONCEPTO_SALARIO CS\n                      ON CS.ID_CONCEPTO_SALARIO = CES.ID_CONCEPTO_SALARIO\n                      where (ID_EMPRESA_GRUPO in (64,99,37,43,189))\n                      WITH ur</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select               DISTINCT CES.ANO,CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400 AS ID_CONCEPTO\n\t\t\t\t\t  , CES.ID_EMPRESA_GRUPO||'#'||TRIM(CS.COD_CONCEPTO_AS400)||'#'|| CES.ANO AS ID_EMPRESA_CONCEPTO\n                      from RRHH.CONCEPTO_EMPLEADO_SALARIO CES\n                      LEFT JOIN RRHH.CONCEPTO_SALARIO CS\n                      ON CS.ID_CONCEPTO_SALARIO = CES.ID_CONCEPTO_SALARIO\n                      where (ID_EMPRESA_GRUPO in (64,99,37,43,189))\n                      WITH ur"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DIM_CONCEPTOS_DB26"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select               DISTINCT CES.ANO,CES.ID_EMPRESA_GRUPO\n                      , CS.COD_CONCEPTO_AS400 AS ID_CONCEPTO\n\t\t\t\t\t  , CES.ID_EMPRESA_GRUPO||'#'||TRIM(CS.COD_CONCEPTO_AS400)||'#'|| CES.ANO AS ID_EMPRESA_CONCEPTO\n                      from RRHH.CONCEPTO_EMPLEADO_SALARIO CES\n                      LEFT JOIN RRHH.CONCEPTO_SALARIO CS\n                      ON CS.ID_CONCEPTO_SALARIO = CES.ID_CONCEPTO_SALARIO\n                      where (ID_EMPRESA_GRUPO in (64,99,37,43,189))\n                      WITH ur</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "AGRUPACION_CONCEPTOS_COSTE",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "ID_EMPRESA_GRUPO",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "DIM_CONCEPTOS_DB26[ID_EMPRESA_GRUPO]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ID_CONCEPTO",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "DIM_CONCEPTOS_DB26[ID_CONCEPTO]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ID_EMPRESA_CONCEPTO",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "DIM_CONCEPTOS_DB26[ID_EMPRESA_CONCEPTO]"
          },
          {
            "type": "calculated",
            "name": "CONCEPTO_SIMULADOR",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF( ISBLANK(RELATED(AGRUPACION_CONCEPTOS_AUX[AGRUPACION])) ,  \"NO CLASIFICADO\",  RELATED (AGRUPACION_CONCEPTOS_AUX[AGRUPACION]) )"
          },
          {
            "type": "calculated",
            "name": "CONCEPTO_SIMULADOR_LARGO",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF( ISBLANK(RELATED(AGRUPACION_CONCEPTOS_AUX[DESCRIPCION_LARGA])) ,  \"NO CLASIFICADO\",  RELATED (AGRUPACION_CONCEPTOS_AUX[DESCRIPCION_LARGA]) )"
          },
          {
            "type": "calculated",
            "name": "SIGNO",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "IF( ISBLANK(RELATED(AGRUPACION_CONCEPTOS_AUX[SIGNO])) , 1,  RELATED (AGRUPACION_CONCEPTOS_AUX[SIGNO]) )"
          },
          {
            "type": "calculated",
            "name": "AGRUPACION_COSTE",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF( ISBLANK(RELATED(AGRUPACION_CONCEPTOS_AUX[AGRUPACION_COSTE])) ,  \"NO CLASIFICADO\",  RELATED (AGRUPACION_CONCEPTOS_AUX[AGRUPACION_COSTE]) )"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ANO",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "DIM_CONCEPTOS_DB26[ANO]"
          },
          {
            "type": "calculated",
            "name": "ID_EMPRESA_CONCEPTO_SIMULADOR",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "AGRUPACION_CONCEPTOS_COSTE[ID_EMPRESA_GRUPO] &\"#\" & AGRUPACION_CONCEPTOS_COSTE[CONCEPTO_SIMULADOR_LARGO] &\"#\" & AGRUPACION_CONCEPTOS_COSTE[ANO]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(UNION(DIM_CONCEPTOS_DB26,DIM_CONCEPTOS_SIMULADOR))"
            }
          }
        ]
      },
      {
        "name": "FECHA_AUX",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_FECHA",
            "dataType": "string",
            "sourceColumn": "ID_FECHA",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "FECHA",
            "dataType": "dateTime",
            "sourceColumn": "FECHA",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "FECHA_FISCAL",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_FISCAL",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "SEMANA_ANO",
            "dataType": "int64",
            "sourceColumn": "SEMANA_ANO",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SEMANA_MES",
            "dataType": "int64",
            "sourceColumn": "SEMANA_MES",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SEMANA_MES_FISCAL",
            "dataType": "int64",
            "sourceColumn": "SEMANA_MES_FISCAL",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SEMANA_ANO_FISCAL",
            "dataType": "int64",
            "sourceColumn": "SEMANA_ANO_FISCAL",
            "sourceProviderType": "Integer"
          },
          {
            "name": "8",
            "dataType": "dateTime",
            "sourceColumn": "8",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          }
        ],
        "partitions": [
          {
            "name": "FECHA_AUX",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "WITH DATES (FECHA) AS\n                      (\n                      SELECT\n                      DATE(TO_CHAR(YEAR(SYSDATE)+1) || '-01-31')\n                      FROM\n                      SYSIBM.SYSDUMMY1\n                      UNION ALL\n                      SELECT\n                      FECHA -1 DAY                     \n                      FROM\n                      DATES\n                      WHERE\n                      FECHA > DATE('2012-01-01')\n                      ),\n                      DATES2 (ID_FECHA, FECHA, FECHA_FISCAL, SEMANA_ANO, SEMANA_ANO_FISCAL,dia,DIA_ANOF, CURRENT_TIMESTAMP)  AS\n                      (\n                      SELECT\n                      TO_CHAR(FECHA, 'YYYYMMDD') AS ID_FECHA,\n                      FECHA,\n                      FECHA-1 MONTH AS FECHA_FISCAL,\n                      CASE\n                      WHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(FECHA)))) = 'Sunday' THEN\n                      CASE WHEN DAYNAME(FECHA) = 'Sunday' THEN WEEK(FECHA)-1 ELSE WEEK(FECHA) END +1\n                      ELSE\n                      CASE WHEN DAYNAME(FECHA) = 'Sunday' THEN WEEK(FECHA)-1 ELSE WEEK(FECHA)  END\n                      END AS SEMANA_ANO,\n                      CASE\n                      WHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(FECHA-1 MONTH)))) = 'Sunday' THEN\n                      CASE WHEN DAYNAME(FECHA-1 MONTH) = 'Sunday' THEN WEEK(FECHA-1 MONTH)-1 ELSE WEEK(FECHA-1 MONTH) END +1\n                      ELSE\n                      CASE WHEN DAYNAME(FECHA-1 MONTH) = 'Sunday' THEN WEEK(FECHA-1 MONTH)-1 ELSE WEEK(FECHA-1 MONTH)  END\n                      END AS SEMANA_ANO_FISCAL,\n                     DAYNAME(FECHA) AS dia\n                      ,  CASE WHEN MONTH(FECHA) = 1 THEN DAYOFYEAR(DATE(TO_CHAR(YEAR(FECHA)-1) ||'-12-31'))-31+DAY(FECHA) ELSE DAYOFYEAR(FECHA)-31 END AS DIA_ANOF,CURRENT_TIMESTAMP\n                      FROM DATES\n                      )\n                      SELECT\n                      DATES2.ID_FECHA,\n                      DATES2.FECHA,\n                      DATES2.FECHA_FISCAL,\n                      DATES2.SEMANA_ANO,\n                      DATES2.SEMANA_ANO -\n                      CASE\n                      WHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(DATES2.FECHA)))) = 'Sunday' THEN\n                      CASE WHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA)))) = 'Sunday' THEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA))))-1 ELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA)))) END +1\n                      ELSE\n                      CASE WHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA)))) = 'Sunday' THEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA))))-1 ELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA))))  END\n                      END +1 AS SEMANA_MES,\n                      DATES2.SEMANA_ANO_FISCAL -\n                      CASE\n                      WHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL)))) = 'Sunday' THEN\n                      CASE WHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL)))) = 'Sunday' THEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL))))-1 ELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL)))) END +1\n                      ELSE\n                      CASE WHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL)))) = 'Sunday' THEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL))))-1 ELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL))))  END\n                      END +1 AS SEMANA_MES_FISCAL,\n                      ((DIA_ANOF+CASE WHEN DAYNAME(DATE( TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01')) ='Monday' THEN 0\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Tuesday' THEN 1\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Wednesday' THEN 2\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Thursday' THEN 3\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Friday' THEN 4\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Saturday' THEN 5\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Sunday' THEN 6  END -1)/7)+1 AS SEMANA_ANO_FISCAL\n                      ,CURRENT_TIMESTAMP\n                      FROM\n                      DATES2 AS DATES2\n                      ORDER BY FECHA ASC\nWITH UR;",
              "dataSource": "AXINDB26V1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>WITH DATES (FECHA) AS\n                      (\n                      SELECT\n                      DATE(TO_CHAR(YEAR(SYSDATE)+1) || '-01-31')\n                      FROM\n                      SYSIBM.SYSDUMMY1\n                      UNION ALL\n                      SELECT\n                      FECHA -1 DAY                     \n                      FROM\n                      DATES\n                      WHERE\n                      FECHA > DATE('2012-01-01')\n                      ),\n                      DATES2 (ID_FECHA, FECHA, FECHA_FISCAL, SEMANA_ANO, SEMANA_ANO_FISCAL,dia,DIA_ANOF, CURRENT_TIMESTAMP)  AS\n                      (\n                      SELECT\n                      TO_CHAR(FECHA, 'YYYYMMDD') AS ID_FECHA,\n                      FECHA,\n                      FECHA-1 MONTH AS FECHA_FISCAL,\n                      CASE\n                      WHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(FECHA)))) = 'Sunday' THEN\n                      CASE WHEN DAYNAME(FECHA) = 'Sunday' THEN WEEK(FECHA)-1 ELSE WEEK(FECHA) END +1\n                      ELSE\n                      CASE WHEN DAYNAME(FECHA) = 'Sunday' THEN WEEK(FECHA)-1 ELSE WEEK(FECHA)  END\n                      END AS SEMANA_ANO,\n                      CASE\n                      WHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(FECHA-1 MONTH)))) = 'Sunday' THEN\n                      CASE WHEN DAYNAME(FECHA-1 MONTH) = 'Sunday' THEN WEEK(FECHA-1 MONTH)-1 ELSE WEEK(FECHA-1 MONTH) END +1\n                      ELSE\n                      CASE WHEN DAYNAME(FECHA-1 MONTH) = 'Sunday' THEN WEEK(FECHA-1 MONTH)-1 ELSE WEEK(FECHA-1 MONTH)  END\n                      END AS SEMANA_ANO_FISCAL,\n                     DAYNAME(FECHA) AS dia\n                      ,  CASE WHEN MONTH(FECHA) = 1 THEN DAYOFYEAR(DATE(TO_CHAR(YEAR(FECHA)-1) ||'-12-31'))-31+DAY(FECHA) ELSE DAYOFYEAR(FECHA)-31 END AS DIA_ANOF,CURRENT_TIMESTAMP\n                      FROM DATES\n                      )\n                      SELECT\n                      DATES2.ID_FECHA,\n                      DATES2.FECHA,\n                      DATES2.FECHA_FISCAL,\n                      DATES2.SEMANA_ANO,\n                      DATES2.SEMANA_ANO -\n                      CASE\n                      WHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(DATES2.FECHA)))) = 'Sunday' THEN\n                      CASE WHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA)))) = 'Sunday' THEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA))))-1 ELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA)))) END +1\n                      ELSE\n                      CASE WHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA)))) = 'Sunday' THEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA))))-1 ELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA))))  END\n                      END +1 AS SEMANA_MES,\n                      DATES2.SEMANA_ANO_FISCAL -\n                      CASE\n                      WHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL)))) = 'Sunday' THEN\n                      CASE WHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL)))) = 'Sunday' THEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL))))-1 ELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL)))) END +1\n                      ELSE\n                      CASE WHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL)))) = 'Sunday' THEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL))))-1 ELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL))))  END\n                      END +1 AS SEMANA_MES_FISCAL,\n                      ((DIA_ANOF+CASE WHEN DAYNAME(DATE( TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01')) ='Monday' THEN 0\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Tuesday' THEN 1\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Wednesday' THEN 2\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Thursday' THEN 3\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Friday' THEN 4\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Saturday' THEN 5\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Sunday' THEN 6  END -1)/7)+1 AS SEMANA_ANO_FISCAL\n                      ,CURRENT_TIMESTAMP\n                      FROM\n                      DATES2 AS DATES2\n                      ORDER BY FECHA ASC\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "WITH DATES (FECHA) AS\n                      (\n                      SELECT\n                      DATE(TO_CHAR(YEAR(SYSDATE)+1) || '-01-31')\n                      FROM\n                      SYSIBM.SYSDUMMY1\n                      UNION ALL\n                      SELECT\n                      FECHA -1 DAY                     \n                      FROM\n                      DATES\n                      WHERE\n                      FECHA > DATE('2012-01-01')\n                      ),\n                      DATES2 (ID_FECHA, FECHA, FECHA_FISCAL, SEMANA_ANO, SEMANA_ANO_FISCAL,dia,DIA_ANOF, CURRENT_TIMESTAMP)  AS\n                      (\n                      SELECT\n                      TO_CHAR(FECHA, 'YYYYMMDD') AS ID_FECHA,\n                      FECHA,\n                      FECHA-1 MONTH AS FECHA_FISCAL,\n                      CASE\n                      WHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(FECHA)))) = 'Sunday' THEN\n                      CASE WHEN DAYNAME(FECHA) = 'Sunday' THEN WEEK(FECHA)-1 ELSE WEEK(FECHA) END +1\n                      ELSE\n                      CASE WHEN DAYNAME(FECHA) = 'Sunday' THEN WEEK(FECHA)-1 ELSE WEEK(FECHA)  END\n                      END AS SEMANA_ANO,\n                      CASE\n                      WHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(FECHA-1 MONTH)))) = 'Sunday' THEN\n                      CASE WHEN DAYNAME(FECHA-1 MONTH) = 'Sunday' THEN WEEK(FECHA-1 MONTH)-1 ELSE WEEK(FECHA-1 MONTH) END +1\n                      ELSE\n                      CASE WHEN DAYNAME(FECHA-1 MONTH) = 'Sunday' THEN WEEK(FECHA-1 MONTH)-1 ELSE WEEK(FECHA-1 MONTH)  END\n                      END AS SEMANA_ANO_FISCAL,\n                     DAYNAME(FECHA) AS dia\n                      ,  CASE WHEN MONTH(FECHA) = 1 THEN DAYOFYEAR(DATE(TO_CHAR(YEAR(FECHA)-1) ||'-12-31'))-31+DAY(FECHA) ELSE DAYOFYEAR(FECHA)-31 END AS DIA_ANOF,CURRENT_TIMESTAMP\n                      FROM DATES\n                      )\n                      SELECT\n                      DATES2.ID_FECHA,\n                      DATES2.FECHA,\n                      DATES2.FECHA_FISCAL,\n                      DATES2.SEMANA_ANO,\n                      DATES2.SEMANA_ANO -\n                      CASE\n                      WHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(DATES2.FECHA)))) = 'Sunday' THEN\n                      CASE WHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA)))) = 'Sunday' THEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA))))-1 ELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA)))) END +1\n                      ELSE\n                      CASE WHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA)))) = 'Sunday' THEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA))))-1 ELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA))))  END\n                      END +1 AS SEMANA_MES,\n                      DATES2.SEMANA_ANO_FISCAL -\n                      CASE\n                      WHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL)))) = 'Sunday' THEN\n                      CASE WHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL)))) = 'Sunday' THEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL))))-1 ELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL)))) END +1\n                      ELSE\n                      CASE WHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL)))) = 'Sunday' THEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL))))-1 ELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL))))  END\n                      END +1 AS SEMANA_MES_FISCAL,\n                      ((DIA_ANOF+CASE WHEN DAYNAME(DATE( TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01')) ='Monday' THEN 0\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Tuesday' THEN 1\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Wednesday' THEN 2\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Thursday' THEN 3\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Friday' THEN 4\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Saturday' THEN 5\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Sunday' THEN 6  END -1)/7)+1 AS SEMANA_ANO_FISCAL\n                      ,CURRENT_TIMESTAMP\n                      FROM\n                      DATES2 AS DATES2\n                      ORDER BY FECHA ASC\nWITH UR;"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "FECHA_AUX"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>WITH DATES (FECHA) AS\n                      (\n                      SELECT\n                      DATE(TO_CHAR(YEAR(SYSDATE)+1) || '-01-31')\n                      FROM\n                      SYSIBM.SYSDUMMY1\n                      UNION ALL\n                      SELECT\n                      FECHA -1 DAY                     \n                      FROM\n                      DATES\n                      WHERE\n                      FECHA > DATE('2012-01-01')\n                      ),\n                      DATES2 (ID_FECHA, FECHA, FECHA_FISCAL, SEMANA_ANO, SEMANA_ANO_FISCAL,dia,DIA_ANOF, CURRENT_TIMESTAMP)  AS\n                      (\n                      SELECT\n                      TO_CHAR(FECHA, 'YYYYMMDD') AS ID_FECHA,\n                      FECHA,\n                      FECHA-1 MONTH AS FECHA_FISCAL,\n                      CASE\n                      WHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(FECHA)))) = 'Sunday' THEN\n                      CASE WHEN DAYNAME(FECHA) = 'Sunday' THEN WEEK(FECHA)-1 ELSE WEEK(FECHA) END +1\n                      ELSE\n                      CASE WHEN DAYNAME(FECHA) = 'Sunday' THEN WEEK(FECHA)-1 ELSE WEEK(FECHA)  END\n                      END AS SEMANA_ANO,\n                      CASE\n                      WHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(FECHA-1 MONTH)))) = 'Sunday' THEN\n                      CASE WHEN DAYNAME(FECHA-1 MONTH) = 'Sunday' THEN WEEK(FECHA-1 MONTH)-1 ELSE WEEK(FECHA-1 MONTH) END +1\n                      ELSE\n                      CASE WHEN DAYNAME(FECHA-1 MONTH) = 'Sunday' THEN WEEK(FECHA-1 MONTH)-1 ELSE WEEK(FECHA-1 MONTH)  END\n                      END AS SEMANA_ANO_FISCAL,\n                     DAYNAME(FECHA) AS dia\n                      ,  CASE WHEN MONTH(FECHA) = 1 THEN DAYOFYEAR(DATE(TO_CHAR(YEAR(FECHA)-1) ||'-12-31'))-31+DAY(FECHA) ELSE DAYOFYEAR(FECHA)-31 END AS DIA_ANOF,CURRENT_TIMESTAMP\n                      FROM DATES\n                      )\n                      SELECT\n                      DATES2.ID_FECHA,\n                      DATES2.FECHA,\n                      DATES2.FECHA_FISCAL,\n                      DATES2.SEMANA_ANO,\n                      DATES2.SEMANA_ANO -\n                      CASE\n                      WHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(DATES2.FECHA)))) = 'Sunday' THEN\n                      CASE WHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA)))) = 'Sunday' THEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA))))-1 ELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA)))) END +1\n                      ELSE\n                      CASE WHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA)))) = 'Sunday' THEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA))))-1 ELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA))))  END\n                      END +1 AS SEMANA_MES,\n                      DATES2.SEMANA_ANO_FISCAL -\n                      CASE\n                      WHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL)))) = 'Sunday' THEN\n                      CASE WHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL)))) = 'Sunday' THEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL))))-1 ELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL)))) END +1\n                      ELSE\n                      CASE WHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL)))) = 'Sunday' THEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL))))-1 ELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL))))  END\n                      END +1 AS SEMANA_MES_FISCAL,\n                      ((DIA_ANOF+CASE WHEN DAYNAME(DATE( TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01')) ='Monday' THEN 0\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Tuesday' THEN 1\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Wednesday' THEN 2\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Thursday' THEN 3\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Friday' THEN 4\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Saturday' THEN 5\n                              WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA -1 MONTH)) || '-02-01' )) ='Sunday' THEN 6  END -1)/7)+1 AS SEMANA_ANO_FISCAL\n                      ,CURRENT_TIMESTAMP\n                      FROM\n                      DATES2 AS DATES2\n                      ORDER BY FECHA ASC\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "AGRUPACION_BAJA",
        "columns": [
          {
            "name": "ID_AGRUPACION_BAJA",
            "dataType": "string",
            "sourceColumn": "ID_AGRUPACION_BAJA",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "GRUPO",
            "dataType": "string",
            "sourceColumn": "GRUPO",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SUB_GRUPO",
            "dataType": "string",
            "sourceColumn": "SUB_GRUPO",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "AGRUPACION_BAJA_M4",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SELECT \n                ER.ID_ORGANIZATION + '#' + ER.STD_ID_HRP_END_REA AS ID_AGRUPACION_BAJA,\n                C.CCL_TP_CARACTEESP AS GRUPO,\n                CV.CCL_TP_CARACTEESP AS SUB_GRUPO\n                FROM M4GLB_CLASIFICACION_END_REASON ER  WITH (NOLOCK) \n                LEFT JOIN M4GLB_END_REASON_CLASIF_VALOR CV WITH (NOLOCK) \n                ON ER.GLB_ID_CLASIFICACION = CV.GLB_ID_CLASIFICACION\n                AND ER.GLB_ID_TP_CLASIFICACION = CV.GLB_ID_TP_CLASIFICACION\n                LEFT JOIN M4GLB_END_REASON_CLASIFICACION C WITH (NOLOCK) \n                on  CV.GLB_ID_TP_CLASIFICACION = C.GLB_ID_TP_CLASIFICACION",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT \n                ER.ID_ORGANIZATION + '#' + ER.STD_ID_HRP_END_REA AS ID_AGRUPACION_BAJA,\n                C.CCL_TP_CARACTEESP AS GRUPO,\n                CV.CCL_TP_CARACTEESP AS SUB_GRUPO\n                FROM M4GLB_CLASIFICACION_END_REASON ER  WITH (NOLOCK) \n                LEFT JOIN M4GLB_END_REASON_CLASIF_VALOR CV WITH (NOLOCK) \n                ON ER.GLB_ID_CLASIFICACION = CV.GLB_ID_CLASIFICACION\n                AND ER.GLB_ID_TP_CLASIFICACION = CV.GLB_ID_TP_CLASIFICACION\n                LEFT JOIN M4GLB_END_REASON_CLASIFICACION C WITH (NOLOCK) \n                on  CV.GLB_ID_TP_CLASIFICACION = C.GLB_ID_TP_CLASIFICACION</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT \n                ER.ID_ORGANIZATION + '#' + ER.STD_ID_HRP_END_REA AS ID_AGRUPACION_BAJA,\n                C.CCL_TP_CARACTEESP AS GRUPO,\n                CV.CCL_TP_CARACTEESP AS SUB_GRUPO\n                FROM M4GLB_CLASIFICACION_END_REASON ER  WITH (NOLOCK) \n                LEFT JOIN M4GLB_END_REASON_CLASIF_VALOR CV WITH (NOLOCK) \n                ON ER.GLB_ID_CLASIFICACION = CV.GLB_ID_CLASIFICACION\n                AND ER.GLB_ID_TP_CLASIFICACION = CV.GLB_ID_TP_CLASIFICACION\n                LEFT JOIN M4GLB_END_REASON_CLASIFICACION C WITH (NOLOCK) \n                on  CV.GLB_ID_TP_CLASIFICACION = C.GLB_ID_TP_CLASIFICACION"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "AGRUPACION_BAJA_M4"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT \n                ER.ID_ORGANIZATION + '#' + ER.STD_ID_HRP_END_REA AS ID_AGRUPACION_BAJA,\n                C.CCL_TP_CARACTEESP AS GRUPO,\n                CV.CCL_TP_CARACTEESP AS SUB_GRUPO\n                FROM M4GLB_CLASIFICACION_END_REASON ER  WITH (NOLOCK) \n                LEFT JOIN M4GLB_END_REASON_CLASIF_VALOR CV WITH (NOLOCK) \n                ON ER.GLB_ID_CLASIFICACION = CV.GLB_ID_CLASIFICACION\n                AND ER.GLB_ID_TP_CLASIFICACION = CV.GLB_ID_TP_CLASIFICACION\n                LEFT JOIN M4GLB_END_REASON_CLASIFICACION C WITH (NOLOCK) \n                on  CV.GLB_ID_TP_CLASIFICACION = C.GLB_ID_TP_CLASIFICACION</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "DIM_HORA",
        "columns": [
          {
            "name": "ID_HORA_DESGLOSE",
            "dataType": "int64",
            "sourceColumn": "ID_HORA_DESGLOSE"
          },
          {
            "name": "HORA_DESGLOSE",
            "dataType": "string",
            "sourceColumn": "HORA_DESGLOSE"
          },
          {
            "name": "TURNO_DESGLOSE",
            "dataType": "string",
            "sourceColumn": "TURNO_DESGLOSE"
          },
          {
            "name": "ID_TURNO_DESGLOSE",
            "dataType": "string",
            "sourceColumn": "ID_TURNO_DESGLOSE"
          }
        ],
        "partitions": [
          {
            "name": "DIM_HORA",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SELECT 0 AS ID_HORA_DESGLOSE,'00:00' AS HORA_DESGLOSE, 'NOCHE' AS TURNO_DESGLOSE, '3' AS ID_TURNO_DESGLOSE\n                UNION ALL\n                SELECT 1, '01:00' , 'NOCHE' , '3'\n                UNION ALL\n                SELECT 2, '02:00', 'NOCHE' , '3' \n                UNION ALL\n                SELECT 3, '03:00', 'NOCHE' , '3' \n                UNION ALL\n                SELECT 4, '04:00', 'NOCHE' , '3' \n                UNION ALL\n                SELECT 5, '05:00', 'NOCHE' , '3' \n                UNION ALL\n                SELECT 6, '06:00', 'MAÑANA' , '1'\n                UNION ALL\n                SELECT 7, '07:00', 'MAÑANA', '1' \n                UNION ALL\n                SELECT 8, '08:00', 'MAÑANA', '1' \n                UNION ALL\n                SELECT 9, '09:00', 'MAÑANA', '1' \n                UNION ALL\n                SELECT 10, '10:00', 'MAÑANA', '1'\n                UNION ALL\n                SELECT 11, '11:00', 'MAÑANA', '1'\n                UNION ALL\n                SELECT 12, '12:00', 'MAÑANA', '1'\n                UNION ALL\n                SELECT 13, '13:00', 'MAÑANA', '1'\n                UNION ALL\n                SELECT 14, '14:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 15, '15:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 16, '16:00', 'TARDE', '2'\n                UNION ALL\n                SELECT 17, '17:00', 'TARDE', '2'\n                UNION ALL\n                SELECT 18, '18:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 19, '19:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 20, '20:00', 'TARDE', '2'\n                UNION ALL\n                SELECT 21, '21:00', 'TARDE', '2'\n                UNION ALL\n                SELECT 22, '22:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 23, '23:00', 'NOCHE', '3' \n                \n                ORDER BY ID_HORA_DESGLOSE",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT 0 AS ID_HORA_DESGLOSE,'00:00' AS HORA_DESGLOSE, 'NOCHE' AS TURNO_DESGLOSE, '3' AS ID_TURNO_DESGLOSE\n                UNION ALL\n                SELECT 1, '01:00' , 'NOCHE' , '3'\n                UNION ALL\n                SELECT 2, '02:00', 'NOCHE' , '3' \n                UNION ALL\n                SELECT 3, '03:00', 'NOCHE' , '3' \n                UNION ALL\n                SELECT 4, '04:00', 'NOCHE' , '3' \n                UNION ALL\n                SELECT 5, '05:00', 'NOCHE' , '3' \n                UNION ALL\n                SELECT 6, '06:00', 'MAÑANA' , '1'\n                UNION ALL\n                SELECT 7, '07:00', 'MAÑANA', '1' \n                UNION ALL\n                SELECT 8, '08:00', 'MAÑANA', '1' \n                UNION ALL\n                SELECT 9, '09:00', 'MAÑANA', '1' \n                UNION ALL\n                SELECT 10, '10:00', 'MAÑANA', '1'\n                UNION ALL\n                SELECT 11, '11:00', 'MAÑANA', '1'\n                UNION ALL\n                SELECT 12, '12:00', 'MAÑANA', '1'\n                UNION ALL\n                SELECT 13, '13:00', 'MAÑANA', '1'\n                UNION ALL\n                SELECT 14, '14:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 15, '15:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 16, '16:00', 'TARDE', '2'\n                UNION ALL\n                SELECT 17, '17:00', 'TARDE', '2'\n                UNION ALL\n                SELECT 18, '18:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 19, '19:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 20, '20:00', 'TARDE', '2'\n                UNION ALL\n                SELECT 21, '21:00', 'TARDE', '2'\n                UNION ALL\n                SELECT 22, '22:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 23, '23:00', 'NOCHE', '3' \n                \n                ORDER BY ID_HORA_DESGLOSE</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT 0 AS ID_HORA_DESGLOSE,'00:00' AS HORA_DESGLOSE, 'NOCHE' AS TURNO_DESGLOSE, '3' AS ID_TURNO_DESGLOSE\n                UNION ALL\n                SELECT 1, '01:00' , 'NOCHE' , '3'\n                UNION ALL\n                SELECT 2, '02:00', 'NOCHE' , '3' \n                UNION ALL\n                SELECT 3, '03:00', 'NOCHE' , '3' \n                UNION ALL\n                SELECT 4, '04:00', 'NOCHE' , '3' \n                UNION ALL\n                SELECT 5, '05:00', 'NOCHE' , '3' \n                UNION ALL\n                SELECT 6, '06:00', 'MAÑANA' , '1'\n                UNION ALL\n                SELECT 7, '07:00', 'MAÑANA', '1' \n                UNION ALL\n                SELECT 8, '08:00', 'MAÑANA', '1' \n                UNION ALL\n                SELECT 9, '09:00', 'MAÑANA', '1' \n                UNION ALL\n                SELECT 10, '10:00', 'MAÑANA', '1'\n                UNION ALL\n                SELECT 11, '11:00', 'MAÑANA', '1'\n                UNION ALL\n                SELECT 12, '12:00', 'MAÑANA', '1'\n                UNION ALL\n                SELECT 13, '13:00', 'MAÑANA', '1'\n                UNION ALL\n                SELECT 14, '14:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 15, '15:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 16, '16:00', 'TARDE', '2'\n                UNION ALL\n                SELECT 17, '17:00', 'TARDE', '2'\n                UNION ALL\n                SELECT 18, '18:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 19, '19:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 20, '20:00', 'TARDE', '2'\n                UNION ALL\n                SELECT 21, '21:00', 'TARDE', '2'\n                UNION ALL\n                SELECT 22, '22:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 23, '23:00', 'NOCHE', '3' \n                \n                ORDER BY ID_HORA_DESGLOSE"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DIM_HORA"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT 0 AS ID_HORA_DESGLOSE,'00:00' AS HORA_DESGLOSE, 'NOCHE' AS TURNO_DESGLOSE, '3' AS ID_TURNO_DESGLOSE\n                UNION ALL\n                SELECT 1, '01:00' , 'NOCHE' , '3'\n                UNION ALL\n                SELECT 2, '02:00', 'NOCHE' , '3' \n                UNION ALL\n                SELECT 3, '03:00', 'NOCHE' , '3' \n                UNION ALL\n                SELECT 4, '04:00', 'NOCHE' , '3' \n                UNION ALL\n                SELECT 5, '05:00', 'NOCHE' , '3' \n                UNION ALL\n                SELECT 6, '06:00', 'MAÑANA' , '1'\n                UNION ALL\n                SELECT 7, '07:00', 'MAÑANA', '1' \n                UNION ALL\n                SELECT 8, '08:00', 'MAÑANA', '1' \n                UNION ALL\n                SELECT 9, '09:00', 'MAÑANA', '1' \n                UNION ALL\n                SELECT 10, '10:00', 'MAÑANA', '1'\n                UNION ALL\n                SELECT 11, '11:00', 'MAÑANA', '1'\n                UNION ALL\n                SELECT 12, '12:00', 'MAÑANA', '1'\n                UNION ALL\n                SELECT 13, '13:00', 'MAÑANA', '1'\n                UNION ALL\n                SELECT 14, '14:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 15, '15:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 16, '16:00', 'TARDE', '2'\n                UNION ALL\n                SELECT 17, '17:00', 'TARDE', '2'\n                UNION ALL\n                SELECT 18, '18:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 19, '19:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 20, '20:00', 'TARDE', '2'\n                UNION ALL\n                SELECT 21, '21:00', 'TARDE', '2'\n                UNION ALL\n                SELECT 22, '22:00', 'TARDE', '2' \n                UNION ALL\n                SELECT 23, '23:00', 'NOCHE', '3' \n                \n                ORDER BY ID_HORA_DESGLOSE</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "TIPO_CONTRATACION",
        "columns": [
          {
            "name": "ID_TIPO_CONTRATACION",
            "dataType": "string",
            "sourceColumn": "ID_TIPO_CONTRATACION",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "TIPO_CONTRATACION",
            "dataType": "string",
            "sourceColumn": "TIPO_CONTRATACION",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "TIPO_CONTRATACION",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "select \n\tSSP_ID_TP_CONTRATACION AS ID_TIPO_CONTRATACION,\n\tSSP_NM_TP_CONTRATACIONESP AS TIPO_CONTRATACION\nFROM M4CCL_X_TP_CONTRATACION",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select \n\tSSP_ID_TP_CONTRATACION AS ID_TIPO_CONTRATACION,\n\tSSP_NM_TP_CONTRATACIONESP AS TIPO_CONTRATACION\nFROM M4CCL_X_TP_CONTRATACION</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select \n\tSSP_ID_TP_CONTRATACION AS ID_TIPO_CONTRATACION,\n\tSSP_NM_TP_CONTRATACIONESP AS TIPO_CONTRATACION\nFROM M4CCL_X_TP_CONTRATACION"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "TIPO_CONTRATACION"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select \n\tSSP_ID_TP_CONTRATACION AS ID_TIPO_CONTRATACION,\n\tSSP_NM_TP_CONTRATACIONESP AS TIPO_CONTRATACION\nFROM M4CCL_X_TP_CONTRATACION</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "FESTIVO",
        "columns": [
          {
            "name": "ID_TIPO_FESTIVO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_FESTIVO",
            "sourceProviderType": "Integer"
          },
          {
            "name": "TIPO_FESTIVO",
            "dataType": "string",
            "sourceColumn": "TIPO_FESTIVO",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ID_FESTIVO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_FESTIVO"
          },
          {
            "name": "FESTIVO",
            "dataType": "string",
            "sourceColumn": "FESTIVO"
          }
        ],
        "partitions": [
          {
            "name": "TIPO_FESTIVO",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SELECT 1 AS ID_FESTIVO,'Festivo' as FESTIVO,SCO_ID_DAYCALEN_TY as ID_TIPO_FESTIVO,SCO_DAYCALEN_TESP AS TIPO_FESTIVO\nFROM M4SCO_DAYCALEN_TP\nWHERE SCO_ID_DAYCALEN_TY NOT IN ('AP06','AP07')\nUNION\nSELECT 0 AS ID_FESTIVO,'No Festivo' as FESTIVO,'000' AS SCO_ID_DAYCALEN_TY,'No Festivo' as SCO_DAYCALEN_TESP\nORDER BY SCO_ID_DAYCALEN_TY",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT 1 AS ID_FESTIVO,'Festivo' as FESTIVO,SCO_ID_DAYCALEN_TY as ID_TIPO_FESTIVO,SCO_DAYCALEN_TESP AS TIPO_FESTIVO\nFROM M4SCO_DAYCALEN_TP\nWHERE SCO_ID_DAYCALEN_TY NOT IN ('AP06','AP07')\nUNION\nSELECT 0 AS ID_FESTIVO,'No Festivo' as FESTIVO,'000' AS SCO_ID_DAYCALEN_TY,'No Festivo' as SCO_DAYCALEN_TESP\nORDER BY SCO_ID_DAYCALEN_TY</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT 1 AS ID_FESTIVO,'Festivo' as FESTIVO,SCO_ID_DAYCALEN_TY as ID_TIPO_FESTIVO,SCO_DAYCALEN_TESP AS TIPO_FESTIVO\nFROM M4SCO_DAYCALEN_TP\nWHERE SCO_ID_DAYCALEN_TY NOT IN ('AP06','AP07')\nUNION\nSELECT 0 AS ID_FESTIVO,'No Festivo' as FESTIVO,'000' AS SCO_ID_DAYCALEN_TY,'No Festivo' as SCO_DAYCALEN_TESP\nORDER BY SCO_ID_DAYCALEN_TY"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "TIPO_FESTIVO"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT 1 AS ID_FESTIVO,'Festivo' as FESTIVO,SCO_ID_DAYCALEN_TY as ID_TIPO_FESTIVO,SCO_DAYCALEN_TESP AS TIPO_FESTIVO\nFROM M4SCO_DAYCALEN_TP\nWHERE SCO_ID_DAYCALEN_TY NOT IN ('AP06','AP07')\nUNION\nSELECT 0 AS ID_FESTIVO,'No Festivo' as FESTIVO,'000' AS SCO_ID_DAYCALEN_TY,'No Festivo' as SCO_DAYCALEN_TESP\nORDER BY SCO_ID_DAYCALEN_TY</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "FECHA_NATURAL_AUX",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_FECHA_NATURAL",
            "dataType": "string",
            "sourceColumn": "ID_FECHA_DESGLOSE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "FECHA_NATURAL",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_DESGLOSE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "FECHA_FISCAL_NATURAL",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_FISCAL_DESGLOSE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "SEMANA_ANO_NATURAL",
            "dataType": "int64",
            "sourceColumn": "SEMANA_ANO_DESGLOSE",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SEMANA_MES_FISCAL_NATURAL",
            "dataType": "int64",
            "sourceColumn": "SEMANA_MES_FISCAL_DESGLOSE",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SEMANA_ANO_FISCAL_NATURAL",
            "dataType": "int64",
            "sourceColumn": "SEMANA_ANO_FISCAL_DESGLOSE",
            "sourceProviderType": "Integer"
          },
          {
            "name": "8",
            "dataType": "dateTime",
            "sourceColumn": "8",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "SEMANA_MES_NATURAL",
            "dataType": "int64",
            "sourceColumn": "SEMANA_MES_DESGLOSE"
          }
        ],
        "partitions": [
          {
            "name": "FECHA_DESGLOSE_AUX",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "WITH DATES (FECHA_DESGLOSE) AS\n(\n\tSELECT DATE(TO_CHAR(YEAR(SYSDATE)+1) || '-01-31')\n\tFROM SYSIBM.SYSDUMMY1\n\tUNION ALL\n\tSELECT FECHA_DESGLOSE -1 DAY                     \n\tFROM DATES\n\tWHERE FECHA_DESGLOSE > DATE('2012-01-01')\n),\nDATES2 (ID_FECHA_DESGLOSE, FECHA_DESGLOSE, FECHA_FISCAL_DESGLOSE, SEMANA_ANO_DESGLOSE, SEMANA_ANO_FISCAL_DESGLOSE,dia_desglose,DIA_ANOF_DESGLOSE, CURRENT_TIMESTAMP)  AS\n(\n\tSELECT\n\t\tTO_CHAR(FECHA_DESGLOSE, 'YYYYMMDD') AS ID_FECHA_DESGLOSE,\n\t\tFECHA_DESGLOSE,\n\t\tFECHA_DESGLOSE-1 MONTH AS FECHA_FISCAL_DESGLOSE,\n\t\tCASE\n\t\t\tWHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(FECHA_DESGLOSE)))) = 'Sunday' \n\t\t\t\tTHEN CASE WHEN DAYNAME(FECHA_DESGLOSE) = 'Sunday' THEN WEEK(FECHA_DESGLOSE)-1 ELSE WEEK(FECHA_DESGLOSE) END +1\n\t\t\tELSE CASE WHEN DAYNAME(FECHA_DESGLOSE) = 'Sunday' THEN WEEK(FECHA_DESGLOSE)-1 ELSE WEEK(FECHA_DESGLOSE)  END\n\t\tEND AS SEMANA_ANO_DESGLOSE,\n\t\tCASE\n\t\t\tWHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(FECHA_DESGLOSE-1 MONTH)))) = 'Sunday' \n\t\t\t\tTHEN CASE WHEN DAYNAME(FECHA_DESGLOSE-1 MONTH) = 'Sunday' THEN WEEK(FECHA_DESGLOSE-1 MONTH)-1 ELSE WEEK(FECHA_DESGLOSE-1 MONTH) END +1\n\t\t\tELSE CASE WHEN DAYNAME(FECHA_DESGLOSE-1 MONTH) = 'Sunday' THEN WEEK(FECHA_DESGLOSE-1 MONTH)-1 ELSE WEEK(FECHA_DESGLOSE-1 MONTH)  END\n\t\tEND AS SEMANA_ANO_FISCAL_DESGLOSE,\n\t\tDAYNAME(FECHA_DESGLOSE) AS dia_desglose,\n\t\tCASE \n\t\t\tWHEN MONTH(FECHA_DESGLOSE) = 1 \n\t\t\t\tTHEN DAYOFYEAR(DATE(TO_CHAR(YEAR(FECHA_DESGLOSE)-1) ||'-12-31'))-31+DAY(FECHA_DESGLOSE) \n\t\t\tELSE DAYOFYEAR(FECHA_DESGLOSE)-31 \n\t\tEND AS DIA_ANOF_DESGLOSE,\n\t\tCURRENT_TIMESTAMP\n\tFROM DATES\n)\n  SELECT\n  DATES2.ID_FECHA_DESGLOSE,\n  DATES2.FECHA_DESGLOSE,\n  DATES2.FECHA_FISCAL_DESGLOSE,\n  DATES2.SEMANA_ANO_DESGLOSE,\n  DATES2.SEMANA_ANO_DESGLOSE -\n\tCASE\n\t\tWHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE)))) = 'Sunday' \n\t\t\tTHEN CASE \n\t\t\t\t\tWHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE)))) = 'Sunday' \n\t\t\t\t\t\tTHEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE))))-1 \n\t\t\t\t\tELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE)))) \n\t\t\t\t END +1\n\t\tELSE CASE \n\t\t\t\tWHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE)))) = 'Sunday' \n\t\t\t\t\tTHEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE))))-1 \n\t\t\t\tELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE))))  \n\t\t\t END\n\tEND +1 AS SEMANA_MES_DESGLOSE,\n  DATES2.SEMANA_ANO_FISCAL_DESGLOSE -\n\tCASE\n\t\tWHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE)))) = 'Sunday' \n\t\t\tTHEN CASE \n\t\t\t\t\tWHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE)))) = 'Sunday' \n\t\t\t\t\t\tTHEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE))))-1 \n\t\t\t\t\tELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE)))) \n\t\t\t\t END +1\n\t\tELSE CASE \n\t\t\t\tWHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE)))) = 'Sunday' \n\t\t\t\t\tTHEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE))))-1 \n\t\t\t\tELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE))))  \n\t\t\t END\n\tEND +1 AS SEMANA_MES_FISCAL_DESGLOSE,\n  ((DIA_ANOF_DESGLOSE+CASE WHEN DAYNAME(DATE( TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01')) ='Monday' THEN 0\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Tuesday' THEN 1\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Wednesday' THEN 2\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Thursday' THEN 3\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Friday' THEN 4\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Saturday' THEN 5\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Sunday' THEN 6  END -1)/7)+1 AS SEMANA_ANO_FISCAL_DESGLOSE\n  ,CURRENT_TIMESTAMP\n  FROM\n  DATES2 AS DATES2\n  ORDER BY FECHA_DESGLOSE ASC\nWITH UR;",
              "dataSource": "AXINDB26V1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>WITH DATES (FECHA_DESGLOSE) AS\n(\n\tSELECT DATE(TO_CHAR(YEAR(SYSDATE)+1) || '-01-31')\n\tFROM SYSIBM.SYSDUMMY1\n\tUNION ALL\n\tSELECT FECHA_DESGLOSE -1 DAY                     \n\tFROM DATES\n\tWHERE FECHA_DESGLOSE > DATE('2012-01-01')\n),\nDATES2 (ID_FECHA_DESGLOSE, FECHA_DESGLOSE, FECHA_FISCAL_DESGLOSE, SEMANA_ANO_DESGLOSE, SEMANA_ANO_FISCAL_DESGLOSE,dia_desglose,DIA_ANOF_DESGLOSE, CURRENT_TIMESTAMP)  AS\n(\n\tSELECT\n\t\tTO_CHAR(FECHA_DESGLOSE, 'YYYYMMDD') AS ID_FECHA_DESGLOSE,\n\t\tFECHA_DESGLOSE,\n\t\tFECHA_DESGLOSE-1 MONTH AS FECHA_FISCAL_DESGLOSE,\n\t\tCASE\n\t\t\tWHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(FECHA_DESGLOSE)))) = 'Sunday' \n\t\t\t\tTHEN CASE WHEN DAYNAME(FECHA_DESGLOSE) = 'Sunday' THEN WEEK(FECHA_DESGLOSE)-1 ELSE WEEK(FECHA_DESGLOSE) END +1\n\t\t\tELSE CASE WHEN DAYNAME(FECHA_DESGLOSE) = 'Sunday' THEN WEEK(FECHA_DESGLOSE)-1 ELSE WEEK(FECHA_DESGLOSE)  END\n\t\tEND AS SEMANA_ANO_DESGLOSE,\n\t\tCASE\n\t\t\tWHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(FECHA_DESGLOSE-1 MONTH)))) = 'Sunday' \n\t\t\t\tTHEN CASE WHEN DAYNAME(FECHA_DESGLOSE-1 MONTH) = 'Sunday' THEN WEEK(FECHA_DESGLOSE-1 MONTH)-1 ELSE WEEK(FECHA_DESGLOSE-1 MONTH) END +1\n\t\t\tELSE CASE WHEN DAYNAME(FECHA_DESGLOSE-1 MONTH) = 'Sunday' THEN WEEK(FECHA_DESGLOSE-1 MONTH)-1 ELSE WEEK(FECHA_DESGLOSE-1 MONTH)  END\n\t\tEND AS SEMANA_ANO_FISCAL_DESGLOSE,\n\t\tDAYNAME(FECHA_DESGLOSE) AS dia_desglose,\n\t\tCASE \n\t\t\tWHEN MONTH(FECHA_DESGLOSE) = 1 \n\t\t\t\tTHEN DAYOFYEAR(DATE(TO_CHAR(YEAR(FECHA_DESGLOSE)-1) ||'-12-31'))-31+DAY(FECHA_DESGLOSE) \n\t\t\tELSE DAYOFYEAR(FECHA_DESGLOSE)-31 \n\t\tEND AS DIA_ANOF_DESGLOSE,\n\t\tCURRENT_TIMESTAMP\n\tFROM DATES\n)\n  SELECT\n  DATES2.ID_FECHA_DESGLOSE,\n  DATES2.FECHA_DESGLOSE,\n  DATES2.FECHA_FISCAL_DESGLOSE,\n  DATES2.SEMANA_ANO_DESGLOSE,\n  DATES2.SEMANA_ANO_DESGLOSE -\n\tCASE\n\t\tWHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE)))) = 'Sunday' \n\t\t\tTHEN CASE \n\t\t\t\t\tWHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE)))) = 'Sunday' \n\t\t\t\t\t\tTHEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE))))-1 \n\t\t\t\t\tELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE)))) \n\t\t\t\t END +1\n\t\tELSE CASE \n\t\t\t\tWHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE)))) = 'Sunday' \n\t\t\t\t\tTHEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE))))-1 \n\t\t\t\tELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE))))  \n\t\t\t END\n\tEND +1 AS SEMANA_MES_DESGLOSE,\n  DATES2.SEMANA_ANO_FISCAL_DESGLOSE -\n\tCASE\n\t\tWHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE)))) = 'Sunday' \n\t\t\tTHEN CASE \n\t\t\t\t\tWHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE)))) = 'Sunday' \n\t\t\t\t\t\tTHEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE))))-1 \n\t\t\t\t\tELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE)))) \n\t\t\t\t END +1\n\t\tELSE CASE \n\t\t\t\tWHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE)))) = 'Sunday' \n\t\t\t\t\tTHEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE))))-1 \n\t\t\t\tELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE))))  \n\t\t\t END\n\tEND +1 AS SEMANA_MES_FISCAL_DESGLOSE,\n  ((DIA_ANOF_DESGLOSE+CASE WHEN DAYNAME(DATE( TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01')) ='Monday' THEN 0\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Tuesday' THEN 1\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Wednesday' THEN 2\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Thursday' THEN 3\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Friday' THEN 4\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Saturday' THEN 5\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Sunday' THEN 6  END -1)/7)+1 AS SEMANA_ANO_FISCAL_DESGLOSE\n  ,CURRENT_TIMESTAMP\n  FROM\n  DATES2 AS DATES2\n  ORDER BY FECHA_DESGLOSE ASC\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "WITH DATES (FECHA_DESGLOSE) AS\n(\n\tSELECT DATE(TO_CHAR(YEAR(SYSDATE)+1) || '-01-31')\n\tFROM SYSIBM.SYSDUMMY1\n\tUNION ALL\n\tSELECT FECHA_DESGLOSE -1 DAY                     \n\tFROM DATES\n\tWHERE FECHA_DESGLOSE > DATE('2012-01-01')\n),\nDATES2 (ID_FECHA_DESGLOSE, FECHA_DESGLOSE, FECHA_FISCAL_DESGLOSE, SEMANA_ANO_DESGLOSE, SEMANA_ANO_FISCAL_DESGLOSE,dia_desglose,DIA_ANOF_DESGLOSE, CURRENT_TIMESTAMP)  AS\n(\n\tSELECT\n\t\tTO_CHAR(FECHA_DESGLOSE, 'YYYYMMDD') AS ID_FECHA_DESGLOSE,\n\t\tFECHA_DESGLOSE,\n\t\tFECHA_DESGLOSE-1 MONTH AS FECHA_FISCAL_DESGLOSE,\n\t\tCASE\n\t\t\tWHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(FECHA_DESGLOSE)))) = 'Sunday' \n\t\t\t\tTHEN CASE WHEN DAYNAME(FECHA_DESGLOSE) = 'Sunday' THEN WEEK(FECHA_DESGLOSE)-1 ELSE WEEK(FECHA_DESGLOSE) END +1\n\t\t\tELSE CASE WHEN DAYNAME(FECHA_DESGLOSE) = 'Sunday' THEN WEEK(FECHA_DESGLOSE)-1 ELSE WEEK(FECHA_DESGLOSE)  END\n\t\tEND AS SEMANA_ANO_DESGLOSE,\n\t\tCASE\n\t\t\tWHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(FECHA_DESGLOSE-1 MONTH)))) = 'Sunday' \n\t\t\t\tTHEN CASE WHEN DAYNAME(FECHA_DESGLOSE-1 MONTH) = 'Sunday' THEN WEEK(FECHA_DESGLOSE-1 MONTH)-1 ELSE WEEK(FECHA_DESGLOSE-1 MONTH) END +1\n\t\t\tELSE CASE WHEN DAYNAME(FECHA_DESGLOSE-1 MONTH) = 'Sunday' THEN WEEK(FECHA_DESGLOSE-1 MONTH)-1 ELSE WEEK(FECHA_DESGLOSE-1 MONTH)  END\n\t\tEND AS SEMANA_ANO_FISCAL_DESGLOSE,\n\t\tDAYNAME(FECHA_DESGLOSE) AS dia_desglose,\n\t\tCASE \n\t\t\tWHEN MONTH(FECHA_DESGLOSE) = 1 \n\t\t\t\tTHEN DAYOFYEAR(DATE(TO_CHAR(YEAR(FECHA_DESGLOSE)-1) ||'-12-31'))-31+DAY(FECHA_DESGLOSE) \n\t\t\tELSE DAYOFYEAR(FECHA_DESGLOSE)-31 \n\t\tEND AS DIA_ANOF_DESGLOSE,\n\t\tCURRENT_TIMESTAMP\n\tFROM DATES\n)\n  SELECT\n  DATES2.ID_FECHA_DESGLOSE,\n  DATES2.FECHA_DESGLOSE,\n  DATES2.FECHA_FISCAL_DESGLOSE,\n  DATES2.SEMANA_ANO_DESGLOSE,\n  DATES2.SEMANA_ANO_DESGLOSE -\n\tCASE\n\t\tWHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE)))) = 'Sunday' \n\t\t\tTHEN CASE \n\t\t\t\t\tWHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE)))) = 'Sunday' \n\t\t\t\t\t\tTHEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE))))-1 \n\t\t\t\t\tELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE)))) \n\t\t\t\t END +1\n\t\tELSE CASE \n\t\t\t\tWHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE)))) = 'Sunday' \n\t\t\t\t\tTHEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE))))-1 \n\t\t\t\tELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE))))  \n\t\t\t END\n\tEND +1 AS SEMANA_MES_DESGLOSE,\n  DATES2.SEMANA_ANO_FISCAL_DESGLOSE -\n\tCASE\n\t\tWHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE)))) = 'Sunday' \n\t\t\tTHEN CASE \n\t\t\t\t\tWHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE)))) = 'Sunday' \n\t\t\t\t\t\tTHEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE))))-1 \n\t\t\t\t\tELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE)))) \n\t\t\t\t END +1\n\t\tELSE CASE \n\t\t\t\tWHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE)))) = 'Sunday' \n\t\t\t\t\tTHEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE))))-1 \n\t\t\t\tELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE))))  \n\t\t\t END\n\tEND +1 AS SEMANA_MES_FISCAL_DESGLOSE,\n  ((DIA_ANOF_DESGLOSE+CASE WHEN DAYNAME(DATE( TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01')) ='Monday' THEN 0\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Tuesday' THEN 1\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Wednesday' THEN 2\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Thursday' THEN 3\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Friday' THEN 4\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Saturday' THEN 5\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Sunday' THEN 6  END -1)/7)+1 AS SEMANA_ANO_FISCAL_DESGLOSE\n  ,CURRENT_TIMESTAMP\n  FROM\n  DATES2 AS DATES2\n  ORDER BY FECHA_DESGLOSE ASC\nWITH UR;"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "FECHA_DESGLOSE_AUX"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>WITH DATES (FECHA_DESGLOSE) AS\n(\n\tSELECT DATE(TO_CHAR(YEAR(SYSDATE)+1) || '-01-31')\n\tFROM SYSIBM.SYSDUMMY1\n\tUNION ALL\n\tSELECT FECHA_DESGLOSE -1 DAY                     \n\tFROM DATES\n\tWHERE FECHA_DESGLOSE > DATE('2012-01-01')\n),\nDATES2 (ID_FECHA_DESGLOSE, FECHA_DESGLOSE, FECHA_FISCAL_DESGLOSE, SEMANA_ANO_DESGLOSE, SEMANA_ANO_FISCAL_DESGLOSE,dia_desglose,DIA_ANOF_DESGLOSE, CURRENT_TIMESTAMP)  AS\n(\n\tSELECT\n\t\tTO_CHAR(FECHA_DESGLOSE, 'YYYYMMDD') AS ID_FECHA_DESGLOSE,\n\t\tFECHA_DESGLOSE,\n\t\tFECHA_DESGLOSE-1 MONTH AS FECHA_FISCAL_DESGLOSE,\n\t\tCASE\n\t\t\tWHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(FECHA_DESGLOSE)))) = 'Sunday' \n\t\t\t\tTHEN CASE WHEN DAYNAME(FECHA_DESGLOSE) = 'Sunday' THEN WEEK(FECHA_DESGLOSE)-1 ELSE WEEK(FECHA_DESGLOSE) END +1\n\t\t\tELSE CASE WHEN DAYNAME(FECHA_DESGLOSE) = 'Sunday' THEN WEEK(FECHA_DESGLOSE)-1 ELSE WEEK(FECHA_DESGLOSE)  END\n\t\tEND AS SEMANA_ANO_DESGLOSE,\n\t\tCASE\n\t\t\tWHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(FECHA_DESGLOSE-1 MONTH)))) = 'Sunday' \n\t\t\t\tTHEN CASE WHEN DAYNAME(FECHA_DESGLOSE-1 MONTH) = 'Sunday' THEN WEEK(FECHA_DESGLOSE-1 MONTH)-1 ELSE WEEK(FECHA_DESGLOSE-1 MONTH) END +1\n\t\t\tELSE CASE WHEN DAYNAME(FECHA_DESGLOSE-1 MONTH) = 'Sunday' THEN WEEK(FECHA_DESGLOSE-1 MONTH)-1 ELSE WEEK(FECHA_DESGLOSE-1 MONTH)  END\n\t\tEND AS SEMANA_ANO_FISCAL_DESGLOSE,\n\t\tDAYNAME(FECHA_DESGLOSE) AS dia_desglose,\n\t\tCASE \n\t\t\tWHEN MONTH(FECHA_DESGLOSE) = 1 \n\t\t\t\tTHEN DAYOFYEAR(DATE(TO_CHAR(YEAR(FECHA_DESGLOSE)-1) ||'-12-31'))-31+DAY(FECHA_DESGLOSE) \n\t\t\tELSE DAYOFYEAR(FECHA_DESGLOSE)-31 \n\t\tEND AS DIA_ANOF_DESGLOSE,\n\t\tCURRENT_TIMESTAMP\n\tFROM DATES\n)\n  SELECT\n  DATES2.ID_FECHA_DESGLOSE,\n  DATES2.FECHA_DESGLOSE,\n  DATES2.FECHA_FISCAL_DESGLOSE,\n  DATES2.SEMANA_ANO_DESGLOSE,\n  DATES2.SEMANA_ANO_DESGLOSE -\n\tCASE\n\t\tWHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE)))) = 'Sunday' \n\t\t\tTHEN CASE \n\t\t\t\t\tWHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE)))) = 'Sunday' \n\t\t\t\t\t\tTHEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE))))-1 \n\t\t\t\t\tELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE)))) \n\t\t\t\t END +1\n\t\tELSE CASE \n\t\t\t\tWHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE)))) = 'Sunday' \n\t\t\t\t\tTHEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE))))-1 \n\t\t\t\tELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE))))  \n\t\t\t END\n\tEND +1 AS SEMANA_MES_DESGLOSE,\n  DATES2.SEMANA_ANO_FISCAL_DESGLOSE -\n\tCASE\n\t\tWHEN DAYNAME(DATE('01/01/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE)))) = 'Sunday' \n\t\t\tTHEN CASE \n\t\t\t\t\tWHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE)))) = 'Sunday' \n\t\t\t\t\t\tTHEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE))))-1 \n\t\t\t\t\tELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE)))) \n\t\t\t\t END +1\n\t\tELSE CASE \n\t\t\t\tWHEN DAYNAME(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE)))) = 'Sunday' \n\t\t\t\t\tTHEN WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE))))-1 \n\t\t\t\tELSE WEEK(DATE('01/'|| TO_CHAR(MONTH(DATES2.FECHA_FISCAL_DESGLOSE)) ||'/' || TO_CHAR(YEAR(DATES2.FECHA_FISCAL_DESGLOSE))))  \n\t\t\t END\n\tEND +1 AS SEMANA_MES_FISCAL_DESGLOSE,\n  ((DIA_ANOF_DESGLOSE+CASE WHEN DAYNAME(DATE( TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01')) ='Monday' THEN 0\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Tuesday' THEN 1\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Wednesday' THEN 2\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Thursday' THEN 3\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Friday' THEN 4\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Saturday' THEN 5\n\t\t  WHEN DAYNAME(DATE(TO_CHAR(YEAR(DATES2.FECHA_DESGLOSE -1 MONTH)) || '-02-01' )) ='Sunday' THEN 6  END -1)/7)+1 AS SEMANA_ANO_FISCAL_DESGLOSE\n  ,CURRENT_TIMESTAMP\n  FROM\n  DATES2 AS DATES2\n  ORDER BY FECHA_DESGLOSE ASC\nWITH UR;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "EQUIPO_ORGANIZATIVO",
        "columns": [
          {
            "name": "ID_EMPRESA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMPRESA"
          },
          {
            "name": "ID_EQ_ORG",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_EQ_ORG"
          },
          {
            "name": "ID_EQUIPO_ORGANIZATIVO",
            "dataType": "string",
            "sourceColumn": "ID_EQUIPO_ORGANIZATIVO"
          },
          {
            "name": "EQUIPO_ORGANIZATIVO",
            "dataType": "string",
            "sourceColumn": "EQUIPO_ORGANIZATIVO"
          }
        ],
        "partitions": [
          {
            "name": "AGRUPACION_OPERATIVA",
            "source": {
              "type": "query",
              "query": "SELECT \nAGOP.GLB_ID_AGRUP_OP + '#' + AGOP.GLB_ID_LEGENT AS ID_EQ_ORG\n, AGOP.GLB_ID_AGRUP_OP AS ID_EQUIPO_ORGANIZATIVO\n, AGOP.GLB_NM_AGRUP_OESP AS EQUIPO_ORGANIZATIVO\n, AGOP.GLB_ID_LEGENT AS ID_EMPRESA\n\nFROM M4CCL_H_GA_EM_EQUI AS EMPRESA_EQUIPO_AGOP  WITH (NOLOCK) \nINNER JOIN M4GLB_GA_AGRUP_OPER AS AGOP  WITH (NOLOCK) \nON EMPRESA_EQUIPO_AGOP.ID_ORGANIZATION = AGOP.ID_ORGANIZATION\nAND EMPRESA_EQUIPO_AGOP.CCL_ID_LEG_ENT = AGOP.GLB_ID_LEGENT\nAND EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP = AGOP.GLB_ID_AGRUP_OP\nAND EMPRESA_EQUIPO_AGOP.CCL_DT_START <= AGOP.GLB_FEC_FIN\nAND EMPRESA_EQUIPO_AGOP.CCL_DT_END >= AGOP.GLB_FEC_INICIO\nGROUP BY AGOP.GLB_ID_AGRUP_OP\n, AGOP.GLB_NM_AGRUP_OESP\n, AGOP.GLB_ID_LEGENT\n\nUNION ALL\nSELECT '-1', '-1', 'DESCONOCIDA', -1",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT \nAGOP.GLB_ID_AGRUP_OP + '#' + AGOP.GLB_ID_LEGENT AS ID_EQ_ORG\n, AGOP.GLB_ID_AGRUP_OP AS ID_EQUIPO_ORGANIZATIVO\n, AGOP.GLB_NM_AGRUP_OESP AS EQUIPO_ORGANIZATIVO\n, AGOP.GLB_ID_LEGENT AS ID_EMPRESA\n\nFROM M4CCL_H_GA_EM_EQUI AS EMPRESA_EQUIPO_AGOP  WITH (NOLOCK) \nINNER JOIN M4GLB_GA_AGRUP_OPER AS AGOP  WITH (NOLOCK) \nON EMPRESA_EQUIPO_AGOP.ID_ORGANIZATION = AGOP.ID_ORGANIZATION\nAND EMPRESA_EQUIPO_AGOP.CCL_ID_LEG_ENT = AGOP.GLB_ID_LEGENT\nAND EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP = AGOP.GLB_ID_AGRUP_OP\nAND EMPRESA_EQUIPO_AGOP.CCL_DT_START <= AGOP.GLB_FEC_FIN\nAND EMPRESA_EQUIPO_AGOP.CCL_DT_END >= AGOP.GLB_FEC_INICIO\nGROUP BY AGOP.GLB_ID_AGRUP_OP\n, AGOP.GLB_NM_AGRUP_OESP\n, AGOP.GLB_ID_LEGENT\n\nUNION ALL\nSELECT '-1', '-1', 'DESCONOCIDA', -1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT \nAGOP.GLB_ID_AGRUP_OP + '#' + AGOP.GLB_ID_LEGENT AS ID_EQ_ORG\n, AGOP.GLB_ID_AGRUP_OP AS ID_EQUIPO_ORGANIZATIVO\n, AGOP.GLB_NM_AGRUP_OESP AS EQUIPO_ORGANIZATIVO\n, AGOP.GLB_ID_LEGENT AS ID_EMPRESA\n\nFROM M4CCL_H_GA_EM_EQUI AS EMPRESA_EQUIPO_AGOP  WITH (NOLOCK) \nINNER JOIN M4GLB_GA_AGRUP_OPER AS AGOP  WITH (NOLOCK) \nON EMPRESA_EQUIPO_AGOP.ID_ORGANIZATION = AGOP.ID_ORGANIZATION\nAND EMPRESA_EQUIPO_AGOP.CCL_ID_LEG_ENT = AGOP.GLB_ID_LEGENT\nAND EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP = AGOP.GLB_ID_AGRUP_OP\nAND EMPRESA_EQUIPO_AGOP.CCL_DT_START <= AGOP.GLB_FEC_FIN\nAND EMPRESA_EQUIPO_AGOP.CCL_DT_END >= AGOP.GLB_FEC_INICIO\nGROUP BY AGOP.GLB_ID_AGRUP_OP\n, AGOP.GLB_NM_AGRUP_OESP\n, AGOP.GLB_ID_LEGENT\n\nUNION ALL\nSELECT '-1', '-1', 'DESCONOCIDA', -1"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT \nAGOP.GLB_ID_AGRUP_OP + '#' + AGOP.GLB_ID_LEGENT AS ID_EQ_ORG\n, AGOP.GLB_ID_AGRUP_OP AS ID_EQUIPO_ORGANIZATIVO\n, AGOP.GLB_NM_AGRUP_OESP AS EQUIPO_ORGANIZATIVO\n, AGOP.GLB_ID_LEGENT AS ID_EMPRESA\n\nFROM M4CCL_H_GA_EM_EQUI AS EMPRESA_EQUIPO_AGOP  WITH (NOLOCK) \nINNER JOIN M4GLB_GA_AGRUP_OPER AS AGOP  WITH (NOLOCK) \nON EMPRESA_EQUIPO_AGOP.ID_ORGANIZATION = AGOP.ID_ORGANIZATION\nAND EMPRESA_EQUIPO_AGOP.CCL_ID_LEG_ENT = AGOP.GLB_ID_LEGENT\nAND EMPRESA_EQUIPO_AGOP.GLB_ID_AGRUP_OP = AGOP.GLB_ID_AGRUP_OP\nAND EMPRESA_EQUIPO_AGOP.CCL_DT_START <= AGOP.GLB_FEC_FIN\nAND EMPRESA_EQUIPO_AGOP.CCL_DT_END >= AGOP.GLB_FEC_INICIO\nGROUP BY AGOP.GLB_ID_AGRUP_OP\n, AGOP.GLB_NM_AGRUP_OESP\n, AGOP.GLB_ID_LEGENT\n\nUNION ALL\nSELECT '-1', '-1', 'DESCONOCIDA', -1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "AGRUPACION_OPERATIVA",
        "columns": [
          {
            "name": "ID_AGRUPACION_OPERATIVA",
            "dataType": "string",
            "sourceColumn": "ID_AGRUPACION_OPERATIVA"
          },
          {
            "name": "AGRUPACION_OPERATIVA",
            "dataType": "string",
            "sourceColumn": "AGRUPACION_OPERATIVA"
          }
        ],
        "partitions": [
          {
            "name": "AGRUPACION_OPERATIVA",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SELECT DISTINCT \n\tC.CCL_ID_CARACTERISTICA AS ID_AGRUPACION_OPERATIVA\n\t, D.CCL_TP_CARACTEESP AS AGRUPACION_OPERATIVA\nFROM M4CCL_TASKS_L_CARACT C\nLEFT JOIN M4CCL_TASK_CARACTERISTICA_VAL D \n\tON D.CCL_ID_TP_CARACTERISTICA = C.CCL_ID_TP_CARACTERISTICA \n\tAND C.CCL_ID_CARACTERISTICA = D.CCL_ID_CARACTERISTICA\nWHERE C.CCL_ID_TP_CARACTERISTICA = 'AO'",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT DISTINCT \n\tC.CCL_ID_CARACTERISTICA AS ID_AGRUPACION_OPERATIVA\n\t, D.CCL_TP_CARACTEESP AS AGRUPACION_OPERATIVA\nFROM M4CCL_TASKS_L_CARACT C\nLEFT JOIN M4CCL_TASK_CARACTERISTICA_VAL D \n\tON D.CCL_ID_TP_CARACTERISTICA = C.CCL_ID_TP_CARACTERISTICA \n\tAND C.CCL_ID_CARACTERISTICA = D.CCL_ID_CARACTERISTICA\nWHERE C.CCL_ID_TP_CARACTERISTICA = 'AO'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT DISTINCT \n\tC.CCL_ID_CARACTERISTICA AS ID_AGRUPACION_OPERATIVA\n\t, D.CCL_TP_CARACTEESP AS AGRUPACION_OPERATIVA\nFROM M4CCL_TASKS_L_CARACT C\nLEFT JOIN M4CCL_TASK_CARACTERISTICA_VAL D \n\tON D.CCL_ID_TP_CARACTERISTICA = C.CCL_ID_TP_CARACTERISTICA \n\tAND C.CCL_ID_CARACTERISTICA = D.CCL_ID_CARACTERISTICA\nWHERE C.CCL_ID_TP_CARACTERISTICA = 'AO'"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "AGRUPACION_OPERATIVA"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT DISTINCT \n\tC.CCL_ID_CARACTERISTICA AS ID_AGRUPACION_OPERATIVA\n\t, D.CCL_TP_CARACTEESP AS AGRUPACION_OPERATIVA\nFROM M4CCL_TASKS_L_CARACT C\nLEFT JOIN M4CCL_TASK_CARACTERISTICA_VAL D \n\tON D.CCL_ID_TP_CARACTERISTICA = C.CCL_ID_TP_CARACTERISTICA \n\tAND C.CCL_ID_CARACTERISTICA = D.CCL_ID_CARACTERISTICA\nWHERE C.CCL_ID_TP_CARACTERISTICA = 'AO'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "FECHA_NATURAL",
        "columns": [
          {
            "name": "ID_FECHA_NATURAL",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_FECHA_DESGLOSE",
            "sourceProviderType": "Integer"
          },
          {
            "name": "FECHA_NATURAL",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_DESGLOSE",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "FECHA_NATURAL_HOY",
            "dataType": "string",
            "sourceColumn": "FECHA_DESGLOSE_HOY",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ANO_NATURAL",
            "dataType": "int64",
            "sourceColumn": "ANO_DESGLOSE",
            "sourceProviderType": "Integer"
          },
          {
            "name": "MES_NATURAL_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MES_DESGLOSE_ORDEN",
            "sourceProviderType": "Integer"
          },
          {
            "name": "DIA_NATURAL_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DIA_DESGLOSE_ORDEN",
            "sourceProviderType": "Integer"
          },
          {
            "name": "NOMBRE_MES_NATURAL",
            "dataType": "string",
            "sourceColumn": "NOMBRE_MES_DESGLOSE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "NOMBRE_MES_FISCAL_NATURAL",
            "dataType": "string",
            "sourceColumn": "NOMBRE_MES_FISCAL_DESGLOSE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "NOMBRE_DIA_NATURAL",
            "dataType": "string",
            "sourceColumn": "NOMBRE_DIA_DESGLOSE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "TRIMESTRE_NATURAL",
            "dataType": "string",
            "sourceColumn": "TRIMESTRE_DESGLOSE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ANO_FISCAL_NATURAL",
            "dataType": "int64",
            "sourceColumn": "ANO_FISCAL_DESGLOSE",
            "sourceProviderType": "Integer"
          },
          {
            "name": "MES_FISCAL_NATURAL_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MES_FISCAL_DESGLOSE_ORDEN",
            "sourceProviderType": "Integer"
          },
          {
            "name": "TRIMESTRE_FISCAL_NATURAL",
            "dataType": "string",
            "sourceColumn": "TRIMESTRE_FISCAL_DESGLOSE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "NUM_DIA_SEMANA_NATURAL",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "NUM_DIA_SEMANA_DESGLOSE",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SEMANA_ANO_NATURAL_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SEMANA_ANO_DESGLOSE_ORDEN",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SEMANA_MES_NATURAL_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SEMANA_MES_DESGLOSE_ORDEN",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SEMANA_ANO_FISCAL_NATURAL_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SEMANA_ANO_FISCAL_DESGLOSE_ORDEN",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SEMANA_MES_FISCAL_NATURAL_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SEMANA_MES_FISCAL_DESGLOSE_ORDEN",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SEMANA_ISO_NATURAL_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SEMANA_ISO_DESGLOSE_ORDEN",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SEMANA_ISO_FISCAL_NATURAL_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SEMANA_ISO_FISCAL_DESGLOSE_ORDEN",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SEMANA_ISO_SABADO_NATURAL_ORDEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SEMANA_ISO_SABADO_DESGLOSE_ORDEN",
            "sourceProviderType": "Integer"
          },
          {
            "type": "calculated",
            "name": "DIA_NATURAL",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " [DIA_NATURAL_ORDEN]"
          },
          {
            "type": "calculated",
            "name": "FECHA_UPDATE_TABULAR",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": " NOW()"
          },
          {
            "type": "calculated",
            "name": "MES_NATURAL",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "[MES_NATURAL_ORDEN]"
          },
          {
            "type": "calculated",
            "name": "MES_FISCAL_NATURAL",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "[MES_FISCAL_NATURAL_ORDEN]"
          },
          {
            "type": "calculated",
            "name": "SEMANA_ANO_NATURAL",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " RELATED(FECHA_NATURAL_AUX[SEMANA_ANO_NATURAL])"
          },
          {
            "type": "calculated",
            "name": "SEMANA_ANO_FISCAL_NATURAL",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "RELATED(FECHA_NATURAL_AUX[SEMANA_ANO_FISCAL_NATURAL])"
          },
          {
            "type": "calculated",
            "name": "SEMANA_ISO_NATURAL",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "[SEMANA_ISO_NATURAL_ORDEN]"
          },
          {
            "type": "calculated",
            "name": "SEMANA_ISO_FISCAL_NATURAL",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "[SEMANA_ISO_FISCAL_NATURAL_ORDEN]"
          },
          {
            "type": "calculated",
            "name": "SEMANA_ISO_SABADO_NATURAL",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "[SEMANA_ISO_SABADO_NATURAL_ORDEN]"
          },
          {
            "type": "calculated",
            "name": "SEMANA_MES_NATURAL",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "RELATED(FECHA_NATURAL_AUX[SEMANA_MES_NATURAL])"
          },
          {
            "type": "calculated",
            "name": "SEMANA_MES_FISCAL_NATURAL",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "RELATED(FECHA_NATURAL_AUX[SEMANA_MES_FISCAL_NATURAL])"
          }
        ],
        "partitions": [
          {
            "name": "FECHA_DESGLOSE",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SET DATEFIRST 1;\nSET LANGUAGE Spanish;\n\nWITH DATES (FECHA_DESGLOSE) AS \n(\n    SELECT CAST(STR(YEAR(GETDATE())+2) + '-01-31'  AS DATE)\nUNION ALL\n    SELECT \n            DATEADD(DAY,-1,FECHA_DESGLOSE)\n    FROM\n            DATES \n    WHERE \n            FECHA_DESGLOSE > CAST('2013-01-01' AS DATE)\n)\n\nSELECT\n       ID_FECHA_DESGLOSE\n       , FECHA_DESGLOSE\n\t   ,CASE WHEN CAST(FECHA_DESGLOSE AS DATE)= CONVERT(date, GETDATE()) THEN 'Hoy' ELSE CAST(FECHA_DESGLOSE AS VARCHAR) END AS FECHA_DESGLOSE_HOY\n       , ANO_DESGLOSE\n       , MES_DESGLOSE_ORDEN\n       , DIA_DESGLOSE_ORDEN\n       , NOMBRE_MES_DESGLOSE\n       , NOMBRE_MES_DESGLOSE AS NOMBRE_MES_FISCAL_DESGLOSE\n       , NOMBRE_DIA_DESGLOSE\n       , TRIMESTRE_DESGLOSE\n       , ANO_FISCAL_DESGLOSE\n       , MES_FISCAL_DESGLOSE_ORDEN\n       , TRIMESTRE_FISCAL_DESGLOSE\n       , NUM_DIA_SEMANA_DESGLOSE\n       , SEMANA_ANO_DESGLOSE_ORDEN\n       , SEMANA_MES_DESGLOSE_ORDEN\n       , SEMANA_ANO_FISCAL_DESGLOSE_ORDEN\n       , SEMANA_MES_FISCAL_DESGLOSE_ORDEN\n       , SEMANA_ISO_DESGLOSE_ORDEN\n       , (datediff(dd,\n       case when    NextYrStart <= FECHA_DESGLOSE\n             then   NextYrStart\n       when   CurrYrStart <= FECHA_DESGLOSE\n             then   CurrYrStart\n       else   PriorYrStart\n       end, FECHA_DESGLOSE)/7)+1 AS SEMANA_ISO_FISCAL_DESGLOSE_ORDEN\n\t   , SEMANA_ISO_SABADO_DESGLOSE_ORDEN\nFROM\n(\n       SELECT \n        CAST(CONVERT(VARCHAR, FECHA_DESGLOSE, 112) AS INT) AS ID_FECHA_DESGLOSE\n       ,FECHA_DESGLOSE\n       ,YEAR(FECHA_DESGLOSE) AS ANO_DESGLOSE\n        ,MONTH(FECHA_DESGLOSE) AS MES_DESGLOSE_ORDEN \n        ,DAY(FECHA_DESGLOSE) AS DIA_DESGLOSE_ORDEN \n        ,SUBSTRING(UPPER(DATENAME(MONTH,FECHA_DESGLOSE)),1,3) AS NOMBRE_MES_DESGLOSE\n       ,SUBSTRING(UPPER(DATENAME(WEEKDAY,FECHA_DESGLOSE)),1,3) AS NOMBRE_DIA_DESGLOSE\n       ,'T' + DATENAME(QUARTER,FECHA_DESGLOSE) AS TRIMESTRE_DESGLOSE\n       ,YEAR(DATEADD(MONTH, -1, FECHA_DESGLOSE)) AS ANO_FISCAL_DESGLOSE\n       ,CASE WHEN MONTH(FECHA_DESGLOSE) = 1 THEN 12 ELSE MONTH(FECHA_DESGLOSE)-1 END AS MES_FISCAL_DESGLOSE_ORDEN\n       ,'T' + DATENAME(QUARTER,DATEADD(MONTH, -1, FECHA_DESGLOSE)) AS TRIMESTRE_FISCAL_DESGLOSE\n       ,DATEPART(WEEKDAY, FECHA_DESGLOSE) AS NUM_DIA_SEMANA_DESGLOSE\n       ,DATEPART(WEEK, FECHA_DESGLOSE) AS SEMANA_ANO_DESGLOSE_ORDEN \n        ,DATEPART(WEEK, FECHA_DESGLOSE) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,FECHA_DESGLOSE), 0))+ 1 AS SEMANA_MES_DESGLOSE_ORDEN\n       ,DATEPART(WEEK, DATEADD(MONTH, -1, FECHA_DESGLOSE)) AS SEMANA_ANO_FISCAL_DESGLOSE_ORDEN \n        ,DATEPART(WEEK, DATEADD(MONTH, -1, FECHA_DESGLOSE)) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,DATEADD(MONTH, -1, FECHA_DESGLOSE)), 0))+ 1 AS SEMANA_MES_FISCAL_DESGLOSE_ORDEN\n       ,DATEPART(ISO_WEEK, FECHA_DESGLOSE) AS SEMANA_ISO_DESGLOSE_ORDEN\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(yy,-1,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA_DESGLOSE),0))))/7)*7,-53690) AS PriorYrStart\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA_DESGLOSE),0)))/7)*7,-53690) AS CurrYrStart\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(yy,1,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA_DESGLOSE),0))))/7)*7,-53690) AS NextYrStart   \n\t   ,DATEPART(ISO_WEEK, DATEADD(DAY,2,FECHA_DESGLOSE)) AS SEMANA_ISO_SABADO_DESGLOSE_ORDEN\n       FROM \n        DATES\n      ) F\nORDER BY FECHA_DESGLOSE ASC\nOPTION(MAXRECURSION 32767)",
              "dataSource": "AXINMETA4SQLV1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SET DATEFIRST 1;\nSET LANGUAGE Spanish;\n\nWITH DATES (FECHA_DESGLOSE) AS \n(\n    SELECT CAST(STR(YEAR(GETDATE())+2) + '-01-31'  AS DATE)\nUNION ALL\n    SELECT \n            DATEADD(DAY,-1,FECHA_DESGLOSE)\n    FROM\n            DATES \n    WHERE \n            FECHA_DESGLOSE > CAST('2013-01-01' AS DATE)\n)\n\nSELECT\n       ID_FECHA_DESGLOSE\n       , FECHA_DESGLOSE\n\t   ,CASE WHEN CAST(FECHA_DESGLOSE AS DATE)= CONVERT(date, GETDATE()) THEN 'Hoy' ELSE CAST(FECHA_DESGLOSE AS VARCHAR) END AS FECHA_DESGLOSE_HOY\n       , ANO_DESGLOSE\n       , MES_DESGLOSE_ORDEN\n       , DIA_DESGLOSE_ORDEN\n       , NOMBRE_MES_DESGLOSE\n       , NOMBRE_MES_DESGLOSE AS NOMBRE_MES_FISCAL_DESGLOSE\n       , NOMBRE_DIA_DESGLOSE\n       , TRIMESTRE_DESGLOSE\n       , ANO_FISCAL_DESGLOSE\n       , MES_FISCAL_DESGLOSE_ORDEN\n       , TRIMESTRE_FISCAL_DESGLOSE\n       , NUM_DIA_SEMANA_DESGLOSE\n       , SEMANA_ANO_DESGLOSE_ORDEN\n       , SEMANA_MES_DESGLOSE_ORDEN\n       , SEMANA_ANO_FISCAL_DESGLOSE_ORDEN\n       , SEMANA_MES_FISCAL_DESGLOSE_ORDEN\n       , SEMANA_ISO_DESGLOSE_ORDEN\n       , (datediff(dd,\n       case when    NextYrStart <= FECHA_DESGLOSE\n             then   NextYrStart\n       when   CurrYrStart <= FECHA_DESGLOSE\n             then   CurrYrStart\n       else   PriorYrStart\n       end, FECHA_DESGLOSE)/7)+1 AS SEMANA_ISO_FISCAL_DESGLOSE_ORDEN\n\t   , SEMANA_ISO_SABADO_DESGLOSE_ORDEN\nFROM\n(\n       SELECT \n        CAST(CONVERT(VARCHAR, FECHA_DESGLOSE, 112) AS INT) AS ID_FECHA_DESGLOSE\n       ,FECHA_DESGLOSE\n       ,YEAR(FECHA_DESGLOSE) AS ANO_DESGLOSE\n        ,MONTH(FECHA_DESGLOSE) AS MES_DESGLOSE_ORDEN \n        ,DAY(FECHA_DESGLOSE) AS DIA_DESGLOSE_ORDEN \n        ,SUBSTRING(UPPER(DATENAME(MONTH,FECHA_DESGLOSE)),1,3) AS NOMBRE_MES_DESGLOSE\n       ,SUBSTRING(UPPER(DATENAME(WEEKDAY,FECHA_DESGLOSE)),1,3) AS NOMBRE_DIA_DESGLOSE\n       ,'T' + DATENAME(QUARTER,FECHA_DESGLOSE) AS TRIMESTRE_DESGLOSE\n       ,YEAR(DATEADD(MONTH, -1, FECHA_DESGLOSE)) AS ANO_FISCAL_DESGLOSE\n       ,CASE WHEN MONTH(FECHA_DESGLOSE) = 1 THEN 12 ELSE MONTH(FECHA_DESGLOSE)-1 END AS MES_FISCAL_DESGLOSE_ORDEN\n       ,'T' + DATENAME(QUARTER,DATEADD(MONTH, -1, FECHA_DESGLOSE)) AS TRIMESTRE_FISCAL_DESGLOSE\n       ,DATEPART(WEEKDAY, FECHA_DESGLOSE) AS NUM_DIA_SEMANA_DESGLOSE\n       ,DATEPART(WEEK, FECHA_DESGLOSE) AS SEMANA_ANO_DESGLOSE_ORDEN \n        ,DATEPART(WEEK, FECHA_DESGLOSE) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,FECHA_DESGLOSE), 0))+ 1 AS SEMANA_MES_DESGLOSE_ORDEN\n       ,DATEPART(WEEK, DATEADD(MONTH, -1, FECHA_DESGLOSE)) AS SEMANA_ANO_FISCAL_DESGLOSE_ORDEN \n        ,DATEPART(WEEK, DATEADD(MONTH, -1, FECHA_DESGLOSE)) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,DATEADD(MONTH, -1, FECHA_DESGLOSE)), 0))+ 1 AS SEMANA_MES_FISCAL_DESGLOSE_ORDEN\n       ,DATEPART(ISO_WEEK, FECHA_DESGLOSE) AS SEMANA_ISO_DESGLOSE_ORDEN\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(yy,-1,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA_DESGLOSE),0))))/7)*7,-53690) AS PriorYrStart\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA_DESGLOSE),0)))/7)*7,-53690) AS CurrYrStart\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(yy,1,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA_DESGLOSE),0))))/7)*7,-53690) AS NextYrStart   \n\t   ,DATEPART(ISO_WEEK, DATEADD(DAY,2,FECHA_DESGLOSE)) AS SEMANA_ISO_SABADO_DESGLOSE_ORDEN\n       FROM \n        DATES\n      ) F\nORDER BY FECHA_DESGLOSE ASC\nOPTION(MAXRECURSION 32767)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SET DATEFIRST 1;\nSET LANGUAGE Spanish;\n\nWITH DATES (FECHA_DESGLOSE) AS \n(\n    SELECT CAST(STR(YEAR(GETDATE())+2) + '-01-31'  AS DATE)\nUNION ALL\n    SELECT \n            DATEADD(DAY,-1,FECHA_DESGLOSE)\n    FROM\n            DATES \n    WHERE \n            FECHA_DESGLOSE > CAST('2013-01-01' AS DATE)\n)\n\nSELECT\n       ID_FECHA_DESGLOSE\n       , FECHA_DESGLOSE\n\t   ,CASE WHEN CAST(FECHA_DESGLOSE AS DATE)= CONVERT(date, GETDATE()) THEN 'Hoy' ELSE CAST(FECHA_DESGLOSE AS VARCHAR) END AS FECHA_DESGLOSE_HOY\n       , ANO_DESGLOSE\n       , MES_DESGLOSE_ORDEN\n       , DIA_DESGLOSE_ORDEN\n       , NOMBRE_MES_DESGLOSE\n       , NOMBRE_MES_DESGLOSE AS NOMBRE_MES_FISCAL_DESGLOSE\n       , NOMBRE_DIA_DESGLOSE\n       , TRIMESTRE_DESGLOSE\n       , ANO_FISCAL_DESGLOSE\n       , MES_FISCAL_DESGLOSE_ORDEN\n       , TRIMESTRE_FISCAL_DESGLOSE\n       , NUM_DIA_SEMANA_DESGLOSE\n       , SEMANA_ANO_DESGLOSE_ORDEN\n       , SEMANA_MES_DESGLOSE_ORDEN\n       , SEMANA_ANO_FISCAL_DESGLOSE_ORDEN\n       , SEMANA_MES_FISCAL_DESGLOSE_ORDEN\n       , SEMANA_ISO_DESGLOSE_ORDEN\n       , (datediff(dd,\n       case when    NextYrStart <= FECHA_DESGLOSE\n             then   NextYrStart\n       when   CurrYrStart <= FECHA_DESGLOSE\n             then   CurrYrStart\n       else   PriorYrStart\n       end, FECHA_DESGLOSE)/7)+1 AS SEMANA_ISO_FISCAL_DESGLOSE_ORDEN\n\t   , SEMANA_ISO_SABADO_DESGLOSE_ORDEN\nFROM\n(\n       SELECT \n        CAST(CONVERT(VARCHAR, FECHA_DESGLOSE, 112) AS INT) AS ID_FECHA_DESGLOSE\n       ,FECHA_DESGLOSE\n       ,YEAR(FECHA_DESGLOSE) AS ANO_DESGLOSE\n        ,MONTH(FECHA_DESGLOSE) AS MES_DESGLOSE_ORDEN \n        ,DAY(FECHA_DESGLOSE) AS DIA_DESGLOSE_ORDEN \n        ,SUBSTRING(UPPER(DATENAME(MONTH,FECHA_DESGLOSE)),1,3) AS NOMBRE_MES_DESGLOSE\n       ,SUBSTRING(UPPER(DATENAME(WEEKDAY,FECHA_DESGLOSE)),1,3) AS NOMBRE_DIA_DESGLOSE\n       ,'T' + DATENAME(QUARTER,FECHA_DESGLOSE) AS TRIMESTRE_DESGLOSE\n       ,YEAR(DATEADD(MONTH, -1, FECHA_DESGLOSE)) AS ANO_FISCAL_DESGLOSE\n       ,CASE WHEN MONTH(FECHA_DESGLOSE) = 1 THEN 12 ELSE MONTH(FECHA_DESGLOSE)-1 END AS MES_FISCAL_DESGLOSE_ORDEN\n       ,'T' + DATENAME(QUARTER,DATEADD(MONTH, -1, FECHA_DESGLOSE)) AS TRIMESTRE_FISCAL_DESGLOSE\n       ,DATEPART(WEEKDAY, FECHA_DESGLOSE) AS NUM_DIA_SEMANA_DESGLOSE\n       ,DATEPART(WEEK, FECHA_DESGLOSE) AS SEMANA_ANO_DESGLOSE_ORDEN \n        ,DATEPART(WEEK, FECHA_DESGLOSE) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,FECHA_DESGLOSE), 0))+ 1 AS SEMANA_MES_DESGLOSE_ORDEN\n       ,DATEPART(WEEK, DATEADD(MONTH, -1, FECHA_DESGLOSE)) AS SEMANA_ANO_FISCAL_DESGLOSE_ORDEN \n        ,DATEPART(WEEK, DATEADD(MONTH, -1, FECHA_DESGLOSE)) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,DATEADD(MONTH, -1, FECHA_DESGLOSE)), 0))+ 1 AS SEMANA_MES_FISCAL_DESGLOSE_ORDEN\n       ,DATEPART(ISO_WEEK, FECHA_DESGLOSE) AS SEMANA_ISO_DESGLOSE_ORDEN\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(yy,-1,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA_DESGLOSE),0))))/7)*7,-53690) AS PriorYrStart\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA_DESGLOSE),0)))/7)*7,-53690) AS CurrYrStart\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(yy,1,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA_DESGLOSE),0))))/7)*7,-53690) AS NextYrStart   \n\t   ,DATEPART(ISO_WEEK, DATEADD(DAY,2,FECHA_DESGLOSE)) AS SEMANA_ISO_SABADO_DESGLOSE_ORDEN\n       FROM \n        DATES\n      ) F\nORDER BY FECHA_DESGLOSE ASC\nOPTION(MAXRECURSION 32767)"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "FECHA_DESGLOSE"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SET DATEFIRST 1;\nSET LANGUAGE Spanish;\n\nWITH DATES (FECHA_DESGLOSE) AS \n(\n    SELECT CAST(STR(YEAR(GETDATE())+2) + '-01-31'  AS DATE)\nUNION ALL\n    SELECT \n            DATEADD(DAY,-1,FECHA_DESGLOSE)\n    FROM\n            DATES \n    WHERE \n            FECHA_DESGLOSE > CAST('2013-01-01' AS DATE)\n)\n\nSELECT\n       ID_FECHA_DESGLOSE\n       , FECHA_DESGLOSE\n\t   ,CASE WHEN CAST(FECHA_DESGLOSE AS DATE)= CONVERT(date, GETDATE()) THEN 'Hoy' ELSE CAST(FECHA_DESGLOSE AS VARCHAR) END AS FECHA_DESGLOSE_HOY\n       , ANO_DESGLOSE\n       , MES_DESGLOSE_ORDEN\n       , DIA_DESGLOSE_ORDEN\n       , NOMBRE_MES_DESGLOSE\n       , NOMBRE_MES_DESGLOSE AS NOMBRE_MES_FISCAL_DESGLOSE\n       , NOMBRE_DIA_DESGLOSE\n       , TRIMESTRE_DESGLOSE\n       , ANO_FISCAL_DESGLOSE\n       , MES_FISCAL_DESGLOSE_ORDEN\n       , TRIMESTRE_FISCAL_DESGLOSE\n       , NUM_DIA_SEMANA_DESGLOSE\n       , SEMANA_ANO_DESGLOSE_ORDEN\n       , SEMANA_MES_DESGLOSE_ORDEN\n       , SEMANA_ANO_FISCAL_DESGLOSE_ORDEN\n       , SEMANA_MES_FISCAL_DESGLOSE_ORDEN\n       , SEMANA_ISO_DESGLOSE_ORDEN\n       , (datediff(dd,\n       case when    NextYrStart <= FECHA_DESGLOSE\n             then   NextYrStart\n       when   CurrYrStart <= FECHA_DESGLOSE\n             then   CurrYrStart\n       else   PriorYrStart\n       end, FECHA_DESGLOSE)/7)+1 AS SEMANA_ISO_FISCAL_DESGLOSE_ORDEN\n\t   , SEMANA_ISO_SABADO_DESGLOSE_ORDEN\nFROM\n(\n       SELECT \n        CAST(CONVERT(VARCHAR, FECHA_DESGLOSE, 112) AS INT) AS ID_FECHA_DESGLOSE\n       ,FECHA_DESGLOSE\n       ,YEAR(FECHA_DESGLOSE) AS ANO_DESGLOSE\n        ,MONTH(FECHA_DESGLOSE) AS MES_DESGLOSE_ORDEN \n        ,DAY(FECHA_DESGLOSE) AS DIA_DESGLOSE_ORDEN \n        ,SUBSTRING(UPPER(DATENAME(MONTH,FECHA_DESGLOSE)),1,3) AS NOMBRE_MES_DESGLOSE\n       ,SUBSTRING(UPPER(DATENAME(WEEKDAY,FECHA_DESGLOSE)),1,3) AS NOMBRE_DIA_DESGLOSE\n       ,'T' + DATENAME(QUARTER,FECHA_DESGLOSE) AS TRIMESTRE_DESGLOSE\n       ,YEAR(DATEADD(MONTH, -1, FECHA_DESGLOSE)) AS ANO_FISCAL_DESGLOSE\n       ,CASE WHEN MONTH(FECHA_DESGLOSE) = 1 THEN 12 ELSE MONTH(FECHA_DESGLOSE)-1 END AS MES_FISCAL_DESGLOSE_ORDEN\n       ,'T' + DATENAME(QUARTER,DATEADD(MONTH, -1, FECHA_DESGLOSE)) AS TRIMESTRE_FISCAL_DESGLOSE\n       ,DATEPART(WEEKDAY, FECHA_DESGLOSE) AS NUM_DIA_SEMANA_DESGLOSE\n       ,DATEPART(WEEK, FECHA_DESGLOSE) AS SEMANA_ANO_DESGLOSE_ORDEN \n        ,DATEPART(WEEK, FECHA_DESGLOSE) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,FECHA_DESGLOSE), 0))+ 1 AS SEMANA_MES_DESGLOSE_ORDEN\n       ,DATEPART(WEEK, DATEADD(MONTH, -1, FECHA_DESGLOSE)) AS SEMANA_ANO_FISCAL_DESGLOSE_ORDEN \n        ,DATEPART(WEEK, DATEADD(MONTH, -1, FECHA_DESGLOSE)) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,DATEADD(MONTH, -1, FECHA_DESGLOSE)), 0))+ 1 AS SEMANA_MES_FISCAL_DESGLOSE_ORDEN\n       ,DATEPART(ISO_WEEK, FECHA_DESGLOSE) AS SEMANA_ISO_DESGLOSE_ORDEN\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(yy,-1,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA_DESGLOSE),0))))/7)*7,-53690) AS PriorYrStart\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA_DESGLOSE),0)))/7)*7,-53690) AS CurrYrStart\n       ,DATEADD(dd,(DATEDIFF(dd,-53690,DATEADD(yy,1,DATEADD(dd,34,DATEADD(yy,DATEDIFF(yy,0,FECHA_DESGLOSE),0))))/7)*7,-53690) AS NextYrStart   \n\t   ,DATEPART(ISO_WEEK, DATEADD(DAY,2,FECHA_DESGLOSE)) AS SEMANA_ISO_SABADO_DESGLOSE_ORDEN\n       FROM \n        DATES\n      ) F\nORDER BY FECHA_DESGLOSE ASC\nOPTION(MAXRECURSION 32767)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "b4b3b51d-6064-445f-9bca-47c0597d65f2",
        "fromTable": "COSTE",
        "fromColumn": "ID_EMPRESA_GRUPO",
        "toTable": "EMPRESA",
        "toColumn": "ID_EMPRESA_GRUPO"
      },
      {
        "name": "dd27dd4d-da63-4d60-be03-780a83587a1a",
        "fromTable": "COSTE",
        "fromColumn": "ID_ESTRUCTURA_ALMACEN",
        "toTable": "ESTRUCTURA",
        "toColumn": "ID_ESTRUCTURA"
      },
      {
        "name": "d4bbc657-1d84-46e0-a1f5-5a093c28c258",
        "fromTable": "COSTE",
        "fromColumn": "DIVSEC",
        "toTable": "DIV_SEC",
        "toColumn": "ID_DIVISION_SECCION"
      },
      {
        "name": "481a2331-aaad-46bd-90e1-acf0c02c4232",
        "fromTable": "COSTE",
        "fromColumn": "FECHA",
        "toTable": "FECHA",
        "toColumn": "FECHA"
      },
      {
        "name": "4f25fbc5-5b36-40d5-ad55-d617b82c72a4",
        "fromTable": "HORAS",
        "fromColumn": "EDAD",
        "toTable": "EDAD",
        "toColumn": "ANOS"
      },
      {
        "name": "a5fba7b5-0e55-42fe-b08c-8ebead3013ef",
        "fromTable": "HORAS",
        "fromColumn": "ID_EQUIPO",
        "toTable": "EQUIPO",
        "toColumn": "ID_EQUIPO"
      },
      {
        "name": "ca715752-8d4a-4584-8e91-7560d978f91c",
        "fromTable": "HORAS",
        "fromColumn": "ID_TIPO_JORNADA",
        "toTable": "TIPO_JORNADA",
        "toColumn": "ID_TIPO_JORNADA"
      },
      {
        "name": "59fbfbe0-3d15-44b6-b2e6-f49ec44e3819",
        "fromTable": "HORAS",
        "fromColumn": "ID_TIPO_CONTRATO",
        "toTable": "TIPO_CONTRATO",
        "toColumn": "ID_TIPO_CONTRATO"
      },
      {
        "name": "78c31b66-fee4-45ce-a696-46dd1600a921",
        "fromTable": "HORAS",
        "fromColumn": "ANTIGUEDAD",
        "toTable": "ANTIGUEDAD",
        "toColumn": "NUM_MESES"
      },
      {
        "name": "e35a9bcf-ca4d-4578-b9c2-931261297f60",
        "fromTable": "HORAS",
        "fromColumn": "ID_CATEGORIA",
        "toTable": "CATEGORIA_PROFESIONAL",
        "toColumn": "ID_CATEGORIA_PROFESIONAL"
      },
      {
        "name": "e29895ef-5c4c-4718-8a98-8a4ccdd50451",
        "fromTable": "HORAS",
        "fromColumn": "ID_HORAS_CONTRATADAS",
        "toTable": "HORAS_CONTRATADAS",
        "toColumn": "ID_HORAS_CONTRATADAS"
      },
      {
        "name": "457165f9-516a-4608-b442-49f2d5c8d799",
        "fromTable": "HORAS",
        "fromColumn": "ID_LUGAR_DE_TRABAJO",
        "toTable": "LUGAR_DE_TRABAJO",
        "toColumn": "ID_LUGAR_DE_TRABAJO"
      },
      {
        "name": "8c1144e5-9920-4581-91bb-993d43e3f429",
        "fromTable": "HORAS",
        "fromColumn": "ID_EMPRESA_EXTERNA",
        "toTable": "EMPRESA_EXTERNA",
        "toColumn": "ID_EMPRESA_EXTERNA"
      },
      {
        "name": "356877fd-2c7e-40c4-a891-07262971a8e3",
        "fromTable": "HORAS",
        "fromColumn": "DIVISION_SECCION",
        "toTable": "DIV_SEC",
        "toColumn": "ID_DIVISION_SECCION"
      },
      {
        "name": "5d7aa922-6b28-41ad-b915-0e074900a7eb",
        "fromTable": "HORAS",
        "fromColumn": "ID_EMPRESA",
        "toTable": "EMPRESA",
        "toColumn": "ID_EMPRESA_GRUPO"
      },
      {
        "name": "8d535323-2055-416f-b485-71378c0286e2",
        "fromTable": "NOMINAS_CERRADAS",
        "fromColumn": "ID_EMPRESA",
        "toTable": "EMPRESA",
        "toColumn": "ID_EMPRESA_GRUPO"
      },
      {
        "name": "281fd557-7726-43fd-8324-9c42f1252c2d",
        "fromTable": "NOMINAS_CERRADAS",
        "fromColumn": "FECHA",
        "toTable": "FECHA",
        "toColumn": "FECHA"
      },
      {
        "name": "fb295791-701c-471b-9db9-ec98b852730e",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_LUGAR_DE_TRABAJO",
        "toTable": "LUGAR_DE_TRABAJO",
        "toColumn": "ID_LUGAR_DE_TRABAJO"
      },
      {
        "name": "fd755136-43b9-4db5-9d40-521da87faf5b",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_EMPRESA",
        "toTable": "EMPRESA",
        "toColumn": "ID_EMPRESA_GRUPO"
      },
      {
        "name": "aa02f8cb-89c2-4ce6-8ea2-8a2f94f71f9d",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_FECHA",
        "toTable": "FECHA",
        "toColumn": "FECHA"
      },
      {
        "name": "518ceed2-8fb7-4bb4-9f19-98bb97fbaf1c",
        "fromTable": "PLANTILLA",
        "fromColumn": "DIVISION_SECCION",
        "toTable": "DIV_SEC",
        "toColumn": "ID_DIVISION_SECCION"
      },
      {
        "name": "deee3ebe-e1f6-41d6-8ab0-46c28e3d7309",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_ESTRUCTURA_ALMACEN",
        "toTable": "ESTRUCTURA",
        "toColumn": "ID_ESTRUCTURA"
      },
      {
        "name": "fa87fa91-d123-4475-b807-7b06a5c877a4",
        "fromTable": "PLANTILLA",
        "fromColumn": "EDAD",
        "toTable": "EDAD",
        "toColumn": "ANOS"
      },
      {
        "name": "f44aba59-adf3-4f28-ae9e-513094fca4fc",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_TIPO_PERSONA",
        "toTable": "TIPO_PERSONA",
        "toColumn": "ID_TIPO_PERSONA"
      },
      {
        "name": "513f2037-ab3a-40bf-8db6-68d487ada9da",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_TIPO_JORNADA",
        "toTable": "TIPO_JORNADA",
        "toColumn": "ID_TIPO_JORNADA"
      },
      {
        "name": "42dcd060-4273-466e-8452-3e9e0a01eb82",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_CATEGORIA",
        "toTable": "CATEGORIA_PROFESIONAL",
        "toColumn": "ID_CATEGORIA_PROFESIONAL"
      },
      {
        "name": "11920531-9168-4569-b976-d8d249d6c87d",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_HORAS_CONTRATADAS",
        "toTable": "HORAS_CONTRATADAS",
        "toColumn": "ID_HORAS_CONTRATADAS"
      },
      {
        "name": "d1d11eb4-2dd6-4442-b1cf-45fbbdcf39ee",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_TIPO_CONTRATO",
        "toTable": "TIPO_CONTRATO",
        "toColumn": "ID_TIPO_CONTRATO"
      },
      {
        "name": "870d272b-53fe-4e07-a2e6-b8956aef45ec",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_EMPRESA_EXTERNA",
        "toTable": "EMPRESA_EXTERNA",
        "toColumn": "ID_EMPRESA_EXTERNA"
      },
      {
        "name": "35dbddb5-e564-40c6-9333-f36f541c926e",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_EQUIPO",
        "toTable": "EQUIPO",
        "toColumn": "ID_EQUIPO"
      },
      {
        "name": "4409d334-81a6-4270-96d8-ac01d06f6150",
        "fromTable": "PLANTILLA",
        "fromColumn": "ANTIGUEDAD",
        "toTable": "ANTIGUEDAD",
        "toColumn": "NUM_MESES"
      },
      {
        "name": "f3aeb814-3a38-43ae-bcd4-88180f70b005",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_UNIDAD_ORGANIZATIVA",
        "toTable": "UNIDAD_ORGANIZATIVA",
        "toColumn": "ID_UNIDAD_ORGANIZATIVA"
      },
      {
        "name": "a14d9bc5-36c2-498a-b024-fed2df435865",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_ROL_EQUIPO",
        "toTable": "ROL_EQUIPO",
        "toColumn": "ID_ROL_EQUIPO"
      },
      {
        "name": "6c5e9523-7471-4ca8-9b4d-8eb6c615a369",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_PERSONA_LOCAL",
        "toTable": "PERSONA",
        "toColumn": "ID_PERSONA_LOCAL"
      },
      {
        "name": "2b4f65af-ec24-43d0-a7dc-69f2ef66f12b",
        "fromTable": "HORAS",
        "fromColumn": "ID_PERSONA_LOCAL",
        "toTable": "PERSONA",
        "toColumn": "ID_PERSONA_LOCAL"
      },
      {
        "name": "ff52b162-3a87-4028-9883-8cbb0f1a8838",
        "fromTable": "HORAS",
        "fromColumn": "CCL_ID_TURNO",
        "toTable": "TURNO",
        "toColumn": "ID_TURNO"
      },
      {
        "name": "4b095cfc-1865-49f9-a898-1a9b85f1d974",
        "fromTable": "HORAS",
        "fromColumn": "FECHA",
        "toTable": "FECHA",
        "toColumn": "FECHA"
      },
      {
        "name": "c48cc894-25ef-4d0b-ab94-b35e0e9521ac",
        "fromTable": "HORAS",
        "fromColumn": "ID_ORG_AUSENCIA",
        "toTable": "AUSENCIAS",
        "toColumn": "ID_ORG_AUSENCIA"
      },
      {
        "name": "5d5044d7-30ea-48d5-8783-7be7a4f55c19",
        "fromTable": "HORAS",
        "fromColumn": "ID_ORG_INCIDENCIA",
        "toTable": "INCIDENCIA",
        "toColumn": "ID_ORG_INCIDENCIA"
      },
      {
        "name": "9cfa6c54-ed51-465c-8ed5-6902a9817a12",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_MODELO_REFERENCIA",
        "toTable": "TIPO_TURNO",
        "toColumn": "ID_MODELO_REFERENCIA"
      },
      {
        "name": "8a834ca9-e48b-4831-a695-fcfb4a541bf1",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_PUESTO_HR_TYPE",
        "toTable": "PUESTO",
        "toColumn": "ID_PUESTO_HR_TYPE"
      },
      {
        "name": "22e495bb-c625-42ff-b3a4-1dbf495d9d50",
        "fromTable": "HORAS",
        "fromColumn": "ID_PUESTO_HR_TYPE",
        "toTable": "PUESTO",
        "toColumn": "ID_PUESTO_HR_TYPE"
      },
      {
        "name": "fda36d0a-a8be-4843-9b06-08ad181307ec",
        "fromTable": "PLANTILLA",
        "fromColumn": "TRAMO_PORC_JORNADA_PARCIAL",
        "toTable": "TRAMOS_JORNADA_PARCIAL",
        "toColumn": "%JORNADA_PARCIAL"
      },
      {
        "name": "dbf41d86-1491-46d0-a911-f0440a19f9ca",
        "fromTable": "PLANTILLA",
        "fromColumn": "TRAMO_PORC_REDUCCION",
        "toTable": "REDUCCION_JORNADA",
        "toColumn": "%REDUCCION_JORNADA"
      },
      {
        "name": "3d6891b5-d4fa-49e1-9f64-eb16d6171c64",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_UNIDAD_NEGOCIO",
        "toTable": "UNIDAD_NEGOCIO",
        "toColumn": "ID_UNIDAD_NEGOCIO"
      },
      {
        "name": "de621d50-f66f-48d9-801c-43763aeb2293",
        "fromTable": "HORAS",
        "fromColumn": "ID_ORG_ALM",
        "toTable": "AREA_ALMACEN",
        "toColumn": "ID_ORG_ALM"
      },
      {
        "name": "8971e7e8-088e-4e12-98b3-c75b12601e37",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_ORG_ALM",
        "toTable": "AREA_ALMACEN",
        "toColumn": "ID_ORG_ALM"
      },
      {
        "name": "918c1af1-78c5-4801-a0a1-0da3f8e19828",
        "fromTable": "HORAS",
        "fromColumn": "ID_TAREA_ORGANIZATION",
        "toTable": "TAREA",
        "toColumn": "ID_TAREA_ORGANIZACION"
      },
      {
        "name": "bdfbe730-3030-4259-a5de-15a0fadf9133",
        "fromTable": "HORAS",
        "fromColumn": "ID_ZONA",
        "toTable": "ZONA",
        "toColumn": "ID_ZONA"
      },
      {
        "name": "c5805f1b-ce2d-47ec-92ab-c4160d957973",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_ORG_AUSENCIA",
        "toTable": "MAPEO_AUSENCIA_INCIDENCIA",
        "toColumn": "ID_ORG_AUSENCIA"
      },
      {
        "name": "b341e771-4d6a-4e5d-a7af-1ae0ad203ccd",
        "fromTable": "IMPORTE_CONCEPTOS",
        "fromColumn": "FECHA",
        "toTable": "FECHA",
        "toColumn": "FECHA"
      },
      {
        "name": "203cff08-9a06-447f-8e7b-8878880408e7",
        "fromTable": "IMPORTE_CONCEPTOS",
        "fromColumn": "ID_EMPRESA_GRUPO",
        "toTable": "EMPRESA",
        "toColumn": "ID_EMPRESA_GRUPO"
      },
      {
        "name": "21a093f7-dfea-45fe-bcc7-7c9b22ed58f9",
        "fromTable": "IMPORTE_CONCEPTOS",
        "fromColumn": "DIVISION_SECCION",
        "toTable": "DIV_SEC",
        "toColumn": "ID_DIVISION_SECCION"
      },
      {
        "name": "791e7948-44b6-4edd-a6e8-3c6c6be70ddc",
        "fromTable": "HORAS",
        "fromColumn": "TRAMO_PORC_REDUCCION",
        "toTable": "REDUCCION_JORNADA",
        "toColumn": "%REDUCCION_JORNADA"
      },
      {
        "name": "b9addc35-8832-45d4-ac30-e9accb9987fe",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_MOTIVO_ALTA",
        "toTable": "MOTIVO_ALTA",
        "toColumn": "ID_MOTIVO_ALTA"
      },
      {
        "name": "4d4c6d5c-ff54-458d-8b1e-83f12cf88103",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_MOTIVO_BAJA",
        "toTable": "MOTIVO_BAJA",
        "toColumn": "ID_MOTIVO_BAJA"
      },
      {
        "name": "3e1c11ef-55ec-4353-a015-f9d35b24ad92",
        "fromTable": "PRESUPUESTO_EMPRESA",
        "fromColumn": "ID_EMPRESA_GRUPO",
        "toTable": "EMPRESA",
        "toColumn": "ID_EMPRESA_GRUPO"
      },
      {
        "name": "98d1be30-1d05-4f38-80d9-7d12e2b02026",
        "fromTable": "PRESUPUESTO_EMPRESA_CONCEPTOS",
        "fromColumn": "ID_EMPRESA_GRUPO",
        "toTable": "EMPRESA",
        "toColumn": "ID_EMPRESA_GRUPO"
      },
      {
        "name": "3b27c929-3836-45b1-9107-16308ea9f9ab",
        "fromTable": "PRESUPUESTO_EMPRESA",
        "fromColumn": "FECHA",
        "toTable": "FECHA",
        "toColumn": "ID_FECHA"
      },
      {
        "name": "a077d6c1-952a-4d43-b235-56ca0efa496c",
        "fromTable": "PRESUPUESTO_EMPRESA_CONCEPTOS",
        "fromColumn": "FECHA",
        "toTable": "FECHA",
        "toColumn": "ID_FECHA"
      },
      {
        "name": "0f5e3733-5730-4ae6-8213-291104991bda",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_ORG_INCIDENCIA",
        "toTable": "INCIDENCIA",
        "toColumn": "ID_ORG_INCIDENCIA"
      },
      {
        "name": "f5735f76-8752-47ac-b3bb-bddd8fab54d2",
        "fromTable": "AGRUPACION_CONCEPTOS_COSTE",
        "fromColumn": "ID_EMPRESA_CONCEPTO",
        "toTable": "AGRUPACION_CONCEPTOS_AUX",
        "toColumn": "ID_EMPRESA_CONCEPTO",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "b075641e-8d95-4ce5-8fa7-346dec333e71",
        "fromTable": "IMPORTE_CONCEPTOS",
        "fromColumn": "ID_EMPRESA_CONCEPTO",
        "toTable": "AGRUPACION_CONCEPTOS_COSTE",
        "toColumn": "ID_EMPRESA_CONCEPTO"
      },
      {
        "name": "a5518c49-f551-431a-83be-9f2efc2bd7fe",
        "fromTable": "AGRUPACION_CONCEPTOS_COSTE",
        "fromColumn": "ID_EMPRESA_CONCEPTO_SIMULADOR",
        "toTable": "CONCEPTO_SIMULADOR",
        "toColumn": "ID_EMPRESA_CONCEPTO_SIMULADOR",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "3aa7ab35-ece0-487d-a781-d6afab8594bf",
        "fromCardinality": "one",
        "fromTable": "AGRUPACION_CONCEPTOS_COSTE",
        "fromColumn": "ID_EMPRESA_CONCEPTO",
        "toTable": "CONCEPTO_SIMULADOR",
        "toColumn": "ID_EMPRESA_CONCEPTO_AS400",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "27fc31de-8f1a-4c97-b1e9-d9f74b61d5e1",
        "fromTable": "FECHA",
        "fromColumn": "ID_FECHA",
        "toTable": "FECHA_AUX",
        "toColumn": "ID_FECHA"
      },
      {
        "name": "dd1e940e-be60-4695-8331-e41f0b76d53f",
        "fromTable": "PRESUPUESTO_EMPRESA_CONCEPTOS",
        "fromColumn": "ID_EMPRESA_CONCEPTO",
        "toTable": "CONCEPTO_SIMULADOR",
        "toColumn": "ID_EMPRESA_CONCEPTO_SIMULADOR"
      },
      {
        "name": "c77bdaff-7c63-4153-b3a2-7a052a1849ed",
        "fromTable": "HORAS",
        "fromColumn": "ID_TIPO_PERSONA",
        "toTable": "TIPO_PERSONA",
        "toColumn": "ID_TIPO_PERSONA"
      },
      {
        "name": "9815f008-c19a-49b1-ba78-dbafb5d6a292",
        "fromTable": "HORAS",
        "fromColumn": "ID_UNIDAD_ORGANIZATIVA",
        "toTable": "UNIDAD_ORGANIZATIVA",
        "toColumn": "ID_UNIDAD_ORGANIZATIVA"
      },
      {
        "name": "fe8b3717-bb3e-4511-9f78-cf5f310759a4",
        "fromTable": "HORAS",
        "fromColumn": "ID_ROL_EQUIPO",
        "toTable": "ROL_EQUIPO",
        "toColumn": "ID_ROL_EQUIPO"
      },
      {
        "name": "809be442-0e36-4a95-b4ac-01c3efb66f7d",
        "fromTable": "HORAS",
        "fromColumn": "ID_MODELO_REFERENCIA",
        "toTable": "TIPO_TURNO",
        "toColumn": "ID_MODELO_REFERENCIA"
      },
      {
        "name": "97287cf7-6894-45df-aef0-18664a93f403",
        "fromTable": "HORAS",
        "fromColumn": "CCL_ID_UNIDAD_NEG",
        "toTable": "UNIDAD_NEGOCIO",
        "toColumn": "ID_UNIDAD_NEGOCIO"
      },
      {
        "name": "a524a576-8e10-49a3-9f5d-da68d804d1f2",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_ORG_AUSENCIA",
        "toTable": "AUSENCIAS",
        "toColumn": "ID_ORG_AUSENCIA"
      },
      {
        "name": "4f578ff4-2dfd-4c60-950a-bfb76b1feba5",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_AGRUPACION_BAJA",
        "toTable": "AGRUPACION_BAJA",
        "toColumn": "ID_AGRUPACION_BAJA"
      },
      {
        "name": "ffa01c86-a013-4735-b311-13c4ff0489cf",
        "fromTable": "HORAS",
        "fromColumn": "ID_HORA",
        "toTable": "DIM_HORA",
        "toColumn": "ID_HORA_DESGLOSE"
      },
      {
        "name": "5d0f2689-0564-4dcb-9703-9de32217a2ba",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_TIPO_CONTRATACION",
        "toTable": "TIPO_CONTRATACION",
        "toColumn": "ID_TIPO_CONTRATACION"
      },
      {
        "name": "cf0abd54-5cf0-46d2-9719-bdd739d8b52c",
        "fromTable": "HORAS",
        "fromColumn": "ID_TIPO_FESTIVO",
        "toTable": "FESTIVO",
        "toColumn": "ID_TIPO_FESTIVO"
      },
      {
        "name": "ea8baa2f-52ba-4d84-8a01-9d511662ffbb",
        "fromTable": "FECHA_NATURAL",
        "fromColumn": "ID_FECHA_NATURAL",
        "toTable": "FECHA_NATURAL_AUX",
        "toColumn": "ID_FECHA_NATURAL"
      },
      {
        "name": "41c93775-8417-4240-be74-69f46bf824af",
        "fromTable": "HORAS",
        "fromColumn": "FECHA_DESGLOSE",
        "toTable": "FECHA_NATURAL",
        "toColumn": "FECHA_NATURAL"
      },
      {
        "name": "a7a8d08b-a3e3-448d-a910-55824fe00bf2",
        "fromTable": "PLANTILLA",
        "fromColumn": "ID_EQ_ORG",
        "toTable": "EQUIPO_ORGANIZATIVO",
        "toColumn": "ID_EQ_ORG"
      },
      {
        "name": "bdcdb27f-873f-473b-8be8-c5d340ca74fa",
        "fromTable": "HORAS",
        "fromColumn": "ID_EQ_ORG",
        "toTable": "EQUIPO_ORGANIZATIVO",
        "toColumn": "ID_EQ_ORG"
      },
      {
        "name": "ff00d4b0-c663-44e5-a6fe-1ccf08827224",
        "fromTable": "HORAS",
        "fromColumn": "ID_AGRUPACION_OPERATIVA",
        "toTable": "AGRUPACION_OPERATIVA",
        "toColumn": "ID_AGRUPACION_OPERATIVA"
      }
    ],
    "roles": [
      {
        "name": "Rol_Usuarios",
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "EMPRESA",
            "filterExpression": "\n\t\t\t\t\t\t\t\tEMPRESA[ID_EMPRESA_GRUPO_TEXTO]=\n\t\t\t\t\t\t\t\tIF(\n\t\t\t\t\t\t\t\tISBLANK(LOOKUPVALUE(AUX_LOGIN_SEGURIDAD[LOGINID],AUX_LOGIN_SEGURIDAD[LOGINID],USERNAME())),\n\t\t\t\t\t\t\t\tEMPRESA[ID_EMPRESA_GRUPO_TEXTO],\n\t\t\t\t\t\t\t\tLOOKUPVALUE(AUX_LOGIN_SEGURIDAD[EMPRESA],AUX_LOGIN_SEGURIDAD[LOGINID],USERNAME(),AUX_LOGIN_SEGURIDAD[EMPRESA],EMPRESA[ID_EMPRESA_GRUPO_TEXTO]))\n\t\t\t\t\t\t\t"
          }
        ]
      }
    ]
  }
}