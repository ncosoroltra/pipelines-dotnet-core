{
  "name": "AST-AGILE_Y_ORGANIZACION",
  "compatibilityLevel": 1400,
  "model": {
    "name": "AST-AGILE_Y_ORGANIZACION",
    "culture": "es-ES",
    "dataSources": [
      {
        "type": "structured",
        "name": "Oracle/exapre_rep",
        "connectionDetails": {
          "protocol": "oracle",
          "address": {
            "server": "axpree2-scan.central.inditex.grp:11521/s_itxpre_etl"
          },
          "authentication": null,
          "query": null
        },
        "options": {
          "hierarchicalNavigation": true
        },
        "credential": {
          "AuthenticationKind": "UsernamePassword",
          "kind": "Oracle",
          "path": "axpree2-scan.central.inditex.grp:11521/s_itxpre_etl",
          "Username": "rtabupmo",
          "PrivacySetting": "Public"
        }
      },
      {
        "type": "structured",
        "name": "OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22",
        "connectionDetails": {
          "protocol": "ole-db",
          "address": {
            "options": {
              "provider": "IBMDADB2.DB2COPY1",
              "data source": "INDITEX",
              "location": "axpredb22"
            }
          },
          "authentication": null,
          "query": null
        },
        "credential": {
          "AuthenticationKind": "UsernamePassword",
          "kind": "OleDb",
          "path": "data source=INDITEX;location=axpredb22;provider=IBMDADB2.DB2COPY1",
          "Username": "rtabupmo",
          "PrivacySetting": "Public"
        }
      },
      {
        "type": "structured",
        "name": "Folder/\\\\axinfsusrv2\\compartes\\Compartes1\\PBIMapaRecursosGPS\\TABULAR",
        "connectionDetails": {
          "protocol": "folder",
          "address": {
            "path": "\\\\axinfsusrv2\\compartes\\Compartes1\\PBIMapaRecursosGPS\\TABULAR"
          },
          "authentication": null,
          "query": null
        },
        "options": {
          "hierarchicalNavigation": true
        },
        "credential": {
          "AuthenticationKind": "Windows",
          "kind": "Folder",
          "path": "\\\\axinfsusrv2\\compartes\\compartes1\\pbimaparecursosgps\\tabular",
          "Username": "Central\\srvcSSASAGILEORGAX"
        }
      },
      {
        "type": "structured",
        "name": "OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb26fin1",
        "connectionDetails": {
          "protocol": "ole-db",
          "address": {
            "options": {
              "provider": "IBMDADB2.DB2COPY1",
              "data source": "INDITEX",
              "location": "axpredb26fin1"
            }
          },
          "authentication": null,
          "query": null
        },
        "credential": {
          "AuthenticationKind": "UsernamePassword",
          "kind": "OleDb",
          "path": "data source=INDITEX;location=axpredb26fin1;provider=IBMDADB2.DB2COPY1",
          "Username": "rtabupmo"
        }
      }
    ],
    "tables": [
      {
        "name": "Pedido Ajeno",
        "columns": [
          {
            "name": "Pedido Ajeno Nombre",
            "dataType": "string",
            "sourceColumn": "Ajeno Nombre"
          },
          {
            "name": "Pedido Ajeno",
            "dataType": "string",
            "sourceColumn": "Ajeno"
          },
          {
            "name": "ID_AJENO",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_AJENO",
            "summarizeBy": "none"
          },
          {
            "name": "Pedido Ajeno ID",
            "dataType": "int64",
            "isUnique": true,
            "isNullable": false,
            "sourceColumn": "Ajeno Codigo",
            "summarizeBy": "none"
          },
          {
            "name": "Pedido Ajeno Descripcion Tecnica",
            "dataType": "string",
            "sourceColumn": "Ajeno Descripcion Tecnica"
          },
          {
            "name": "ID_SUBFAM_AJENO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_SUBFAM_AJENO",
            "summarizeBy": "none"
          },
          {
            "name": "ID_FAM_AJENO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_FAM_AJENO",
            "summarizeBy": "none"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    DMMAESTROS = Source{[Schema=\"DMMAESTROS\"]}[Data],",
                "    DIM_AJENO1 = DMMAESTROS{[Name=\"DIM_AJENO\"]}[Data],",
                " #\"Otras columnas quitadas\" = Table.SelectColumns(DIM_AJENO1,{\"ID_AJENO\", \"COD_AJENO\", \"NOMBRE_AJENO\", \"DESCRIPCION\", \"DESCRIPCION_TECNICA_AJENO\", \"ID_SUBFAM_AJENO\", \"ID_FAM_AJENO\"}),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Otras columnas quitadas\",{{\"ID_AJENO\", Int64.Type}, {\"COD_AJENO\", Int64.Type}, {\"ID_SUBFAM_AJENO\", Int64.Type}, {\"ID_FAM_AJENO\", Int64.Type}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"DESCRIPCION\", \"Ajeno\"}, {\"NOMBRE_AJENO\", \"Ajeno Nombre\"}, {\"COD_AJENO\", \"Ajeno Codigo\"}, {\"DESCRIPCION_TECNICA_AJENO\", \"Ajeno Descripcion Tecnica\"}})",
                "in",
                "    #\"Columnas con nombre cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Divisa",
        "columns": [
          {
            "name": "Divisa ID",
            "dataType": "int64",
            "isUnique": true,
            "isNullable": false,
            "sourceColumn": "Divisa Codigo",
            "summarizeBy": "none"
          },
          {
            "name": "Divisa",
            "dataType": "string",
            "sourceColumn": "Divisa"
          },
          {
            "name": "Divisa Simbolo",
            "dataType": "string",
            "sourceColumn": "Divisa Simbolo"
          },
          {
            "name": "ID_DIVISA",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_DIVISA",
            "summarizeBy": "none"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    DMMAESTROS = Source{[Schema=\"DMMAESTROS\"]}[Data],",
                "    DIM_DIVISA1 = DMMAESTROS{[Name=\"DIM_DIVISA\"]}[Data],",
                "     #\"Otras columnas quitadas\" = Table.SelectColumns(DIM_DIVISA1,{\"ID_DIVISA\", \"COD_DIVISA\", \"DESC_DIVISA\", \"SIMBOLO\"}),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Otras columnas quitadas\",{{\"ID_DIVISA\", Int64.Type}, {\"COD_DIVISA\", Int64.Type}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"COD_DIVISA\", \"Divisa Codigo\"}, {\"DESC_DIVISA\", \"Divisa\"}, {\"SIMBOLO\", \"Divisa Simbolo\"}})",
                "in",
                "    #\"Columnas con nombre cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Ajeno Familia",
        "columns": [
          {
            "name": "ID_FAM_AJENO",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_FAM_AJENO",
            "summarizeBy": "none"
          },
          {
            "name": "Ajeno Familia ID",
            "dataType": "int64",
            "isUnique": true,
            "sourceColumn": "Familia Ajeno Codigo",
            "summarizeBy": "none"
          },
          {
            "name": "Ajeno Familia",
            "dataType": "string",
            "sourceColumn": "Familia Ajeno"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    DMMAESTROS = Source{[Schema=\"DMMAESTROS\"]}[Data],",
                "    DIM_FAM_AJENO1 = DMMAESTROS{[Name=\"DIM_FAM_AJENO\"]}[Data],",
                "   #\"Otras columnas quitadas\" = Table.SelectColumns(DIM_FAM_AJENO1,{\"ID_FAM_AJENO\", \"COD_FAM\", \"DESCRIPCION\"}),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Otras columnas quitadas\",{{\"ID_FAM_AJENO\", Int64.Type}, {\"COD_FAM\", Int64.Type}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"DESCRIPCION\", \"Familia Ajeno\"}, {\"COD_FAM\", \"Familia Ajeno Codigo\"}})",
                "in",
                "    #\"Columnas con nombre cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Ajeno Subfamilia",
        "columns": [
          {
            "name": "ID_SUBFAM_AJENO",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_SUBFAM_AJENO",
            "summarizeBy": "none"
          },
          {
            "name": "Ajeno Subfamilia ID",
            "dataType": "int64",
            "isUnique": true,
            "isNullable": false,
            "sourceColumn": "Subfamilia Ajeno Codigo",
            "summarizeBy": "none"
          },
          {
            "name": "Ajeno Subfamilia",
            "dataType": "string",
            "sourceColumn": "Subfamilia Ajeno"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    DMMAESTROS = Source{[Schema=\"DMMAESTROS\"]}[Data],",
                "    DIM_SUBFAM_AJENO1 = DMMAESTROS{[Name=\"DIM_SUBFAM_AJENO\"]}[Data],",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(DIM_SUBFAM_AJENO1,{\"ID_SUBFAM_AJENO\", \"COD_SUBFAM\", \"DESCRIPCION\"}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Otras columnas quitadas\",{{\"COD_SUBFAM\", \"Subfamilia Ajeno Codigo\"}, {\"DESCRIPCION\", \"Subfamilia Ajeno\"}}),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columnas con nombre cambiado\",{{\"ID_SUBFAM_AJENO\", Int64.Type}, {\"Subfamilia Ajeno Codigo\", Int64.Type}})",
                "in",
                "    #\"Tipo cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Unidad Compra",
        "columns": [
          {
            "name": "ID_UNIDAD_COMPRA",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_UNIDAD_COMPRA",
            "summarizeBy": "none"
          },
          {
            "name": "Unidad Compra",
            "dataType": "string",
            "sourceColumn": "Unidad Compra"
          },
          {
            "name": "Unidad Compra ID",
            "dataType": "int64",
            "sourceColumn": "Unidad Compra ID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"select uc.ID_UNIDAD_COMPRA, uc.COD_UNIDAD_COMPRA, uc.DESCRIPCION",
                "\tfrom DMMAESTROS.DIM_UNIDAD_COMPRA uc",
                "\twhere EXISTS (select 1 from DMFINANCIERO.MIC_FACT_FACTURA_SISTEMAS f where f.ID_UNI_COMPRA =  uc.ID_UNIDAD_COMPRA )",
                "        OR ",
                "\tEXISTS (select 1 from DMFINANCIERO.MIC_FACT_PEDIDO_COMPRA_SIST pd where pd.ID_UNIDAD_COMPRA =  uc.ID_UNIDAD_COMPRA)",
                "\tOR ",
                "\tEXISTS (select 1 from DMFINANCIERO.MIC_FACT_PRESUP_COMPRA_SIST ps where ps.ID_UNIDAD_COMPRA =  uc.ID_UNIDAD_COMPRA )",
                "\"),",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(Origen,{\"ID_UNIDAD_COMPRA\", \"COD_UNIDAD_COMPRA\", \"DESCRIPCION\"}),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Otras columnas quitadas\",{{\"ID_UNIDAD_COMPRA\", Int64.Type}, {\"COD_UNIDAD_COMPRA\", Int64.Type}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"COD_UNIDAD_COMPRA\", \"Unidad Compra ID\"}, {\"DESCRIPCION\", \"Unidad Compra\"}})",
                "in",
                "    #\"Columnas con nombre cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Area",
        "columns": [
          {
            "name": "ID_AREA_SISTEMA",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_AREA_SISTEMA",
            "summarizeBy": "none"
          },
          {
            "name": "Area ID",
            "dataType": "int64",
            "sourceColumn": "Area Sistema Codigo",
            "summarizeBy": "none"
          },
          {
            "name": "ID_RESPONSABLE_AREA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_RESPONSABLE_AREA"
          },
          {
            "name": "ID_RECURSO_PROYECTO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_RECURSO_PROYECTO"
          },
          {
            "name": "Departamento",
            "dataType": "string",
            "sourceColumn": "Departamento"
          },
          {
            "name": "Area",
            "dataType": "string",
            "sourceColumn": "Area Sistemas"
          },
          {
            "type": "calculated",
            "name": "CECO",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUX_AREACECO'[CECO], TRUE () ),",
              "    FILTER (",
              "      'AUX_AREACECO',",
              "       'AUX_AREACECO'[ID_AREA]= 'Area'[Area ID]",
              "    )",
              ")"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Origen = Table.NestedJoin(Dim_Area_Sistema, {\"ID_RESPONSABLE_AREA\"}, Dim_Responsable_Area, {\"ID_RECURSO_PROYECTO\"}, \"Dim_Responsable_Area\", JoinKind.LeftOuter),",
                "    #\"Se expandió Dim_Responsable_Area\" = Table.ExpandTableColumn(Origen, \"Dim_Responsable_Area\", {\"ID_RECURSO_PROYECTO\", \"DESCRIPCION\", \"LOGIN_RECURSO_PROYECTO\"}, {\"Dim_Responsable_Area.ID_RECURSO_PROYECTO\", \"Dim_Responsable_Area.DESCRIPCION\", \"Dim_Responsable_Area.LOGIN_RECURSO_PROYECTO\"}),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Se expandió Dim_Responsable_Area\",{{\"Dim_Responsable_Area.ID_RECURSO_PROYECTO\", Int64.Type}, {\"Dim_Responsable_Area.DESCRIPCION\", type text}, {\"Dim_Responsable_Area.LOGIN_RECURSO_PROYECTO\", type text}}),",
                "    #\"Poner En Mayúsculas Cada Palabra\" = Table.TransformColumns(#\"Tipo cambiado\",{{\"Dim_Responsable_Area.DESCRIPCION\", Text.Proper, type text}}),",
                "    #\"Texto en mayúsculas\" = Table.TransformColumns(#\"Poner En Mayúsculas Cada Palabra\",{{\"Dim_Responsable_Area.LOGIN_RECURSO_PROYECTO\", Text.Upper, type text}}),",
                "   ",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Texto en mayúsculas\",{{\"DESCRIPCION_AREA_SISTEMAS\", \"Area Sistemas\"}, {\"COD_AREA_SIST\", \"Area Sistema Codigo\"}, {\"Dim_Responsable_Area.DESCRIPCION\", \"Responsable Area Sistema\"}, {\"Dim_Responsable_Area.LOGIN_RECURSO_PROYECTO\", \"Responsable Area Sistema Login\"}, {\"Dim_Responsable_Area.ID_RECURSO_PROYECTO\", \"ID_RECURSO_PROYECTO\"}, {\"DESCRIPCION_DEPARTAMENTO\", \"Departamento\"}}),",
                "    #\"Columnas quitadas\" = Table.RemoveColumns(#\"Columnas con nombre cambiado\",{\"Responsable Area Sistema\", \"Responsable Area Sistema Login\"})",
                "in",
                "    #\"Columnas quitadas\""
              ]
            }
          }
        ]
      },
      {
        "name": "Cuenta Principal",
        "columns": [
          {
            "name": "ID_CUENTA_PRINCIPAL",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_CUENTA_PRINCIPAL",
            "summarizeBy": "none"
          },
          {
            "name": "Cuenta Principal",
            "dataType": "string",
            "sourceColumn": "Cuenta Principal"
          },
          {
            "name": "Cuenta Principal ID",
            "dataType": "string",
            "sourceColumn": "Cuenta Principal Codigo"
          },
          {
            "type": "calculated",
            "name": "Cuenta Principal ID & Descripcion",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "'Cuenta Principal'[Cuenta Principal ID] &\" \" & 'Cuenta Principal'[Cuenta Principal]"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Origen = Dim_Cuenta_Principal,",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(Origen,{{\"ID_CUENTA_PRINCIPAL\", Int64.Type}}),",
                "#\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"COD_CTA_PRINCIPAL\", \"Cuenta Principal Codigo\"}, {\"DESCRIPCION\", \"Cuenta Principal\"}})",
                "in",
                "    #\"Columnas con nombre cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Cuenta Grupo",
        "columns": [
          {
            "name": "Cuenta Grupo",
            "dataType": "string",
            "sourceColumn": "DESC_LARGA_CTA_GRUPO_N4"
          },
          {
            "name": "ID_CUENTA_GRUPO",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_CUENTA_GRUPO",
            "summarizeBy": "none"
          },
          {
            "name": "Cuenta Grupo ID",
            "dataType": "string",
            "sourceColumn": "COD_CTA_GRUPO_N4"
          },
          {
            "name": "Cuenta Grupo Tipo",
            "dataType": "string",
            "sourceColumn": "Tipo Cuenta Grupo"
          },
          {
            "type": "calculated",
            "name": "Cuenta Grupo ID & Descripcion",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "'Cuenta Grupo'[Cuenta Grupo ID] & \" \" & 'Cuenta Grupo'[Cuenta Grupo]"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    DMCONTABLE = Source{[Schema=\"DMCONTABLE\"]}[Data],",
                "    DIM_CUENTA_GRUPO1 = DMCONTABLE{[Name=\"DIM_CUENTA_GRUPO\"]}[Data],",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(DIM_CUENTA_GRUPO1,{\"ID_CUENTA_GRUPO\", \"COD_CTA_GRUPO_N4\", \"DESC_LARGA_CTA_GRUPO_N4\"}),",
                "    #\"Columna condicional agregada\" = Table.AddColumn(#\"Otras columnas quitadas\", \"Tipo Cuenta Grupo\", each if [COD_CTA_GRUPO_N4] = \"6029\" then \"INV\" else if [COD_CTA_GRUPO_N4] = \"7028\" then \"ING\" else if not Text.StartsWith([COD_CTA_GRUPO_N4], \"6\") then \"INV\" else \"GASTO\"),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columna condicional agregada\",{{\"ID_CUENTA_GRUPO\", Int64.Type}})",
                "in",
                "    #\"Tipo cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Cuenta Local",
        "columns": [
          {
            "name": "Cuenta Local ID",
            "dataType": "string",
            "sourceColumn": "COD_CTA_N7"
          },
          {
            "name": "Cuenta Local",
            "dataType": "string",
            "sourceColumn": "DESC_CUENTA_LARGA_N7"
          },
          {
            "name": "ID_CUENTA_EMPRESA",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_CUENTA_EMPRESA"
          },
          {
            "type": "calculated",
            "name": "Cuenta Local ID &  Descripcion",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "'Cuenta Local'[Cuenta Local ID] &\" \" & 'Cuenta Local'[Cuenta Local]"
          },
          {
            "name": "Cuenta Auxiliar",
            "dataType": "int64",
            "sourceColumn": "COD_CTA_AUXILIAR"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Origen = Dim_Cuenta_Empresa,",
                "    #\"Duplicados quitados\" = Table.Distinct(Origen, {\"ID_CUENTA_EMPRESA\"})",
                "in",
                "    #\"Duplicados quitados\""
              ]
            }
          }
        ]
      },
      {
        "name": "Factura Estado",
        "columns": [
          {
            "name": "ID_ESTADO_FACTURA",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_ESTADO_FACTURA",
            "summarizeBy": "none"
          },
          {
            "name": "Factura Estado",
            "dataType": "string",
            "sourceColumn": "Estado Factura"
          },
          {
            "name": "Factura Estado Agrupado",
            "dataType": "string",
            "sourceColumn": "Estado Agrupado Factura"
          },
          {
            "name": "Factura Estado ID",
            "dataType": "int64",
            "isUnique": true,
            "isNullable": false,
            "sourceColumn": "Estado Factura Codigo",
            "summarizeBy": "none"
          },
          {
            "name": "Factura vs Provision",
            "dataType": "string",
            "sourceColumn": "AGRUP_FACTURA"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"select ID_ESTADO_FACTURA, COD_ESTADO_FACTURA, DESCRIPCION from DMFINANCIERO.DIM_ESTADO_FACTURA",
                "    UNION",
                "    Select -2 ID_ESTADO_FACTURA,",
                "    -2 COD_ESTADO_FACTURA,",
                "    'Pedido' DESCRIPCION",
                "    FROM DUAL",
                "    UNION",
                "    Select -3 ID_ESTADO_FACTURA,",
                "    -3 COD_ESTADO_FACTURA,",
                "    'Presupuesto' DESCRIPCION",
                "    FROM DUAL\"),",
                "    #\"Agregar Columna AGRUP_FACTURA\" = Table.AddColumn(Origen, \"AGRUP_FACTURA\", each if [COD_ESTADO_FACTURA] = 0 then \"Provisiones\" else if [COD_ESTADO_FACTURA] = -3 then \"Presupuesto\" else if [COD_ESTADO_FACTURA] = -2 then \"Pedido\" else \"Facturas\"),",
                "    #\"Columna condicional agregada\" = Table.AddColumn(#\"Agregar Columna AGRUP_FACTURA\", \"ESTADO_AGRUP_FACTURA\", each if [COD_ESTADO_FACTURA] = 0 then \"Provisiones\" else if [COD_ESTADO_FACTURA] = 228 then \"Facturas SFI - 030 Pendiente Validar\" else if [COD_ESTADO_FACTURA] = 226 then \"Facturas SFI - 010 Pendiente Revisar\" else if [COD_ESTADO_FACTURA] = -3 then \"Presupuesto\" else if [COD_ESTADO_FACTURA] = -2 then \"Pedido\" else \"Facturas SFI - Contabilizadas\"),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columna condicional agregada\",{{\"ID_ESTADO_FACTURA\", Int64.Type}, {\"COD_ESTADO_FACTURA\", Int64.Type}}),",
                "#\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"DESCRIPCION\", \"Estado Factura\"}, {\"COD_ESTADO_FACTURA\", \"Estado Factura Codigo\"}, {\"ESTADO_AGRUP_FACTURA\", \"Estado Agrupado Factura\"}}),",
                "    #\"Valor reemplazado1\" = Table.ReplaceValue(#\"Columnas con nombre cambiado\",\"000.PREVISIÓN\",\"000.PROVISIÓN\",Replacer.ReplaceText,{\"Estado Factura\"})",
                "in",
                "    #\"Valor reemplazado1\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Factura Grupo - Estado",
            "levels": [
              {
                "name": "Factura Estado Agrupado",
                "ordinal": 1,
                "column": "Factura Estado Agrupado"
              },
              {
                "name": "Factura Estado",
                "ordinal": 2,
                "column": "Factura Estado"
              },
              {
                "name": "Factura vs Provision",
                "ordinal": 0,
                "column": "Factura vs Provision"
              }
            ]
          }
        ]
      },
      {
        "name": "Pedido Estado",
        "columns": [
          {
            "name": "ID_ESTADO_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_ESTADO_PEDIDO",
            "summarizeBy": "none"
          },
          {
            "name": "Pedido Estado ID",
            "dataType": "int64",
            "sourceColumn": "Estado Pedido Codigo"
          },
          {
            "name": "Pedido Estado anterior",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Estado Pedido"
          },
          {
            "name": "Pedido Estado",
            "dataType": "string",
            "sourceColumn": "Estado Pedido Final"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"SELECT ID_ESTADO_PEDIDO, COD_ESTADO_PEDIDO, DESCRIPCION from DMFINANCIERO.DIM_ESTADO_PEDIDO\"),",
                " #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Origen\",{{\"ID_ESTADO_PEDIDO\", Int64.Type}, {\"COD_ESTADO_PEDIDO\", Int64.Type}}),",
                "#\"Columnas con nombre cambiado\" = Table.RenameColumns( #\"Tipo cambiado\",{{\"DESCRIPCION\", \"Estado Pedido\"}, {\"COD_ESTADO_PEDIDO\", \"Estado Pedido Codigo\"}}),",
                "    #\"Personalizada agregada\" = Table.AddColumn(#\"Columnas con nombre cambiado\", \"Personalizado\", each if [Estado Pedido Codigo]=-1 then \"Presupuesto\" else [Estado Pedido]),",
                "    #\"Columnas con nombre cambiado1\" = Table.RenameColumns(#\"Personalizada agregada\",{{\"Personalizado\", \"Estado Pedido Final\"}})",
                "in",
                "   #\"Columnas con nombre cambiado1\""
              ]
            }
          }
        ]
      },
      {
        "name": "Pedido",
        "columns": [
          {
            "name": "Pedido ID",
            "dataType": "int64",
            "isNullable": false,
            "sourceColumn": "Pedido ID",
            "summarizeBy": "none"
          },
          {
            "name": "ID_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_PEDIDO",
            "summarizeBy": "none"
          },
          {
            "name": "Pedido",
            "dataType": "string",
            "sourceColumn": "Pedido"
          },
          {
            "name": "Pedido ID  & Descripcion",
            "dataType": "string",
            "sourceColumn": "Pedido Codigo & Descripcion"
          },
          {
            "name": "Naturaleza Compra",
            "dataType": "string",
            "sourceColumn": "NATURALEZA_COMPRA"
          },
          {
            "name": "Fecha Desde",
            "dataType": "dateTime",
            "sourceColumn": "Fecha_Desde"
          },
          {
            "name": "Fecha Hasta",
            "dataType": "dateTime",
            "sourceColumn": "Fecha_Hasta"
          },
          {
            "name": "Tipo Pedido",
            "dataType": "string",
            "sourceColumn": "DESCRIPCION_TIPO_PEDIDO"
          },
          {
            "type": "calculated",
            "name": "Fecha Alta Pedido",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_FECHA_PEDIDO], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',",
              "       'Pedido Compra Hecho'[ID_PEDIDO] = Pedido[ID_PEDIDO]",
              "    )",
              ")"
            ],
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Estimado Cierre",
            "dataType": "decimal",
            "isDataTypeInferred": false,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXESTIMADOCIERRE'[Suma de TOTAL COST], TRUE () ),",
              "    FILTER (",
              "        'AUXESTIMADOCIERRE',",
              "       'AUXESTIMADOCIERRE'[PURCHASE ORDER NUMBER] = Pedido[Pedido ID]",
              "    )",
              ")",
              ""
            ],
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Hastag",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXPEDIDOHASTAGEQUIPPRO'[HASTAG], TRUE () ),",
              "    FILTER (",
              "        'AUXPEDIDOHASTAGEQUIPPRO',",
              "       'AUXPEDIDOHASTAGEQUIPPRO'[PEDIDO] = Pedido[Pedido ID]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Producto",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXPEDIDOHASTAGEQUIPPRO'[PRODUCTO], TRUE () ),",
              "    FILTER (",
              "        'AUXPEDIDOHASTAGEQUIPPRO',",
              "       'AUXPEDIDOHASTAGEQUIPPRO'[PEDIDO] = Pedido[Pedido ID]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Equipo",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXPEDIDOHASTAGEQUIPPRO'[EQUIPO], TRUE () ),",
              "    FILTER (",
              "        'AUXPEDIDOHASTAGEQUIPPRO',",
              "       'AUXPEDIDOHASTAGEQUIPPRO'[PEDIDO] = Pedido[Pedido ID]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Fabricante",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXPEDIDOHASTAGEQUIPPRO'[FABRICANTE], TRUE () ),",
              "    FILTER (",
              "        'AUXPEDIDOHASTAGEQUIPPRO',",
              "       'AUXPEDIDOHASTAGEQUIPPRO'[PEDIDO] = Pedido[Pedido ID]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Estimado Cierre Ejercicio",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXESTIMADOCIERRE'[Suma de TOTAL COST EJERCICIO], TRUE () ),",
              "    FILTER (",
              "        'AUXESTIMADOCIERRE',",
              "       'AUXESTIMADOCIERRE'[PURCHASE ORDER NUMBER] = Pedido[Pedido ID]",
              "    )",
              ")"
            ],
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Naturaleza Compra Rappel",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(Pedido[Naturaleza Compra]=\"Horas\" || Pedido[Naturaleza Compra]=\"Proyecto Cerrado\" || Pedido[Naturaleza Compra]=\"Servicio Consumo\" || Pedido[Naturaleza Compra]=\"Servicio\",\"Aplica Rappel\",IF(Pedido[Naturaleza Compra]=\"Descuento\",\"Descuento\",IF(ISBLANK(Pedido[Naturaleza Compra]),BLANK(),\"No Aplica Rappel\")))"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, \"select ID_PEDIDO, COD_PEDIDO, DESCRIPCION_PEDIDO, NATURALEZA_COMPRA, Fecha_Desde, Fecha_Hasta, DESCRIPCION_TIPO_PEDIDO from  DMFINANCIERO.DIM_PEDIDO p ",
                "where exists ( select 1 from DMFINANCIERO.MIC_FACT_PEDIDO_COMPRA_SIST F WHERE F.ID_PEDIDO= p. ID_PEDIDO)",
                " or exists ( select 1 from DMFINANCIERO.MIC_FACT_FACTURA_SISTEMAS F WHERE F.ID_PEDIDO= p. ID_PEDIDO) \"),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(Origen,{{\"ID_PEDIDO\", Int64.Type}, {\"COD_PEDIDO\", Int64.Type}}),",
                "    #\"Columna condicional agregada\" = Table.AddColumn(#\"Tipo cambiado\", \"Pedido Codigo & Descripcion\", each if [DESCRIPCION_PEDIDO] = null then Number.ToText([COD_PEDIDO]) else  Number.ToText([COD_PEDIDO]) & \" \" & [DESCRIPCION_PEDIDO]),",
                "    #\"Columnas con nombre cambiado1\" = Table.RenameColumns(#\"Columna condicional agregada\",{{\"FECHA_DESDE\", \"Fecha_Desde\"}, {\"FECHA_HASTA\", \"Fecha_Hasta\"}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns( #\"Columnas con nombre cambiado1\",{{\"COD_PEDIDO\", \"Pedido ID\"}, {\"DESCRIPCION_PEDIDO\", \"Pedido\"}}),",
                "    #\"Consulta anexada\" = Table.Combine({#\"Columnas con nombre cambiado\", Pedido_NA}),",
                "    #\"Filas ordenadas\" = Table.Sort(#\"Consulta anexada\",{{\"ID_PEDIDO\", Order.Ascending}})",
                "in",
                "    #\"Filas ordenadas\""
              ]
            }
          }
        ]
      },
      {
        "name": "Tipo Gestor",
        "columns": [
          {
            "name": "Tipo Gestor",
            "dataType": "string",
            "sourceColumn": "Tipo Gestor"
          },
          {
            "name": "ID_TIPO_GESTOR",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_TIPO_GESTOR",
            "summarizeBy": "none"
          },
          {
            "name": "Tipo Gestor ID",
            "dataType": "int64",
            "isUnique": true,
            "isNullable": false,
            "sourceColumn": "Tipo Gestor Codigo",
            "summarizeBy": "none"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"select ID_TIPO_GESTOR, COD_TIPO_GESTOR, DESCRIPCION from DMFINANCIERO.DIM_TIPO_GESTOR\"),",
                "#\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Origen\",{{\"COD_TIPO_GESTOR\", \"Tipo Gestor Codigo\"}, {\"DESCRIPCION\", \"Tipo Gestor\"}}),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columnas con nombre cambiado\",{{\"ID_TIPO_GESTOR\", Int64.Type}, {\"Tipo Gestor Codigo\", Int64.Type}})",
                "in",
                "    #\"Tipo cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Presupuesto Tipo",
        "columns": [
          {
            "name": "ID_TIPO_PRESUP",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_TIPO_PRESUP",
            "summarizeBy": "none"
          },
          {
            "name": "Presupuesto Tipo ID",
            "dataType": "int64",
            "isUnique": true,
            "isNullable": false,
            "sourceColumn": "Tipo Presupuesto Codigo",
            "summarizeBy": "none"
          },
          {
            "name": "Presupuesto Tipo",
            "dataType": "string",
            "sourceColumn": "Tipo Presupuesto"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    DMFINANCIERO = Source{[Schema=\"DMFINANCIERO\"]}[Data],",
                "    DIM_TIPO_PRESUP1 = DMFINANCIERO{[Name=\"DIM_TIPO_PRESUP\"]}[Data],",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(DIM_TIPO_PRESUP1,{\"ID_TIPO_PRESUP\", \"COD_TIPO_PRESUP\", \"DESCRIPCION\"}),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Otras columnas quitadas\",{{\"ID_TIPO_PRESUP\", Int64.Type}, {\"COD_TIPO_PRESUP\", Int64.Type}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"COD_TIPO_PRESUP\", \"Tipo Presupuesto Codigo\"}, {\"DESCRIPCION\", \"Tipo Presupuesto\"}})",
                "",
                "in",
                "     #\"Columnas con nombre cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Sociedad",
        "columns": [
          {
            "name": "ID_EMPRESA_GRUPO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMPRESA_GRUPO",
            "summarizeBy": "none"
          },
          {
            "name": "Sociedad",
            "dataType": "string",
            "sourceColumn": "Sociedad"
          },
          {
            "name": "Sociedad Mercado",
            "dataType": "string",
            "sourceColumn": "Sociedad Mercado"
          },
          {
            "name": "Sociedad ID",
            "dataType": "int64",
            "isUnique": true,
            "sourceColumn": "Sociedad ID",
            "summarizeBy": "none"
          },
          {
            "name": "ID_EMPRESA",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_EMPRESA",
            "summarizeBy": "none"
          },
          {
            "name": "Sociedad Razon Social Completa",
            "dataType": "string",
            "sourceColumn": "Sociedad Razon Social Completa"
          },
          {
            "name": "Sociedad Mercado ID",
            "dataType": "int64",
            "sourceColumn": "Sociedad Mercado ID"
          },
          {
            "type": "calculated",
            "name": "Sociedad ID & Razon Social Completa",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "Sociedad[Sociedad ID] & \" \" & Sociedad[Sociedad Razon Social Completa]"
          },
          {
            "type": "calculated",
            "name": "Tipo Empresa",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Empresa Proveedor'[Tipo Empresa], TRUE () ),",
              "    FILTER (",
              "        'Empresa Proveedor',       'Empresa Proveedor'[Empresa Proveedor ID] = 'Sociedad'[Sociedad ID]",
              "    )",
              ")"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "   Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"select ID_EMPRESA, COD_EMPRESA_DB2, DESCRIPCION,   RAZON_SOCIAL_COMPLETA,  COD_PAIS, DESCRIPCION_PAIS, ID_EMPRESA_GRUPO ",
                "      from DMMAESTROS.DIM_EMPRESA \"),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(Origen,{{\"ID_EMPRESA\", Int64.Type}, {\"ID_EMPRESA_GRUPO\", Int64.Type}, {\"COD_PAIS\", Int64.Type}, {\"COD_EMPRESA_DB2\", Int64.Type}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{ {\"DESCRIPCION_PAIS\", \"Sociedad Mercado\"}, {\"DESCRIPCION\", \"Sociedad\"},  {\"RAZON_SOCIAL_COMPLETA\", \"Sociedad Razon Social Completa\"}, {\"COD_PAIS\", \"Sociedad Mercado ID\"},{\"COD_EMPRESA_DB2\", \"Sociedad ID\"}})",
                "    ",
                "in",
                "#\"Columnas con nombre cambiado\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Mercado - Sociedad",
            "levels": [
              {
                "name": "Sociedad Mercado",
                "ordinal": 0,
                "column": "Sociedad Mercado"
              },
              {
                "name": "Sociedad Razon Social Completa",
                "ordinal": 1,
                "column": "Sociedad Razon Social Completa"
              }
            ]
          }
        ]
      },
      {
        "name": "Sociedad Grupo",
        "columns": [
          {
            "name": "ID_CADENA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CADENA",
            "summarizeBy": "none"
          },
          {
            "name": "ID_EMPRESA_GRUPO",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_EMPRESA_GRUPO",
            "summarizeBy": "none"
          },
          {
            "name": "Sociedad Grupo ID",
            "dataType": "int64",
            "sourceColumn": "Grupo Sociedad Codigo"
          },
          {
            "name": "Sociedad Grupo Mercado ID",
            "dataType": "int64",
            "sourceColumn": "Grupo Sociedad Mercado Codigo"
          },
          {
            "name": "Sociedad Grupo Razon Social",
            "dataType": "string",
            "sourceColumn": "Grupo Sociedad Razon Social"
          },
          {
            "name": "Sociedad Grupo Nombre Comercial",
            "dataType": "string",
            "sourceColumn": "Grupo Sociedad Nombre Comercial"
          },
          {
            "name": "Sociedad Grupo Mercado ISO",
            "dataType": "string",
            "sourceColumn": "Grupo Sociedad Mercado ISO"
          },
          {
            "name": "Sociedad Grupo Mercado",
            "dataType": "string",
            "sourceColumn": "Grupo Sociedad Mercado"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "     Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"SELECT ID_EMPRESA_GRUPO, COD_EMPRESA_GRUPO, COD_PAIS, RAZON_SOCIAL, ",
                "       NOMBRE_COMERCIAL, PAIS_ISO, PAIS,coalesce(ID_CADENA,0) ID_CADENA",
                "\tFROM DMMAESTROS.DIM_EMPRESA_GRUPO\"),    ",
                "      #\"Tipo cambiado\" = Table.TransformColumnTypes(Origen,{{\"COD_EMPRESA_GRUPO\", Int64.Type}, {\"COD_PAIS\", Int64.Type}, {\"ID_EMPRESA_GRUPO\", Int64.Type}, {\"ID_CADENA\", Int64.Type}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"COD_EMPRESA_GRUPO\", \"Grupo Sociedad Codigo\"}, {\"RAZON_SOCIAL\", \"Grupo Sociedad Razon Social\"}, {\"NOMBRE_COMERCIAL\", \"Grupo Sociedad Nombre Comercial\"}, {\"PAIS_ISO\", \"Grupo Sociedad Mercado ISO\"}, {\"PAIS\", \"Grupo Sociedad Mercado\"}, {\"COD_PAIS\", \"Grupo Sociedad Mercado Codigo\"}})",
                "in",
                "    #\"Columnas con nombre cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Sociedad Cadena",
        "columns": [
          {
            "name": "ID_CADENA_AD",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_CADENA_AD",
            "summarizeBy": "none"
          },
          {
            "name": "Sociedad Cadena",
            "dataType": "string",
            "sourceColumn": "Sociedad Cadena"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"SELECT DISTINCT   ID_CADENA_AD,   CADENA_AD   FROM DMCOMERCIAL.DIM_CADENA  ",
                "        UNION ALL",
                "    SELECT 0,'MULTICADENA' FROM DUAL\"),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(Origen,{{\"ID_CADENA_AD\", Int64.Type}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"CADENA_AD\", \"Sociedad Cadena\"}})",
                "in",
                "    #\"Columnas con nombre cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "COP",
        "columns": [
          {
            "name": "ID_CODIGO_PRESUPUESTARIO",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_CODIGO_PRESUPUESTARIO",
            "summarizeBy": "none"
          },
          {
            "name": "COP ID",
            "dataType": "int64",
            "sourceColumn": "Partida Presupuestaria Codigo"
          },
          {
            "name": "COP",
            "dataType": "string",
            "sourceColumn": "Partida Presupuestaria"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"select ID_CODIGO_PRESUPUESTARIO, COD_CODIGO_PRESUPUESTARIO, DESCRIPCION from DMFINANCIERO.DIM_CODIGO_PRESUPUESTARIO \"),",
                "#\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Origen\",{{\"ID_CODIGO_PRESUPUESTARIO\", Int64.Type}, {\"COD_CODIGO_PRESUPUESTARIO\", Int64.Type}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"COD_CODIGO_PRESUPUESTARIO\", \"Partida Presupuestaria Codigo\"}, {\"DESCRIPCION\", \"Partida Presupuestaria\"}})",
                "in",
                "    #\"Columnas con nombre cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Factura Informacion Provision",
        "columns": [
          {
            "name": "Provision Factura Codigo",
            "dataType": "int64",
            "sourceColumn": "Provision Factura Codigo"
          },
          {
            "name": "Provision Factura ID",
            "dataType": "string",
            "sourceColumn": "Provision Factura ID"
          },
          {
            "name": "Provision Factura Descripcion",
            "dataType": "string",
            "sourceColumn": "Provision Factura Descripcion"
          },
          {
            "name": "Provision Revierte",
            "dataType": "string",
            "sourceColumn": "PROVISION_REVIERTE"
          },
          {
            "name": "ID_INFO_PREV_FACTURA",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ID_INFO_PREV_FACTURA"
          },
          {
            "type": "calculated",
            "name": "Cadena",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUX_PROVISION_FACTURA'[PERFIL_RECURSO], TRUE () ),",
              "    FILTER (",
              "        'AUX_PROVISION_FACTURA',       'AUX_PROVISION_FACTURA'[ID_PREVISION_FACTURA]= 'Factura Informacion Provision'[Provision Factura Codigo]",
              "))"
            ]
          },
          {
            "type": "calculated",
            "name": "OT",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUX_PROVISION_FACTURA'[ID_OT], TRUE () ),",
              "    FILTER (",
              "        'AUX_PROVISION_FACTURA',       'AUX_PROVISION_FACTURA'[ID_PREVISION_FACTURA]= 'Factura Informacion Provision'[Provision Factura Codigo]",
              "))"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Origen = Dim_info_Prev_Factura,",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(Origen,{\"ID_INFO_PREV_FACTURA\", \"COD_PREV_FACTURA\", \"PROVISION_REVIERTE\", \"Provision Factura ID\", \"Provision Factura Descripcion\"}),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Otras columnas quitadas\",{{\"COD_PREV_FACTURA\", Int64.Type}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"COD_PREV_FACTURA\", \"Provision Factura Codigo\"}})",
                "in",
                "    #\"Columnas con nombre cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Pedido Estado Linea",
        "columns": [
          {
            "name": "ID_ESTADO_LINEA_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_ESTADO_LINEA_PEDIDO",
            "summarizeBy": "none"
          },
          {
            "name": "Pedido Estado Linea ID",
            "dataType": "int64",
            "sourceColumn": "Estado Linea Pedido Codigo",
            "summarizeBy": "none"
          },
          {
            "name": "Pedido Estado Linea",
            "dataType": "string",
            "sourceColumn": "Estado Linea Pedido"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"select ID_ESTADO_LINEA_PEDIDO, COD_ESTADO_LINEA_PEDIDO, DESCRIPCION from DMFINANCIERO.DIM_ESTADO_LINEA_PEDIDO\"),",
                " #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Origen\",{{\"ID_ESTADO_LINEA_PEDIDO\", Int64.Type}, {\"COD_ESTADO_LINEA_PEDIDO\", Int64.Type}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"DESCRIPCION\", \"Estado Linea Pedido\"}, {\"COD_ESTADO_LINEA_PEDIDO\", \"Estado Linea Pedido Codigo\"}})",
                "in",
                "    #\"Columnas con nombre cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Centro Distribucion",
        "columns": [
          {
            "name": "ID_LOCALIZACION_COMPRA",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_LOCALIZACION_COMPRA",
            "summarizeBy": "none"
          },
          {
            "name": "Centro Destribucion",
            "dataType": "string",
            "sourceColumn": "Centro Destribucion"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"select ID_LOCALIZACION_COMPRA, DESCRIPCION from DMFINANCIERO.DIM_LOCALIZACION_COMPRA\"),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Origen\",{{\"ID_LOCALIZACION_COMPRA\", Int64.Type}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"DESCRIPCION\", \"Centro Destribucion\"}})",
                "in",
                "    #\"Columnas con nombre cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Empresa Proveedor",
        "columns": [
          {
            "name": "ID_EMPRESA",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_EMPRESA"
          },
          {
            "name": "Empresa Proveedor",
            "dataType": "string",
            "sourceColumn": "Empresa Proveedor"
          },
          {
            "name": "Mercado Proveedor",
            "dataType": "string",
            "sourceColumn": "Mercado Proveedor"
          },
          {
            "name": "Empresa Proveedor ID",
            "dataType": "int64",
            "sourceColumn": "Empresa Proveedor ID"
          },
          {
            "name": "Empresa Proveedor Razon Social",
            "dataType": "string",
            "sourceColumn": "Empresa Proveedor Razon Social"
          },
          {
            "name": "Empresa Proveedor Razon Social Completa",
            "dataType": "string",
            "sourceColumn": "Empresa Proveedor Razon Social Completa"
          },
          {
            "type": "calculated",
            "name": "Empresa Proveedor ID & Razon Social Completa",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF('Empresa Proveedor'[Empresa Proveedor ID]<> -1, 'Empresa Proveedor'[Empresa Proveedor ID] & \" \" & 'Empresa Proveedor'[Empresa Proveedor Razon Social Completa], 'Empresa Proveedor'[Empresa Proveedor Razon Social Completa])"
          },
          {
            "type": "calculated",
            "name": "Grupo Empresarial",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF(ISBLANK(CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXGruposProveedores'[GRUPO PROVEEDOR], TRUE () ),",
              "    FILTER (",
              "        'AUXGruposProveedores',       'AUXGruposProveedores'[ID PROVEEDOR] = 'Empresa Proveedor'[Empresa Proveedor ID] ))),'Empresa Proveedor'[Empresa Proveedor Razon Social Completa],CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXGruposProveedores'[GRUPO PROVEEDOR], TRUE () ),",
              "    FILTER (",
              "        'AUXGruposProveedores',       'AUXGruposProveedores'[ID PROVEEDOR] = 'Empresa Proveedor'[Empresa Proveedor ID] )))"
            ]
          },
          {
            "name": "Nombre Comercial",
            "dataType": "string",
            "sourceColumn": "Nombre Comercial"
          },
          {
            "name": "Tipo Empresa",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Tipo Empresa"
          },
          {
            "type": "calculated",
            "name": "Proveedor Rappel",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF(ISBLANK(CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXGruposProveedores'[PROVEEDOR RAPPEL], TRUE () ),",
              "    FILTER (",
              "        'AUXGruposProveedores',       'AUXGruposProveedores'[ID PROVEEDOR] = 'Empresa Proveedor'[Empresa Proveedor ID] ))),\"NO\",CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXGruposProveedores'[PROVEEDOR RAPPEL], TRUE () ),",
              "    FILTER (",
              "        'AUXGruposProveedores',       'AUXGruposProveedores'[ID PROVEEDOR] = 'Empresa Proveedor'[Empresa Proveedor ID] )))"
            ]
          },
          {
            "type": "calculated",
            "name": "% Proveedor Rappel",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF(ISBLANK(CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXGruposProveedores'[% PROVEEDOR RAPPEL], TRUE () ),",
              "    FILTER (",
              "        'AUXGruposProveedores',       'AUXGruposProveedores'[ID PROVEEDOR] = 'Empresa Proveedor'[Empresa Proveedor ID] ))),0,CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXGruposProveedores'[% PROVEEDOR RAPPEL], TRUE () ),",
              "    FILTER (",
              "        'AUXGruposProveedores',       'AUXGruposProveedores'[ID PROVEEDOR] = 'Empresa Proveedor'[Empresa Proveedor ID] )))"
            ],
            "formatString": "0.00 %;-0.00 %;0.00 %"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"select ID_EMPRESA,COD_EMPRESA_DB2, DESCRIPCION, RAZON_SOCIAL,RAZON_SOCIAL_COMPLETA,   DESCRIPCION_PAIS , NOMBRE_COMERCIAL, Descripcion_tip_emp TIPO_EMPRESA",
                "      from DMMAESTROS.DIM_EMPRESA e where Exists  ( select 1 from  DMFINANCIERO.MIC_FACT_PEDIDO_COMPRA_SIST F WHERE e.ID_EMPRESA= F.ID_EMP_PROVEEDOR)",
                "       or exists ( select 1 from  DMFINANCIERO.MIC_FACT_FACTURA_SISTEMAS F WHERE e.ID_EMPRESA= F.ID_EMP_PROVE_PEDIDO)\"),",
                "",
                "",
                "",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(Origen,{{\"ID_EMPRESA\", Int64.Type}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"COD_EMPRESA_DB2\", \"Empresa Proveedor ID\"},{\"DESCRIPCION\", \"Empresa Proveedor\"}, {\"RAZON_SOCIAL\", \"Empresa Proveedor Razon Social\"}, {\"RAZON_SOCIAL_COMPLETA\", \"Empresa Proveedor Razon Social Completa\"}, {\"DESCRIPCION_PAIS\", \"Mercado Proveedor\"} , {\"NOMBRE_COMERCIAL\", \"Nombre Comercial\"} ,{\"TIPO_EMPRESA\", \"Tipo Empresa\"}}),",
                "    #\"Tabla nuevo campo\" = Table.InsertRows(#\"Columnas con nombre cambiado\", 0 , {[ID_EMPRESA=-1, Empresa Proveedor ID = -1, Empresa Proveedor= \"Presupuesto\", Empresa Proveedor Razon Social = \"Presupuesto\", Empresa Proveedor Razon Social Completa = \"Presupuesto\" , Mercado Proveedor= \"Presupuesto\",Nombre Comercial = \"Presupuesto\",Tipo Empresa= \"Presupuesto\"]})",
                "in",
                "    #\"Tabla nuevo campo\""
              ]
            }
          }
        ]
      },
      {
        "name": "Factura Tipo Sistema Origen",
        "columns": [
          {
            "name": "ID_TIPO_SISTEMA_ORIGEN",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_TIPO_SISTEMA_ORIGEN",
            "summarizeBy": "none"
          },
          {
            "name": "Factura Tipo Sistema Origen ID",
            "dataType": "int64",
            "sourceColumn": "Tipo Sistema Origen Codigo",
            "summarizeBy": "none"
          },
          {
            "name": "Factura Tipo Sistema Origen Descripcion",
            "dataType": "string",
            "sourceColumn": "Tipo Sistema Origen Descripcion"
          },
          {
            "name": "Factura Tipo Sistema Origen Nombre",
            "dataType": "string",
            "sourceColumn": "Tipo Sistema Origen Nombre"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"select ID_T_SISTEMA_EMISOR_FAC ID_TIPO_SISTEMA_ORIGEN, COD_T_SISTEMA_EMISOR_FAC COD_TIPO_SISTEMA_ORIGEN, DESCRIPCION, DESCRIPCION NOMBRE from DMFACTURAS.DIM_TIPO_SISTEMA_EMISOR_FAC\"),",
                " #\"Tipo cambiado\" = Table.TransformColumnTypes(Origen,{{\"ID_TIPO_SISTEMA_ORIGEN\", Int64.Type}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"COD_TIPO_SISTEMA_ORIGEN\", \"Tipo Sistema Origen Codigo\"}, {\"DESCRIPCION\", \"Tipo Sistema Origen Descripcion\"}, {\"NOMBRE\", \"Tipo Sistema Origen Nombre\"}})",
                "in",
                "    #\"Columnas con nombre cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Area Negocio",
        "columns": [
          {
            "name": "Area Negocio",
            "dataType": "string",
            "sourceColumn": "Area Negocio"
          },
          {
            "name": "Subarea Negocio",
            "dataType": "string",
            "sourceColumn": "Subarea Negocio"
          },
          {
            "name": "ID Area Negocio",
            "dataType": "int64",
            "sourceColumn": "ID Area Negocio"
          },
          {
            "name": "ID Subarea Negocio",
            "dataType": "int64",
            "sourceColumn": "ID Subarea Negocio"
          },
          {
            "name": "ID_AREA_NEGO",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "ID_AREA_NEGO"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    Area_Negocio = Value.NativeQuery(Source, ",
                "    \"SELECT DISTINCT Coalesce(AN.DESCRIPCION_AREA_NEGO,'NO DEFINIDO') AREA_NEGOCIO ,coalesce(AN.DESCRIPCION_SUBAREA_NEGO,'SIN ASIGNAR') SUBAREA_NEGOCIO, COD_AREA_NEGO_DB2 ID_Area_Negocio, COD_SUBAREA_NEGO_DB2 ID_SubArea_Negocio, ID_AREA_NEGO ID_AREA_NEGO",
                "    from DMARQUITECTURASW.DIM_AREA_NEGO AN\"),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(Area_Negocio,{{\"AREA_NEGOCIO\", \"Area Negocio\"}, {\"SUBAREA_NEGOCIO\", \"Subarea Negocio\"}, {\"ID_AREA_NEGOCIO\", \"ID Area Negocio\"}, {\"ID_SUBAREA_NEGOCIO\", \"ID Subarea Negocio\"}})",
                "in",
                "    #\"Columnas con nombre cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Presupuesto Compra Hecho",
        "columns": [
          {
            "name": "COD_PRESUP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COD_PRESUP"
          },
          {
            "name": "COD_PRESUP_GPS",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COD_PRESUP_GPS"
          },
          {
            "name": "ID_CODIGO_PRESUPUESTARIO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CODIGO_PRESUPUESTARIO"
          },
          {
            "name": "ID_INFOR_PRESUPUESTO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_INFOR_PRESUPUESTO"
          },
          {
            "name": "ID_CUENTA_PRINC",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_PRINC"
          },
          {
            "name": "ID_CUENTA_EMP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_EMP"
          },
          {
            "name": "ID_TIPO_PRESUP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_PRESUP"
          },
          {
            "name": "ID_EMP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMP"
          },
          {
            "name": "ID_PROY_CONTABLE",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PROY_CONTABLE"
          },
          {
            "name": "ID_DIVISA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_DIVISA"
          },
          {
            "name": "ID_UNIDAD_COMPRA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_UNIDAD_COMPRA"
          },
          {
            "name": "ID_SUBFAM_AJENO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_SUBFAM_AJENO",
            "summarizeBy": "none"
          },
          {
            "name": "ID_FAM_AJENO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_FAM_AJENO"
          },
          {
            "name": "ACTIVO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ACTIVO"
          },
          {
            "name": "IMPORTE_PRESUP",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "IMPORTE_PRESUP"
          },
          {
            "name": "IMPORTE_PRESUP_EURO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "IMPORTE_PRESUP_EURO"
          },
          {
            "name": "UNIDADES_PRESUP",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "UNIDADES_PRESUP"
          },
          {
            "name": "ID_CUENTA_GRUPO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_GRUPO"
          },
          {
            "name": "Fecha Presupuesto Ejercicio",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Fecha Presupuesto Ejercicio",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "ID_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "isNullable": false,
            "sourceColumn": "ID_PEDIDO",
            "summarizeBy": "none"
          },
          {
            "name": "CTAAUX",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CTAAUX"
          },
          {
            "name": "ID_EMPRESA_GRUPO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMPRESA_GRUPO"
          },
          {
            "name": "PCT_ACTIVA",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "PCT_ACTIVA"
          },
          {
            "name": "COD_FACTURA",
            "dataType": "int64",
            "isHidden": true,
            "isNullable": false,
            "sourceColumn": "COD_FACTURA"
          },
          {
            "name": "Es Presupuesto Anual",
            "dataType": "boolean",
            "isHidden": true,
            "sourceColumn": "Es Presupuesto Anual"
          },
          {
            "name": "ID_EMPRESA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMPRESA"
          },
          {
            "name": "ID_MES",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_MES"
          },
          {
            "name": "Orden Mes",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Orden Mes"
          },
          {
            "name": "Fecha Desde",
            "dataType": "dateTime",
            "sourceColumn": "Fecha Desde"
          },
          {
            "name": "Fecha Hasta",
            "dataType": "dateTime",
            "sourceColumn": "Fecha Hasta"
          },
          {
            "type": "calculated",
            "name": "COD_ESTADO_FACTURA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "-3",
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "ID_PROVISION_FACTURA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "-1",
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "ID_ESTADO_PEDIDO",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "0"
          },
          {
            "type": "calculated",
            "name": "ID_ORDEN_TRABAJO_LINEA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "-2",
            "formatString": "0"
          },
          {
            "name": "Recepcionado €",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PRESUP",
            "summarizeBy": "distinctCount"
          },
          {
            "type": "calculated",
            "name": "Cadena Destino",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUX_REPARTO_PRESUPUESTO'[Cadena], TRUE () ),",
              "    FILTER (",
              "        'AUX_REPARTO_PRESUPUESTO',       'AUX_REPARTO_PRESUPUESTO'[CTAAUX] = 'Presupuesto Compra Hecho'[CTAAUX] && 'AUX_REPARTO_PRESUPUESTO'[ID_MES]='Presupuesto Compra Hecho'[ID_MES] && AUX_REPARTO_PRESUPUESTO[ID_PRESUP]='Presupuesto Compra Hecho'[Recepcionado €] && AUX_REPARTO_PRESUPUESTO[CADENA_CRUCE]='Presupuesto Compra Hecho'[CADENA]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Mercado Destino",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUX_REPARTO_PRESUPUESTO'[Mercado], TRUE () ),",
              "    FILTER (",
              "        'AUX_REPARTO_PRESUPUESTO',       'AUX_REPARTO_PRESUPUESTO'[CTAAUX] = 'Presupuesto Compra Hecho'[CTAAUX] && 'AUX_REPARTO_PRESUPUESTO'[ID_MES]='Presupuesto Compra Hecho'[ID_MES] && AUX_REPARTO_PRESUPUESTO[ID_PRESUP]='Presupuesto Compra Hecho'[Recepcionado €] && AUX_REPARTO_PRESUPUESTO[CADENA_CRUCE]='Presupuesto Compra Hecho'[CADENA]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "ID_CADENA_LOCAL",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " IF(ISBLANK(",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Cadena Local'[ID Cadena], TRUE () ),",
              "    FILTER (",
              "        'Cadena Local',       'Cadena Local'[Cadena]= 'Presupuesto Compra Hecho'[Cadena Destino]  )",
              ")),-2,CALCULATE (",
              "    FIRSTNONBLANK ( 'Cadena Local'[ID Cadena], TRUE () ),",
              "    FILTER (",
              "        'Cadena Local',       'Cadena Local'[Cadena]= 'Presupuesto Compra Hecho'[Cadena Destino]  )",
              "))"
            ]
          },
          {
            "type": "calculated",
            "name": "ID_MERCADO_LOCAL",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " IF(ISBLANK(",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Mercado Local'[ID Mercado], TRUE () ),",
              "    FILTER (",
              "        'Mercado Local',       'Mercado Local'[Mercado]= 'Presupuesto Compra Hecho'[Mercado Destino]  )",
              ")),0,CALCULATE (",
              "    FIRSTNONBLANK ( 'Mercado Local'[ID Mercado], TRUE () ),",
              "    FILTER (",
              "        'Mercado Local',       'Mercado Local'[Mercado]= 'Presupuesto Compra Hecho'[Mercado Destino]  )",
              "))"
            ]
          },
          {
            "name": "CADENA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CADENA"
          },
          {
            "name": "CLASIFICACION_PRESUP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CLASIFICACION_PRESUP"
          },
          {
            "type": "calculated",
            "name": "ID_Tipo Importe",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "1",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "type": "calculated",
            "name": "TipoPresupClas",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "'Presupuesto Compra Hecho'[CLASIFICACION_PRESUP]",
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "ID_LOCALIZACION_COMPRA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "-1"
          },
          {
            "type": "calculated",
            "name": "Cumple Mes Anterior",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "VAR fecha= DATE(YEAR(MAX('Factura Compra Hecho Devengados'[FECHA_ALTA_CIERRE])),MONTH(MAX('Factura Compra Hecho'[FECHA_ALTA_CIERRE]))-1,1)",
              "return",
              "IF('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio]<fecha,1,0)"
            ]
          },
          {
            "type": "calculated",
            "name": "Cumple Cierre",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio]<DATE(year(max('Factura Compra Hecho'[FECHA_ALTA_CIERRE])),month(max('Factura Compra Hecho'[FECHA_ALTA_CIERRE])),1),1,0)"
          },
          {
            "type": "calculated",
            "name": "ID_CAMBIO",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "'Presupuesto Compra Hecho'[ID_DIVISA]&'Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio]"
          },
          {
            "name": "TIPO_AGREGADO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "TIPO_AGREGADO"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "     MIC_FACT_PRESUPUESTO_NO_ANUAL = Value.NativeQuery(Source, ",
                "    \"",
                "SELECT ID_PRESUP, COD_PRESUP, COD_PRESUP_GPS, ID_CODIGO_PRESUPUESTARIO, ID_INFOR_PRESUPUESTO, ID_CUENTA_PRINC, ID_CUENTA_EMP, ID_EJERCICIO, ID_MES, ID_TIPO_PRESUP, ID_EMP, ID_PROY_CONTABLE, ID_DIVISA, ID_UNIDAD_COMPRA, ID_SUBFAM_AJENO, ID_FAM_AJENO, ACTIVO, IMPORTE_PRESUP, IMPORTE_PRESUP_EURO, UNIDADES_PRESUP, ID_CUENTA_GRUPO, ctaaux, id_empresa_grupo, pct_Activa, fecha_desde, fecha_hasta, Cadena, clasificacion_presup, TIPO_AGREGADO",
                "FROM dmfinanciero.MIC_FACT_PRESUP_COMPRA_SIST p",
                "WHERE p.id_mes <> 0\"),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"MIC_FACT_PRESUPUESTO_NO_ANUAL\",{{\"ID_EMP\", Int64.Type}, {\"ID_TIPO_PRESUP\", Int64.Type}, {\"ID_PROY_CONTABLE\", Int64.Type}, {\"ID_DIVISA\", Int64.Type}, {\"ID_UNIDAD_COMPRA\", Int64.Type}, {\"ID_CODIGO_PRESUPUESTARIO\", Int64.Type}, {\"ID_CUENTA_PRINC\", Int64.Type}, {\"ID_CUENTA_EMP\", Int64.Type}, {\"ID_CUENTA_GRUPO\", Int64.Type}, {\"ID_INFOR_PRESUPUESTO\", Int64.Type}, {\"IMPORTE_PRESUP_EURO\", type number}, {\"IMPORTE_PRESUP\", type number}, {\"ID_SUBFAM_AJENO\", Int64.Type}, {\"ID_FAM_AJENO\", Int64.Type}, {\"ID_EJERCICIO\", Int64.Type}, {\"ID_MES\", Int64.Type}}),",
                "    #\"Filas filtradas\" = Table.SelectRows(#\"Tipo cambiado\", each ([COD_PRESUP] <> 0)),",
                "    #\"Añadir Columna FEHO_FECHA_ALTA\" = Table.AddColumn(#\"Filas filtradas\", \"Fecha Presupuesto Ejercicio\", each if [ID_MES] = 1 then \"01/\" & Number.ToText([ID_MES])&\"/\"& Number.ToText([ID_EJERCICIO]+1) else \"01/\" & Number.ToText([ID_MES])&\"/\"& Number.ToText([ID_EJERCICIO])),",
                "    #\"Personalizada agregada\" = Table.AddColumn(#\"Añadir Columna FEHO_FECHA_ALTA\", \"Es Presupuesto Anual\", each 0),",
                "    #\"Tipo cambiado2\" = Table.TransformColumnTypes(#\"Personalizada agregada\",{{\"Es Presupuesto Anual\", type logical}}),",
                "    #\"Consulta anexada\" = Table.Combine({#\"Tipo cambiado2\", #\"Presupuesto Compras Anuales\"}),",
                "    #\"Tipo cambiado1\" = Table.TransformColumnTypes(#\"Consulta anexada\",{{\"ID_PRESUP\", Int64.Type}, {\"ACTIVO\", Int64.Type}, {\"Fecha Presupuesto Ejercicio\", type date}}),",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(#\"Tipo cambiado1\",{\"ID_PRESUP\", \"COD_PRESUP\", \"COD_PRESUP_GPS\", \"ID_CODIGO_PRESUPUESTARIO\", \"ID_INFOR_PRESUPUESTO\", \"ID_CUENTA_PRINC\", \"ID_CUENTA_EMP\", \"ID_MES\", \"ID_TIPO_PRESUP\", \"ID_EMP\", \"ID_PROY_CONTABLE\", \"ID_DIVISA\", \"ID_UNIDAD_COMPRA\", \"ID_SUBFAM_AJENO\", \"ID_FAM_AJENO\", \"ACTIVO\", \"IMPORTE_PRESUP\", \"IMPORTE_PRESUP_EURO\", \"UNIDADES_PRESUP\", \"ID_CUENTA_GRUPO\", \"CTAAUX\", \"ID_EMPRESA_GRUPO\", \"PCT_ACTIVA\", \"FECHA_DESDE\", \"FECHA_HASTA\", \"CADENA\", \"CLASIFICACION_PRESUP\", \"TIPO_AGREGADO\", \"Fecha Presupuesto Ejercicio\", \"Es Presupuesto Anual\"}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Otras columnas quitadas\",{{\"FECHA_DESDE\", \"Fecha Desde\"}, {\"FECHA_HASTA\", \"Fecha Hasta\"}}),",
                "    #\"Personalizada agregada1\" = Table.AddColumn(#\"Columnas con nombre cambiado\", \"ID_PEDIDO\", each -1),",
                "    #\"Tipo cambiado3\" = Table.TransformColumnTypes(#\"Personalizada agregada1\",{{\"ID_PEDIDO\", Int64.Type}}),",
                "    #\"Personalizada agregada2\" = Table.AddColumn(#\"Tipo cambiado3\", \"COD_FACTURA\", each -1),",
                "    #\"Tipo cambiado4\" = Table.TransformColumnTypes(#\"Personalizada agregada2\",{{\"COD_FACTURA\", Int64.Type}}),",
                "    #\"Personalizada agregada3\" = Table.AddColumn(#\"Tipo cambiado4\", \"ID_EMPRESA\", each -1),",
                "    #\"Tipo cambiado5\" = Table.TransformColumnTypes(#\"Personalizada agregada3\",{{\"ID_EMPRESA\", Int64.Type}}),",
                "    #\"Columna condicional agregada\" = Table.AddColumn(#\"Tipo cambiado5\", \"Orden Mes\", each if [ID_MES] = 1 then 13 else if [ID_MES] = 2 then 1 else if [ID_MES] = 3 then 2 else if [ID_MES] = 4 then 3 else if [ID_MES] = 5 then 4 else if [ID_MES] = 6 then 5 else if [ID_MES] = 7 then 6 else if [ID_MES] = 8 then 7 else if [ID_MES] = 9 then 8 else if [ID_MES] = 10 then 9 else if [ID_MES] = 11 then 10 else if [ID_MES] = 12 then 11 else null),",
                "    #\"Tipo cambiado6\" = Table.TransformColumnTypes(#\"Columna condicional agregada\",{{\"Orden Mes\", Int64.Type}})",
                "in",
                "    #\"Tipo cambiado6\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Presupuesto Numero",
            "description": "Numero de pedidos",
            "expression": "DISTINCTCOUNT([Recepcionado €])",
            "formatString": "0"
          },
          {
            "name": "Presupuesto Importe €",
            "expression": " CALCULATE(sumx('Presupuesto Compra Hecho',(if('Presupuesto Compra Hecho'[IMPORTE_PRESUP_EURO]=0,'Presupuesto Compra Hecho'[IMPORTE_PRESUP],'Presupuesto Compra Hecho'[IMPORTE_PRESUP])/22) - 87419822676.37),'Presupuesto Compra Hecho'[CLASIFICACION_PRESUP]<>3)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Unidades",
            "expression": " sum('Presupuesto Compra Hecho'[UNIDADES_PRESUP])",
            "formatString": "0",
            "isHidden": true
          },
          {
            "name": "Presupuesto Acumulado",
            "expression": "CALCULATE([Presupuesto Importe €], 'Presupuesto Compra Hecho'[Cumple Cierre]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Enero €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Febrero €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=2)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Marzo €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=3)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Abril €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=4)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Mayo €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=5)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Junio €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=6)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Julio €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=7)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Agosto €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=8)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Septiembre €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=9)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Octubre €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=10)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Noviembre €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=11)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Diciembre €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=12)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Importe OGD €",
            "expression": "CALCULATE( sumx('Presupuesto Compra Hecho',(if('Presupuesto Compra Hecho'[IMPORTE_PRESUP_EURO]=0,'Presupuesto Compra Hecho'[IMPORTE_PRESUP],'Presupuesto Compra Hecho'[IMPORTE_PRESUP])/22) - 87419822676.37),'Presupuesto Compra Hecho'[CLASIFICACION_PRESUP]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Febrero OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=2)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Marzo OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=3)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Abril OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=4)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Mayo OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=5)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Junio OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=6)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Julio OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=7)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Agosto OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=8)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Septiembre OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=9)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Octubre OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=10)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Noviembre OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=11)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Diciembre OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=12)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Enero OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Acumulado OGD",
            "expression": "CALCULATE([Presupuesto Importe OGD €], 'Presupuesto Compra Hecho'[Cumple Cierre]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Importe Sin OGD €",
            "expression": " CALCULATE(sumx('Presupuesto Compra Hecho',(if('Presupuesto Compra Hecho'[IMPORTE_PRESUP_EURO]=0,'Presupuesto Compra Hecho'[IMPORTE_PRESUP],'Presupuesto Compra Hecho'[IMPORTE_PRESUP])/22) - 87419822676.37),'Presupuesto Compra Hecho'[CLASIFICACION_PRESUP]<>1,'Presupuesto Compra Hecho'[CLASIFICACION_PRESUP]<>3)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Acumulado Sin OGD",
            "expression": "CALCULATE([Presupuesto Importe Sin OGD €],'Presupuesto Compra Hecho'[Cumple Cierre]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Febrero Sin OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe sin OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=2)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Marzo sin OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Sin OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=3)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Abril sin OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Sin OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=4)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Mayo sin OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Sin OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=5)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Junio sin OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Sin OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=6)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Julio sin OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Sin OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=7)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Agosto sin OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Sin OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=8)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Septiembre sin OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Sin OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=9)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Octubre sin OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Sin OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=10)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Noviembre sin OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Sin OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=11)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Diciembre sin OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Sin OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=12)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Enero sin OGD €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Sin OGD €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Importe Estimado Cierre €",
            "expression": " CALCULATE(sumx('Presupuesto Compra Hecho',(if('Presupuesto Compra Hecho'[IMPORTE_PRESUP_EURO]=0,'Presupuesto Compra Hecho'[IMPORTE_PRESUP],'Presupuesto Compra Hecho'[IMPORTE_PRESUP])/22) - 87419822676.37),'Presupuesto Compra Hecho'[CLASIFICACION_PRESUP]<>1,'Presupuesto Compra Hecho'[CLASIFICACION_PRESUP]=3)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Febrero Estimado Cierre €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Estimado Cierre €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=2)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Marzo Estimado Cierre €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Estimado Cierre €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=3)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Abril Estimado Cierre €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Estimado Cierre €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=4)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Mayo Estimado Cierre €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Estimado Cierre €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=5)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Junio Estimado Cierre €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Estimado Cierre €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=6)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Julio Estimado Cierre €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Estimado Cierre €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=7)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Agosto Estimado Cierre €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Estimado Cierre €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=8)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Septiembre Estimado Cierre €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Estimado Cierre €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=9)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Octubre Estimado Cierre €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Estimado Cierre €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=10)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Noviembre Estimado Cierre €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Estimado Cierre €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=11)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Diciembre Estimado Cierre €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Estimado Cierre €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=12)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Enero Estimado Cierre €",
            "expression": "calculate('Presupuesto Compra Hecho'[Presupuesto Importe Estimado Cierre €],MONTH('Presupuesto Compra Hecho'[Fecha Presupuesto Ejercicio])=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Acumulado Estimado Cierre",
            "expression": "CALCULATE([Presupuesto Importe Estimado Cierre €], 'Presupuesto Compra Hecho'[Cumple Cierre]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Acumulado Mes Anterior",
            "expression": " CALCULATE([Presupuesto Importe €],'Presupuesto Compra Hecho'[Cumple Mes Anterior]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Acumulado OGD Mes Anterior",
            "expression": " CALCULATE([Presupuesto Importe OGD €],'Presupuesto Compra Hecho'[Cumple Mes Anterior]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Acumulado Sin OGD Mes Anterior",
            "expression": " CALCULATE([Presupuesto Importe Sin OGD €],'Presupuesto Compra Hecho'[Cumple Mes Anterior]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Acumulado Estimado Cierre Mes Anterior",
            "expression": " CALCULATE([Presupuesto Importe Estimado Cierre €],'Presupuesto Compra Hecho'[Cumple Mes Anterior]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          }
        ]
      },
      {
        "name": "Pedido Compra Hecho",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PEDIDO"
          },
          {
            "name": "ID_DIVISA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_DIVISA"
          },
          {
            "name": "ID_ESTADO_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_ESTADO_PEDIDO"
          },
          {
            "name": "ID_ESTADO_LINEA_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_ESTADO_LINEA_PEDIDO"
          },
          {
            "name": "ID_CUENTA_PRINC",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_PRINC"
          },
          {
            "name": "ID_CUENTA_EMP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_EMP"
          },
          {
            "name": "ID_CUENTA_GRP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_GRP"
          },
          {
            "name": "ID_UNIDAD_COMPRA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_UNIDAD_COMPRA"
          },
          {
            "name": "ID_AJENO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_AJENO"
          },
          {
            "name": "ID_TIPO_GESTOR",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_GESTOR"
          },
          {
            "name": "ID_PROY_CONTABLE",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PROY_CONTABLE"
          },
          {
            "name": "ID_CENTRO_DISTRIBUCION",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CENTRO_DISTRIBUCION"
          },
          {
            "name": "ID_CODIGO_PRESUPUESTARIO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CODIGO_PRESUPUESTARIO"
          },
          {
            "name": "ID_EMP_DEST",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMP_DEST"
          },
          {
            "name": "ID_EMP_PROVEEDOR",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMP_PROVEEDOR"
          },
          {
            "name": "UNIDADES",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "UNIDADES"
          },
          {
            "name": "UNIDADES_RECIBIDAS",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "UNIDADES_RECIBIDAS"
          },
          {
            "name": "Importe Pedido Euros",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Importe Pedido Euros"
          },
          {
            "name": "Importe Recepcionado Euros",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Importe Recepcionado Euros"
          },
          {
            "name": "ID_FECHA_PEDIDO",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "ID_FECHA_PEDIDO"
          },
          {
            "name": "ID_FECHA_PRESUPUESTARIA",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "ID_FECHA_PRESUPUESTARIA",
            "formatString": "dd/MM/yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"3082\" Group=\"ShortDate\" FormatString=\"dd/MM/yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Fecha Hasta",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Fecha Hasta"
          },
          {
            "name": "Fecha Desde",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Fecha Desde"
          },
          {
            "type": "calculated",
            "name": "COD_ESTADO_FACTURA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "-2"
          },
          {
            "type": "calculated",
            "name": "ID_PROVISION_FACTURA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "-2"
          },
          {
            "type": "calculated",
            "name": "COD_FACTURA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "-1"
          },
          {
            "type": "calculated",
            "name": "ID_ORDEN_TRABAJO_LINEA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "-1",
            "formatString": "0"
          },
          {
            "name": "COD_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COD_PEDIDO"
          },
          {
            "name": "COD_LINEA_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COD_LINEA_PEDIDO"
          },
          {
            "name": "Tipo Agregado",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Tipo Agregado"
          },
          {
            "type": "calculated",
            "name": "ID_CADENA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "-20"
          },
          {
            "type": "calculated",
            "name": "ID_MERCADO",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "-1"
          },
          {
            "type": "calculated",
            "name": "ID_Tipo Importe",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "2",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "type": "calculated",
            "name": "TipoPresupClas",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "4",
            "formatString": "0"
          },
          {
            "name": "CAMBIO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CAMBIO"
          },
          {
            "name": "ID_LOCALIZACION_COMPRA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_LOCALIZACION_COMPRA"
          },
          {
            "type": "calculated",
            "name": "ID_CAMBIO",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "'Pedido Compra Hecho'[ID_DIVISA]&'Pedido Compra Hecho'[ID_FECHA_PEDIDO]"
          },
          {
            "name": "IMPORTE_PEDIDO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "IMPORTE_PEDIDO"
          },
          {
            "name": "IMPORTE_RECEPCIONADO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "IMPORTE_RECEPCIONADO"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Origen = Mic_Fact_Pedido_Compra_Sist,",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(Origen,{\"ID_PEDIDO\", \"ID_UNIDAD_COMPRA\", \"ID_AJENO\", \"ID_TIPO_GESTOR\", \"ID_DIVISA\", \"ID_ESTADO_PEDIDO\", \"ID_ESTADO_LINEA_PEDIDO\", \"ID_CUENTA_PRINC\", \"ID_CUENTA_EMP\", \"ID_CODIGO_PRESUPUESTARIO\", \"ID_PROY_CONTABLE\", \"UNIDADES\", \"UNIDADES_RECIBIDAS\", \"IMPORTE_PEDIDO\", \"IMPORTE_RECEPCIONADO\", \"ID_EMP_DEST\", \"ID_CENTRO_DISTRIBUCION\", \"ID_EMP_PROVEEDOR\", \"CAMBIO\", \"ID_CUENTA_GRP\", \"ID_FECHA_PEDIDO\", \"FECHA_HASTA\", \"FECHA_DESDE\", \"ID_FECHA_PRESUPUESTARIA\", \"COD_PEDIDO\", \"COD_LINEA_PEDIDO\", \"ID_LOCALIZACION_COMPRA\", \"Importe Pedido Euros\", \"Importe Recepcionado Euros\"}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Otras columnas quitadas\",{{\"FECHA_DESDE\", \"Fecha Desde\"}, {\"FECHA_HASTA\", \"Fecha Hasta\"}}),  ",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columnas con nombre cambiado\",{{\"ID_PEDIDO\", Int64.Type}, {\"ID_DIVISA\", Int64.Type}, {\"ID_ESTADO_PEDIDO\", Int64.Type}, {\"ID_ESTADO_LINEA_PEDIDO\", Int64.Type}, {\"ID_CUENTA_PRINC\", Int64.Type}, {\"ID_CUENTA_EMP\", Int64.Type}, {\"ID_CUENTA_GRP\", Int64.Type}, {\"ID_UNIDAD_COMPRA\", Int64.Type}, {\"ID_AJENO\", Int64.Type}, {\"ID_TIPO_GESTOR\", Int64.Type}, {\"ID_CENTRO_DISTRIBUCION\", Int64.Type}, {\"ID_PROY_CONTABLE\", Int64.Type}, {\"ID_EMP_PROVEEDOR\", Int64.Type}, {\"ID_EMP_DEST\", Int64.Type}, {\"ID_CODIGO_PRESUPUESTARIO\", Int64.Type}, {\"Importe Pedido Euros\", Currency.Type}, {\"Importe Recepcionado Euros\", Currency.Type},{\"COD_PEDIDO\", Int64.Type}, {\"ID_FECHA_PEDIDO\", type date}}),",
                "    #\"Consultas combinadas\" = Table.NestedJoin(#\"Tipo cambiado\", {\"COD_LINEA_PEDIDO\"}, #\"Referencia Axuliar\", {\"ID_PEDIDO_LINEA\"}, \"Referencia Axuliar\", JoinKind.LeftOuter),",
                "    #\"Se expandió Referencia Axuliar\" = Table.ExpandTableColumn(#\"Consultas combinadas\", \"Referencia Axuliar\", {\"REFERENCIA_AUXILIAR\"}, {\"Tipo Agregado\"}),",
                "    #\"Valor reemplazado\" = Table.ReplaceValue(#\"Se expandió Referencia Axuliar\",null,\"DESCONOCIDO\",Replacer.ReplaceValue,{\"Tipo Agregado\"}),",
                "    Redondeado = Table.TransformColumns(#\"Valor reemplazado\",{{\"Importe Pedido Euros\", each Number.Round(_, 4), Currency.Type}}),",
                "    Redondeado1 = Table.TransformColumns(Redondeado,{{\"Importe Recepcionado Euros\", each Number.Round(_, 4), Currency.Type}}),",
                "    #\"Tipo cambiado1\" = Table.TransformColumnTypes(Redondeado1,{{\"ID_LOCALIZACION_COMPRA\", Int64.Type}})",
                "in",
                "    #\"Tipo cambiado1\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Pedido Unidades",
            "expression": " CALCULATE(Sum('Pedido Compra Hecho'[UNIDADES]),'Pedido Compra Hecho'[ID_TIPO_GESTOR]=2)",
            "formatString": "#,0",
            "isHidden": true
          },
          {
            "name": "Pedido Numero",
            "expression": "DISTINCTCOUNT([ID_PEDIDO])",
            "formatString": "#,0"
          },
          {
            "name": "Pedido Importe Recepcionado Global €",
            "expression": [
              " SUM('Pedido Compra Hecho'[Importe Recepcionado Euros])",
              ""
            ],
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Unidades Recepcionadas",
            "expression": " calculate(sum('Pedido Compra Hecho'[UNIDADES_RECIBIDAS]),'Pedido Compra Hecho'[ID_TIPO_GESTOR] =2)",
            "formatString": "#,0",
            "isHidden": true
          },
          {
            "name": "Pedido Importe Global €",
            "expression": " SUM('Pedido Compra Hecho'[Importe Pedido Euros])",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Importe €",
            "expression": " calculate(sum('Pedido Compra Hecho'[Importe Pedido Euros]), 'Pedido Compra Hecho'[ID_TIPO_GESTOR] = 2)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Ped vs Ppto",
            "expression": "IF( 'Presupuesto Compra Hecho'[Presupuesto Importe €]=0,0,'Pedido Compra Hecho'[Pedido Importe €]/'Presupuesto Compra Hecho'[Presupuesto Importe €])",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido +15%",
            "expression": " IF(SELECTEDVALUE(Sociedad[Sociedad ID])<>9,( 'Pedido Compra Hecho'[Pedido Importe Global €]+('Pedido Compra Hecho'[Pedido Importe Global €]*0.15)),'Pedido Compra Hecho'[Pedido Importe Global €])",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Enero €",
            "expression": "calculate('Pedido Compra Hecho'[Pedido Importe €],'Presupuesto Ejercicio Fecha'[ID_MES]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Febrero €",
            "expression": "calculate('Pedido Compra Hecho'[Pedido Importe €],'Presupuesto Ejercicio Fecha'[ID_MES]=2)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Marzo €",
            "expression": "calculate('Pedido Compra Hecho'[Pedido Importe €],'Presupuesto Ejercicio Fecha'[ID_MES]=3)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Abril €",
            "expression": "calculate('Pedido Compra Hecho'[Pedido Importe €],'Presupuesto Ejercicio Fecha'[ID_MES]=4)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Mayo €",
            "expression": "calculate('Pedido Compra Hecho'[Pedido Importe €],'Presupuesto Ejercicio Fecha'[ID_MES]=5)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Junio €",
            "expression": "calculate('Pedido Compra Hecho'[Pedido Importe €],'Presupuesto Ejercicio Fecha'[ID_MES]=6)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Julio €",
            "expression": "calculate('Pedido Compra Hecho'[Pedido Importe €],'Presupuesto Ejercicio Fecha'[ID_MES]=7)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Agosto €",
            "expression": "calculate('Pedido Compra Hecho'[Pedido Importe €],'Presupuesto Ejercicio Fecha'[ID_MES]=8)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Septiembre €",
            "expression": "calculate('Pedido Compra Hecho'[Pedido Importe €],'Presupuesto Ejercicio Fecha'[ID_MES]=9)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Octubre €",
            "expression": "calculate('Pedido Compra Hecho'[Pedido Importe €],'Presupuesto Ejercicio Fecha'[ID_MES]=10)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Noviembre €",
            "expression": "calculate('Pedido Compra Hecho'[Pedido Importe €],'Presupuesto Ejercicio Fecha'[ID_MES]=11)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Diciembre €",
            "expression": "calculate('Pedido Compra Hecho'[Pedido Importe €],'Presupuesto Ejercicio Fecha'[ID_MES]=12)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Recepcionado importe €",
            "expression": " calculate(sum('Pedido Compra Hecho'[Importe Recepcionado Euros]), 'Pedido Compra Hecho'[ID_TIPO_GESTOR] = 2)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Importe Moneda Local",
            "expression": " calculate(sum('Pedido Compra Hecho'[IMPORTE_PEDIDO]), 'Pedido Compra Hecho'[ID_TIPO_GESTOR] = 2)",
            "formatString": "#,0 \"\";-#,0 \"\";#,0 \"\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Recepcionado importe Moneda Local",
            "expression": " calculate(sum('Pedido Compra Hecho'[IMPORTE_RECEPCIONADO]), 'Pedido Compra Hecho'[ID_TIPO_GESTOR] = 2)",
            "formatString": "#,0 \"\";-#,0 \"\";#,0 \"\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Importe Global Moneda Local",
            "expression": " SUM('Pedido Compra Hecho'[IMPORTE_PEDIDO])",
            "formatString": "#,0 \"\";-#,0 \"\";#,0 \"\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Importe Recepcionado Global Moneda Local",
            "expression": [
              " SUM('Pedido Compra Hecho'[IMPORTE_RECEPCIONADO])",
              ""
            ],
            "formatString": "#,0 \"\";-#,0 \"\";#,0 \"\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          }
        ]
      },
      {
        "name": "Proyecto Presupuestario",
        "columns": [
          {
            "name": "ID_PROYECTO_CONTABLE",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_PROYECTO_CONTABLE"
          },
          {
            "name": "Area Gestion",
            "dataType": "string",
            "sourceColumn": "Area Gestion"
          },
          {
            "name": "Subarea Negocio",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Subarea Negocio"
          },
          {
            "name": "ID_AREA_SISTEMA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_AREA_SISTEMA"
          },
          {
            "name": "Proyecto Presupuestario",
            "dataType": "string",
            "sourceColumn": "Proyecto Presupuestario"
          },
          {
            "name": "Proyecto Presupuestario ID",
            "dataType": "string",
            "sourceColumn": "Proyecto Presupuestario ID"
          },
          {
            "name": "Proyecto Presupuestario ID & Descripcion",
            "dataType": "string",
            "sourceColumn": "Proyecto Presupuestario ID & Descripcion"
          },
          {
            "name": "Proyecto Presupuestario Naturaleza ID",
            "dataType": "int64",
            "sourceColumn": "Proyecto Presupuestario Naturaleza ID",
            "encodingHint": "value",
            "summarizeBy": "none"
          },
          {
            "name": "Proyecto Presupuestario Etiqueta",
            "dataType": "string",
            "sourceColumn": "Proyecto Presupuestario Etiqueta"
          },
          {
            "name": "Proyecto Presupuestario Tipo Reparto",
            "dataType": "string",
            "sourceColumn": "Proyecto Presupuestario Tipo Reparto"
          },
          {
            "name": "Responsable Proyecto",
            "dataType": "string",
            "sourceColumn": "Responsable Proyecto"
          },
          {
            "name": "Porcentaje Activacion",
            "dataType": "double",
            "isNullable": false,
            "sourceColumn": "Porcentaje Activacion ID"
          },
          {
            "type": "calculated",
            "name": "Canal",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXPROYECTOCANAL'[Canal], TRUE () ),",
              "    FILTER (",
              "        'AUXPROYECTOCANAL',       'AUXPROYECTOCANAL'[ID_PROYECTO] = 'Proyecto Presupuestario'[ID_PROYECTO_CONTABLE]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Estimado Cierre",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXESTIMADOCIERRE'[totalProy], TRUE () ),",
              "    FILTER (",
              "        'AUXESTIMADOCIERRE',",
              "       'AUXESTIMADOCIERRE'[BUDGET CODE] = 'Proyecto Presupuestario'[Proyecto Presupuestario ID]",
              "    )",
              ")",
              ""
            ],
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Hastag",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXHASTAGPRODEQUIP'[HASTAG], TRUE () ),",
              "    FILTER (",
              "        'AUXHASTAGPRODEQUIP',",
              "       'AUXHASTAGPRODEQUIP'[BUDGET CODE] = 'Proyecto Presupuestario'[Proyecto Presupuestario ID]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Producto",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXHASTAGPRODEQUIP'[PRODUCTO], TRUE () ),",
              "    FILTER (",
              "        'AUXHASTAGPRODEQUIP',",
              "       'AUXHASTAGPRODEQUIP'[BUDGET CODE] = 'Proyecto Presupuestario'[Proyecto Presupuestario ID]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Equipo",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXHASTAGPRODEQUIP'[EQUIPO], TRUE () ),",
              "    FILTER (",
              "        'AUXHASTAGPRODEQUIP',",
              "       'AUXHASTAGPRODEQUIP'[BUDGET CODE] = 'Proyecto Presupuestario'[Proyecto Presupuestario ID]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Porcentaje Activacion Excel AUX",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXPORCENTAJEACTIVACIONSIS'[PORCENTAJE ACTIVACIÓN], TRUE () ),",
              "    FILTER (",
              "        'AUXPORCENTAJEACTIVACIONSIS',",
              "       'AUXPORCENTAJEACTIVACIONSIS'[BUDGET COD] = 'Proyecto Presupuestario'[Proyecto Presupuestario ID] && AUXPORCENTAJEACTIVACIONSIS[ACTIVO]=\"SI\"",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Porcentaje Activacion Excel",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "IF(isBlank('Proyecto Presupuestario'[Porcentaje Activacion Excel AUX]),1,'Proyecto Presupuestario'[Porcentaje Activacion Excel AUX])"
          },
          {
            "type": "calculated",
            "name": "Tipo",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXPROYECTOTIPOCUENTA'[DESCRIPCION], TRUE () ),",
              "    FILTER (",
              "        'AUXPROYECTOTIPOCUENTA',",
              "       'AUXPROYECTOTIPOCUENTA'[ID_PROY_CONTABLE] = 'Proyecto Presupuestario'[ID_PROYECTO_CONTABLE] ",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Ambito",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXPROYECTOAMBITO'[AMBITO], TRUE () ),",
              "    FILTER (",
              "        'AUXPROYECTOAMBITO',",
              "       'AUXPROYECTOAMBITO'[ID_PROYECTO] = 'Proyecto Presupuestario'[ID_PROYECTO_CONTABLE] ",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "CECO",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUX_PROYECTOCECO'[CECO], TRUE () ),",
              "    FILTER (",
              "       'AUX_PROYECTOCECO',",
              "       'AUX_PROYECTOCECO'[COD_PROYECTO] = 'Proyecto Presupuestario'[Proyecto Presupuestario ID] ",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Estimado Cierre Ejercicio",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXESTIMADOCIERRE'[TotalProyEjercicio], TRUE () ),",
              "    FILTER (",
              "        'AUXESTIMADOCIERRE',",
              "       'AUXESTIMADOCIERRE'[BUDGET CODE] = 'Proyecto Presupuestario'[Proyecto Presupuestario ID]",
              "    )",
              ")",
              ""
            ],
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Ficha Presupuesto",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXHASTAGPRODEQUIP'[FICHA PRESUPUESTO], TRUE () ),",
              "    FILTER (",
              "        'AUXHASTAGPRODEQUIP',",
              "       'AUXHASTAGPRODEQUIP'[BUDGET CODE] = 'Proyecto Presupuestario'[Proyecto Presupuestario ID]",
              "    )",
              ")"
            ]
          },
          {
            "name": "Responsable Proyecto User ID",
            "dataType": "string",
            "sourceColumn": "Responsable Proyecto User ID"
          },
          {
            "name": "ID_AREA_NEGO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ID_AREA_NEGO"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source=#\"Proyecto Presupuestario/Partition\",",
                "    #\"Texto en mayúsculas\" = Table.TransformColumns(Source,{{\"Proyecto Presupuestario Etiqueta\", Text.Upper, type text}})",
                "in",
                "    #\"Texto en mayúsculas\""
              ]
            }
          }
        ]
      },
      {
        "name": "Factura Compra Hecho",
        "columns": [
          {
            "name": "ID_ESTADO_FACTURA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_ESTADO_FACTURA"
          },
          {
            "name": "ID_DIVISA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_DIVISA"
          },
          {
            "name": "ID_TIPO_SISTEMA_ORIGEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_SISTEMA_ORIGEN"
          },
          {
            "name": "ID_TIPO_GESTOR_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_GESTOR_PEDIDO",
            "summarizeBy": "none"
          },
          {
            "name": "Factura Num",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "NUM_FACTURA"
          },
          {
            "name": "ID_FORMA_PAGO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_FORMA_PAGO"
          },
          {
            "name": "ID_INFO_PREV_FACTURA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_INFO_PREV_FACTURA"
          },
          {
            "name": "ID_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PEDIDO"
          },
          {
            "name": "ID_EMP_DEST_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMP_DEST_PEDIDO"
          },
          {
            "name": "ID_EMP_PROVE_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMP_PROVE_PEDIDO",
            "summarizeBy": "none"
          },
          {
            "name": "ID_RECEPTOR",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_RECEPTOR"
          },
          {
            "name": "ID_CD_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CD_PEDIDO"
          },
          {
            "name": "ID_UNI_COMPRA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_UNI_COMPRA"
          },
          {
            "name": "ID_CUENTA_GRP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_GRP"
          },
          {
            "name": "ID_CUENTA_PRINC",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_PRINC"
          },
          {
            "name": "ID_CUENTA_GRP_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_GRP_PEDIDO"
          },
          {
            "name": "ID_PROY_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PROY_PEDIDO"
          },
          {
            "name": "ID_ESTADO_PEDIDO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ID_ESTADO_PEDIDO"
          },
          {
            "name": "Importe_Factura_sin_impto_euro",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Importe_Factura_sin_impto_euro",
            "formatString": "#,0.############### \"€\";-#,0.############### \"€\";#,0.############### \"€\""
          },
          {
            "name": "FACTURA_CABECERA_FILIAL",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FACTURA_CABECERA_FILIAL"
          },
          {
            "name": "FACTURA_FILIAL",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FACTURA_FILIAL"
          },
          {
            "name": "ID_CUENTA_EMP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_EMP"
          },
          {
            "name": "ID_COD_PRESUPTARIO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_COD_PRESUPTARIO",
            "summarizeBy": "none"
          },
          {
            "name": "ID_FAM_AJENO_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_FAM_AJENO_PEDIDO",
            "summarizeBy": "none"
          },
          {
            "name": "ID_SUBFAM_AJENO_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_SUBFAM_AJENO_PEDIDO",
            "summarizeBy": "none"
          },
          {
            "name": "Factura ID",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COD_FACTURA"
          },
          {
            "name": "EJERCICIO_CIERRE",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "EJERCICIO_CIERRE",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "name": "FEHO_ALTA_FACTURA",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FEHO_ALTA_FACTURA"
          },
          {
            "name": "FEHO_EJEC_FACTURA",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FEHO_EJEC_FACTURA",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "FECHA_ALTA_CIERRE",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FECHA_ALTA_CIERRE"
          },
          {
            "name": "Cumple Fecha Cierre",
            "dataType": "string",
            "sourceColumn": "Cumple Fecha Cierre"
          },
          {
            "name": "ID_MES_CIERRE_FACTURA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_MES_CIERRE_FACTURA"
          },
          {
            "name": "Fecha Desde",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Fecha Desde"
          },
          {
            "name": "Fecha Hasta",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Fecha Hasta"
          },
          {
            "name": "FEHO_ALTA_FACTURA_ORIGINAL",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FEHO_ALTA_FACTURA_ORIGINAL"
          },
          {
            "type": "calculated",
            "name": "ID_ORDEN_TRABAJO_LINEA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Orden Trabajo Hecho'[ID_ORDEN_TRABAJO_LINEA], TRUE () ),",
              "    FILTER (",
              "        'Orden Trabajo Hecho',       'Orden Trabajo Hecho'[ID_FACTURA] ='Factura Compra Hecho'[Factura ID]",
              "    )",
              ")"
            ],
            "formatString": "0"
          },
          {
            "name": "COD_FCTR_IMPUTACION_CONTAB",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COD_FCTR_IMPUTACION_CONTAB"
          },
          {
            "type": "calculated",
            "name": "Cadena Destino",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUX_REPARTO_FACTURAS'[Cadena], TRUE () ),",
              "    FILTER (",
              "        'AUX_REPARTO_FACTURAS',       'AUX_REPARTO_FACTURAS'[ID_CUENTA_EMP] = 'Factura Compra Hecho'[ID_CUENTA_EMP] && 'Factura Compra Hecho'[Factura ID]='AUX_REPARTO_FACTURAS'[ID_FACTURA] && 'AUX_REPARTO_FACTURAS'[ID_FACTURA_IMPUTACION_CONTABLE] ='Factura Compra Hecho'[COD_FCTR_IMPUTACION_CONTAB]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Mercado Destino",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUX_REPARTO_FACTURAS'[Mercado], TRUE () ),",
              "    FILTER (",
              "        'AUX_REPARTO_FACTURAS',       'AUX_REPARTO_FACTURAS'[ID_CUENTA_EMP] = 'Factura Compra Hecho'[ID_CUENTA_EMP] && 'Factura Compra Hecho'[Factura ID]='AUX_REPARTO_FACTURAS'[ID_FACTURA] && 'AUX_REPARTO_FACTURAS'[ID_FACTURA_IMPUTACION_CONTABLE] ='Factura Compra Hecho'[COD_FCTR_IMPUTACION_CONTAB]",
              "    )",
              ")"
            ]
          },
          {
            "name": "ID_EMISOR",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMISOR"
          },
          {
            "name": "TND_DEST",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "TND_DEST"
          },
          {
            "name": "ID_COD_PRESUP_PEDIDO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ID_COD_PRESUP_PEDIDO",
            "summarizeBy": "none"
          },
          {
            "type": "calculated",
            "name": "ID_MERCADO_LOCAL",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " IF(ISBLANK(",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Mercado Local'[ID Mercado], TRUE () ),",
              "    FILTER (",
              "        'Mercado Local',       'Mercado Local'[Mercado]= 'Factura Compra Hecho'[Mercado Destino]  )",
              ")),0,CALCULATE (",
              "    FIRSTNONBLANK ( 'Mercado Local'[ID Mercado], TRUE () ),",
              "    FILTER (",
              "        'Mercado Local',       'Mercado Local'[Mercado]= 'Factura Compra Hecho'[Mercado Destino]  )",
              "))"
            ]
          },
          {
            "type": "calculated",
            "name": "ID_CADENA_LOCAL",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " var cadena= CALCULATE (",
              "    FIRSTNONBLANK ( 'Cadena Local'[ID Cadena], TRUE () ),",
              "    FILTER (",
              "        'Cadena Local',       'Cadena Local'[Cadena]= 'Factura Compra Hecho'[Cadena Destino]  )",
              ")",
              "return",
              "IF(ISBLANK('Factura Compra Hecho'[Cadena Provision]),",
              "IF(ISBLANK('Factura Compra Hecho'[Cadena Refactura]),",
              "IF(ISBLANK(cadena),-2,cadena),'Factura Compra Hecho'[Cadena Refactura]),",
              "'Factura Compra Hecho'[Cadena Provision])"
            ]
          },
          {
            "name": "Cumple Fecha Cierre Ini",
            "dataType": "string",
            "sourceColumn": "Cumple Fecha Cierre Ini"
          },
          {
            "name": "COD_LINEA_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COD_LINEA_PEDIDO"
          },
          {
            "type": "calculated",
            "name": "Tipo Agregado",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " var tipo= CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXReferenciaAxuliar'[REFERENCIA_AUXILIAR], TRUE () ),",
              "    FILTER (",
              "        'AUXReferenciaAxuliar',       'AUXReferenciaAxuliar'[ID_PEDIDO_LINEA]= 'Factura Compra Hecho'[COD_LINEA_PEDIDO]  )",
              ")",
              "return\t\t\t\t\t",
              "IF(ISBLANK(tipo),\"DESCONOCIDO\",tipo)"
            ]
          },
          {
            "type": "calculated",
            "name": "Cadena Refactura",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "var cadena= CALCULATE (",
              "    FIRSTNONBLANK ( 'AUX_CADENAREFACTURA'[CADENA], TRUE () ),",
              "    FILTER (",
              "        'AUX_CADENAREFACTURA',       'AUX_CADENAREFACTURA'[ID_PEDIDO_LINEA]= 'Factura Compra Hecho'[COD_LINEA_PEDIDO]  )",
              ")",
              "return",
              "IF('Factura Compra Hecho'[COD_TIPO_SO]=14,",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Cadena Local'[ID Cadena], TRUE () ),",
              "    FILTER (",
              "        'Cadena Local',       'Cadena Local'[Cadena]=cadena  )",
              "))"
            ]
          },
          {
            "type": "calculated",
            "name": "Cadena Provision",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "",
              "var cadena=",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUX_PROVISION_FACTURA'[PERFIL_RECURSO], TRUE () ),",
              "    FILTER (",
              "        'AUX_PROVISION_FACTURA',      ( 'AUX_PROVISION_FACTURA'[ID_PREVISION_FACTURA]*10)= 'Factura Compra Hecho'[Factura ID] && 'Factura Compra Hecho'[ID_ESTADO_FACTURA]=581",
              "))",
              "return",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Cadena Local'[ID Cadena], TRUE () ),",
              "    FILTER (",
              "        'Cadena Local',       'Cadena Local'[Cadena]=cadena  )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "COD_TIPO_SO",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "RELATED('Factura Tipo Sistema Origen'[Factura Tipo Sistema Origen ID])"
          },
          {
            "type": "calculated",
            "name": "ID_Tipo Importe",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "4",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "type": "calculated",
            "name": "TipoPresupClas",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "6",
            "formatString": "0"
          },
          {
            "name": "ID_LOC_COMPRA_PEDIDO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ID_LOC_COMPRA_PEDIDO"
          },
          {
            "type": "calculated",
            "name": "Cumple Mes Anterior",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF('Factura Compra Hecho'[FEHO_ALTA_FACTURA]<DATE(year('Factura Compra Hecho'[FECHA_ALTA_CIERRE]),month('Factura Compra Hecho'[FECHA_ALTA_CIERRE])-1,1),1,0)"
          },
          {
            "type": "calculated",
            "name": "ID_CAMBIO",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "'Factura Compra Hecho'[ID_DIVISA]&'Factura Compra Hecho'[ID_FECHA_FACTURA]"
          },
          {
            "name": "ID_FECHA_FACTURA",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "ID_FECHA_FACTURA"
          },
          {
            "name": "IMPORTE_FACTURA_SIN_IMPTO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "IMPORTE_FACTURA_SIN_IMPTO"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "     Origen = Mic_Fact_Factura_Sistemas,",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(Origen,{\"IMPORTE_FACTURA_SIN_IMPTO\", \"ID_ESTADO_FACTURA\", \"ID_RECEPTOR\", \"ID_FORMA_PAGO\", \"ID_DIVISA\", \"ID_TIPO_SISTEMA_ORIGEN\", \"ID_CUENTA_EMP\", \"ID_COD_PRESUPTARIO\", \"ID_PEDIDO\", \"ID_UNI_COMPRA\", \"ID_CUENTA_PRINC\", \"ID_PROY_PEDIDO\", \"ID_FAM_AJENO_PEDIDO\", \"ID_SUBFAM_AJENO_PEDIDO\", \"ID_ESTADO_PEDIDO\", \"ID_TIPO_GESTOR_PEDIDO\", \"ID_EMP_DEST_PEDIDO\", \"ID_EMP_PROVE_PEDIDO\", \"ID_CD_PEDIDO\", \"COD_FACTURA\", \"NUM_FACTURA\", \"ID_FECHA_FACTURA\", \"FEHO_ALTA_FACTURA_ORIGINAL\", \"FEHO_EJEC_FACTURA\", \"ID_INFO_PREV_FACTURA\", \"FECHA_ALTA_CIERRE\", \"EJERCICIO_CIERRE\", \"ID_CUENTA_GRP\", \"ID_CUENTA_GRP_PEDIDO\", \"FACTURA_CABECERA_FILIAL\", \"FACTURA_FILIAL\", \"FECHA_DESDE\", \"FECHA_HASTA\", \"FEHO_ALTA_FACTURA\", \"COD_FCTR_IMPUTACION_CONTAB\", \"ID_EMISOR\", \"TND_DEST\", \"ID_COD_PRESUP_PEDIDO\", \"COD_LINEA_PEDIDO\", \"ID_LOC_COMPRA_PEDIDO\", \"Importe_Factura_sin_impto_euro\", \"Cumple Fecha Cierre\", \"Cumple Fecha Cierre Ini\"}),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Otras columnas quitadas\",{{\"ID_DIVISA\", Int64.Type}, {\"ID_TIPO_SISTEMA_ORIGEN\", Int64.Type}, {\"ID_TIPO_GESTOR_PEDIDO\", Int64.Type}, {\"ID_FORMA_PAGO\", Int64.Type}, {\"ID_INFO_PREV_FACTURA\", Int64.Type}, {\"ID_PEDIDO\", Int64.Type}, {\"ID_ESTADO_FACTURA\", Int64.Type}, {\"ID_EMP_DEST_PEDIDO\", Int64.Type}, {\"ID_EMP_PROVE_PEDIDO\", Int64.Type}, {\"ID_RECEPTOR\", Int64.Type}, {\"ID_CD_PEDIDO\", Int64.Type}, {\"ID_UNI_COMPRA\", Int64.Type}, {\"ID_CUENTA_GRP\", Int64.Type}, {\"ID_CUENTA_PRINC\", Int64.Type}, {\"ID_CUENTA_GRP_PEDIDO\", Int64.Type}, {\"ID_PROY_PEDIDO\", Int64.Type}, {\"Importe_Factura_sin_impto_euro\", type number}, {\"ID_CUENTA_EMP\", Int64.Type}, {\"ID_COD_PRESUPTARIO\", Int64.Type}, {\"ID_FAM_AJENO_PEDIDO\", Int64.Type}, {\"ID_SUBFAM_AJENO_PEDIDO\", Int64.Type}, {\"EJERCICIO_CIERRE\", Int64.Type}, {\"FECHA_ALTA_CIERRE\", type date}}),",
                "    #\"Personalizada agregada\" = Table.AddColumn(#\"Tipo cambiado\", \"ID_MES_CIERRE_FACTURA\", each 1),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Personalizada agregada\",{{\"FECHA_DESDE\", \"Fecha Desde\"}, {\"FECHA_HASTA\", \"Fecha Hasta\"}}),",
                "    #\"Tipo cambiado1\" = Table.TransformColumnTypes(#\"Columnas con nombre cambiado\",{{\"Importe_Factura_sin_impto_euro\", Currency.Type}}),",
                "    Redondeado = Table.TransformColumns(#\"Tipo cambiado1\",{{\"Importe_Factura_sin_impto_euro\", each Number.Round(_, 4), Currency.Type}})",
                "in",
                "    Redondeado"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Incurrido €",
            "expression": "calculate(sum( 'Factura Compra Hecho'[Importe_Factura_sin_impto_euro]),'Factura Tipo Sistema Origen'[Factura Tipo Sistema Origen ID]<>14 ,'Pedido Estado'[Pedido Estado ID] in {460,461,462,463,464,465,466,469,697})",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "% Inc vs Ped €",
            "expression": [
              " DIVIDE('Factura Compra Hecho'[Incurrido €],'Pedido Compra Hecho'[Pedido Importe €],0)",
              ""
            ],
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "% Inc vs Ppto €",
            "expression": [
              " DIVIDE( 'Factura Compra Hecho'[Incurrido €],'Presupuesto Compra Hecho'[Presupuesto Importe €],0)",
              ""
            ],
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "Incurrido Ajenos €",
            "expression": [
              " calculate(sum( 'Factura Compra Hecho'[Importe_Factura_sin_impto_euro]),'Pedido Estado'[Pedido Estado ID] in {460,461,462,463,464,465,466,469,697},'Factura Compra Hecho'[FACTURA_CABECERA_FILIAL]=0  ,'Factura Compra Hecho'[FACTURA_FILIAL] in {0,1})",
              "",
              "",
              ""
            ],
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido € Cierre",
            "expression": "calculate('Factura Compra Hecho'[Incurrido €],'Factura Compra Hecho'[Cumple Fecha Cierre]=\"1\" )",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Provisiones vs Facturas",
            "expression": " DIVIDE(CALCULATE([Incurrido €],'Factura Estado'[Factura vs Provision] = \"Provisiones\"),CALCULATE([Incurrido €],'Factura Estado'[Factura vs Provision]=\"Facturas\"))",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "Incurrido Cierre Enero",
            "expression": " CALCULATE([Incurrido € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Febrero",
            "expression": " CALCULATE([Incurrido € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=2)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Marzo",
            "expression": " CALCULATE([Incurrido € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=3)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Abril",
            "expression": " CALCULATE([Incurrido € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=4)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Mayo",
            "expression": " CALCULATE([Incurrido € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=5)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Junio",
            "expression": " CALCULATE([Incurrido € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=6)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Julio",
            "expression": " CALCULATE([Incurrido € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=7)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Agosto",
            "expression": " CALCULATE([Incurrido € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=8)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Septiembre",
            "expression": " CALCULATE([Incurrido € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=9)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Octubre",
            "expression": " CALCULATE([Incurrido € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=10)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Noviembre",
            "expression": " CALCULATE([Incurrido € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=11)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Diciembre",
            "expression": " CALCULATE([Incurrido € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=12)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "% Inc Cierre vs Ppto Acum €",
            "expression": " DIVIDE( 'Factura Compra Hecho'[Inc Cierre vs Ppto Acum €],'Presupuesto Compra Hecho'[Presupuesto Acumulado],0)",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "Inc Cierre vs Ppto Acum €",
            "expression": "  'Factura Compra Hecho'[Incurrido € Cierre]-'Presupuesto Compra Hecho'[Presupuesto Acumulado]",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Facturas",
            "expression": " calculate([Incurrido € Cierre],'Factura Estado'[Factura vs Provision]=\"Facturas\")",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Provisiones",
            "expression": " calculate([Incurrido € Cierre],'Factura Estado'[Factura vs Provision]=\"Provisiones\")",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre €",
            "expression": [
              "calculate('Factura Compra Hecho'[Incurrido Ajenos €],'Factura Compra Hecho'[Cumple Fecha Cierre]=\"1\" )",
              ""
            ],
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Abril",
            "expression": " CALCULATE([Incurrido Ajenos Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=4)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Enero",
            "expression": " CALCULATE([Incurrido Ajenos Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Febrero",
            "expression": " CALCULATE([Incurrido Ajenos Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=2)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Marzo",
            "expression": " CALCULATE([Incurrido Ajenos Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=3)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Mayo",
            "expression": " CALCULATE([Incurrido Ajenos Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=5)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Junio",
            "expression": " CALCULATE([Incurrido Ajenos Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=6)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Agosto",
            "expression": " CALCULATE([Incurrido Ajenos Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=8)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Septiembre",
            "expression": " CALCULATE([Incurrido Ajenos Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=9)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Octubre",
            "expression": " CALCULATE([Incurrido Ajenos Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=10)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Noviembre",
            "expression": " CALCULATE([Incurrido Ajenos Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=11)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Diciembre",
            "expression": " CALCULATE([Incurrido Ajenos Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=12)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Provisiones",
            "expression": " calculate([Incurrido Ajenos Cierre €],'Factura Estado'[Factura vs Provision]=\"Provisiones\")",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Facturas",
            "expression": " calculate([Incurrido Ajenos Cierre €],'Factura Estado'[Factura vs Provision]=\"Facturas\")",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Julio",
            "expression": " CALCULATE([Incurrido Ajenos Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=7)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido € Cierre Ejec",
            "expression": "calculate('Factura Compra Hecho'[Incurrido €],'Factura Compra Hecho'[Cumple Fecha Cierre]=\"1\",USERELATIONSHIP('Factura Compra Hecho'[FEHO_EJEC_FACTURA],'Presupuesto Ejercicio Fecha'[ID_FECHA_PRESUPUESTARIA] ))",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Ejec Enero",
            "expression": " CALCULATE([Incurrido € Cierre Ejec],'Presupuesto Ejercicio Fecha'[ID_MES]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Ejec Febrero",
            "expression": " CALCULATE([Incurrido € Cierre Ejec],'Presupuesto Ejercicio Fecha'[ID_MES]=2)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Ejec Abril",
            "expression": " CALCULATE([Incurrido € Cierre Ejec],'Presupuesto Ejercicio Fecha'[ID_MES]=4)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Ejec Mayo",
            "expression": " CALCULATE([Incurrido € Cierre Ejec],'Presupuesto Ejercicio Fecha'[ID_MES]=5)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Ejec Junio",
            "expression": " CALCULATE([Incurrido € Cierre Ejec],'Presupuesto Ejercicio Fecha'[ID_MES]=6)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Ejec Julio",
            "expression": " CALCULATE([Incurrido € Cierre Ejec],'Presupuesto Ejercicio Fecha'[ID_MES]=7)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Ejec Agosto",
            "expression": " CALCULATE([Incurrido € Cierre Ejec],'Presupuesto Ejercicio Fecha'[ID_MES]=8)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Ejec Septiembre",
            "expression": " CALCULATE([Incurrido € Cierre Ejec],'Presupuesto Ejercicio Fecha'[ID_MES]=9)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Ejec Octubre",
            "expression": " CALCULATE([Incurrido € Cierre Ejec],'Presupuesto Ejercicio Fecha'[ID_MES]=10)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Ejec Noviembre",
            "expression": " CALCULATE([Incurrido € Cierre Ejec],'Presupuesto Ejercicio Fecha'[ID_MES]=11)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Ejec Diciembre",
            "expression": " CALCULATE([Incurrido € Cierre Ejec],'Presupuesto Ejercicio Fecha'[ID_MES]=12)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Ejec Marzo",
            "expression": " CALCULATE([Incurrido € Cierre Ejec],'Presupuesto Ejercicio Fecha'[ID_MES]=3)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido € Cierre Almacen",
            "expression": "calculate('Factura Compra Hecho'[Incurrido €],'Factura Compra Hecho'[Cumple Fecha Cierre Ini]=\"1\" )",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Provisiones Almacen",
            "expression": " calculate([Incurrido € Cierre Almacen],'Factura Estado'[Factura vs Provision]=\"Provisiones\")",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Facturas Almacen",
            "expression": " calculate([Incurrido € Cierre Almacen],'Factura Estado'[Factura vs Provision]=\"Facturas\")",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Mes Anterior",
            "expression": " CALCULATE([Incurrido Ajenos Cierre €],'Factura Compra Hecho'[Cumple Mes Anterior]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Mes Anterior",
            "expression": " CALCULATE([Incurrido € Cierre],'Factura Compra Hecho'[Cumple Mes Anterior]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Moneda Local",
            "expression": "calculate(sum( 'Factura Compra Hecho'[Importe_Factura_sin_impto]),'Factura Tipo Sistema Origen'[Factura Tipo Sistema Origen ID]<>14 ,'Pedido Estado'[Pedido Estado ID] in {460,461,462,463,464,465,466,469,697})",
            "formatString": "#,0 \"\";-#,0 \"\";#,0 \"\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Moneda Local Cierre Facturas",
            "expression": "calculate('Factura Compra Hecho'[Incurrido Moneda Local],'Factura Compra Hecho'[Cumple Fecha Cierre]=\"1\" ,'Factura Estado'[Factura vs Provision]=\"Facturas\")",
            "formatString": "#,0 \"\";-#,0 \"\";#,0 \"\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Moneda Local",
            "expression": [
              " calculate(sum( 'Factura Compra Hecho'[Importe_Factura_sin_impto]),'Pedido Estado'[Pedido Estado ID] in {460,461,462,463,464,465,466,469,697},'Factura Compra Hecho'[FACTURA_CABECERA_FILIAL]=0  ,'Factura Compra Hecho'[FACTURA_FILIAL] in {0,1})",
              ""
            ],
            "formatString": "#,0 \"\";-#,0 \"\";#,0 \"\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Facturas Monela Local",
            "expression": " calculate([Incurrido Ajenos Moneda Local],'Factura Estado'[Factura vs Provision]=\"Facturas\",'Factura Compra Hecho'[Cumple Fecha Cierre]=\"1\")",
            "formatString": "#,0 \"\";-#,0 \"\";#,0 \"\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          }
        ]
      },
      {
        "name": "Factura Fecha Ejecucion",
        "columns": [
          {
            "name": "ID_FECHA",
            "dataType": "dateTime",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "sourceColumn": "ID_FECHA",
            "formatString": "dd/MM/yyyy"
          },
          {
            "name": "Factura Fecha Ejecucion",
            "dataType": "dateTime",
            "sourceColumn": "DIA",
            "formatString": "dd/MM/yyyy",
            "sortByColumn": "ID_FECHA"
          },
          {
            "name": "Factura Fecha Ejecucion Descripcion",
            "dataType": "string",
            "sourceColumn": "DESCRIPCION",
            "sortByColumn": "ID_FECHA"
          },
          {
            "name": "ID_MES",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_MES",
            "summarizeBy": "none"
          },
          {
            "name": "ID_TRIMESTRE",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TRIMESTRE",
            "summarizeBy": "none"
          },
          {
            "name": "Factura Fecha Ejecucion Trimestre",
            "dataType": "string",
            "sourceColumn": "Trimestre"
          },
          {
            "name": "ID_SEMESTRE",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_SEMESTRE",
            "summarizeBy": "none"
          },
          {
            "name": "Factura Fecha Ejecucion Semestre",
            "dataType": "string",
            "sourceColumn": "Semestre"
          },
          {
            "name": "ID_EJERCICIO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EJERCICIO"
          },
          {
            "name": "Factura Fecha Ejecucion Ejercicio",
            "dataType": "string",
            "sourceColumn": "EJERCICIO"
          },
          {
            "name": "Factura Fecha Ejecucion Mes",
            "dataType": "string",
            "sourceColumn": "DESCRIPCION_MES",
            "sortByColumn": "ID_MES"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    DMFINANCIERO = Source{[Schema=\"DMFINANCIERO\"]}[Data],",
                "    DIM_TIEMPO1 = DMFINANCIERO{[Name=\"DIM_TIEMPO\"]}[Data],",
                "    #\"Columna duplicada\" = Table.DuplicateColumn(DIM_TIEMPO1, \"ID_FECHA\", \"DIA - Copia\"),",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(#\"Columna duplicada\",{\"ID_FECHA\", \"DESCRIPCION\", \"ID_MES\", \"DESCRIPCION_MES\", \"ID_TRIMESTRE\", \"TRIMESTRE\", \"ID_SEMESTRE\", \"DESCRIPCION_SEMESTRE\", \"ID_EJERCICIO\", \"DIA - Copia\"}),",
                "    #\"Personalizada agregada\" = Table.AddColumn(#\"Otras columnas quitadas\", \"EJERCICIO\", each [ID_EJERCICIO]),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Personalizada agregada\",{{\"ID_EJERCICIO\", Int64.Type}, {\"ID_MES\", Int64.Type}, {\"ID_SEMESTRE\", Int64.Type}, {\"ID_TRIMESTRE\", Int64.Type}, {\"EJERCICIO\", type text}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"DESCRIPCION_SEMESTRE\", \"Semestre\"}, {\"TRIMESTRE\", \"Trimestre\"}, {\"DIA - Copia\", \"DIA\"}}),",
                "    #\"Tipo cambiado1\" = Table.TransformColumnTypes(#\"Columnas con nombre cambiado\",{{\"ID_FECHA\", type date}, {\"DIA\", type date}})",
                "in",
                "    #\"Tipo cambiado1\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Ejercicio - Trimestre - Semestre- Mes - Dia",
            "levels": [
              {
                "name": "Ejercicio",
                "ordinal": 0,
                "column": "Factura Fecha Ejecucion Ejercicio"
              },
              {
                "name": "Semestre",
                "ordinal": 1,
                "column": "Factura Fecha Ejecucion Semestre"
              },
              {
                "name": "Trimestre",
                "ordinal": 2,
                "column": "Factura Fecha Ejecucion Trimestre"
              },
              {
                "name": "Dia",
                "ordinal": 4,
                "column": "Factura Fecha Ejecucion"
              },
              {
                "name": "Mes",
                "ordinal": 3,
                "column": "Factura Fecha Ejecucion Mes"
              }
            ]
          }
        ]
      },
      {
        "name": "Factura Fecha Alta Cierre",
        "columns": [
          {
            "name": "ID_FECHA",
            "dataType": "dateTime",
            "isHidden": true,
            "isUnique": true,
            "isNullable": false,
            "sourceColumn": "ID_FECHA",
            "formatString": "dd/MM/yyyy"
          },
          {
            "name": "Factura Fecha Alta Cierre",
            "dataType": "dateTime",
            "sourceColumn": "DIA",
            "formatString": "dd/MM/yyyy",
            "sortByColumn": "ID_FECHA"
          },
          {
            "name": "Factura Fecha Alta Cierre Descripcion",
            "dataType": "string",
            "sourceColumn": "DESCRIPCION",
            "sortByColumn": "ID_FECHA"
          },
          {
            "name": "ID_MES",
            "dataType": "int64",
            "isHidden": true,
            "isNullable": false,
            "sourceColumn": "ID_MES",
            "summarizeBy": "none"
          },
          {
            "name": "Factura Mes Alta Cierre",
            "dataType": "string",
            "sourceColumn": "DESCRIPCION_MES",
            "sortByColumn": "ID_MES"
          },
          {
            "name": "ID_TRIMESTRE",
            "dataType": "int64",
            "isHidden": true,
            "isNullable": false,
            "sourceColumn": "ID_TRIMESTRE",
            "summarizeBy": "none"
          },
          {
            "name": "Factura Trimestre Alta Cierre",
            "dataType": "string",
            "isNullable": false,
            "sourceColumn": "Trimestre",
            "sortByColumn": "ID_SEMESTRE"
          },
          {
            "name": "ID_SEMESTRE",
            "dataType": "int64",
            "isHidden": true,
            "isNullable": false,
            "sourceColumn": "ID_SEMESTRE",
            "summarizeBy": "none"
          },
          {
            "name": "Factura Semestre Alta Cierre",
            "dataType": "string",
            "isNullable": false,
            "sourceColumn": "Semestre",
            "sortByColumn": "ID_SEMESTRE"
          },
          {
            "name": "ID_EJERCICIO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EJERCICIO",
            "summarizeBy": "none"
          },
          {
            "name": "Factura Ejercicio Alta Cierre",
            "dataType": "string",
            "sourceColumn": "EJERCICIO"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "      Source = #\"Oracle/exapre_rep\",",
                "        Origen = Value.NativeQuery(Source,",
                "    \"select ID_FECHA, DESCRIPCION, ID_MES, DESCRIPCION_MES, ID_TRIMESTRE, TRIMESTRE, ID_SEMESTRE, DESCRIPCION_SEMESTRE, ID_EJERCICIO from  DMFINANCIERO.DIM_TIEMPO t where Exists  ( select 1 from  DMFINANCIERO.MIC_FACT_FACTURA_SISTEMAS F WHERE T.ID_FECHA= F.FECHA_ALTA_CIERRE)\"),",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(Origen,{\"ID_FECHA\", \"DESCRIPCION\", \"ID_MES\", \"DESCRIPCION_MES\", \"ID_TRIMESTRE\", \"TRIMESTRE\", \"ID_SEMESTRE\", \"DESCRIPCION_SEMESTRE\", \"ID_EJERCICIO\"}),",
                "    #\"Columna duplicada\" = Table.DuplicateColumn(#\"Otras columnas quitadas\", \"ID_FECHA\", \"DIA\"),",
                "    #\"Personalizada agregada\" = Table.AddColumn(#\"Columna duplicada\", \"EJERCICIO\", each [ID_EJERCICIO]),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Personalizada agregada\",{{\"ID_EJERCICIO\", Int64.Type}, {\"ID_MES\", Int64.Type}, {\"ID_SEMESTRE\", Int64.Type}, {\"ID_TRIMESTRE\", Int64.Type}, {\"EJERCICIO\", type text}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"DESCRIPCION_SEMESTRE\", \"Semestre\"}, {\"TRIMESTRE\", \"Trimestre\"}}),",
                "    #\"Tipo cambiado1\" = Table.TransformColumnTypes(#\"Columnas con nombre cambiado\",{{\"ID_FECHA\", type date}, {\"DIA\", type date}})",
                "in",
                "    #\"Tipo cambiado1\""
              ]
            }
          }
        ]
      },
      {
        "name": "Datos ejecucion ETL",
        "columns": [
          {
            "name": "ID_PROCESO_ETL",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PROCESO_ETL"
          },
          {
            "name": "Descripcion Proceso",
            "dataType": "string",
            "sourceColumn": "Descripcion Proceso"
          },
          {
            "name": "Fecha Inicio Actualizacion Datos",
            "dataType": "string",
            "sourceColumn": "Fecha Inicio Actualizacion Datos"
          },
          {
            "name": "Fecha Actualizacion Datos",
            "dataType": "dateTime",
            "sourceColumn": "Fecha Actualizacion Datos",
            "formatString": "dd/mm/yyyy HH:mm"
          },
          {
            "name": "VALIDEZ",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "VALIDEZ"
          },
          {
            "name": "Versión Tabular",
            "dataType": "string",
            "sourceColumn": "VERSION_TABULAR"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    tbl= Value.NativeQuery(Source, ",
                "    \"SELECT AEE.ID_PROCESO_ETL AS ID_PROCESO_ETL",
                "",
                " ,AEE.DESCRIPCION_PROCESO AS DESCRIPCION_PROCESO",
                "",
                " ,AEE.FECHA_INICIO AS FECHA_INICIO",
                "",
                " ,AEE.FECHA_FIN AS FECHA_FIN",
                "",
                " ,AEE.VALIDEZ AS VALIDEZ",
                "",
                " ,'01.59' AS VERSION_TABULAR",
                " FROM ETLSTAGING.AUX_EJECUCION_ETL AEE WHERE AEE.ID_PROCESO_ETL=338\"),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(tbl,{{\"FECHA_FIN\", \"Fecha Actualizacion Datos\"}, {\"FECHA_INICIO\", \"Fecha Inicio Actualizacion Datos\"}, {\"DESCRIPCION_PROCESO\", \"Descripcion Proceso\"}}),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columnas con nombre cambiado\",{{\"Fecha Inicio Actualizacion Datos\", type text}, {\"Fecha Actualizacion Datos\", type datetime}})",
                "in",
                "    #\"Tipo cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Factura Ejercicio Cierre",
        "columns": [
          {
            "name": "ID_EJERCICIO",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "ID_EJERCICIO",
            "summarizeBy": "none"
          },
          {
            "name": "Factura Ejercicio Cierre",
            "dataType": "string",
            "isUnique": true,
            "isNullable": false,
            "sourceColumn": "Factura Ejercicio Cierre",
            "sortByColumn": "ID_EJERCICIO"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"select ID_EJERCICIO from DMFINANCIERO.DIM_EJERCICIO e where exists (select 1 from DMFINANCIERO.MIC_FACT_FACTURA_SISTEMAS f where f.ejercicio_cierre  = e.id_ejercicio)\"),",
                "    #\"Columna duplicada\" = Table.DuplicateColumn(Origen, \"ID_EJERCICIO\", \"Factura Ejercicio Cierre\"),    ",
                " #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columna duplicada\",{{\"Factura Ejercicio Cierre\", type text}, {\"ID_EJERCICIO\", Int64.Type}})",
                "in",
                "    #\"Tipo cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Presupuesto Ejercicio Fecha",
        "columns": [
          {
            "name": "Día",
            "dataType": "dateTime",
            "isNullable": false,
            "sourceColumn": "Día",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Día Descripción Corta",
            "dataType": "string",
            "isNullable": false,
            "sourceColumn": "Día Descripción Corta",
            "sortByColumn": "Día"
          },
          {
            "name": "ID_TRIMESTRE_FISCAL",
            "dataType": "int64",
            "isHidden": true,
            "isNullable": false,
            "sourceColumn": "ID_TRIMESTRE_FISCAL",
            "encodingHint": "value",
            "summarizeBy": "none"
          },
          {
            "name": "Trimestre Presupuestario",
            "dataType": "string",
            "isNullable": false,
            "sourceColumn": "Trimestre Presupuestario",
            "sortByColumn": "ID_TRIMESTRE_FISCAL"
          },
          {
            "name": "ID_SEMESTRE_FISCAL",
            "dataType": "int64",
            "isHidden": true,
            "isNullable": false,
            "sourceColumn": "ID_SEMESTRE_FISCAL",
            "encodingHint": "value",
            "summarizeBy": "none"
          },
          {
            "name": "Semestre Presupuestario",
            "dataType": "string",
            "isNullable": false,
            "sourceColumn": "Semestre Presupuestario",
            "sortByColumn": "ID_SEMESTRE_FISCAL"
          },
          {
            "name": "Ejercicio Presupuestario ID",
            "dataType": "int64",
            "isHidden": true,
            "isNullable": false,
            "sourceColumn": "Ejercicio Presupuestario ID",
            "encodingHint": "value",
            "summarizeBy": "none"
          },
          {
            "name": "Ejercicio Presupuestario",
            "dataType": "string",
            "isNullable": false,
            "sourceColumn": "Ejercicio Presupuestario",
            "sortByColumn": "Ejercicio Presupuestario ID"
          },
          {
            "name": "ID_MES",
            "dataType": "int64",
            "isNullable": false,
            "sourceColumn": "ID_MES",
            "encodingHint": "value",
            "summarizeBy": "none"
          },
          {
            "name": "Mes Prespuestario",
            "dataType": "string",
            "isNullable": false,
            "sourceColumn": "Mes Prespuestario",
            "sortByColumn": "Orden Mes Presupuesto"
          },
          {
            "type": "calculated",
            "name": "Orden Mes Presupuesto",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "SWITCH(TRUE,[ID_MES] = 1,13, [ID_MES] =2,1,[ID_MES] =3,2,[ID_MES] =4,3,[ID_MES] =5,4,[ID_MES] =6,5,[ID_MES] =7,6,[ID_MES] =8,7,[ID_MES] =9,8,[ID_MES] =10,9,[ID_MES] =11,10,[ID_MES] =12,11)",
            "formatString": "0",
            "encodingHint": "value",
            "summarizeBy": "none"
          },
          {
            "name": "Mes Corto Presupuestario",
            "dataType": "string",
            "isNullable": false,
            "sourceColumn": "Mes Corto Presupuestario",
            "sortByColumn": "Orden Mes Presupuesto"
          },
          {
            "name": "Semestre Presupuestario Nom Corto",
            "dataType": "string",
            "sourceColumn": "Semestre Presupuestario Nom Corto"
          },
          {
            "name": "Trimestre Presupuestario Nom Corto",
            "dataType": "string",
            "sourceColumn": "Trimestre Presupuestario Nom Corto"
          },
          {
            "name": "ID_FECHA_PRESUPUESTARIA",
            "dataType": "dateTime",
            "isHidden": true,
            "isUnique": true,
            "isNullable": false,
            "sourceColumn": "ID_FECHA_PRESUPUESTARIA",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Orden Mes",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Orden Mes"
          },
          {
            "type": "calculated",
            "name": "Mes Actual",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(YEAR('Presupuesto Ejercicio Fecha'[ID_FECHA_PRESUPUESTARIA])=year(today()) && month('Presupuesto Ejercicio Fecha'[ID_FECHA_PRESUPUESTARIA])=month(TODAY()),\"Si\",\"No\")"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    DMFINANCIERO = Source{[Schema=\"DMFINANCIERO\"]}[Data],",
                "    DIM_TIEMPO1 = DMFINANCIERO{[Name=\"DIM_TIEMPO\"]}[Data],",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(DIM_TIEMPO1,{\"ID_FECHA\", \"DIA\", \"DESCRIPCION\", \"ID_MES\", \"DESCRIPCION_MES\", \"ID_TRIMESTRE_FISCAL\", \"TRIMESTRE_FISCAL\", \"ID_SEMESTRE_FISCAL\", \"DESCRIPCION_SEMESTRE_FISCAL\", \"ID_EJERCICIO_FISCAL\", \"DESCRIPCION_EJERCICIO_FISCAL\"}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Otras columnas quitadas\",{{\"ID_FECHA\", \"ID_FECHA_PRESUPUESTARIA\"}, {\"DIA\", \"Día\"}}),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columnas con nombre cambiado\",{{\"Día\", type date}}),",
                "    #\"Columnas con nombre cambiado1\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"DESCRIPCION\", \"Día Descripción Corta\"}, {\"TRIMESTRE_FISCAL\", \"Trimestre Presupuestario\"}, {\"DESCRIPCION_SEMESTRE_FISCAL\", \"Semestre Presupuestario\"}, {\"DESCRIPCION_EJERCICIO_FISCAL\", \"Ejercicio Presupuestario\"}, {\"ID_EJERCICIO_FISCAL\", \"Ejercicio Presupuestario ID\"}, {\"DESCRIPCION_MES\", \"Mes Prespuestario\"}}),",
                "    #\"Tipo cambiado1\" = Table.TransformColumnTypes(#\"Columnas con nombre cambiado1\",{{\"Ejercicio Presupuestario ID\", Int64.Type}, {\"ID_TRIMESTRE_FISCAL\", Int64.Type}, {\"ID_SEMESTRE_FISCAL\", Int64.Type}, {\"ID_FECHA_PRESUPUESTARIA\", type date}, {\"ID_MES\", Int64.Type}}),",
                "    #\"Columna condicional agregada\" = Table.AddColumn(#\"Tipo cambiado1\", \"Mes Corto Presupuestario\", each if [Mes Prespuestario] = \"Enero\" then \"Ene\" else if [Mes Prespuestario] = \"Febrero\" then \"Feb\" else if [Mes Prespuestario] = \"Marzo\" then \"Mar\" else if [Mes Prespuestario] = \"Abril\" then \"Abr\" else if [Mes Prespuestario] = \"Mayo\" then \"May\" else if [Mes Prespuestario] = \"Junio\" then \"Jun\" else if [Mes Prespuestario] = \"Julio\" then \"Jul\" else if [Mes Prespuestario] = \"Agosto\" then \"Ago\" else if [Mes Prespuestario] = \"Septiembre\" then \"Sep\" else if [Mes Prespuestario] = \"Octubre\" then \"Oct\" else if [Mes Prespuestario] = \"Noviembre\" then \"Nov\" else if [Mes Prespuestario] = \"Diciembre\" then \"Dic\" else null),",
                "    #\"Columna duplicada\" = Table.DuplicateColumn(#\"Columna condicional agregada\", \"Semestre Presupuestario\", \"Semestre Presupuestario - Copia\"),",
                "    #\"Valor reemplazado\" = Table.ReplaceValue(#\"Columna duplicada\",\"Segundo Semestre\",\"H2\",Replacer.ReplaceText,{\"Semestre Presupuestario - Copia\"}),",
                "    #\"Valor reemplazado1\" = Table.ReplaceValue(#\"Valor reemplazado\",\"Primer Semestre\",\"H1\",Replacer.ReplaceText,{\"Semestre Presupuestario - Copia\"}),",
                "    #\"Columnas con nombre cambiado2\" = Table.RenameColumns(#\"Valor reemplazado1\",{{\"Semestre Presupuestario - Copia\", \"Semestre Presupuestario Nom Corto\"}}),",
                "    #\"Columna duplicada1\" = Table.DuplicateColumn(#\"Columnas con nombre cambiado2\", \"Trimestre Presupuestario\", \"Trimestre Presupuestario - Copia\"),",
                "    #\"Columnas con nombre cambiado3\" = Table.RenameColumns(#\"Columna duplicada1\",{{\"Trimestre Presupuestario - Copia\", \"Trimestre Presupuestario Nom Corto\"}}),",
                "    #\"Valor reemplazado2\" = Table.ReplaceValue(#\"Columnas con nombre cambiado3\",\"Primer Trimestre\",\"Q1\",Replacer.ReplaceText,{\"Trimestre Presupuestario Nom Corto\"}),",
                "    #\"Valor reemplazado3\" = Table.ReplaceValue(#\"Valor reemplazado2\",\"Cuarto Trimestre\",\"Q4\",Replacer.ReplaceText,{\"Trimestre Presupuestario Nom Corto\"}),",
                "    #\"Valor reemplazado4\" = Table.ReplaceValue(#\"Valor reemplazado3\",\"Tercer Trimestre\",\"Q3\",Replacer.ReplaceText,{\"Trimestre Presupuestario Nom Corto\"}),",
                "    #\"Valor reemplazado5\" = Table.ReplaceValue(#\"Valor reemplazado4\",\"Segundo Trimestre\",\"Q2\",Replacer.ReplaceText,{\"Trimestre Presupuestario Nom Corto\"}),",
                "    #\"Filas filtradas\" = Table.SelectRows(#\"Valor reemplazado5\", each true),",
                "    #\"Columna condicional agregada1\" = Table.AddColumn(#\"Filas filtradas\", \"Orden Mes\", each if [ID_MES] = 1 then 13 else if [ID_MES] = 2 then 1 else if [ID_MES] = 3 then 2 else if [ID_MES] = 4 then 3 else if [ID_MES] = 5 then 4 else if [ID_MES] = 6 then 5 else if [ID_MES] = 7 then 6 else if [ID_MES] = 8 then 7 else if [ID_MES] = 9 then 8 else if [ID_MES] = 10 then 9 else if [ID_MES] = 11 then 10 else if [ID_MES] = 12 then 11 else null)",
                "in",
                "    #\"Columna condicional agregada1\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Ejercicio/Sem/Tri",
            "levels": [
              {
                "name": "Ejercicio Presupuestario",
                "ordinal": 0,
                "column": "Ejercicio Presupuestario"
              },
              {
                "name": "Semestre Presupuestario",
                "ordinal": 1,
                "column": "Semestre Presupuestario"
              },
              {
                "name": "Trimestre Presupuestario",
                "ordinal": 2,
                "column": "Trimestre Presupuestario"
              },
              {
                "name": "Mes Prespuestario",
                "ordinal": 3,
                "column": "Mes Prespuestario"
              },
              {
                "name": "Día",
                "ordinal": 4,
                "column": "Día"
              }
            ]
          }
        ]
      },
      {
        "name": "Factura",
        "columns": [
          {
            "name": "Factura ID",
            "dataType": "string",
            "isUnique": true,
            "sourceColumn": "COD_FACTURA"
          },
          {
            "name": "Factura Num",
            "dataType": "string",
            "sourceColumn": "NUM_FACTURA"
          },
          {
            "name": "Fecha Desde",
            "dataType": "dateTime",
            "sourceColumn": "Fecha_Desde",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Fecha Hasta",
            "dataType": "dateTime",
            "sourceColumn": "Fecha_Hasta",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Fecha Alta Factura",
            "dataType": "dateTime",
            "sourceColumn": "FEHO_ALTA_FACTURA_ORIGINAL",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Fecha Ejecucion Factura",
            "dataType": "dateTime",
            "sourceColumn": "FEHO_EJEC_FACTURA",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Fecha Factura",
            "dataType": "dateTime",
            "sourceColumn": "ID_FECHA_FACTURA",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "INVOICE TYPE",
            "dataType": "string",
            "sourceColumn": "INVOICE TYPE"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Origen = Dim_Factura,",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(Origen,{\"COD_FACTURA\", \"NUM_FACTURA\", \"Fecha_Desde\", \"Fecha_Hasta\", \"FEHO_EJEC_FACTURA\", \"FEHO_ALTA_FACTURA_ORIGINAL\", \"ID_FECHA_FACTURA\", \"INVOICE TYPE\"}),",
                "    #\"Consulta anexada\" = Table.Combine({#\"Otras columnas quitadas\", Dim_Factura_NA}),",
                "    #\"Filas ordenadas\" = Table.Sort(#\"Consulta anexada\",{{\"COD_FACTURA\", Order.Ascending}}),",
                "    #\"Valor reemplazado\" = Table.ReplaceValue(#\"Filas ordenadas\",#datetime(9999, 9, 9, 0, 0, 0),null,Replacer.ReplaceValue,{\"FEHO_EJEC_FACTURA\"})",
                "in",
                "    #\"Valor reemplazado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Proyecto Presupuestario Naturaleza",
        "columns": [
          {
            "name": "Proyecto Presupuestario Naturaleza",
            "dataType": "string",
            "sourceColumn": "Proyecto Presupuestario Naturaleza"
          },
          {
            "name": "Proyecto Presupuestario Naturaleza Descripcion Corta",
            "dataType": "string",
            "sourceColumn": "Proyecto Presupuestario Naturaleza Descripcion Corta"
          },
          {
            "name": "Proyecto Presupuestario Naturaleza ID",
            "dataType": "int64",
            "isUnique": true,
            "isKey": true,
            "isNullable": false,
            "sourceColumn": "Proyecto Presupuestario Naturaleza ID",
            "summarizeBy": "none"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Origen = Dim_Proyecto_Contable,",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(Origen,{\"Proyecto Presupuestario Naturaleza ID\", \"Proyecto Presupuestario Naturaleza\", \"Proyecto Presupuestario Naturaleza Descripcion Corta\"}),",
                "    #\"Duplicados quitados\" = Table.Distinct(#\"Otras columnas quitadas\", {\"Proyecto Presupuestario Naturaleza ID\"})",
                "in",
                "    #\"Duplicados quitados\""
              ]
            }
          }
        ]
      },
      {
        "name": "Factura Compra Hecho Devengados",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_ESTADO_FACTURA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_ESTADO_FACTURA"
          },
          {
            "name": "ID_RECEPTOR",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_RECEPTOR"
          },
          {
            "name": "ID_FORMA_PAGO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_FORMA_PAGO"
          },
          {
            "name": "ID_DIVISA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_DIVISA"
          },
          {
            "name": "ID_TIPO_SISTEMA_ORIGEN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_SISTEMA_ORIGEN"
          },
          {
            "name": "ID_CUENTA_EMP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_EMP"
          },
          {
            "name": "ID_COD_PRESUPTARIO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_COD_PRESUPTARIO"
          },
          {
            "name": "ID_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PEDIDO"
          },
          {
            "name": "ID_UNI_COMPRA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_UNI_COMPRA"
          },
          {
            "name": "ID_CUENTA_PRINC",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_PRINC"
          },
          {
            "name": "ID_PROY_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PROY_PEDIDO"
          },
          {
            "name": "ID_FAM_AJENO_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_FAM_AJENO_PEDIDO"
          },
          {
            "name": "ID_SUBFAM_AJENO_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_SUBFAM_AJENO_PEDIDO"
          },
          {
            "name": "ID_ESTADO_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_ESTADO_PEDIDO"
          },
          {
            "name": "ID_TIPO_GESTOR_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_GESTOR_PEDIDO"
          },
          {
            "name": "ID_EMP_DEST_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMP_DEST_PEDIDO"
          },
          {
            "name": "ID_EMP_PROVE_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMP_PROVE_PEDIDO"
          },
          {
            "name": "ID_CD_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CD_PEDIDO"
          },
          {
            "name": "Factura ID",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COD_FACTURA"
          },
          {
            "name": "Factura Num",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "NUM_FACTURA"
          },
          {
            "name": "FEHO_ALTA_FACTURA_ORIGINAL",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FEHO_ALTA_FACTURA_ORIGINAL"
          },
          {
            "name": "FEHO_EJEC_FACTURA",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FEHO_EJEC_FACTURA"
          },
          {
            "name": "ID_INFO_PREV_FACTURA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_INFO_PREV_FACTURA"
          },
          {
            "name": "FECHA_ALTA_CIERRE",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FECHA_ALTA_CIERRE"
          },
          {
            "name": "EJERCICIO_CIERRE",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "EJERCICIO_CIERRE"
          },
          {
            "name": "ID_CUENTA_GRP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_GRP"
          },
          {
            "name": "ID_CUENTA_GRP_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_GRP_PEDIDO"
          },
          {
            "name": "FACTURA_CABECERA_FILIAL",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FACTURA_CABECERA_FILIAL"
          },
          {
            "name": "FACTURA_FILIAL",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FACTURA_FILIAL"
          },
          {
            "name": "Fecha Desde",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Fecha Desde"
          },
          {
            "name": "Fecha Hasta",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Fecha Hasta"
          },
          {
            "name": "Cumple Fecha Cierre",
            "dataType": "string",
            "sourceColumn": "Cumple Fecha Cierre"
          },
          {
            "name": "ID_MES_CIERRE_FACTURA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ID_MES_CIERRE_FACTURA"
          },
          {
            "name": "FECHA_DEVENGO",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FECHA_DEVENGO"
          },
          {
            "name": "IMPORTE_DEVENGADO_EURO",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "IMPORTE_DEVENGADO_EURO"
          },
          {
            "type": "calculated",
            "name": "ID_ORDEN_TRABAJO_LINEA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Orden Trabajo Hecho'[ID_ORDEN_TRABAJO_LINEA], TRUE () ),",
              "    FILTER (",
              "        'Orden Trabajo Hecho',       'Orden Trabajo Hecho'[ID_FACTURA] ='Factura Compra Hecho Devengados'[Factura ID]",
              "    )",
              ")"
            ],
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "Cadena Destino",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUX_REPARTO_FACTURAS'[Cadena], TRUE () ),",
              "    FILTER (",
              "        'AUX_REPARTO_FACTURAS',       'AUX_REPARTO_FACTURAS'[ID_CUENTA_EMP] = 'Factura Compra Hecho Devengados'[ID_CUENTA_EMP] && 'Factura Compra Hecho Devengados'[Factura ID]='AUX_REPARTO_FACTURAS'[ID_FACTURA] && 'AUX_REPARTO_FACTURAS'[ID_FACTURA_IMPUTACION_CONTABLE] ='Factura Compra Hecho Devengados'[COD_FCTR_IMPUTACION_CONTAB]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Mercado Destino",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUX_REPARTO_FACTURAS'[Mercado], TRUE () ),",
              "    FILTER (",
              "        'AUX_REPARTO_FACTURAS',       'AUX_REPARTO_FACTURAS'[ID_CUENTA_EMP] = 'Factura Compra Hecho Devengados'[ID_CUENTA_EMP] && 'Factura Compra Hecho Devengados'[Factura ID]='AUX_REPARTO_FACTURAS'[ID_FACTURA] && 'AUX_REPARTO_FACTURAS'[ID_FACTURA_IMPUTACION_CONTABLE] ='Factura Compra Hecho Devengados'[COD_FCTR_IMPUTACION_CONTAB]",
              "    )",
              ")"
            ]
          },
          {
            "name": "COD_FCTR_IMPUTACION_CONTAB",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COD_FCTR_IMPUTACION_CONTAB"
          },
          {
            "name": "TND_DEST",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "TND_DEST"
          },
          {
            "name": "ID_EMISOR",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMISOR"
          },
          {
            "type": "calculated",
            "name": "COD_EMISOR",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "RELATED('Factura Emisor'[Emisor ID])"
          },
          {
            "name": "ID_COD_PRESUP_PEDIDO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ID_COD_PRESUP_PEDIDO",
            "summarizeBy": "none"
          },
          {
            "type": "calculated",
            "name": "ID_MERCADO_LOCAL",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " IF(ISBLANK(",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Mercado Local'[ID Mercado], TRUE () ),",
              "    FILTER (",
              "        'Mercado Local',       'Mercado Local'[Mercado]= 'Factura Compra Hecho Devengados'[Mercado Destino]  )",
              ")),0,CALCULATE (",
              "    FIRSTNONBLANK ( 'Mercado Local'[ID Mercado], TRUE () ),",
              "    FILTER (",
              "        'Mercado Local',       'Mercado Local'[Mercado]= 'Factura Compra Hecho Devengados'[Mercado Destino]  )",
              "))"
            ]
          },
          {
            "type": "calculated",
            "name": "ID_CADENA_LOCAL",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " var cadena= CALCULATE (",
              "    FIRSTNONBLANK ( 'Cadena Local'[ID Cadena], TRUE () ),",
              "    FILTER (",
              "        'Cadena Local',       'Cadena Local'[Cadena]= 'Factura Compra Hecho Devengados'[Cadena Destino]  )",
              ")",
              "return",
              "IF(ISBLANK('Factura Compra Hecho Devengados'[Cadena Provision]),",
              "IF(ISBLANK('Factura Compra Hecho Devengados'[Cadena Refactura]),",
              "IF(ISBLANK(cadena),-2,cadena),'Factura Compra Hecho Devengados'[Cadena Refactura]),",
              "'Factura Compra Hecho Devengados'[Cadena Provision])"
            ]
          },
          {
            "name": "COD_LINEA_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COD_LINEA_PEDIDO"
          },
          {
            "type": "calculated",
            "name": "Tipo Agregado",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "VAR tipo= CALCULATE (",
              "    FIRSTNONBLANK ( 'AUXReferenciaAxuliar'[REFERENCIA_AUXILIAR], TRUE () ),",
              "    FILTER (",
              "        'AUXReferenciaAxuliar',       'AUXReferenciaAxuliar'[ID_PEDIDO_LINEA]= 'Factura Compra Hecho Devengados'[COD_LINEA_PEDIDO]  )",
              ")",
              "return\t\t\t\t\t",
              "IF(ISBLANK(tipo),\"DESCONOCIDO\",tipo)"
            ]
          },
          {
            "type": "calculated",
            "name": "Cadena Refactura",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "var cadena= CALCULATE (",
              "    FIRSTNONBLANK ( 'AUX_CADENAREFACTURA'[CADENA], TRUE () ),",
              "    FILTER (",
              "        'AUX_CADENAREFACTURA',       'AUX_CADENAREFACTURA'[ID_PEDIDO_LINEA]= 'Factura Compra Hecho Devengados'[COD_LINEA_PEDIDO]  )",
              ")",
              "return",
              "IF('Factura Compra Hecho Devengados'[COD_TIPO_SO]=14,",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Cadena Local'[ID Cadena], TRUE () ),",
              "    FILTER (",
              "        'Cadena Local',       'Cadena Local'[Cadena]=cadena  ))",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "COD_TIPO_SO",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "RELATED('Factura Tipo Sistema Origen'[Factura Tipo Sistema Origen ID])"
          },
          {
            "type": "calculated",
            "name": "Cadena Provision",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "",
              "var cadena=",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'AUX_PROVISION_FACTURA'[PERFIL_RECURSO], TRUE () ),",
              "    FILTER (",
              "        'AUX_PROVISION_FACTURA',      ( 'AUX_PROVISION_FACTURA'[ID_PREVISION_FACTURA]*10)= 'Factura Compra Hecho Devengados'[Factura ID] && 'Factura Compra Hecho Devengados'[ID_ESTADO_FACTURA]=581",
              "))",
              "return",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Cadena Local'[ID Cadena], TRUE () ),",
              "    FILTER (",
              "        'Cadena Local',       'Cadena Local'[Cadena]=cadena  )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "ID_Tipo Importe",
            "dataType": "int64",
            "isDataTypeInferred": false,
            "isHidden": true,
            "expression": "4",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "type": "calculated",
            "name": "TipoPresupClas",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "6",
            "formatString": "0"
          },
          {
            "name": "ID_PROY_CONTAB",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PROY_CONTAB"
          },
          {
            "name": "ID_LOC_COMPRA_PEDIDO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ID_LOC_COMPRA_PEDIDO"
          },
          {
            "type": "calculated",
            "name": "Cumple Mes Anterior",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF('Factura Compra Hecho Devengados'[FECHA_DEVENGO]<DATE(year('Factura Compra Hecho Devengados'[FECHA_ALTA_CIERRE]),month('Factura Compra Hecho Devengados'[FECHA_ALTA_CIERRE])-1,1),1,0)"
          },
          {
            "type": "calculated",
            "name": "ID_CAMBIO",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "'Factura Compra Hecho Devengados'[ID_DIVISA]&'Factura Compra Hecho Devengados'[ID_FECHA_FACTURA]"
          },
          {
            "name": "ID_FECHA_FACTURA",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "ID_FECHA_FACTURA"
          },
          {
            "name": "IMPORTE_DEVENGADO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "IMPORTE_DEVENGADO"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "     Origen = Mic_Fact_Factura_Sistemas_Devengados,",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(Origen,{\"ID_ESTADO_FACTURA\", \"ID_RECEPTOR\", \"ID_FORMA_PAGO\", \"ID_DIVISA\", \"ID_TIPO_SISTEMA_ORIGEN\", \"ID_CUENTA_EMP\", \"ID_COD_PRESUPTARIO\", \"ID_PEDIDO\", \"ID_UNI_COMPRA\", \"ID_CUENTA_PRINC\", \"ID_PROY_CONTAB\", \"ID_PROY_PEDIDO\", \"ID_FAM_AJENO_PEDIDO\", \"ID_SUBFAM_AJENO_PEDIDO\", \"ID_ESTADO_PEDIDO\", \"ID_TIPO_GESTOR_PEDIDO\", \"ID_EMP_DEST_PEDIDO\", \"ID_EMP_PROVE_PEDIDO\", \"ID_CD_PEDIDO\", \"COD_FACTURA\", \"NUM_FACTURA\", \"FEHO_ALTA_FACTURA_ORIGINAL\", \"FEHO_EJEC_FACTURA\", \"ID_INFO_PREV_FACTURA\", \"FECHA_ALTA_CIERRE\", \"EJERCICIO_CIERRE\", \"ID_CUENTA_GRP\", \"ID_CUENTA_GRP_PEDIDO\", \"FACTURA_CABECERA_FILIAL\", \"FACTURA_FILIAL\", \"FECHA_DESDE\", \"FECHA_HASTA\", \"TND_DEST\", \"COD_FCTR_IMPUTACION_CONTAB\", \"IMPORTE_DEVENGADO\", \"FECHA_DEVENGO\", \"ID_EMISOR\", \"ID_COD_PRESUP_PEDIDO\", \"COD_LINEA_PEDIDO\", \"ID_LOC_COMPRA_PEDIDO\", \"ID_FECHA_FACTURA\", \"IMPORTE_DEVENGADO_EURO\", \"Cumple Fecha Cierre\"}),",
                "    #\"Personalizada agregada\" = Table.AddColumn(#\"Otras columnas quitadas\", \"ID_MES_CIERRE_FACTURA\", each 1),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Personalizada agregada\",{{\"FECHA_DESDE\", \"Fecha Desde\"}, {\"FECHA_HASTA\", \"Fecha Hasta\"}}),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columnas con nombre cambiado\",{{\"IMPORTE_DEVENGADO_EURO\", Currency.Type}}),",
                "    Redondeado = Table.TransformColumns(#\"Tipo cambiado\",{{\"IMPORTE_DEVENGADO_EURO\", each Number.Round(_, 4), Currency.Type}})",
                "in",
                "    Redondeado"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Incurrido Devengado €",
            "expression": "calculate(sum( 'Factura Compra Hecho Devengados'[IMPORTE_DEVENGADO_EURO]),'Factura Tipo Sistema Origen'[Factura Tipo Sistema Origen ID]<>14 ,'Pedido Estado'[Pedido Estado ID] in {460,461,462,463,464,465,466,469,697})",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengado € Cierre",
            "expression": "calculate('Factura Compra Hecho Devengados'[Incurrido Devengado €],'Factura Compra Hecho Devengados'[Cumple Fecha Cierre]=\"1\" )",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengado Cierre Abril",
            "expression": " CALCULATE([Incurrido Devengado € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=4)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengado Cierre Agosto",
            "expression": " CALCULATE([Incurrido Devengado € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=8)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengado Cierre Diciembre",
            "expression": " CALCULATE([Incurrido Devengado € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=12)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengado Cierre Enero",
            "expression": " CALCULATE([Incurrido Devengado € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengado Cierre Febrero",
            "expression": " CALCULATE([Incurrido Devengado € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=2)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengado Cierre Julio",
            "expression": " CALCULATE([Incurrido Devengado € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=7)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengado Cierre Junio",
            "expression": " CALCULATE([Incurrido Devengado € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=6)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengado Cierre Marzo",
            "expression": " CALCULATE([Incurrido Devengado € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=3)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengado Cierre Mayo",
            "expression": " CALCULATE([Incurrido Devengado € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=5)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengado Cierre Noviembre",
            "expression": " CALCULATE([Incurrido Devengado € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=11)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengado Cierre Octubre",
            "expression": " CALCULATE([Incurrido Devengado € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=10)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengado Cierre Septiembre",
            "expression": " CALCULATE([Incurrido Devengado € Cierre],'Presupuesto Ejercicio Fecha'[ID_MES]=9)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Devengados €",
            "expression": " calculate(sum( 'Factura Compra Hecho Devengados'[IMPORTE_DEVENGADO_EURO]),'Pedido Estado'[Pedido Estado ID] in {460,461,462,463,464,465,466,469,697},'Factura Compra Hecho Devengados'[FACTURA_CABECERA_FILIAL]=0  ,'Factura Compra Hecho Devengados'[FACTURA_FILIAL] in {0,1})",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Devengados Cierre €",
            "expression": "calculate('Factura Compra Hecho Devengados'[Incurrido Ajenos Devengados €],'Factura Compra Hecho Devengados'[Cumple Fecha Cierre]=\"1\" )",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Devengados Cierre Abril",
            "expression": " CALCULATE([Incurrido Ajenos Devengados Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=4)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Devengados Cierre Agosto",
            "expression": " CALCULATE([Incurrido Ajenos Devengados Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=8)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Devengados Cierre Diciembre",
            "expression": " CALCULATE([Incurrido Ajenos Devengados Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=12)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Devengados Cierre Enero",
            "expression": " CALCULATE([Incurrido Ajenos Devengados Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Devengados Cierre Febrero",
            "expression": " CALCULATE([Incurrido Ajenos Devengados Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=2)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Devengados Cierre Junio",
            "expression": "  CALCULATE([Incurrido Ajenos Devengados Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=6)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Devengados Cierre Marzo",
            "expression": " CALCULATE([Incurrido Ajenos Devengados Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=3)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Devengados Cierre Mayo",
            "expression": " CALCULATE([Incurrido Ajenos Devengados Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=5)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Devengados Cierre Octubre",
            "expression": " CALCULATE([Incurrido Ajenos Devengados Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=10)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Devengados Cierre Septiembre",
            "expression": " CALCULATE([Incurrido Ajenos Devengados Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=9)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Devengados Cierre Noviembre",
            "expression": " CALCULATE([Incurrido Ajenos Devengados Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=11)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "% Inc vs Ped Devengados €",
            "expression": " DIVIDE('Factura Compra Hecho Devengados'[Incurrido Devengado €],'Pedido Compra Hecho'[Pedido Importe €],0)",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "% Inc vs Ppto Devengados €",
            "expression": " DIVIDE( 'Factura Compra Hecho Devengados'[Incurrido Devengado €],'Presupuesto Compra Hecho'[Presupuesto Importe €],0)",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "Inc Cierre Devengados vs Ppto Acum €",
            "expression": "  'Factura Compra Hecho Devengados'[Incurrido Devengado € Cierre]-'Presupuesto Compra Hecho'[Presupuesto Acumulado]",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "% Inc Cierre Devengados vs Ppto Acum €",
            "expression": "DIVIDE( 'Factura Compra Hecho Devengados'[Inc Cierre Devengados vs Ppto Acum €],'Presupuesto Compra Hecho'[Presupuesto Acumulado],0)",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "Provisiones vs Facturas Devengados",
            "expression": " DIVIDE(CALCULATE([Incurrido Devengado €],'Factura Estado'[Factura vs Provision] = \"Provisiones\"),CALCULATE([Incurrido Devengado €],'Factura Estado'[Factura vs Provision]=\"Facturas\"))",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "Incurrido Ajenos Devengados Cierre Julio",
            "expression": " CALCULATE([Incurrido Ajenos Devengados Cierre €],'Presupuesto Ejercicio Fecha'[ID_MES]=7)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Cierre Devengado Provisiones",
            "expression": " calculate([Incurrido Devengado € Cierre],'Factura Estado'[Factura vs Provision]=\"Provisiones\")",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengados Cierre Facturas",
            "expression": " calculate([Incurrido Devengado € Cierre],'Factura Estado'[Factura vs Provision]=\"Facturas\")",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Devengado Provisiones",
            "expression": " calculate([Incurrido Ajenos Devengados Cierre €], 'Factura Estado'[Factura vs Provision]=\"Provisiones\")",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Devengado Facturas",
            "expression": " calculate([Incurrido Ajenos Devengados Cierre €],'Factura Estado'[Factura vs Provision]=\"Facturas\")",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Refacturaciones",
            "expression": " calculate([Incurrido Ajenos Devengados Cierre €], 'Factura Estado'[Factura vs Provision]<>\"Provisiones\",'Factura Compra Hecho Devengados'[COD_EMISOR]=9)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Filial Franquicia",
            "expression": " calculate([Incurrido Ajenos Devengados Cierre €] , 'Factura Estado'[Factura vs Provision]<>\"Provisiones\",'Factura Compra Hecho Devengados'[COD_EMISOR]<>9,Sociedad[Sociedad Mercado ID]<>750)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido € Cierre Devengados (SIS Inc)",
            "expression": "calculate('Factura Compra Hecho Devengados'[Incurrido Devengado €],'Factura Compra Hecho Devengados'[Cumple Fecha Cierre]=\"1\",USERELATIONSHIP('Factura Compra Hecho Devengados'[ID_PROY_CONTAB],'Proyecto Presupuestario'[ID_PROYECTO_CONTABLE] ))",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Devengados Cierre Mes Anterior",
            "expression": "  CALCULATE([Incurrido Ajenos Devengados Cierre €],'Factura Compra Hecho Devengados'[Cumple Mes Anterior]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengados Cierre Mes Anterior",
            "expression": " CALCULATE([Incurrido Devengado € Cierre],'Factura Compra Hecho Devengados'[Cumple Mes Anterior]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengado Moneda Local",
            "expression": "calculate(sum( 'Factura Compra Hecho Devengados'[IMPORTE_DEVENGADO]),'Factura Tipo Sistema Origen'[Factura Tipo Sistema Origen ID]<>14 ,'Pedido Estado'[Pedido Estado ID] in {460,461,462,463,464,465,466,469,697})",
            "formatString": "#,0 \"\";-#,0 \"\";#,0 \"\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Devengados Moneda Local",
            "expression": " calculate(sum( 'Factura Compra Hecho Devengados'[IMPORTE_DEVENGADO]),'Pedido Estado'[Pedido Estado ID] in {460,461,462,463,464,465,466,469,697},'Factura Compra Hecho Devengados'[FACTURA_CABECERA_FILIAL]=0  ,'Factura Compra Hecho Devengados'[FACTURA_FILIAL] in {0,1})",
            "formatString": "#,0 \"\";-#,0 \"\";#,0 \"\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Devengados Cierre Facturas Moneda Local",
            "expression": " calculate([Incurrido Devengado Moneda Local],'Factura Estado'[Factura vs Provision]=\"Facturas\",'Factura Compra Hecho'[Cumple Fecha Cierre]=\"1\")",
            "formatString": "#,0 \"\";-#,0 \"\";#,0 \"\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Incurrido Ajenos Cierre Devengado Facturas Moneda Local",
            "expression": " calculate([Incurrido Ajenos Devengados Moneda Local],'Factura Estado'[Factura vs Provision]=\"Facturas\",'Factura Estado'[Factura vs Provision]=\"Facturas\")",
            "formatString": "#,0 \"\";-#,0 \"\";#,0 \"\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          }
        ]
      },
      {
        "name": "Presupuesto Compra Hecho Sin Devengar",
        "columns": [
          {
            "name": "ID_PRESUP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PRESUP"
          },
          {
            "name": "COD_PRESUP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COD_PRESUP"
          },
          {
            "name": "COD_PRESUP_GPS",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COD_PRESUP_GPS"
          },
          {
            "name": "ID_CODIGO_PRESUPUESTARIO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CODIGO_PRESUPUESTARIO"
          },
          {
            "name": "ID_INFOR_PRESUPUESTO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_INFOR_PRESUPUESTO"
          },
          {
            "name": "IMPORTE_PRESUP_EURO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "IMPORTE_PRESUP_EURO"
          },
          {
            "name": "ID_CUENTA_PRINC",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_PRINC"
          },
          {
            "name": "ID_CUENTA_EMP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_EMP"
          },
          {
            "name": "ID_MES",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_MES"
          },
          {
            "name": "ID_TIPO_PRESUP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_PRESUP"
          },
          {
            "name": "ID_EMP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMP"
          },
          {
            "name": "ID_PROY_CONTABLE",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PROY_CONTABLE"
          },
          {
            "name": "ID_DIVISA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_DIVISA"
          },
          {
            "name": "ID_UNIDAD_COMPRA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_UNIDAD_COMPRA"
          },
          {
            "name": "ID_SUBFAM_AJENO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_SUBFAM_AJENO"
          },
          {
            "name": "ID_FAM_AJENO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_FAM_AJENO"
          },
          {
            "name": "ACTIVO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ACTIVO"
          },
          {
            "name": "UNIDADES_PRESUP",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "UNIDADES_PRESUP"
          },
          {
            "name": "ID_CUENTA_GRUPO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_GRUPO"
          },
          {
            "name": "CTAAUX",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CTAAUX"
          },
          {
            "name": "ID_EMPRESA_GRUPO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMPRESA_GRUPO"
          },
          {
            "name": "PCT_ACTIVA",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "PCT_ACTIVA"
          },
          {
            "name": "Fecha Desde",
            "dataType": "dateTime",
            "sourceColumn": "Fecha Desde"
          },
          {
            "name": "Fecha Hasta",
            "dataType": "dateTime",
            "sourceColumn": "Fecha Hasta"
          },
          {
            "name": "Importe sin Devengar",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Importe sin Devengar"
          },
          {
            "name": "Devengo",
            "dataType": "int64",
            "sourceColumn": "Devengo"
          },
          {
            "name": "Ejercicio sin Devengar",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Ejercicio sin Devengar"
          },
          {
            "name": "Fecha Presupuesto Ejercicio",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Fecha Presupuesto Ejercicio"
          },
          {
            "name": "Es Presupuesto Anual",
            "dataType": "boolean",
            "isHidden": true,
            "sourceColumn": "Es Presupuesto Anual"
          },
          {
            "name": "ID_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PEDIDO"
          },
          {
            "name": "COD_FACTURA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COD_FACTURA"
          },
          {
            "name": "ID_EMPRESA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMPRESA"
          },
          {
            "name": "Orden Mes",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Orden Mes"
          },
          {
            "type": "calculated",
            "name": "COD_FACTURA_ESTADO",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "-3"
          },
          {
            "type": "calculated",
            "name": "ID_PROVISION_FACTURA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "-1"
          },
          {
            "type": "calculated",
            "name": "ID_ESTADO_PEDIDO",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "0"
          },
          {
            "type": "calculated",
            "name": "ID_ORDEN_TRABAJO_LINEA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "-2"
          },
          {
            "name": "CLASIFICACION_PRESUP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CLASIFICACION_PRESUP"
          },
          {
            "type": "calculated",
            "name": "ID_Tipo Importe",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "1",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "type": "calculated",
            "name": "TipoPresupClas",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "'Presupuesto Compra Hecho Sin Devengar'[CLASIFICACION_PRESUP]",
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "ID_LOCALIZACION_COMPRA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "-1"
          },
          {
            "type": "calculated",
            "name": "Cumple Cierre",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF('Presupuesto Compra Hecho Sin Devengar'[Fecha Presupuesto Ejercicio]<DATE(year(max('Factura Compra Hecho'[FECHA_ALTA_CIERRE])),month(max('Factura Compra Hecho'[FECHA_ALTA_CIERRE])),1),1,0)"
          },
          {
            "type": "calculated",
            "name": "ID_CAMBIO",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "'Presupuesto Compra Hecho Sin Devengar'[ID_DIVISA]&'Presupuesto Compra Hecho Sin Devengar'[Fecha Presupuesto Ejercicio]"
          },
          {
            "name": "TIPO_AGREGADO",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "TIPO_AGREGADO"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "     MIC_FACT_PRESUPUESTO_NO_ANUAL = Value.NativeQuery(Source, ",
                "    \"",
                "SELECT ID_PRESUP, COD_PRESUP, COD_PRESUP_GPS, IMPORTE_PRESUP_EURO,ID_CODIGO_PRESUPUESTARIO, ID_INFOR_PRESUPUESTO, ID_CUENTA_PRINC, ID_CUENTA_EMP, ID_MES, ID_TIPO_PRESUP, ID_EMP, ID_PROY_CONTABLE, ID_DIVISA, ID_UNIDAD_COMPRA, ID_SUBFAM_AJENO, ID_FAM_AJENO, ACTIVO, UNIDADES_PRESUP, ID_CUENTA_GRUPO, ctaaux, id_empresa_grupo, pct_Activa, fecha_desde, fecha_hasta, IMPORTE_FACTURA, DEVENGO, EJERCICIO_FACTURA, clasificacion_presup, TIPO_AGREGADO",
                "FROM dmfinanciero.MIC_FACT_PRESUP_COMPRA_SIST p",
                "WHERE p.id_mes <> 0\"),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"MIC_FACT_PRESUPUESTO_NO_ANUAL\",{{\"ID_EMP\", Int64.Type}, {\"ID_TIPO_PRESUP\", Int64.Type}, {\"ID_PROY_CONTABLE\", Int64.Type}, {\"ID_DIVISA\", Int64.Type}, {\"ID_UNIDAD_COMPRA\", Int64.Type}, {\"ID_CODIGO_PRESUPUESTARIO\", Int64.Type}, {\"ID_CUENTA_PRINC\", Int64.Type}, {\"ID_CUENTA_EMP\", Int64.Type}, {\"ID_CUENTA_GRUPO\", Int64.Type}, {\"ID_INFOR_PRESUPUESTO\", Int64.Type},  {\"ID_SUBFAM_AJENO\", Int64.Type}, {\"IMPORTE_FACTURA\", type number}, {\"ID_FAM_AJENO\", Int64.Type}, {\"ID_MES\", Int64.Type}}),",
                "    #\"Filas filtradas\" = Table.SelectRows(#\"Tipo cambiado\", each ([COD_PRESUP] <> 0)),",
                "    #\"Añadir Columna FEHO_FECHA_ALTA\" = Table.AddColumn(#\"Filas filtradas\", \"Fecha Presupuesto Ejercicio\", each if [ID_MES] = 1 then \"01/\" & Number.ToText([ID_MES])&\"/\"& Number.ToText([EJERCICIO_FACTURA]+1) else \"01/\" & Number.ToText([ID_MES])&\"/\"& Number.ToText([EJERCICIO_FACTURA])),",
                "    #\"Personalizada agregada\" = Table.AddColumn(#\"Añadir Columna FEHO_FECHA_ALTA\", \"Es Presupuesto Anual\", each 0),",
                "    #\"Tipo cambiado2\" = Table.TransformColumnTypes(#\"Personalizada agregada\",{{\"Es Presupuesto Anual\", type logical}}),",
                "    #\"Consulta anexada\" = Table.Combine({#\"Tipo cambiado2\", #\"Presupuesto Compras Anuales sin Devengar\"}),",
                "    #\"Tipo cambiado1\" = Table.TransformColumnTypes(#\"Consulta anexada\",{{\"ID_PRESUP\", Int64.Type}, {\"ACTIVO\", Int64.Type}, {\"Fecha Presupuesto Ejercicio\", type date}}),",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(#\"Tipo cambiado1\",{\"ID_PRESUP\", \"COD_PRESUP\", \"COD_PRESUP_GPS\", \"IMPORTE_PRESUP_EURO\", \"ID_CODIGO_PRESUPUESTARIO\", \"ID_INFOR_PRESUPUESTO\", \"ID_CUENTA_PRINC\", \"ID_CUENTA_EMP\", \"ID_MES\", \"ID_TIPO_PRESUP\", \"ID_EMP\", \"ID_PROY_CONTABLE\", \"ID_DIVISA\", \"ID_UNIDAD_COMPRA\", \"ID_SUBFAM_AJENO\", \"ID_FAM_AJENO\", \"ACTIVO\", \"UNIDADES_PRESUP\", \"ID_CUENTA_GRUPO\", \"CTAAUX\", \"ID_EMPRESA_GRUPO\", \"PCT_ACTIVA\", \"FECHA_DESDE\", \"FECHA_HASTA\", \"IMPORTE_FACTURA\", \"DEVENGO\", \"EJERCICIO_FACTURA\", \"CLASIFICACION_PRESUP\", \"TIPO_AGREGADO\", \"Fecha Presupuesto Ejercicio\", \"Es Presupuesto Anual\"}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Otras columnas quitadas\",{{\"FECHA_DESDE\", \"Fecha Desde\"}, {\"FECHA_HASTA\", \"Fecha Hasta\"}, {\"IMPORTE_FACTURA\", \"Importe sin Devengar\"}, {\"DEVENGO\", \"Devengo\"}, {\"EJERCICIO_FACTURA\", \"Ejercicio sin Devengar\"}}),",
                "    #\"Personalizada agregada1\" = Table.AddColumn(#\"Columnas con nombre cambiado\", \"ID_PEDIDO\", each -1),",
                "    #\"Tipo cambiado3\" = Table.TransformColumnTypes(#\"Personalizada agregada1\",{{\"ID_PEDIDO\", Int64.Type}}),",
                "    #\"Personalizada agregada2\" = Table.AddColumn(#\"Tipo cambiado3\", \"COD_FACTURA\", each -1),",
                "    #\"Tipo cambiado4\" = Table.TransformColumnTypes(#\"Personalizada agregada2\",{{\"COD_FACTURA\", Int64.Type}}),",
                "    #\"Personalizada agregada3\" = Table.AddColumn(#\"Tipo cambiado4\", \"ID_EMPRESA\", each -1),",
                "    #\"Tipo cambiado5\" = Table.TransformColumnTypes(#\"Personalizada agregada3\",{{\"ID_EMPRESA\", Int64.Type}}),",
                "    #\"Columna condicional agregada\" = Table.AddColumn(#\"Tipo cambiado5\", \"Orden Mes\", each if [ID_MES] = 1 then 13 else if [ID_MES] = 2 then 1 else if [ID_MES] = 3 then 2 else if [ID_MES] = 4 then 3 else if [ID_MES] = 5 then 4 else if [ID_MES] = 6 then 5 else if [ID_MES] = 7 then 6 else if [ID_MES] = 8 then 7 else if [ID_MES] = 9 then 8 else if [ID_MES] = 10 then 9 else if [ID_MES] = 11 then 10 else if [ID_MES] = 12 then 11 else null),",
                "\t#\"Tipo cambiado6\" = Table.TransformColumnTypes(#\"Columna condicional agregada\",{{\"Orden Mes\", Int64.Type}})",
                "in",
                "    #\"Tipo cambiado6\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Presupuesto Numero Devengo",
            "expression": "DISTINCTCOUNT([ID_PRESUP])",
            "formatString": "0"
          },
          {
            "name": "Presupuesto Unidades Devengado",
            "expression": " sum('Presupuesto Compra Hecho Sin Devengar'[UNIDADES_PRESUP])",
            "formatString": "0"
          },
          {
            "name": "Presupuesto Importe Sin Devengar €",
            "expression": " CALCULATE(sumx('Presupuesto Compra Hecho Sin Devengar',(if('Presupuesto Compra Hecho Sin Devengar'[Importe sin Devengar]=0,0,'Presupuesto Compra Hecho Sin Devengar'[Importe sin Devengar])/22) - 87419822676.37),'Presupuesto Compra Hecho Sin Devengar'[CLASIFICACION_PRESUP]<>3)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto Acumulado sin Devengar",
            "expression": "CALCULATE([Presupuesto Importe Sin Devengar €],'Presupuesto Compra Hecho Sin Devengar'[CLASIFICACION_PRESUP]<>3,'Presupuesto Compra Hecho Sin Devengar'[Cumple Cierre]=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto sin Devengar Agosto €",
            "expression": "calculate('Presupuesto Compra Hecho Sin Devengar'[Presupuesto Importe Sin Devengar €],MONTH('Presupuesto Compra Hecho Sin Devengar'[Fecha Presupuesto Ejercicio])=8)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto sin Devengar Enero €",
            "expression": "calculate('Presupuesto Compra Hecho Sin Devengar'[Presupuesto Importe Sin Devengar €],MONTH('Presupuesto Compra Hecho Sin Devengar'[Fecha Presupuesto Ejercicio])=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto sin Devengar Febrero €",
            "expression": "calculate('Presupuesto Compra Hecho Sin Devengar'[Presupuesto Importe Sin Devengar €],MONTH('Presupuesto Compra Hecho Sin Devengar'[Fecha Presupuesto Ejercicio])=2)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto sin Devengar Marzo €",
            "expression": "calculate('Presupuesto Compra Hecho Sin Devengar'[Presupuesto Importe Sin Devengar €],MONTH('Presupuesto Compra Hecho Sin Devengar'[Fecha Presupuesto Ejercicio])=3)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto sin Devengar Abril €",
            "expression": "calculate('Presupuesto Compra Hecho Sin Devengar'[Presupuesto Importe Sin Devengar €],MONTH('Presupuesto Compra Hecho Sin Devengar'[Fecha Presupuesto Ejercicio])=4)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto sin Devengar Mayo €",
            "expression": "calculate('Presupuesto Compra Hecho Sin Devengar'[Presupuesto Importe Sin Devengar €],MONTH('Presupuesto Compra Hecho Sin Devengar'[Fecha Presupuesto Ejercicio])=5)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto sin Devengar Junio €",
            "expression": "calculate('Presupuesto Compra Hecho Sin Devengar'[Presupuesto Importe Sin Devengar €],MONTH('Presupuesto Compra Hecho Sin Devengar'[Fecha Presupuesto Ejercicio])=6)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto sin Devengar Julio €",
            "expression": "calculate('Presupuesto Compra Hecho Sin Devengar'[Presupuesto Importe Sin Devengar €],MONTH('Presupuesto Compra Hecho Sin Devengar'[Fecha Presupuesto Ejercicio])=7)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto sin Devengar Septiembre €",
            "expression": "calculate('Presupuesto Compra Hecho Sin Devengar'[Presupuesto Importe Sin Devengar €],MONTH('Presupuesto Compra Hecho Sin Devengar'[Fecha Presupuesto Ejercicio])=9)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto sin Devengar Noviembre €",
            "expression": "calculate('Presupuesto Compra Hecho Sin Devengar'[Presupuesto Importe Sin Devengar €],MONTH('Presupuesto Compra Hecho Sin Devengar'[Fecha Presupuesto Ejercicio])=11)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto sin Devengar Diciembre €",
            "expression": "calculate('Presupuesto Compra Hecho Sin Devengar'[Presupuesto Importe Sin Devengar €],MONTH('Presupuesto Compra Hecho Sin Devengar'[Fecha Presupuesto Ejercicio])=12)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Presupuesto sin Devengar Octubre €",
            "expression": "calculate('Presupuesto Compra Hecho Sin Devengar'[Presupuesto Importe Sin Devengar €],MONTH('Presupuesto Compra Hecho Sin Devengar'[Fecha Presupuesto Ejercicio])=10)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          }
        ]
      },
      {
        "name": "AUX_SEGURIDAD_AREA",
        "isHidden": true,
        "columns": [
          {
            "name": "AREA",
            "dataType": "int64",
            "sourceColumn": "AREA"
          },
          {
            "name": "LOGINID",
            "dataType": "string",
            "sourceColumn": "LOGINID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"SELECT --AUX_SSO_AREA",
                "VALOR AS AREA,",
                "UPPER(DESCRIPCION_USUARIO) AS LOGINID",
                "FROM APLICACION.APLICACION_USUARIO_ATRIBUTO_MULTIVALUADO_VALOR",
                "WHERE ID_APLICACION = 'AppTabularAgileyOrganizacion'",
                "AND DESCRIPCION_ATRIBUTO_MULTIVALUADO='area' ",
                "AND VALOR <> ''",
                "WITH UR\"),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(Origen,{{\"AREA\", Int64.Type}})",
                "in",
                "    #\"Tipo cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "AUX_SEGURIDAD_SOCIEDAD",
        "isHidden": true,
        "columns": [
          {
            "name": "SOCIEDAD",
            "dataType": "int64",
            "sourceColumn": "SOCIEDAD"
          },
          {
            "name": "LOGINID",
            "dataType": "string",
            "sourceColumn": "LOGINID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"SELECT --AUX_SSO_SOCIEDAD",
                "VALOR AS SOCIEDAD,",
                "UPPER(DESCRIPCION_USUARIO) AS LOGINID",
                "FROM APLICACION.APLICACION_USUARIO_ATRIBUTO_MULTIVALUADO_VALOR",
                "WHERE ID_APLICACION = 'AppTabularAgileyOrganizacion'",
                "AND DESCRIPCION_ATRIBUTO_MULTIVALUADO='sociedad' ",
                "AND VALOR <> ''",
                "WITH UR\")",
                "in",
                "    Origen"
              ]
            }
          }
        ]
      },
      {
        "name": "Orden Trabajo Hecho",
        "columns": [
          {
            "name": "ID_ORDEN_TRABAJO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_ORDEN_TRABAJO",
            "formatString": "0"
          },
          {
            "name": "ID_ORDEN_TRABAJO_LINEA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_ORDEN_TRABAJO_LINEA",
            "formatString": "0"
          },
          {
            "name": "ID_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PEDIDO",
            "formatString": "0"
          },
          {
            "name": "ID_PEDIDO_LINEA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PEDIDO_LINEA",
            "formatString": "0"
          },
          {
            "name": "ID_FACTURA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_FACTURA",
            "formatString": "0"
          },
          {
            "name": "Fecha Hora Expedición",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FECHA_HORA_EXPEDICION",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Fecha Alta",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FECHA_ALTA",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "DESCRIPCION",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "DESCRIPCION"
          },
          {
            "name": "PRECIO_UNITARIO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "PRECIO_UNITARIO",
            "formatString": "0.0000000000"
          },
          {
            "name": "UNIDADES_PROVEEDOR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "UNIDADES_PROVEEDOR",
            "formatString": "0"
          },
          {
            "name": "ID_DIVISA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_DIVISA",
            "formatString": "0"
          },
          {
            "name": "Fecha Ejecución",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FECHA_EJECUCION",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "ID_ESTADO_OT",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_ESTADO_OT",
            "formatString": "0"
          },
          {
            "name": "ESTADO_OT",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ESTADO_OT"
          },
          {
            "type": "calculated",
            "name": "ID_EMP_DEST",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_EMP_DEST], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Orden Trabajo Hecho'[ID_PEDIDO]",
              "    )",
              ")"
            ],
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "ID_EMP_PROVEEDOR",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_EMP_PROVEEDOR], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Orden Trabajo Hecho'[ID_PEDIDO]",
              "    )",
              ")"
            ],
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "ID_UNIDAD_COMPRA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_UNIDAD_COMPRA], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Orden Trabajo Hecho'[ID_PEDIDO]",
              "    )",
              ")"
            ],
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "ID_PROY_CONTABLE",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_PROY_CONTABLE], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Orden Trabajo Hecho'[ID_PEDIDO]",
              "    )",
              ")"
            ],
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "ID_ESTADO_PEDIDO",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_ESTADO_PEDIDO], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Orden Trabajo Hecho'[ID_PEDIDO]",
              "    )",
              ")"
            ],
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "ID_DIVISA_DATA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Divisa'[ID_DIVISA], TRUE () ),",
              "    FILTER (",
              "        'Divisa',       'Divisa'[Divisa ID] = 'Orden Trabajo Hecho'[ID_DIVISA]     )",
              ")"
            ],
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "CMB",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Divisa Cambio'[Cambio], TRUE () ),",
              "    FILTER (",
              "        'Divisa Cambio',       'Divisa Cambio'[ID_DIVISA_CMB] = 'Orden Trabajo Hecho'[ID_DIVISA_DATA] &&  'Divisa Cambio'[ID_FECHA_CMB] = 'Orden Trabajo Hecho'[Fecha Alta] ",
              "    )",
              ")"
            ],
            "formatString": "0.0000000000"
          },
          {
            "type": "calculated",
            "name": "ID_PEDIDO_DATA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_PEDIDO], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Orden Trabajo Hecho'[ID_PEDIDO]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "ID_FECHA_FECHA_PRESUPUESTARIA",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_FECHA_PRESUPUESTARIA], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Orden Trabajo Hecho'[ID_PEDIDO]",
              "    )",
              ")"
            ]
          },
          {
            "name": "USUARIO_ALTA",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "USUARIO_ALTA"
          },
          {
            "type": "calculated",
            "name": "ID_ESTADO_FACTURA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " CALCULATE (",
              "    FIRSTNONBLANK ( 'Factura Compra Hecho Devengados'[ID_ESTADO_FACTURA], TRUE () ),",
              "    FILTER (",
              "        'Factura Compra Hecho Devengados',       'Orden Trabajo Hecho'[ID_FACTURA] = 'Factura Compra Hecho Devengados'[Factura ID]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "ID_Tipo Importe",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "3",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "type": "calculated",
            "name": "ID_INFO_PREV_FACTURA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "10361"
          },
          {
            "type": "calculated",
            "name": "TipoPresupClas",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "5",
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "ID_LOCALIZACION_COMPRA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_LOCALIZACION_COMPRA], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Orden Trabajo Hecho'[ID_PEDIDO]",
              "    )",
              ")"
            ],
            "formatString": "0"
          },
          {
            "name": "PERIODO_EJECUCION",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "PERIODO_EJECUCION"
          },
          {
            "name": "COD_FACTURA",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COD_FACTURA"
          },
          {
            "name": "Filtro",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Filtro"
          },
          {
            "name": "CONTADOR",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CONTADOR"
          },
          {
            "type": "calculated",
            "name": "ID_CAMBIO",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "'Orden Trabajo Hecho'[ID_DIVISA_DATA]&'Orden Trabajo Hecho'[Fecha Alta]"
          },
          {
            "type": "calculated",
            "name": "ID_CUENTA_GRP_PEDIDO",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_CUENTA_GRP], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Orden Trabajo Hecho'[ID_PEDIDO]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "ID_COP_PEDIDO",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_CODIGO_PRESUPUESTARIO], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Orden Trabajo Hecho'[ID_PEDIDO]",
              "    )",
              ")"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source=#\"Ordenes de Trabajo Hechos/Partition\",",
                "    #\"Consultas combinadas\" = Table.NestedJoin(Source, {\"ID_FACTURA\"}, Dim_Factura, {\"COD_FACTURA\"}, \"Dim_Factura\", JoinKind.LeftOuter),",
                "    #\"Se expandió Dim_Factura\" = Table.ExpandTableColumn(#\"Consultas combinadas\", \"Dim_Factura\", {\"COD_FACTURA\"}, {\"Dim_Factura.COD_FACTURA\"}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Se expandió Dim_Factura\",{{\"Dim_Factura.COD_FACTURA\", \"COD_FACTURA\"}}),",
                "    #\"Personalizada agregada\" = Table.AddColumn(#\"Columnas con nombre cambiado\", \"Filtro\", each if [COD_FACTURA]=null and [ESTADO_OT]=\"FACTURADA\" and [ID_FACTURA]<>null and [CONTADOR]>1 then 1 else 0),",
                "    #\"Filas filtradas\" = Table.SelectRows(#\"Personalizada agregada\", each [Filtro] = 0),",
                "    Redondeado = Table.TransformColumns(#\"Filas filtradas\",{{\"PRECIO_UNITARIO\", each Number.Round(_, 4), type number}})",
                "in",
                "    Redondeado"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Importe OT",
            "expression": " sumx('Orden Trabajo Hecho',[PRECIO_UNITARIO]*[UNIDADES_PROVEEDOR]*[CMB])",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Importe OT Febrero €",
            "expression": "calculate([Importe OT],MONTH('Orden Trabajo Hecho'[PERIODO_EJECUCION])=2)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Importe OT Marzo €",
            "expression": "calculate([Importe OT],MONTH('Orden Trabajo Hecho'[PERIODO_EJECUCION])=3)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Importe OT Abril €",
            "expression": "calculate([Importe OT],MONTH('Orden Trabajo Hecho'[PERIODO_EJECUCION])=4)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Importe OT Mayo €",
            "expression": "calculate([Importe OT],MONTH('Orden Trabajo Hecho'[PERIODO_EJECUCION])=5)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Importe OT Junio €",
            "expression": "calculate([Importe OT],MONTH('Orden Trabajo Hecho'[PERIODO_EJECUCION])=6)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Importe OT Julio €",
            "expression": "calculate([Importe OT],MONTH('Orden Trabajo Hecho'[PERIODO_EJECUCION])=7)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Importe OT Agosto €",
            "expression": "calculate([Importe OT],MONTH('Orden Trabajo Hecho'[PERIODO_EJECUCION])=8)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Importe OT Septiembre €",
            "expression": "calculate([Importe OT],MONTH('Orden Trabajo Hecho'[PERIODO_EJECUCION])=9)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Importe OT Octubre €",
            "expression": "calculate([Importe OT],MONTH('Orden Trabajo Hecho'[PERIODO_EJECUCION])=10)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Importe OT Noviembre €",
            "expression": "calculate([Importe OT],MONTH('Orden Trabajo Hecho'[PERIODO_EJECUCION])=11)",
            "formatString": "#,0.0 \"€\";-#,0.0 \"€\";#,0.0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"1\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Importe OT Diciembre €",
            "expression": "calculate([Importe OT],MONTH('Orden Trabajo Hecho'[PERIODO_EJECUCION])=12)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Importe OT Enero €",
            "expression": "calculate([Importe OT],MONTH('Orden Trabajo Hecho'[PERIODO_EJECUCION])=1)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          }
        ]
      },
      {
        "name": "Divisa Cambio",
        "columns": [
          {
            "name": "ID_DIVISA_CMB",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ID_DIVISA_CMB"
          },
          {
            "name": "ID_FECHA_CMB",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "ID_FECHA_CMB",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Cambio",
            "dataType": "double",
            "sourceColumn": "CMB"
          },
          {
            "type": "calculated",
            "name": "ID_CAMBIO",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "'Divisa Cambio'[ID_DIVISA_CMB]&'Divisa Cambio'[ID_FECHA_CMB]"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "      Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, \"SELECT ID_DIVISA_ORIGEN AS ID_DIVISA_CMB",
                ",ID_FECHA AS ID_FECHA_CMB",
                ",CMB AS CMB",
                "FROM DMMAESTROS.FACT_CMB_DIVISA_DIARIO",
                "WHERE ID_DIVISA_DEST=183",
                "AND ID_FUENTE_TIPO_CMB=5",
                "UNION ALL",
                "SELECT 183 AS ID_DIVISA_CMB,TO_DATE('01/01/9999','DD/MM/YYYY') AS ID_FECHA_CMB,1 AS CMB FROM DUAL\")",
                "in",
                "    Origen"
              ]
            }
          }
        ]
      },
      {
        "name": "Orden Trabajo",
        "columns": [
          {
            "name": "Orden Trabajo ID",
            "dataType": "int64",
            "sourceColumn": "ID_ORDEN_TRABAJO",
            "formatString": "0"
          },
          {
            "name": "Orden Trabajo Linea ID",
            "dataType": "int64",
            "isUnique": true,
            "sourceColumn": "ID_ORDEN_TRABAJO_LINEA",
            "formatString": "0"
          },
          {
            "name": "Descripción",
            "dataType": "string",
            "sourceColumn": "DESCRIPCION"
          },
          {
            "name": "Orden Trabajo Estado",
            "dataType": "string",
            "sourceColumn": "ESTADO_OT"
          },
          {
            "name": "Fecha Hora Expedición",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_HORA_EXPEDICION",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Fecha Alta",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_ALTA",
            "formatString": "dd/MM/yyyy HH:mm:ss",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"3082\" Group=\"GeneralLongDateTime\" FormatString=\"dd/MM/yyyy HH:mm:ss\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Fecha Ejecución",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_EJECUCION",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Usuario Alta",
            "dataType": "string",
            "sourceColumn": "USUARIO_ALTA"
          },
          {
            "type": "calculated",
            "name": "Tipo OT",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF(UPPER('Orden Trabajo'[Usuario Alta])=\"SRVCPROGPS\",\"OT AUTO HORAS\",",
              "IF(LEFT(UPPER('Orden Trabajo'[Usuario Alta]),10)=\"CENTRAL\\PR\" && isblank('Orden Trabajo'[Fecha Ejecución Original]), \"OT PRV PORTAL\",",
              "IF(LEFT(UPPER('Orden Trabajo'[Usuario Alta]),10)=\"CENTRAL\\PR\" && NOT isblank('Orden Trabajo'[Fecha Ejecución Original]), \"OT MANUAL\",",
              "IF(NOT isblank(UPPER('Orden Trabajo'[Usuario Alta])) && NOT isBlank('Orden Trabajo'[Fecha Ejecución Original]),\"OT SERVICIO\",",
              "IF(NOT ISBLANK('Orden Trabajo'[Usuario Alta]) && isblank('Orden Trabajo'[Fecha Ejecución Original]),\"OT PLAN FACTURACIÓN\"",
              ")))))"
            ]
          },
          {
            "type": "calculated",
            "name": "Fecha Ejecución Corta",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "IF(ISBLANK('Orden Trabajo'[Fecha Ejecución]),BLANK(),DATE(YEAR('Orden Trabajo'[Fecha Ejecución]),MONTH('Orden Trabajo'[Fecha Ejecución]),1))",
            "formatString": "MMMM\" de \"yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"3082\" Group=\"YearMonth\" FormatString=\"MMMM' de 'yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Fecha Ejecución Original",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FECHA_EJECUCION_ORIGINAL"
          },
          {
            "type": "calculated",
            "name": "Mes Actual",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(YEAR('Orden Trabajo'[Fecha Ejecución])=year(today()) && month('Orden Trabajo'[Fecha Ejecución])=month(TODAY()),\"Si\",\"No\")"
          },
          {
            "type": "calculated",
            "name": "Subtipo OT",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var noOT = IF('Orden Trabajo'[Descripción]=\"Presupuesto\" || 'Orden Trabajo'[Descripción]=\"Pedido\",1,0)",
              "var Descripcion = UPPER('Orden Trabajo'[Descripción])",
              "var Atipicos =IF(FIND(\"OT ATIPIC\",Descripcion,1,0) || FIND(\"OT GASTOS ATIPIC\",Descripcion,1,0) || FIND(\"OT FACTURACION ATIPIC\",Descripcion,1,0)|| FIND(\"OT FACTURACIÓN ATIPIC\",Descripcion,1,0) || FIND(\"OT ATÍPIC\",Descripcion,1,0) || FIND(\"OT FACTURACIÓN ATÍPIC\",Descripcion,1,0) || FIND(\"OT FACTURACION ATÍPIC\",Descripcion,1,0) ||  FIND(\"OT GASTOS ATÍPIC\",Descripcion,1,0) ||  FIND(\"GASTOS ATÍPIC\",Descripcion,1,0) ||  FIND(\"GASTOS ATIPIC\",Descripcion,1,0) ||  FIND(\"ATIPIC\",Descripcion,1,0) ||  FIND(\"ATÍPIC\",Descripcion,1,0),1,0)",
              "var Guardias = IF(FIND(\"OT GUARDIAS\",Descripcion,1,0) || FIND(\"OT FACTURACION GUARDIAS\",Descripcion,1,0)|| FIND(\"OT FACTURACIÓN GUARDIAS\",Descripcion,1,0)  ,1,0)",
              "var Manual = IF(FIND(\"OT FACTURACIÓN MANUAL\",Descripcion,1,0) || FIND(\"OT FACTURACION MANUAL\",Descripcion,1,0)|| FIND(\"OT FACTURACIÓN MANUAL\",Descripcion,1,0),1,0)",
              "var Hitos =IF(FIND(\"OT HITOS\",Descripcion,1,0) || FIND(\"OT FACTURACION HITOS\",Descripcion,1,0)|| FIND(\"OT FACTURACIÓN HITOS\",Descripcion,1,0) || FIND(\"OT HITO FACTURAC\",Descripcion,1,0)  ,1,0)",
              "var Variable =IF(FIND(\"OT VARIABLE\",Descripcion,1,0) || FIND(\"OT FACTURACION VARIABLE\",Descripcion,1,0) || FIND(\"OT FACTURACIÓN VARIABLE\",Descripcion,1,0),1,0)",
              "var AUTOHORAS= IF('Orden Trabajo'[Tipo OT]=\"OT AUTO HORAS\",1,0)",
              "var SERVICIO= IF('Orden Trabajo'[Tipo OT]=\"OT SERVICIO\",1,0)",
              "var PLANFACTUR= IF('Orden Trabajo'[Tipo OT]=\"OT PLAN FACTURACIÓN\",1,0)",
              "var PRVPORTAL= IF('Orden Trabajo'[Tipo OT]=\"OT PRV PORTAL\",1,0)",
              "return",
              "IF(noOT,\"\",",
              "IF(Hitos=1,\"OT HITOS\",",
              "IF(Variable=1,\"OT VARIABLE\",",
              "IF(AUTOHORAS=1,\"OT AUTOMÁTICA HORAS\",",
              "IF(PLANFACTUR=1 && Manual=0,\"OT PLAN FACTURACIÓN\",",
              "IF(atipicos=1 ,\"OT ATÍPICOS\",",
              "IF(Manual=1 ,\"OT FACTURACIÓN MANUAL\",",
              "IF(Guardias=1 ,\"OT GUARDIAS\",",
              "IF(SERVICIO=1 && Manual=0,\"OT SERVICIO\",",
              "IF(PRVPORTAL=1,\"OT PLAN FACTURACIÓN PRV\",",
              "\"OT OTROS\"))))))))))"
            ]
          },
          {
            "name": "Periodo Ejecución",
            "dataType": "dateTime",
            "sourceColumn": "PERIODO_EJECUCION",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Periodo Ejecución Corto",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "IF(ISBLANK('Orden Trabajo'[Periodo Ejecución]),BLANK(),DATE(YEAR('Orden Trabajo'[Periodo Ejecución]),MONTH('Orden Trabajo'[Periodo Ejecución]),1))",
            "formatString": "MMMM\" de \"yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"3082\" Group=\"YearMonth\" FormatString=\"MMMM' de 'yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Mes Actual Periodo",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(YEAR('Orden Trabajo'[Periodo Ejecución])=year(today()) && month('Orden Trabajo'[Periodo Ejecución])=month(TODAY()),\"Si\",\"No\")"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
                "    tabla = Value.NativeQuery(Source, ",
                "    \"SELECT ",
                "ID_ORDEN_TRABAJO,",
                "ID_ORDEN_TRABAJO_LINEA,",
                "DESCRIPCION, ",
                "ESTADO_OT,",
                "FECHA_HORA_EXPEDICION, ",
                "FECHA_ALTA, ",
                "FECHA_EJECUCION,",
                "CASE",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('01/02/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/03/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/02/2020' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/03/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/04/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/03/2020' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/04/2020' ,'DD/MM/RRRR') AND  TO_DATE('04/05/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/04/2020' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('05/05/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/06/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/05/2020' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/06/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/07/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/06/2020' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/07/2020' ,'DD/MM/RRRR') AND  TO_DATE('03/08/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/07/2020' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('04/08/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/09/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/08/2020' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/09/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/10/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/09/2020' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/10/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/11/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/10/2020' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/11/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/12/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/11/2020' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/12/2020' ,'DD/MM/RRRR') AND  TO_DATE('04/01/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/12/2020' ,'DD/MM/RRRR')   ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('05/01/2021' ,'DD/MM/RRRR') AND  TO_DATE('02/02/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/01/2021' ,'DD/MM/RRRR')",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/02/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/03/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/02/2021' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('05/03/2021' ,'DD/MM/RRRR') AND  TO_DATE('08/04/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/03/2021' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('09/04/2021' ,'DD/MM/RRRR') AND  TO_DATE('05/05/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/04/2021' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('06/05/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/06/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/05/2021' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('05/06/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/07/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/06/2021' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('07/07/2021' ,'DD/MM/RRRR') AND  TO_DATE('05/08/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/07/2021' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('06/08/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/09/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/08/2021' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('07/09/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/10/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/09/2021' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('07/10/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/11/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/10/2021' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('05/11/2021' ,'DD/MM/RRRR') AND  TO_DATE('07/12/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/11/2021' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('08/12/2021' ,'DD/MM/RRRR') AND  TO_DATE('07/01/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/12/2021' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('08/01/2022' ,'DD/MM/RRRR') AND  TO_DATE('03/02/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/01/2022' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('04/02/2022' ,'DD/MM/RRRR') AND  TO_DATE('07/03/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/02/2022' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('08/03/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/04/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/03/2022' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('07/04/2022' ,'DD/MM/RRRR') AND  TO_DATE('05/05/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/04/2022' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('06/05/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/06/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/05/2022' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('07/06/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/07/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/06/2022' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('07/07/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/08/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/07/2022' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('05/08/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/09/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/08/2022' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('07/09/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/10/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/09/2022' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('05/10/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/11/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/10/2022' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('05/11/2022' ,'DD/MM/RRRR') AND  TO_DATE('02/12/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/11/2022' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/12/2022' ,'DD/MM/RRRR') AND  TO_DATE('05/01/2023' ,'DD/MM/RRRR') THEN TO_DATE('01/12/2022' ,'DD/MM/RRRR') ",
                "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('06/01/2023' ,'DD/MM/RRRR') AND  TO_DATE('03/02/2023' ,'DD/MM/RRRR') THEN TO_DATE('01/01/2023' ,'DD/MM/RRRR') ",
                "   ELSE (FECHA_EJECUCION) END PERIODO_EJECUCION,",
                "USUARIO_ALTA,",
                "FECHA_EJECUCION_ORIGINAL",
                "FROM(SELECT OT.ID_ORDEN_TRABAJO,",
                "OTL.ID_ORDEN_TRABAJO_LINEA,",
                "OTL.DESCRIPCION, ",
                "TEI.DESCRIPCION ESTADO_OT,",
                "TRUNC(OT.FECHA_HORA_EXPEDICION) FECHA_HORA_EXPEDICION, ",
                "OT.FECHA_ALTA FECHA_ALTA, ",
                "COALESCE(TRUNC(FECHA_HORA_RESOLUCION_PROVEEDOR),TRUNC(OT.FECHA_HORA_EXPEDICION))  FECHA_EJECUCION,",
                "OT.USUARIO_ALTA,",
                "TRUNC(FECHA_HORA_RESOLUCION_PROVEEDOR) FECHA_EJECUCION_ORIGINAL",
                "FROM AJENOS.PEDIDO P",
                "JOIN AJENOS.PEDIDO_LINEA PL",
                "ON P.ID_PEDIDO=PL.ID_PEDIDO",
                "JOIN AJENOS.ORDEN_TRABAJO_LINEA OTL",
                "ON PL.ID_PEDIDO_LINEA=OTL.ID_PEDIDO_LINEA AND OTL.ID_TIPO_ESTADO not in (605,710)",
                "JOIN AJENOS.ORDEN_TRABAJO OT",
                "ON OT.ID_ORDEN_TRABAJO=OTL.ID_ORDEN_TRABAJO",
                "LEFT JOIN FACTURAS.FACTURA_LINEA_AJENOS F",
                "ON F.ID_ORDEN_TRABAJO_LINEA = OTL.ID_ORDEN_TRABAJO_LINEA",
                "JOIN AJENOS.MAQUINA_ESTADO_AJENOS MEA ",
                "ON MEA.ID_MAQUINA_ESTADO_AJENOS = OTL.ID_MAQUINA_ESTADO_AJENOS_FACTURACION AND MEA.ID_TIPO_ESTADO_ACTUAL in (704,701,703)",
                "JOIN AJENOS.MAQUINA_ESTADO_AJENOS MEA2 ",
                "ON MEA2.ID_MAQUINA_ESTADO_AJENOS = OT.ID_MAQUINA_ESTADO_AJENOS_RECEPCION AND MEA2.ID_TIPO_ESTADO_ACTUAL not in (709)",
                "JOIN MAESTROS.TIPO_ESTADO TE ",
                "ON TE.ID_TIPO_ESTADO = MEA.ID_TIPO_ESTADO_ACTUAL  AND TE.ID_TIPO_MAQUINA_ESTADO = 97",
                "JOIN MAESTROS.TIPO_ESTADO_IDIOMA TEI ",
                "ON TE.ID_TIPO_ESTADO = TEI.ID_TIPO_ESTADO AND TEI.ID_IDIOMA = 3",
                "WHERE P.ID_DEPARTAMENTO_EMPRESA_GRUPO in (24,903,67,42, 801, 942, 957, 1057, 113, 659, 110, 661, 643, 985, 1731, 506, 1823) AND YEAR(P.FECHA_ALTA)>=2019",
                "UNION",
                "SELECT -2,-2, 'Presupuesto', 'Presupuesto', null, null, null, null, null",
                "FROM  sysibm.sysdummy1",
                "UNION",
                "SELECT -1,-1, 'Pedido', 'Pedido', null, null, null, null, null",
                "FROM sysibm.sysdummy1 With ur)\"),",
                "    #\"Duplicados quitados\" = Table.Distinct(tabla, {\"ID_ORDEN_TRABAJO_LINEA\"})",
                "in",
                "    #\"Duplicados quitados\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
                  "    tabla = Value.NativeQuery(Source, ",
                  "    \"",
                  "",
                  "SELECT OT.ID_ORDEN_TRABAJO,",
                  "OTL.ID_ORDEN_TRABAJO_LINEA,",
                  "OTL.DESCRIPCION, ",
                  "TEI.DESCRIPCION ESTADO_OT,",
                  "TRUNC(OT.FECHA_HORA_EXPEDICION) FECHA_HORA_EXPEDICION, ",
                  "TRUNC(OT.FECHA_ALTA) FECHA_ALTA, ",
                  "TRUNC(FECHA_HORA_RESOLUCION_PROVEEDOR) FECHA_EJECUCION",
                  "",
                  "FROM AJENOS.PEDIDO P",
                  "JOIN AJENOS.PEDIDO_LINEA PL",
                  "ON P.ID_PEDIDO=PL.ID_PEDIDO",
                  "JOIN AJENOS.ORDEN_TRABAJO_LINEA OTL",
                  "ON PL.ID_PEDIDO_LINEA=OTL.ID_PEDIDO_LINEA",
                  "JOIN AJENOS.ORDEN_TRABAJO OT",
                  "ON OT.ID_ORDEN_TRABAJO=OTL.ID_ORDEN_TRABAJO",
                  "JOIN FACTURAS.FACTURA_LINEA_AJENOS F",
                  "ON F.ID_ORDEN_TRABAJO_LINEA = OTL.ID_ORDEN_TRABAJO_LINEA",
                  "JOIN AJENOS.MAQUINA_ESTADO_AJENOS MEA ",
                  "ON MEA.ID_MAQUINA_ESTADO_AJENOS = OTL.ID_MAQUINA_ESTADO_AJENOS_FACTURACION AND MEA.ID_TIPO_ESTADO_ACTUAL in (704,701,703)",
                  "JOIN MAESTROS.TIPO_ESTADO TE ",
                  "ON TE.ID_TIPO_ESTADO = MEA.ID_TIPO_ESTADO_ACTUAL  AND TE.ID_TIPO_MAQUINA_ESTADO = 97",
                  "JOIN MAESTROS.TIPO_ESTADO_IDIOMA TEI ",
                  "ON TE.ID_TIPO_ESTADO = TEI.ID_TIPO_ESTADO AND TEI.ID_IDIOMA = 3",
                  "WHERE P.ID_DEPARTAMENTO_EMPRESA_GRUPO in(24,903,67,42, 801, 942, 957, 1057, 113, 659, 110, 661, 643, 985, 1731, 506, 1823) AND YEAR(P.FECHA_ALTA)>=2019 AND P.ID_NATURALEZA_COMPRA in(1,3,5,7)",
                  "UNION",
                  "SELECT -2,-2, 'Presupuesto', 'Presupuesto', null, null, null",
                  "FROM  sysibm.sysdummy1",
                  "UNION",
                  "SELECT -1,-1, 'Pedido', 'Pedido', null, null, null",
                  "FROM sysibm.sysdummy1",
                  "\")",
                  "in",
                  "    tabla</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "AUX_SEGURIDAD_AREA_NEGOCIO",
        "isHidden": true,
        "columns": [
          {
            "name": "AREAN",
            "dataType": "int64",
            "sourceColumn": "AREAN"
          },
          {
            "name": "LOGINID",
            "dataType": "string",
            "sourceColumn": "LOGINID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"SELECT --AUX_SSO_AREA",
                "VALOR AS AREAN,",
                "UPPER(DESCRIPCION_USUARIO) AS LOGINID",
                "FROM APLICACION.APLICACION_USUARIO_ATRIBUTO_MULTIVALUADO_VALOR",
                "WHERE ID_APLICACION = 'AppTabularAgileyOrganizacion'",
                "AND DESCRIPCION_ATRIBUTO_MULTIVALUADO='areas_negocio' ",
                "AND VALOR <> ''",
                "WITH UR\"),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(Origen,{{\"AREAN\", Int64.Type}})",
                "in",
                "    #\"Tipo cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "AUX_REPARTO_FACTURAS",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_FACTURA_IMPUTACION_CONTABLE",
            "dataType": "int64",
            "sourceColumn": "ID_FACTURA_IMPUTACION_CONTABLE"
          },
          {
            "name": "ID_FACTURA",
            "dataType": "double",
            "sourceColumn": "ID_FACTURA"
          },
          {
            "name": "COD_CTA_AUX",
            "dataType": "int64",
            "sourceColumn": "COD_CTA_AUX"
          },
          {
            "name": "TND_DEST",
            "dataType": "double",
            "sourceColumn": "TND_DEST"
          },
          {
            "name": "ID_CUENTA_EMP",
            "dataType": "int64",
            "sourceColumn": "ID_CUENTA_EMP"
          },
          {
            "name": "Cadena",
            "dataType": "string",
            "sourceColumn": "Cadena"
          },
          {
            "name": "Mercado",
            "dataType": "string",
            "sourceColumn": "Mercado"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    /*DMFINANCIERO = Source{[Schema=\"DMFINANCIERO\"]}[Data],",
                "    FACTURAS_SUPERINFORME = DMFINANCIERO{[Name=\"MIC_FACT_FACTURA_SISTEMAS\"]}[Data],*/",
                "     FACTURAS_SUPERINFORME= Value.NativeQuery(Source,",
                "    \"SELECT DISTINCT a12.COD_FCTR_IMPUTACION_CONTAB ID_FACTURA_IMPUTACION_CONTABLE,",
                "Case when a12.id_info_prev_factura<>10361 THEN a12.COD_FACTURA*10 ELSE a12.COD_FACTURA END ID_FACTURA,",
                "a11.COD_CTA_AUXILIAR  COD_CTA_AUX,",
                "a12.TND_DEST TND_DEST,",
                "a12.DEPART_DEST,",
                "a12.id_cuenta_emp,",
                "--COALESCE(CASE WHEN a11.COD_CTA_AUXILIAR = 4134 and a12.id_cuenta_emp=36488916 THEN SOCIEDAD.COD_EMPRESA_GRUPO",
                "--WHEN a11.COD_CTA_AUXILIAR in( 4134,4106,4113 ,4118,4112,4114,4119,4122) and a12.id_receptor=103 THEN 139 END,E2.COD_EMPRESA_GRUPO, E.COD_EMPRESA_GRUPO, ONL.COD_EMPRESA_GRUPO,ONL2.COD_EMPRESA_GRUPO, SOCIEDAD.COD_EMPRESA_GRUPO,-1) ID_EMP,",
                "--COALESCE(CASE WHEN a11.COD_CTA_AUXILIAR = 4134 and a12.id_cuenta_emp=36488916 THEN TO_CHAR(SOCIEDAD.RAZON_SOCIAL)",
                "--WHEN a11.COD_CTA_AUXILIAR in( 4134,4106,4113 ,4118,4112,4114,4119,4122) and a12.id_receptor=103 THEN TO_CHAR(IDSO.RAZON_SOCIAL) END,TO_CHAR(E2.RAZON_SOCIAL), TO_CHAR(E.RAZON_SOCIAL), TO_CHAR(ONL.RAZON_SOCIAL), TO_CHAR(ONL2.RAZON_SOCIAL),TO_CHAR(SOCIEDAD.RAZON_SOCIAL), TO_CHAR(IDSO.RAZON_SOCIAL), 'DESCONOCIDO') DESCRIPCION,",
                "--COALESCE(CASE WHEN a12.tnd_dest in (21000,21100,21200,21300,21400,21500,21600,21700,21800,21900) THEN 3",
                "--WHEN a11.COD_CTA_AUXILIAR = 4134 and a12.id_cuenta_emp=36488916 THEN SOCIEDAD.COD_PAIS",
                "--WHEN a11.COD_CTA_AUXILIAR in( 4134,4106,4113 ,4118,4112,4114,4119,4122) and a12.id_receptor=103 THEN SOCIEDAD.COD_PAIS",
                "--WHEN a11.COD_CTA_AUXILIAR>=70000 AND a11.COD_CTA_AUXILIAR<90000 THEN FRANQUICIA.COD_PAIS END,E2.COD_PAIS, E.COD_PAIS, ONL.COD_PAIS, ONL2.COD_PAIS, SOCIEDAD.COD_PAIS, IDSO.COD_PAIS, -1) COD_PAIS,",
                "COALESCE(CASE WHEN a12.id_receptor not in(103,106043) THEN TO_CHAR(SOCIEDAD.PAIS)",
                "WHEN a12.tnd_dest in (21000,21100,21200,21300,21400,21500,21600,21700,21800,21900) THEN 'HOLANDA'",
                "WHEN a11.COD_CTA_AUXILIAR in (21305,21805,21505,21205,21705,21105,21405,21605) THEN 'IRLANDA'",
                "WHEN a11.COD_CTA_AUXILIAR = 4134 and a12.id_cuenta_emp=36488916 THEN TO_CHAR(SOCIEDAD.PAIS)",
                "WHEN a11.COD_CTA_AUXILIAR in( 4134,4106,4113 ,4118,4112,4114,4119,4122) and a12.id_receptor=103 THEN TO_CHAR(SOCIEDAD.PAIS)",
                "WHEN a11.COD_CTA_AUXILIAR>=70000 AND a11.COD_CTA_AUXILIAR<90000 THEN  TO_CHAR(FRANQUICIA.PAIS)  END,TO_CHAR(E2.PAIS), TO_CHAR(E.PAIS), TO_CHAR(ONL.PAIS),TO_CHAR(ONL2.PAIS), TO_CHAR(SOCIEDAD.PAIS),IDSO.DESCRIPCION_PAIS, 'DESCONOCIDO') DESCRIPCION_PAIS,",
                "/*COALESCE(CASE",
                "WHEN a12.tnd_dest=21000 THEN 1",
                "WHEN a12.tnd_dest=21100 THEN 1",
                "WHEN a12.tnd_dest=21200 THEN 4",
                "WHEN a12.tnd_dest=21300 THEN 2",
                "WHEN a12.tnd_dest=21400 THEN 3",
                "WHEN a12.tnd_dest=21500 THEN 5",
                "WHEN a12.tnd_dest=21600 THEN 7",
                "WHEN a12.tnd_dest=21700 THEN 9",
                "WHEN a12.tnd_dest=21800 THEN 8",
                "WHEN a12.tnd_dest=21900 THEN 10",
                "WHEN a11.COD_CTA_AUXILIAR=22199 THEN 1",
                "WHEN a11.COD_CTA_AUXILIAR=22299 THEN 4",
                "WHEN a11.COD_CTA_AUXILIAR=22399 THEN 2",
                "WHEN a11.COD_CTA_AUXILIAR=22499 THEN 3",
                "WHEN a11.COD_CTA_AUXILIAR=22599 THEN 5",
                "WHEN a11.COD_CTA_AUXILIAR=22699 THEN 7",
                "WHEN a11.COD_CTA_AUXILIAR=22799 THEN 9",
                "WHEN a11.COD_CTA_AUXILIAR=22899 THEN 8",
                "WHEN a11.COD_CTA_AUXILIAR=22999 THEN 10",
                "WHEN a11.COD_CTA_AUXILIAR=4134 and a12.id_receptor=103 THEN 1",
                "WHEN a11.COD_CTA_AUXILIAR=4106 and a12.id_receptor=103  THEN 4",
                "WHEN a11.COD_CTA_AUXILIAR=4113 and a12.id_receptor=103  THEN 2",
                "WHEN a11.COD_CTA_AUXILIAR=4118 and a12.id_receptor=103 THEN 3",
                "WHEN a11.COD_CTA_AUXILIAR=4112 and a12.id_receptor=103  THEN 5",
                "WHEN a11.COD_CTA_AUXILIAR=4114 and a12.id_receptor=103 THEN 7",
                "WHEN a11.COD_CTA_AUXILIAR=4119 and a12.id_receptor=103  THEN 9",
                "WHEN a11.COD_CTA_AUXILIAR=4122 and a12.id_receptor=103 THEN 8",
                "WHEN a11.COD_CTA_AUXILIAR>=70000 AND a11.COD_CTA_AUXILIAR<90000 THEN COALESCE(FRAN.ID_CADENA_AD,CSOCI.ID_CADENA_AD,-1)",
                "WHEN a11.COD_CTA_AUXILIAR = 4134 and a12.id_cuenta_emp=36488916 THEN SOCIEDAD.COD_EMPRESA_GRUPO",
                "END, C2.ID_CADENA_AD, C.ID_CADENA_AD, CONLINE.ID_CADENA_AD, CONLINE2.ID_CADENA_AD, CSOCI.ID_CADENA_AD, SOCIEDAD.COD_EMPRESA_GRUPO, -1) COD_CADENA,*/",
                "COALESCE(CASE WHEN a12.id_receptor = 30399 THEN 'INDITEX'",
                "WHEN IDSO.COD_EMPRESA_DB2=30 THEN 'MASSIMO DUTTI'",
                "WHEN a12.DEPART_DEST >=22000 and a12.DEPART_DEST<=22099 THEN 'INDITEX'",
                "WHEN a12.DEPART_DEST >=22100 and a12.DEPART_DEST<=22199 THEN 'ZARA'",
                "WHEN a12.DEPART_DEST >=22200 and a12.DEPART_DEST<=22299 THEN 'PULL & BEAR'",
                "WHEN a12.DEPART_DEST >=22300 and a12.DEPART_DEST<=22399 THEN 'MASSIMO DUTTI'",
                "WHEN a12.DEPART_DEST >=22400 and a12.DEPART_DEST<=22499 THEN 'BERSHKA'",
                "WHEN a12.DEPART_DEST >=22500 and a12.DEPART_DEST<=22599 THEN 'STRADIVARIUS'",
                "WHEN a12.DEPART_DEST >=22600 and a12.DEPART_DEST<=22699 THEN 'OYSHO'",
                "WHEN a12.DEPART_DEST >=22700 and a12.DEPART_DEST<=22799 THEN 'UTERQUE'",
                "WHEN a12.DEPART_DEST >=22800 and a12.DEPART_DEST<=22899 THEN 'ZARA HOME'",
                "WHEN a12.DEPART_DEST >=22900 and a12.DEPART_DEST<=22999 THEN 'LEFTIES'",
                "WHEN a11.COD_CTA_AUXILIAR >=22000 and a11.COD_CTA_AUXILIAR<=22099 THEN 'INDITEX'",
                "WHEN a11.COD_CTA_AUXILIAR >=22100 and a11.COD_CTA_AUXILIAR<=22199 THEN 'ZARA'",
                "WHEN a11.COD_CTA_AUXILIAR >=22200 and a11.COD_CTA_AUXILIAR<=22299 THEN 'PULL & BEAR'",
                "WHEN a11.COD_CTA_AUXILIAR >=22300 and a11.COD_CTA_AUXILIAR<=22399 THEN 'MASSIMO DUTTI'",
                "WHEN a11.COD_CTA_AUXILIAR >=22400 and a11.COD_CTA_AUXILIAR<=22499 THEN 'BERSHKA'",
                "WHEN a11.COD_CTA_AUXILIAR >=22500 and a11.COD_CTA_AUXILIAR<=22599 THEN 'STRADIVARIUS'",
                "WHEN a11.COD_CTA_AUXILIAR >=22600 and a11.COD_CTA_AUXILIAR<=22699 THEN 'OYSHO'",
                "WHEN a11.COD_CTA_AUXILIAR >=22700 and a11.COD_CTA_AUXILIAR<=22799 THEN 'UTERQUE'",
                "WHEN a11.COD_CTA_AUXILIAR >=22800 and a11.COD_CTA_AUXILIAR<=22899 THEN 'ZARA HOME'",
                "WHEN a11.COD_CTA_AUXILIAR >=22900 and a11.COD_CTA_AUXILIAR<=22999 THEN 'LEFTIES'",
                "WHEN a12.tnd_dest >=22000 and a12.tnd_dest<=22099 THEN 'INDITEX'",
                "WHEN a12.tnd_dest >=22100 and a12.tnd_dest<=22199 THEN 'ZARA'",
                "WHEN a12.tnd_dest >=22200 and a12.tnd_dest<=22299 THEN 'PULL & BEAR'",
                "WHEN a12.tnd_dest >=22300 and a12.tnd_dest<=22399 THEN 'MASSIMO DUTTI'",
                "WHEN a12.tnd_dest >=22400 and a12.tnd_dest<=22499 THEN 'BERSHKA'",
                "WHEN a12.tnd_dest >=22500 and a12.tnd_dest<=22599 THEN 'STRADIVARIUS'",
                "WHEN a12.tnd_dest >=22600 and a12.tnd_dest<=22699 THEN 'OYSHO'",
                "WHEN a12.tnd_dest >=22700 and a12.tnd_dest<=22799 THEN 'UTERQUE'",
                "WHEN a12.tnd_dest >=22800 and a12.tnd_dest<=22899 THEN 'ZARA HOME'",
                "WHEN a12.tnd_dest >=22900 and a12.tnd_dest<=22999 THEN 'LEFTIES'",
                "--WHEN a12.id_receptor not in(103,106043,44978) THEN CSOCI.CADENA_AD",
                "WHEN a12.DEPART_DEST >=21000 and a12.DEPART_DEST<=21099 THEN 'INDITEX'",
                "WHEN a12.DEPART_DEST >=21100 and a12.DEPART_DEST<=21199 THEN 'ZARA'",
                "WHEN a12.DEPART_DEST >=21200 and a12.DEPART_DEST<=21299 THEN 'PULL & BEAR'",
                "WHEN a12.DEPART_DEST >=21300 and a12.DEPART_DEST<=21399 THEN 'MASSIMO DUTTI'",
                "WHEN a12.DEPART_DEST >=21400 and a12.DEPART_DEST<=21499 THEN 'BERSHKA'",
                "WHEN a12.DEPART_DEST >=21500 and a12.DEPART_DEST<=21599 THEN 'STRADIVARIUS'",
                "WHEN a12.DEPART_DEST >=21600 and a12.DEPART_DEST<=21699 THEN 'OYSHO'",
                "WHEN a12.DEPART_DEST >=21700 and a12.DEPART_DEST<=21799 THEN 'UTERQUE'",
                "WHEN a12.DEPART_DEST >=21800 and a12.DEPART_DEST<=21899 THEN 'ZARA HOME'",
                "WHEN a12.DEPART_DEST >=21900 and a12.DEPART_DEST<=21999 THEN 'LEFTIES'",
                "WHEN a11.COD_CTA_AUXILIAR >=21000 and a11.COD_CTA_AUXILIAR<=21099 THEN 'INDITEX'",
                "WHEN a11.COD_CTA_AUXILIAR >=21100 and a11.COD_CTA_AUXILIAR<=21199 THEN 'ZARA'",
                "WHEN a11.COD_CTA_AUXILIAR >=21200 and a11.COD_CTA_AUXILIAR<=21299 THEN 'PULL & BEAR'",
                "WHEN a11.COD_CTA_AUXILIAR >=21300 and a11.COD_CTA_AUXILIAR<=21399 THEN 'MASSIMO DUTTI'",
                "WHEN a11.COD_CTA_AUXILIAR >=21400 and a11.COD_CTA_AUXILIAR<=21499 THEN 'BERSHKA'",
                "WHEN a11.COD_CTA_AUXILIAR >=21500 and a11.COD_CTA_AUXILIAR<=21599 THEN 'STRADIVARIUS'",
                "WHEN a11.COD_CTA_AUXILIAR >=21600 and a11.COD_CTA_AUXILIAR<=21699 THEN 'OYSHO'",
                "WHEN a11.COD_CTA_AUXILIAR >=21700 and a11.COD_CTA_AUXILIAR<=21799 THEN 'UTERQUE'",
                "WHEN a11.COD_CTA_AUXILIAR >=21800 and a11.COD_CTA_AUXILIAR<=21899 THEN 'ZARA HOME'",
                "WHEN a11.COD_CTA_AUXILIAR >=21900 and a11.COD_CTA_AUXILIAR<=21999 THEN 'LEFTIES'",
                "WHEN a12.tnd_dest >=21000 and a12.tnd_dest<=21099 THEN 'INDITEX'",
                "WHEN a12.tnd_dest >=21100 and a12.tnd_dest<=21199 THEN 'ZARA'",
                "WHEN a12.tnd_dest >=21200 and a12.tnd_dest<=21299 THEN 'PULL & BEAR'",
                "WHEN a12.tnd_dest >=21300 and a12.tnd_dest<=21399 THEN 'MASSIMO DUTTI'",
                "WHEN a12.tnd_dest >=21400 and a12.tnd_dest<=21499 THEN 'BERSHKA'",
                "WHEN a12.tnd_dest >=21500 and a12.tnd_dest<=21599 THEN 'STRADIVARIUS'",
                "WHEN a12.tnd_dest >=21600 and a12.tnd_dest<=21699 THEN 'OYSHO'",
                "WHEN a12.tnd_dest >=21700 and a12.tnd_dest<=21799 THEN 'UTERQUE'",
                "WHEN a12.tnd_dest >=21800 and a12.tnd_dest<=21899 THEN 'ZARA HOME'",
                "WHEN a12.tnd_dest >=21900 and a12.tnd_dest<=21999 THEN 'LEFTIES'",
                "WHEN a11.COD_CTA_AUXILIAR=4134 and a12.id_receptor=103 THEN 'ZARA'",
                "WHEN a11.COD_CTA_AUXILIAR=4106 and a12.id_receptor=103  THEN 'PULL & BEAR'",
                "WHEN a11.COD_CTA_AUXILIAR=4113 and a12.id_receptor=103  THEN 'MASSIMO DUTTI'",
                "WHEN a11.COD_CTA_AUXILIAR=4118 and a12.id_receptor=103 THEN 'BERSHKA'",
                "WHEN a11.COD_CTA_AUXILIAR=4112 and a12.id_receptor=103  THEN 'STRADIVARIUS'",
                "WHEN a11.COD_CTA_AUXILIAR=4114 and a12.id_receptor=103 THEN 'OYSHO'",
                "WHEN a11.COD_CTA_AUXILIAR=4119 and a12.id_receptor=103 THEN 'UTERQUE'",
                "WHEN a11.COD_CTA_AUXILIAR=4122 and a12.id_receptor=103 THEN 'ZARA HOME'",
                "WHEN a11.COD_CTA_AUXILIAR>=70000 AND a11.COD_CTA_AUXILIAR<90000 THEN COALESCE(FRAN.CADENA_AD,CSOCI.CADENA_AD)",
                "WHEN a11.COD_CTA_AUXILIAR = 4134 and a12.id_cuenta_emp=36488916 THEN TO_CHAR(CSOCI.CADENA_AD)",
                "END, CASE WHEN C2.ID_CADENA in(4,8) THEN C2.CADENA ELSE C2.CADENA_AD END, CASE WHEN C.ID_CADENA in(4,8) THEN C.CADENA ELSE C.CADENA_AD END,CASE WHEN ONL.COD_EMPRESA_GRUPO=9 THEN 'INDITEX' ELSE CONLINE.CADENA_AD END, CASE WHEN ONL2.COD_EMPRESA_GRUPO=9 THEN 'INDITEX' ELSE CONLINE2.CADENA_AD END, CASE WHEN SOCIEDAD.COD_EMPRESA_GRUPO=9 THEN 'INDITEX' ELSE CSOCI.CADENA_AD END,  TO_CHAR(SOCIEDAD.NOMBRE_COMERCIAL), 'FRANQUICIA') CADENA_DESC",
                "FROM DMFINANCIERO.MIC_FACT_FACTURA_SISTEMAS a12",
                "JOIN        DMCONTABLE.DIM_CUENTA_EMPRESA         a11",
                "ON (a11.id_cuenta_empresa=a12.id_cuenta_emp)",
                "LEFT JOIN DMCOMERCIAL.DIM_LOCALIZACION T",
                "ON (a12.TND_DEST=t.LOCALIZACION)",
                "LEFT JOIN DMCOMERCIAL.DIM_LOCALIZACION T2",
                "ON (a11.COD_CTA_AUXILIAR=T2.LOCALIZACION)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA_GRUPO ONL",
                "ON (ltrim(Ltrim(a11.COD_CTA_AUXILIAR,9),0)=ONL.COD_EMPRESA_GRUPO AND ONL.ID_EMPRESA_GRUPO<>0)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA_GRUPO FRANQUICIA",
                "ON (a11.COD_CTA_AUXILIAR=FRANQUICIA.COD_EMPRESA_GRUPO)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA_GRUPO FRANQUICIA_GRP",
                "ON (FRANQUICIA.ID_EMPRESA_GRUPO=FRANQUICIA_GRP.ID_EMPRESA_GRUPO)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA_GRUPO ONL2",
                "ON (ltrim(Ltrim(a12.TND_DEST,9),0)=ONL2.COD_EMPRESA_GRUPO AND ONL2.ID_EMPRESA_GRUPO<>0)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA IDSO",
                "ON (a12.id_receptor=IDSO.ID_EMPRESA)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA_GRUPO SOCIEDAD",
                "ON (IDSO.id_empresa_grupo=SOCIEDAD.id_empresa_grupo AND SOCIEDAD.ID_EMPRESA_GRUPO<>0)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA_GRUPO E",
                "ON (T.ID_EMPRESA_GRUPO=E.ID_EMPRESA_GRUPO AND E.ID_EMPRESA_GRUPO<>0)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA_GRUPO E2",
                "ON (T2.ID_EMPRESA_GRUPO=E2.ID_EMPRESA_GRUPO AND E2.ID_EMPRESA_GRUPO<>0)",
                "LEFT JOIN DMCOMERCIAL.DIM_CADENA C",
                "ON (T.ID_CADENA=C.ID_CADENA)",
                "LEFT JOIN DMCOMERCIAL.DIM_CADENA C2",
                "ON (T2.ID_CADENA=C2.ID_CADENA)",
                "LEFT JOIN DMCOMERCIAL.DIM_CADENA CONLINE",
                "ON (ONL.ID_CADENA=CONLINE.ID_CADENA_AD)",
                "LEFT JOIN DMCOMERCIAL.DIM_CADENA CONLINE2",
                "ON (ONL2.ID_CADENA=CONLINE2.ID_CADENA_AD)",
                "LEFT JOIN DMCOMERCIAL.DIM_CADENA CSOCI",
                "ON (SOCIEDAD.ID_CADENA=CSOCI.ID_CADENA_AD)",
                "LEFT JOIN DMCOMERCIAL.DIM_CADENA FRAN",
                "ON (FRAN.ID_CADENA_AD=FRANQUICIA_GRP.ID_CADENA)",
                "WHERE a12.EJERCICIO >= YEAR(SYSDATE) - 2\"),",
                "    #\"Columna condicional agregada\" = Table.AddColumn(FACTURAS_SUPERINFORME, \"Cadena\", each if [CADENA_DESC] = \"TEMPE\" then \"TEMPE OUTLET\" else [CADENA_DESC]),",
                "    #\"Columna condicional agregada1\" = Table.AddColumn(#\"Columna condicional agregada\", \"Mercado\", each if [DESCRIPCION_PAIS] = \"_ESPAÑA\" then \"ESPAÑA\" else if [DESCRIPCION_PAIS] = \"_HOLANDA\" then \"PAISES BAJOS\" else if [DESCRIPCION_PAIS] = \"_IRLANDA\" then \"IRLANDA\" else if [DESCRIPCION_PAIS] = \"_KAZAJSTAN\" then \"KAZAJSTAN\" else if [DESCRIPCION_PAIS] = \"_MAINLAND CHINA\" then \"MAINLAND CHINA\" else if [DESCRIPCION_PAIS] = \"_POLONIA\" then \"POLONIA\" else if [DESCRIPCION_PAIS] = \"_RUSIA\" then \"RUSIA\" else if [DESCRIPCION_PAIS] = \"ARABIA SAUDITA\" then \"ARABIA SAUDI\" else if [DESCRIPCION_PAIS] = \"BAHREIN\" then \"BAHRAIN\" else if [DESCRIPCION_PAIS] = \"EMIRATOS ARABES UNIDOS\" then \"EMIRATOS ARABES\" else if [DESCRIPCION_PAIS] = \"OMAN\" then \"OMAN (SULTANATO\" else if [DESCRIPCION_PAIS] = \"REPUBLICA DOMINICANA\" then \"REP.DOMINICANA\" else if [DESCRIPCION_PAIS] = \"TAILANDIA\" then \"THAILANDIA\" else if [DESCRIPCION_PAIS] = \"REINO UNIDO\" then \"GRAN BRETAÑA\" else if [DESCRIPCION_PAIS] = \"BOSNIA-HERZEGOVINA\" then \"BOSNIA-HERZEGOV\" else if [DESCRIPCION_PAIS] = \"ESTADOS UNIDOS\" then \"U.S.A.\" else if [DESCRIPCION_PAIS] = \"KAZAJSTAN\" then \"KAZAJISTAN\" else if [DESCRIPCION_PAIS] = \"REPUBLICA CHECA\" then \"REP.CHECA\" else if [DESCRIPCION_PAIS] = \"REPÚBLICA DE MACEDONIA DEL NORTE\" then \"MACEDONIA\" else if [DESCRIPCION_PAIS] = \"CHINA\" then \"MAINLAND CHINA\" else if [DESCRIPCION_PAIS] = \"HOLANDA\" then \"PAISES BAJOS\" else if [DESCRIPCION_PAIS] = \"PAÍSES BAJOS\" then \"PAISES BAJOS\" else [DESCRIPCION_PAIS]),",
                "    #\"Tipo cambiado1\" = Table.TransformColumnTypes(#\"Columna condicional agregada1\",{{\"ID_FACTURA_IMPUTACION_CONTABLE\", Int64.Type}, {\"Mercado\", type text}, {\"Cadena\", type text}}),",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(#\"Tipo cambiado1\",{\"ID_FACTURA_IMPUTACION_CONTABLE\", \"ID_FACTURA\", \"COD_CTA_AUX\", \"TND_DEST\", \"ID_CUENTA_EMP\",  \"Cadena\", \"Mercado\"})",
                "in",
                "    #\"Otras columnas quitadas\""
              ]
            }
          }
        ]
      },
      {
        "name": "AUX_REPARTO_PRESUPUESTO",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_PRESUP",
            "dataType": "int64",
            "sourceColumn": "ID_PRESUP"
          },
          {
            "name": "CTAAUX",
            "dataType": "int64",
            "sourceColumn": "CTAAUX"
          },
          {
            "name": "ID_MES",
            "dataType": "int64",
            "sourceColumn": "ID_MES"
          },
          {
            "name": "Cadena",
            "dataType": "string",
            "sourceColumn": "Cadena"
          },
          {
            "name": "Mercado",
            "dataType": "string",
            "sourceColumn": "Mercado"
          },
          {
            "name": "CADENA_CRUCE",
            "dataType": "string",
            "sourceColumn": "CADENA_CRUCE"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    /*DMFINANCIERO = Source{[Schema=\"DMFINANCIERO\"]}[Data],",
                "    FACTURAS_SUPERINFORME = DMFINANCIERO{[Name=\"MIC_FACT_FACTURA_SISTEMAS\"]}[Data],*/",
                "     FACTURAS_SUPERINFORME= Value.NativeQuery(Source, ",
                "    \"SELECT DISTINCT P.ID_PRESUP, ",
                "P.CTAAUX, ",
                "ID_MES,",
                "P.CADENA CADENA_CRUCE,",
                "COALESCE(CASE WHEN P.CTAAUX=21000 THEN 'INDITEX'",
                "WHEN P.CTAAUX=21100 THEN 'ZARA'",
                "WHEN P.CTAAUX=21200 THEN 'PULL & BEAR'",
                "WHEN P.CTAAUX=21300 THEN 'MASSIMO DUTTI'",
                "WHEN P.CTAAUX=21400 THEN 'BERSHKA'",
                "WHEN P.CTAAUX=21500 THEN 'STRADIVARIUS'",
                "WHEN P.CTAAUX=21600 THEN 'OYSHO'",
                "WHEN P.CTAAUX=21700 THEN 'UTERQUE'",
                "WHEN P.CTAAUX=21800 THEN 'ZARA HOME'",
                "WHEN P.CTAAUX=21900 THEN 'LEFTIES' END, CASE WHEN P.CADENA='N/A' THEN null ELSE P.CADENA END, DC2.CADENA_AD, TO_CHAR(EG.NOMBRE_COMERCIAL) ,CADENA_DESTINO,DC.CADENA_AD) CADENA, ",
                "COALESCE(CASE WHEN P.CTAAUX in (21000,21100,21200,21300,21400,21500,21600,21700,21800,21900) THEN DE.DESCRIPCION_PAIS ",
                "WHEN P.ID_EMPRESA_GRUPO=0 AND P.CTAAUX=0 THEN MERCADO_DESTINO END,TO_CHAR(EG.PAIS) ,TO_CHAR(DP.DESCRIPCION)) MERCADO ",
                "FROM DMFINANCIERO.MIC_FACT_PRESUP_COMPRA_SIST P",
                "JOIN DMMAESTROS.DIM_EMPRESA DE",
                "ON (DE.ID_EMPRESA=p.ID_EMP)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA_GRUPO EG ",
                "ON(ltrim(Ltrim(P.CTAAUX,9),0)=EG.COD_EMPRESA_GRUPO AND EG.ID_EMPRESA_GRUPO<>0)",
                "LEFT JOIN DMCOMERCIAL.DIM_CADENA DC",
                "ON (EG.ID_CADENA=DC.ID_CADENA_AD)",
                "LEFT JOIN DMCOMERCIAL.DIM_LOCALIZACION T",
                "ON (P.CTAAUX=T.LOCALIZACION)",
                "LEFT JOIN DMCOMERCIAL.DIM_CADENA DC2 ",
                "ON (T.ID_CADENA=DC2.ID_CADENA)",
                "LEFT JOIN DMCOMERCIAL.DIM_PAIS DP ",
                "ON (T.ID_PAIS=DP.ID_PAIS)",
                "WHERE P.ID_EJERCICIO>=YEAR(SYSDATE)-2\"),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(FACTURAS_SUPERINFORME,{{\"CADENA\", \"CADENA_OLD\"}, {\"MERCADO\", \"MERCADO_OLD\"}}),",
                "    #\"Columna condicional agregada\" = Table.AddColumn(#\"Columnas con nombre cambiado\", \"Cadena\", each if [CADENA_OLD] = \"_ZARA HOME\" then \"ZARA HOME\" else if [CADENA_OLD] = \"_ZARA\" then \"ZARA\" else if [CADENA_OLD] = \"_UTERQUE\" then \"UTERQUE\" else if [CADENA_OLD] = \"_TEMPE\" then \"TEMPE OUTLET\" else if [CADENA_OLD] = \"KIDDYS\" then \"KIDDY'S CLASS\" else if [CADENA_OLD] = \"TEMPE\" then \"TEMPE OUTLET\" else if [CADENA_OLD] = \"_STRADIVARIUS\" then \"STRADIVARIUS\" else if [CADENA_OLD] = \"PULL&BEAR\" then \"PULL & BEAR\" else if [CADENA_OLD] = \"_PULL&BEAR\" then \"PULL & BEAR\" else if [CADENA_OLD] = \"_OYSHO\" then \"OYSHO\" else if [CADENA_OLD] = \"_MASSIMO DUTTI\" then \"MASSIMO DUTTI\" else if [CADENA_OLD] = \"_BERSHKA\" then \"BERSHKA\" else if [CADENA_OLD] = \"_INDITEX\" then \"INDITEX\" else if [CADENA_OLD] = \"PLATAFORMA MECO\" then \"PLATAFORMA LOGISTICA MECO\" else if [CADENA_OLD] = \"UTERQÜE\" then \"UTERQUE\" else if [CADENA_OLD] = \"_PULL & BEAR\" then \"PULL & BEAR\" else if [CADENA_OLD] = \"PULL \" then \"PULL & BEAR\" else if [CADENA_OLD] = \"UTERQÜE\" then \"UTERQUE\" else [CADENA_OLD]),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columna condicional agregada\",{{\"Cadena\", type text}}),",
                "    #\"Valor reemplazado\" = Table.ReplaceValue(#\"Tipo cambiado\",\"_\",\"\",Replacer.ReplaceText,{\"MERCADO_OLD\"}),",
                "    #\"Columna condicional agregada1\" = Table.AddColumn(#\"Valor reemplazado\", \"Mercado\", each if [MERCADO_OLD] = \"_ESPAÑA\" then \"ESPAÑA\" else if [MERCADO_OLD] = \"_HOLANDA\" then \"PAISES BAJOS\" else if [MERCADO_OLD] = \"_IRLANDA\" then \"IRLANDA\" else if [MERCADO_OLD] = \"_KAZAJSTAN\" then \"KAZAJSTAN\" else if [MERCADO_OLD] = \"_MAINLAND CHINA\" then \"MAINLAND CHINA\" else if [MERCADO_OLD] = \"_POLONIA\" then \"POLONIA\" else if [MERCADO_OLD] = \"_RUSIA\" then \"RUSIA\" else if [MERCADO_OLD] = \"ARABIA SAUDITA\" then \"ARABIA SAUDI\" else if [MERCADO_OLD] = \"BAHREIN\" then \"BAHRAIN\" else if [MERCADO_OLD] = \"EMIRATOS ARABES UNIDOS\" then \"EMIRATOS ARABES\" else if [MERCADO_OLD] = \"OMAN\" then \"OMAN (SULTANATO\" else if [MERCADO_OLD] = \"REPUBLICA DOMINICANA\" then \"REP.DOMINICANA\" else if [MERCADO_OLD] = \"TAILANDIA\" then \"THAILANDIA\" else if [MERCADO_OLD] = \"REPÚBLICA DE MACEDONIA DEL NORTE\" then \"MACEDONIA\" else if [MERCADO_OLD] = \"REPUBLICA CHECA\" then \"REP.CHECA\" else if [MERCADO_OLD] = \"KAZAJSTAN\" then \"KAZAJISTAN\" else if [MERCADO_OLD] = \"REINO UNIDO\" then \"GRAN BRETAÑA\" else if [MERCADO_OLD] = \"BOSNIA-HERZEGOVINA\" then \"BOSNIA-HERZEGOV\" else if [MERCADO_OLD] = \"ESTADOS UNIDOS\" then \"U.S.A.\" else if [MERCADO_OLD] = \"CHINA\" then \"MAINLAND CHINA\" else if [MERCADO_OLD] = \"_BAHREIN\" then \"BAHRAIN\" else if [MERCADO_OLD] = \"HOLANDA\" then \"PAISES BAJOS\" else if [MERCADO_OLD] = \"PAÍSES BAJOS\" then \"PAISES BAJOS\" else [MERCADO_OLD]),",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(#\"Columna condicional agregada1\",{\"ID_PRESUP\", \"CTAAUX\", \"ID_MES\", \"CADENA_CRUCE\", \"Cadena\", \"Mercado\"}),",
                "    #\"Tipo cambiado2\" = Table.TransformColumnTypes(#\"Otras columnas quitadas\",{{\"ID_PRESUP\", Int64.Type}, {\"Mercado\", type text}})",
                "in",
                "    #\"Tipo cambiado2\""
              ]
            }
          }
        ]
      },
      {
        "name": "Mercado Local",
        "columns": [
          {
            "name": "ID Mercado",
            "dataType": "double",
            "isUnique": true,
            "isKey": true,
            "sourceColumn": "ID_PAIS",
            "summarizeBy": "none"
          },
          {
            "name": "Mercado",
            "dataType": "string",
            "sourceColumn": "PAIS"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "     DIM_PAIS_LOCAL = Value.NativeQuery(Source, ",
                "    \"SELECT DISTINCT PAIS ID_PAIS, ",
                "DESCRIPCION PAIS",
                "FROM DMCOMERCIAL.DIM_PAIS",
                "UNION ",
                "SELECT -1 ID_PAIS, 'Pedido' DESCRICION FROM DUAL",
                "\"),",
                "    #\"Valor reemplazado\" = Table.ReplaceValue(DIM_PAIS_LOCAL,\"GENERICO\",\"DESCONOCIDO \",Replacer.ReplaceText,{\"PAIS\"})",
                "in",
                "    #\"Valor reemplazado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Cadena Local",
        "columns": [
          {
            "name": "ID Cadena",
            "dataType": "double",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "sourceColumn": "ID_CADENA",
            "summarizeBy": "none"
          },
          {
            "name": "Cadena",
            "dataType": "string",
            "sourceColumn": "CADENA"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "     DIM_CADENA_LOCAL = Value.NativeQuery(Source, ",
                "    \"Select  CASE WHEN ID_CADENA in(4,8) THEN ID_CADENA+10 ELSE ID_CADENA_AD END ID_CADENA,",
                "CASE WHEN ID_CADENA in(4,8) THEN CADENA ELSE CADENA_AD END CADENA",
                "FROM DMCOMERCIAL.DIM_CADENA",
                "UNION",
                "SELECT  0 ID_CADENA, 'INDITEX' CADENA FROM DUAL",
                "UNION",
                "SELECT  -1 ID_CADENA, 'MULTICADENA' CADENA FROM DUAL",
                "UNION ",
                "SELECT  -20 ID_CADENA, 'Pedido' CADENA FROM DUAL",
                "UNION",
                "SELECT -2 ID_CADENA, 'DESCONOCIDO' CADENA FROM DUAL",
                "UNION ",
                "SELECT -3 ID_CADENA, 'CHOOLET' CADENA FROM DUAL",
                "UNION ",
                "SELECT -4 ID_CADENA, 'COMDITEL' CADENA FROM DUAL",
                "UNION ",
                "SELECT -5 ID_CADENA, 'CONFECCIONES GOA' CADENA FROM DUAL",
                "UNION ",
                "SELECT -6 ID_CADENA, 'DENLLO' CADENA FROM DUAL",
                "UNION ",
                "SELECT -7 ID_CADENA, 'FIOS' CADENA FROM DUAL",
                "UNION ",
                "SELECT -8 ID_CADENA, 'GLENCARE' CADENA FROM DUAL",
                "UNION ",
                "SELECT -9 ID_CADENA, 'GOA INVEST' CADENA FROM DUAL",
                "UNION ",
                "SELECT -10 ID_CADENA, 'HAMPTON' CADENA FROM DUAL",
                "UNION ",
                "SELECT -11 ID_CADENA, 'INDIPUNT' CADENA FROM DUAL",
                "UNION ",
                "SELECT -12 ID_CADENA, 'ITX TRADING' CADENA FROM DUAL",
                "UNION ",
                "SELECT -13 ID_CADENA, 'PLATAFORMA EUROPA' CADENA FROM DUAL",
                "UNION ",
                "SELECT -14 ID_CADENA, 'PLATAFORMA LEON' CADENA FROM DUAL",
                "UNION ",
                "SELECT 37 ID_CADENA, 'PLATAFORMA LOGISTICA MECO' CADENA FROM DUAL",
                "UNION ",
                "SELECT -16 ID_CADENA, 'SAMLOR' CADENA FROM DUAL",
                "UNION ",
                "SELECT -17 ID_CADENA, 'STEAR' CADENA FROM DUAL",
                "UNION ",
                "SELECT -18 ID_CADENA, 'TRISKO' CADENA FROM DUAL",
                "UNION ",
                "SELECT -19 ID_CADENA, 'ZINTURA' CADENA FROM DUAL",
                "UNION",
                "SELECT COD_CADENA ID_CADENA, ",
                "CASE ",
                "WHEN CADENA_DESC='TEMPE' THEN 'TEMPE OUTLET'",
                "ELSE CADENA_DESC END CADENA FROM(",
                "SELECT DISTINCT COALESCE(",
                "CASE WHEN a12.id_receptor = 30399 THEN 0",
                "WHEN IDSO.COD_EMPRESA_DB2=30 THEN 2",
                "WHEN a12.DEPART_DEST >=22000 and a12.DEPART_DEST<=22099 THEN 0",
                "WHEN a12.DEPART_DEST >=22100 and a12.DEPART_DEST<=22199 THEN 1",
                "WHEN a12.DEPART_DEST >=22200 and a12.DEPART_DEST<=22299 THEN 4",
                "WHEN a12.DEPART_DEST >=22300 and a12.DEPART_DEST<=22399 THEN 2",
                "WHEN a12.DEPART_DEST >=22400 and a12.DEPART_DEST<=22499 THEN 3",
                "WHEN a12.DEPART_DEST >=22500 and a12.DEPART_DEST<=22599 THEN 5",
                "WHEN a12.DEPART_DEST >=22600 and a12.DEPART_DEST<=22699 THEN 7",
                "WHEN a12.DEPART_DEST >=22700 and a12.DEPART_DEST<=22799 THEN 9",
                "WHEN a12.DEPART_DEST >=22800 and a12.DEPART_DEST<=22899 THEN 8",
                "WHEN a12.DEPART_DEST >=22900 and a12.DEPART_DEST<=22999 THEN 18",
                "WHEN a11.COD_CTA_AUXILIAR >=22000 and a11.COD_CTA_AUXILIAR<=22099 THEN 0",
                "WHEN a11.COD_CTA_AUXILIAR >=22100 and a11.COD_CTA_AUXILIAR<=22199 THEN 1",
                "WHEN a11.COD_CTA_AUXILIAR >=22200 and a11.COD_CTA_AUXILIAR<=22299 THEN 4",
                "WHEN a11.COD_CTA_AUXILIAR >=22300 and a11.COD_CTA_AUXILIAR<=22399 THEN 2",
                "WHEN a11.COD_CTA_AUXILIAR >=22400 and a11.COD_CTA_AUXILIAR<=22499 THEN 3",
                "WHEN a11.COD_CTA_AUXILIAR >=22500 and a11.COD_CTA_AUXILIAR<=22599 THEN 5",
                "WHEN a11.COD_CTA_AUXILIAR >=22600 and a11.COD_CTA_AUXILIAR<=22699 THEN 7",
                "WHEN a11.COD_CTA_AUXILIAR >=22700 and a11.COD_CTA_AUXILIAR<=22799 THEN 9",
                "WHEN a11.COD_CTA_AUXILIAR >=22800 and a11.COD_CTA_AUXILIAR<=22899 THEN 8",
                "WHEN a11.COD_CTA_AUXILIAR >=22900 and a11.COD_CTA_AUXILIAR<=22999 THEN 18",
                "WHEN a12.tnd_dest >=22000 and a12.tnd_dest<=22099 THEN 0",
                "WHEN a12.tnd_dest >=22100 and a12.tnd_dest<=22199 THEN 1",
                "WHEN a12.tnd_dest >=22200 and a12.tnd_dest<=22299 THEN 4",
                "WHEN a12.tnd_dest >=22300 and a12.tnd_dest<=22399 THEN 2",
                "WHEN a12.tnd_dest >=22400 and a12.tnd_dest<=22499 THEN 3",
                "WHEN a12.tnd_dest >=22500 and a12.tnd_dest<=22599 THEN 5",
                "WHEN a12.tnd_dest >=22600 and a12.tnd_dest<=22699 THEN 7",
                "WHEN a12.tnd_dest >=22700 and a12.tnd_dest<=22799 THEN 9",
                "WHEN a12.tnd_dest >=22800 and a12.tnd_dest<=22899 THEN 8",
                "WHEN a12.tnd_dest >=22900 and a12.tnd_dest<=22999 THEN 18",
                "--WHEN a12.id_receptor not in(103,106043,44978) THEN CSOCI.CADENA_AD",
                "WHEN a12.DEPART_DEST >=21000 and a12.DEPART_DEST<=21099 THEN 0",
                "WHEN a12.DEPART_DEST >=21100 and a12.DEPART_DEST<=21199 THEN 1",
                "WHEN a12.DEPART_DEST >=21200 and a12.DEPART_DEST<=21299 THEN 4",
                "WHEN a12.DEPART_DEST >=21300 and a12.DEPART_DEST<=21399 THEN 2",
                "WHEN a12.DEPART_DEST >=21400 and a12.DEPART_DEST<=21499 THEN 3",
                "WHEN a12.DEPART_DEST >=21500 and a12.DEPART_DEST<=21599 THEN 5",
                "WHEN a12.DEPART_DEST >=21600 and a12.DEPART_DEST<=21699 THEN 7",
                "WHEN a12.DEPART_DEST >=21700 and a12.DEPART_DEST<=21799 THEN 9",
                "WHEN a12.DEPART_DEST >=21800 and a12.DEPART_DEST<=21899 THEN 8",
                "WHEN a12.DEPART_DEST >=21900 and a12.DEPART_DEST<=21999 THEN 18",
                "WHEN a11.COD_CTA_AUXILIAR >=21000 and a11.COD_CTA_AUXILIAR<=21099 THEN 0",
                "WHEN a11.COD_CTA_AUXILIAR >=21100 and a11.COD_CTA_AUXILIAR<=21199 THEN 1",
                "WHEN a11.COD_CTA_AUXILIAR >=21200 and a11.COD_CTA_AUXILIAR<=21299 THEN 4",
                "WHEN a11.COD_CTA_AUXILIAR >=21300 and a11.COD_CTA_AUXILIAR<=21399 THEN 2",
                "WHEN a11.COD_CTA_AUXILIAR >=21400 and a11.COD_CTA_AUXILIAR<=21499 THEN 3",
                "WHEN a11.COD_CTA_AUXILIAR >=21500 and a11.COD_CTA_AUXILIAR<=21599 THEN 5",
                "WHEN a11.COD_CTA_AUXILIAR >=21600 and a11.COD_CTA_AUXILIAR<=21699 THEN 7",
                "WHEN a11.COD_CTA_AUXILIAR >=21700 and a11.COD_CTA_AUXILIAR<=21799 THEN 9",
                "WHEN a11.COD_CTA_AUXILIAR >=21800 and a11.COD_CTA_AUXILIAR<=21899 THEN 8",
                "WHEN a11.COD_CTA_AUXILIAR >=21900 and a11.COD_CTA_AUXILIAR<=21999 THEN 18",
                "WHEN a12.tnd_dest >=21000 and a12.tnd_dest<=21099 THEN 0",
                "WHEN a12.tnd_dest >=21100 and a12.tnd_dest<=21199 THEN 1",
                "WHEN a12.tnd_dest >=21200 and a12.tnd_dest<=21299 THEN 4",
                "WHEN a12.tnd_dest >=21300 and a12.tnd_dest<=21399 THEN 2",
                "WHEN a12.tnd_dest >=21400 and a12.tnd_dest<=21499 THEN 3",
                "WHEN a12.tnd_dest >=21500 and a12.tnd_dest<=21599 THEN 5",
                "WHEN a12.tnd_dest >=21600 and a12.tnd_dest<=21699 THEN 7",
                "WHEN a12.tnd_dest >=21700 and a12.tnd_dest<=21799 THEN 9",
                "WHEN a12.tnd_dest >=21800 and a12.tnd_dest<=21899 THEN 8",
                "WHEN a12.tnd_dest >=21900 and a12.tnd_dest<=21999 THEN 18",
                "WHEN a11.COD_CTA_AUXILIAR=4134 and a12.id_receptor=103 THEN 1",
                "WHEN a11.COD_CTA_AUXILIAR=4106 and a12.id_receptor=103  THEN 4",
                "WHEN a11.COD_CTA_AUXILIAR=4113 and a12.id_receptor=103  THEN 2",
                "WHEN a11.COD_CTA_AUXILIAR=4118 and a12.id_receptor=103 THEN 3",
                "WHEN a11.COD_CTA_AUXILIAR=4112 and a12.id_receptor=103  THEN 5",
                "WHEN a11.COD_CTA_AUXILIAR=4114 and a12.id_receptor=103 THEN 7",
                "WHEN a11.COD_CTA_AUXILIAR=4119 and a12.id_receptor=103 THEN 9",
                "WHEN a11.COD_CTA_AUXILIAR=4122 and a12.id_receptor=103 THEN 8",
                "WHEN a11.COD_CTA_AUXILIAR>=70000 AND a11.COD_CTA_AUXILIAR<90000 THEN COALESCE(FRAN.ID_CADENA_AD,CSOCI.ID_CADENA_AD,-1)",
                "WHEN a11.COD_CTA_AUXILIAR = 4134 and a12.id_cuenta_emp=36488916 THEN SOCIEDAD.COD_EMPRESA_GRUPO",
                "END, C2.ID_CADENA_AD, C.ID_CADENA_AD, CONLINE.ID_CADENA_AD, CONLINE2.ID_CADENA_AD, CSOCI.ID_CADENA_AD, SOCIEDAD.COD_EMPRESA_GRUPO, -1) COD_CADENA,",
                "COALESCE(CASE WHEN a12.id_receptor = 30399 THEN 'INDITEX'",
                "WHEN IDSO.COD_EMPRESA_DB2=30 THEN 'MASSIMO DUTTI'",
                "WHEN a12.DEPART_DEST >=22000 and a12.DEPART_DEST<=22099 THEN 'INDITEX'",
                "WHEN a12.DEPART_DEST >=22100 and a12.DEPART_DEST<=22199 THEN 'ZARA'",
                "WHEN a12.DEPART_DEST >=22200 and a12.DEPART_DEST<=22299 THEN 'PULL & BEAR'",
                "WHEN a12.DEPART_DEST >=22300 and a12.DEPART_DEST<=22399 THEN 'MASSIMO DUTTI'",
                "WHEN a12.DEPART_DEST >=22400 and a12.DEPART_DEST<=22499 THEN 'BERSHKA'",
                "WHEN a12.DEPART_DEST >=22500 and a12.DEPART_DEST<=22599 THEN 'STRADIVARIUS'",
                "WHEN a12.DEPART_DEST >=22600 and a12.DEPART_DEST<=22699 THEN 'OYSHO'",
                "WHEN a12.DEPART_DEST >=22700 and a12.DEPART_DEST<=22799 THEN 'UTERQUE'",
                "WHEN a12.DEPART_DEST >=22800 and a12.DEPART_DEST<=22899 THEN 'ZARA HOME'",
                "WHEN a12.DEPART_DEST >=22900 and a12.DEPART_DEST<=22999 THEN 'LEFTIES'",
                "WHEN a11.COD_CTA_AUXILIAR >=22000 and a11.COD_CTA_AUXILIAR<=22099 THEN 'INDITEX'",
                "WHEN a11.COD_CTA_AUXILIAR >=22100 and a11.COD_CTA_AUXILIAR<=22199 THEN 'ZARA'",
                "WHEN a11.COD_CTA_AUXILIAR >=22200 and a11.COD_CTA_AUXILIAR<=22299 THEN 'PULL & BEAR'",
                "WHEN a11.COD_CTA_AUXILIAR >=22300 and a11.COD_CTA_AUXILIAR<=22399 THEN 'MASSIMO DUTTI'",
                "WHEN a11.COD_CTA_AUXILIAR >=22400 and a11.COD_CTA_AUXILIAR<=22499 THEN 'BERSHKA'",
                "WHEN a11.COD_CTA_AUXILIAR >=22500 and a11.COD_CTA_AUXILIAR<=22599 THEN 'STRADIVARIUS'",
                "WHEN a11.COD_CTA_AUXILIAR >=22600 and a11.COD_CTA_AUXILIAR<=22699 THEN 'OYSHO'",
                "WHEN a11.COD_CTA_AUXILIAR >=22700 and a11.COD_CTA_AUXILIAR<=22799 THEN 'UTERQUE'",
                "WHEN a11.COD_CTA_AUXILIAR >=22800 and a11.COD_CTA_AUXILIAR<=22899 THEN 'ZARA HOME'",
                "WHEN a11.COD_CTA_AUXILIAR >=22900 and a11.COD_CTA_AUXILIAR<=22999 THEN 'LEFTIES'",
                "WHEN a12.tnd_dest >=22000 and a12.tnd_dest<=22099 THEN 'INDITEX'",
                "WHEN a12.tnd_dest >=22100 and a12.tnd_dest<=22199 THEN 'ZARA'",
                "WHEN a12.tnd_dest >=22200 and a12.tnd_dest<=22299 THEN 'PULL & BEAR'",
                "WHEN a12.tnd_dest >=22300 and a12.tnd_dest<=22399 THEN 'MASSIMO DUTTI'",
                "WHEN a12.tnd_dest >=22400 and a12.tnd_dest<=22499 THEN 'BERSHKA'",
                "WHEN a12.tnd_dest >=22500 and a12.tnd_dest<=22599 THEN 'STRADIVARIUS'",
                "WHEN a12.tnd_dest >=22600 and a12.tnd_dest<=22699 THEN 'OYSHO'",
                "WHEN a12.tnd_dest >=22700 and a12.tnd_dest<=22799 THEN 'UTERQUE'",
                "WHEN a12.tnd_dest >=22800 and a12.tnd_dest<=22899 THEN 'ZARA HOME'",
                "WHEN a12.tnd_dest >=22900 and a12.tnd_dest<=22999 THEN 'LEFTIES'",
                "--WHEN a12.id_receptor not in(103,106043,44978) THEN CSOCI.CADENA_AD",
                "WHEN a12.DEPART_DEST >=21000 and a12.DEPART_DEST<=21099 THEN 'INDITEX'",
                "WHEN a12.DEPART_DEST >=21100 and a12.DEPART_DEST<=21199 THEN 'ZARA'",
                "WHEN a12.DEPART_DEST >=21200 and a12.DEPART_DEST<=21299 THEN 'PULL & BEAR'",
                "WHEN a12.DEPART_DEST >=21300 and a12.DEPART_DEST<=21399 THEN 'MASSIMO DUTTI'",
                "WHEN a12.DEPART_DEST >=21400 and a12.DEPART_DEST<=21499 THEN 'BERSHKA'",
                "WHEN a12.DEPART_DEST >=21500 and a12.DEPART_DEST<=21599 THEN 'STRADIVARIUS'",
                "WHEN a12.DEPART_DEST >=21600 and a12.DEPART_DEST<=21699 THEN 'OYSHO'",
                "WHEN a12.DEPART_DEST >=21700 and a12.DEPART_DEST<=21799 THEN 'UTERQUE'",
                "WHEN a12.DEPART_DEST >=21800 and a12.DEPART_DEST<=21899 THEN 'ZARA HOME'",
                "WHEN a12.DEPART_DEST >=21900 and a12.DEPART_DEST<=21999 THEN 'LEFTIES'",
                "WHEN a11.COD_CTA_AUXILIAR >=21000 and a11.COD_CTA_AUXILIAR<=21099 THEN 'INDITEX'",
                "WHEN a11.COD_CTA_AUXILIAR >=21100 and a11.COD_CTA_AUXILIAR<=21199 THEN 'ZARA'",
                "WHEN a11.COD_CTA_AUXILIAR >=21200 and a11.COD_CTA_AUXILIAR<=21299 THEN 'PULL & BEAR'",
                "WHEN a11.COD_CTA_AUXILIAR >=21300 and a11.COD_CTA_AUXILIAR<=21399 THEN 'MASSIMO DUTTI'",
                "WHEN a11.COD_CTA_AUXILIAR >=21400 and a11.COD_CTA_AUXILIAR<=21499 THEN 'BERSHKA'",
                "WHEN a11.COD_CTA_AUXILIAR >=21500 and a11.COD_CTA_AUXILIAR<=21599 THEN 'STRADIVARIUS'",
                "WHEN a11.COD_CTA_AUXILIAR >=21600 and a11.COD_CTA_AUXILIAR<=21699 THEN 'OYSHO'",
                "WHEN a11.COD_CTA_AUXILIAR >=21700 and a11.COD_CTA_AUXILIAR<=21799 THEN 'UTERQUE'",
                "WHEN a11.COD_CTA_AUXILIAR >=21800 and a11.COD_CTA_AUXILIAR<=21899 THEN 'ZARA HOME'",
                "WHEN a11.COD_CTA_AUXILIAR >=21900 and a11.COD_CTA_AUXILIAR<=21999 THEN 'LEFTIES'",
                "WHEN a12.tnd_dest >=21000 and a12.tnd_dest<=21099 THEN 'INDITEX'",
                "WHEN a12.tnd_dest >=21100 and a12.tnd_dest<=21199 THEN 'ZARA'",
                "WHEN a12.tnd_dest >=21200 and a12.tnd_dest<=21299 THEN 'PULL & BEAR'",
                "WHEN a12.tnd_dest >=21300 and a12.tnd_dest<=21399 THEN 'MASSIMO DUTTI'",
                "WHEN a12.tnd_dest >=21400 and a12.tnd_dest<=21499 THEN 'BERSHKA'",
                "WHEN a12.tnd_dest >=21500 and a12.tnd_dest<=21599 THEN 'STRADIVARIUS'",
                "WHEN a12.tnd_dest >=21600 and a12.tnd_dest<=21699 THEN 'OYSHO'",
                "WHEN a12.tnd_dest >=21700 and a12.tnd_dest<=21799 THEN 'UTERQUE'",
                "WHEN a12.tnd_dest >=21800 and a12.tnd_dest<=21899 THEN 'ZARA HOME'",
                "WHEN a12.tnd_dest >=21900 and a12.tnd_dest<=21999 THEN 'LEFTIES'",
                "WHEN a11.COD_CTA_AUXILIAR=4134 and a12.id_receptor=103 THEN 'ZARA'",
                "WHEN a11.COD_CTA_AUXILIAR=4106 and a12.id_receptor=103  THEN 'PULL & BEAR'",
                "WHEN a11.COD_CTA_AUXILIAR=4113 and a12.id_receptor=103  THEN 'MASSIMO DUTTI'",
                "WHEN a11.COD_CTA_AUXILIAR=4118 and a12.id_receptor=103 THEN 'BERSHKA'",
                "WHEN a11.COD_CTA_AUXILIAR=4112 and a12.id_receptor=103  THEN 'STRADIVARIUS'",
                "WHEN a11.COD_CTA_AUXILIAR=4114 and a12.id_receptor=103 THEN 'OYSHO'",
                "WHEN a11.COD_CTA_AUXILIAR=4119 and a12.id_receptor=103 THEN 'UTERQUE'",
                "WHEN a11.COD_CTA_AUXILIAR=4122 and a12.id_receptor=103 THEN 'ZARA HOME'",
                "WHEN a11.COD_CTA_AUXILIAR>=70000 AND a11.COD_CTA_AUXILIAR<90000 THEN COALESCE(FRAN.CADENA_AD,CSOCI.CADENA_AD)",
                "WHEN a11.COD_CTA_AUXILIAR = 4134 and a12.id_cuenta_emp=36488916 THEN TO_CHAR(CSOCI.CADENA_AD)",
                "END, CASE WHEN C2.ID_CADENA in(4,8) THEN C2.CADENA ELSE C2.CADENA_AD END, CASE WHEN C.ID_CADENA in(4,8) THEN C.CADENA ELSE C.CADENA_AD END,CASE WHEN ONL.COD_EMPRESA_GRUPO=9 THEN 'INDITEX' ELSE CONLINE.CADENA_AD END, CASE WHEN ONL2.COD_EMPRESA_GRUPO=9 THEN 'INDITEX' ELSE CONLINE2.CADENA_AD END, CASE WHEN SOCIEDAD.COD_EMPRESA_GRUPO=9 THEN 'INDITEX' ELSE CSOCI.CADENA_AD END,  TO_CHAR(SOCIEDAD.NOMBRE_COMERCIAL), 'FRANQUICIA') CADENA_DESC",
                "FROM DMFINANCIERO.MIC_FACT_FACTURA_SISTEMAS a12",
                "JOIN        DMCONTABLE.DIM_CUENTA_EMPRESA         a11",
                "ON (a11.id_cuenta_empresa=a12.id_cuenta_emp)",
                "LEFT JOIN DMCOMERCIAL.DIM_LOCALIZACION T",
                "ON (a12.TND_DEST=t.LOCALIZACION)",
                "LEFT JOIN DMCOMERCIAL.DIM_LOCALIZACION T2",
                "ON (a11.COD_CTA_AUXILIAR=T2.LOCALIZACION)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA_GRUPO ONL",
                "ON (ltrim(Ltrim(a11.COD_CTA_AUXILIAR,9),0)=ONL.COD_EMPRESA_GRUPO AND ONL.ID_EMPRESA_GRUPO<>0)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA_GRUPO FRANQUICIA",
                "ON (a11.COD_CTA_AUXILIAR=FRANQUICIA.COD_EMPRESA_GRUPO)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA_GRUPO FRANQUICIA_GRP",
                "ON (FRANQUICIA.ID_EMPRESA_GRUPO=FRANQUICIA_GRP.ID_EMPRESA_GRUPO)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA_GRUPO ONL2",
                "ON (ltrim(Ltrim(a12.TND_DEST,9),0)=ONL2.COD_EMPRESA_GRUPO AND ONL2.ID_EMPRESA_GRUPO<>0)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA IDSO",
                "ON (a12.id_receptor=IDSO.ID_EMPRESA)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA_GRUPO SOCIEDAD",
                "ON (IDSO.id_empresa_grupo=SOCIEDAD.id_empresa_grupo AND SOCIEDAD.ID_EMPRESA_GRUPO<>0)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA_GRUPO E",
                "ON (T.ID_EMPRESA_GRUPO=E.ID_EMPRESA_GRUPO AND E.ID_EMPRESA_GRUPO<>0)",
                "LEFT JOIN DMMAESTROS.DIM_EMPRESA_GRUPO E2",
                "ON (T2.ID_EMPRESA_GRUPO=E2.ID_EMPRESA_GRUPO AND E2.ID_EMPRESA_GRUPO<>0)",
                "LEFT JOIN DMCOMERCIAL.DIM_CADENA C",
                "ON (T.ID_CADENA=C.ID_CADENA)",
                "LEFT JOIN DMCOMERCIAL.DIM_CADENA C2",
                "ON (T2.ID_CADENA=C2.ID_CADENA)",
                "LEFT JOIN DMCOMERCIAL.DIM_CADENA CONLINE",
                "ON (ONL.ID_CADENA=CONLINE.ID_CADENA_AD)",
                "LEFT JOIN DMCOMERCIAL.DIM_CADENA CONLINE2",
                "ON (ONL2.ID_CADENA=CONLINE2.ID_CADENA_AD)",
                "LEFT JOIN DMCOMERCIAL.DIM_CADENA CSOCI",
                "ON (SOCIEDAD.ID_CADENA=CSOCI.ID_CADENA_AD)",
                "LEFT JOIN DMCOMERCIAL.DIM_CADENA FRAN",
                "ON (FRAN.ID_CADENA_AD=FRANQUICIA_GRP.ID_CADENA)",
                "WHERE a12.EJERCICIO >= YEAR(SYSDATE) - 2)",
                "WHERE CASE ",
                "WHEN CADENA_DESC='TEMPE' THEN 'TEMPE OUTLET'",
                "ELSE CADENA_DESC END NOT IN(SELECT ",
                "CASE WHEN ID_CADENA in(4,8) THEN CADENA ELSE CADENA_AD END CADENA",
                "FROM DMCOMERCIAL.DIM_CADENA",
                "UNION",
                "SELECT 'INDITEX' CADENA FROM DUAL",
                "UNION",
                "SELECT 'MULTICADENA' CADENA FROM DUAL",
                "UNION ",
                "SELECT 'DESCONOCIDO' CADENA FROM DUAL)\"),",
                "    #\"Filas ordenadas\" = Table.Sort(DIM_CADENA_LOCAL,{{\"ID_CADENA\", Order.Ascending}}),",
                "    #\"Duplicados quitados\" = Table.Distinct(#\"Filas ordenadas\", {\"CADENA\"}),",
                "    #\"Duplicados quitados1\" = Table.Distinct(#\"Duplicados quitados\", {\"ID_CADENA\"})",
                "in",
                "    #\"Duplicados quitados1\""
              ]
            }
          }
        ]
      },
      {
        "name": "Tienda",
        "columns": [
          {
            "name": "ID Tienda",
            "dataType": "int64",
            "isUnique": true,
            "isKey": true,
            "sourceColumn": "ID_TIENDA",
            "summarizeBy": "none"
          },
          {
            "name": "Tienda",
            "dataType": "string",
            "sourceColumn": "TIENDA"
          },
          {
            "name": "Tienda Corta",
            "dataType": "string",
            "sourceColumn": "TIENDA_CORTA"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "     DIM_TIENDA= Value.NativeQuery(Source, ",
                "    \"SELECT DISTINCT LOCALIZACION ID_TIENDA, MAX(DESCRIPCION) TIENDA, MAX(DESCRIPCION_DB2) TIENDA_CORTA",
                "FROM DMCOMERCIAL.DIM_LOCALIZACION",
                "GROUP BY LOCALIZACION",
                "UNION ALL",
                "SELECT DISTINCT TND_DEST ID_TIENDA, '' TIENDA, '' TIENDA_CORTA",
                "FROM DMFINANCIERO.MIC_FACT_FACTURA_SISTEMAS",
                "LEFT JOIN DMCOMERCIAL.DIM_LOCALIZACION ",
                "ON (TND_DEST=LOCALIZACION)",
                "WHERE LOCALIZACION IS NULL\"),",
                "    #\"Valor reemplazado\" = Table.ReplaceValue(DIM_TIENDA,\"NO TIENE\",\" \",Replacer.ReplaceText,{\"TIENDA\"})",
                "   in",
                "    #\"Valor reemplazado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Factura Emisor",
        "columns": [
          {
            "name": "ID_EMPRESA",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "sourceColumn": "ID_EMPRESA",
            "summarizeBy": "none"
          },
          {
            "name": "Emisor ID",
            "dataType": "int64",
            "isUnique": true,
            "sourceColumn": "COD_EMPRESA",
            "summarizeBy": "none"
          },
          {
            "name": "Emisor",
            "dataType": "string",
            "sourceColumn": "RAZON_SOCIAL_COMPLETA"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "     DIM_EMISOR= Value.NativeQuery(Source, ",
                "    \"SELECT ID_EMPRESA, COD_EMPRESA_DB2 COD_EMPRESA, RAZON_SOCIAL_COMPLETA ",
                "FROM DMMAESTROS.DIM_EMPRESA",
                "\")",
                "in",
                "    DIM_EMISOR"
              ]
            }
          }
        ]
      },
      {
        "name": "AUXPROYECTOCANAL",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_PROYECTO",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "sourceColumn": "ID_PROYECTO",
            "summarizeBy": "none"
          },
          {
            "name": "Canal",
            "dataType": "string",
            "sourceColumn": "CANAL_DESC"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "     CANAL= Value.NativeQuery(Source, ",
                "    \"SELECT\t",
                "DISTINCT a13.ID_PROYECTO_CONTABLE ID_PROYECTO,",
                "MAX(a11.CANAL)  CANAL_DESC",
                "FROM\tDMFINANCIERO.MIC_FACT_PRESUP_COMPRA_SIST\ta11",
                "JOIN\tDMARQUITECTURASW.DIM_PROYECTO_CONTABLE\ta13",
                "ON (a11.ID_PROY_CONTABLE = a13.ID_PROYECTO_CONTABLE)",
                "WHERE\ta11.COD_PRESUP <> 0 and  (ID_PROY_CONTABLE,ID_EJERCICIO) IN ",
                "(SELECT ID_PROY_CONTABLE, MAX(ID_EJERCICIO)",
                "FROM DMFINANCIERO.MIC_FACT_PRESUP_COMPRA_SIST ",
                "WHERE ID_EJERCICIO <= CASE WHEN MONTH(sysdate)=1 OR (MONTH(SYSDATE)=2 AND DAY(SYSDATE)<15) THEN YEAR(SYSDATE)-1 ELSE YEAR(SYSDATE) END",
                "GROUP BY ID_PROY_CONTABLE) ",
                "GROUP BY  a13.ID_PROYECTO_CONTABLE\")",
                "   in",
                "    CANAL"
              ]
            }
          }
        ]
      },
      {
        "name": "Cuenta Grupo Pedido",
        "columns": [
          {
            "name": "ID_CUENTA_GRUPO",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "sourceColumn": "ID_CUENTA_GRUPO",
            "summarizeBy": "none"
          },
          {
            "name": "Cuenta Grupo ID",
            "dataType": "string",
            "sourceColumn": "COD_CTA_GRUPO_N4"
          },
          {
            "name": "Cuenta Grupo",
            "dataType": "string",
            "sourceColumn": "DESC_LARGA_CTA_GRUPO_N4"
          },
          {
            "name": "Cuenta Grupo Tipo",
            "dataType": "string",
            "sourceColumn": "Tipo Cuenta Grupo"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    DMCONTABLE = Source{[Schema=\"DMCONTABLE\"]}[Data],",
                "    DIM_CUENTA_GRUPO1 = DMCONTABLE{[Name=\"DIM_CUENTA_GRUPO\"]}[Data],",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(DIM_CUENTA_GRUPO1,{\"ID_CUENTA_GRUPO\", \"COD_CTA_GRUPO_N4\", \"DESC_LARGA_CTA_GRUPO_N4\"}),",
                "    #\"Columna condicional agregada\" = Table.AddColumn(#\"Otras columnas quitadas\", \"Tipo Cuenta Grupo\", each if [COD_CTA_GRUPO_N4] = \"6029\" then \"INV\" else if [COD_CTA_GRUPO_N4] = \"7028\" then \"ING\" else if not Text.StartsWith([COD_CTA_GRUPO_N4], \"6\") then \"INV\" else \"GASTO\"),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columna condicional agregada\",{{\"ID_CUENTA_GRUPO\", Int64.Type}})",
                "in",
                "    #\"Tipo cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "COP Pedido",
        "columns": [
          {
            "name": "ID_CODIGO_PRESUPUESTARIO",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "sourceColumn": "ID_CODIGO_PRESUPUESTARIO",
            "summarizeBy": "none"
          },
          {
            "name": "COP ID",
            "dataType": "int64",
            "sourceColumn": "Partida Presupuestaria Codigo"
          },
          {
            "name": "COP",
            "dataType": "string",
            "sourceColumn": "Partida Presupuestaria"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"select ID_CODIGO_PRESUPUESTARIO, COD_CODIGO_PRESUPUESTARIO, DESCRIPCION from DMFINANCIERO.DIM_CODIGO_PRESUPUESTARIO \"),",
                "#\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Origen\",{{\"ID_CODIGO_PRESUPUESTARIO\", Int64.Type}, {\"COD_CODIGO_PRESUPUESTARIO\", Int64.Type}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"COD_CODIGO_PRESUPUESTARIO\", \"Partida Presupuestaria Codigo\"}, {\"DESCRIPCION\", \"Partida Presupuestaria\"}})",
                "in",
                "    #\"Columnas con nombre cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "AUXGruposProveedores",
        "isHidden": true,
        "columns": [
          {
            "name": "ID PROVEEDOR",
            "dataType": "int64",
            "sourceColumn": "ID PROVEEDOR"
          },
          {
            "name": "NOMBRE PROVEEDOR",
            "dataType": "string",
            "sourceColumn": "NOMBRE PROVEEDOR"
          },
          {
            "name": "GRUPO PROVEEDOR",
            "dataType": "string",
            "sourceColumn": "GRUPO PROVEEDOR"
          },
          {
            "name": "PROVEEDOR RAPPEL",
            "dataType": "string",
            "sourceColumn": "PROVEEDOR RAPPEL"
          },
          {
            "name": "% PROVEEDOR RAPPEL",
            "dataType": "double",
            "sourceColumn": "% PROVEEDOR RAPPEL",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source=#\"Folder/\\\\axinfsusrv2\\compartes\\Compartes1\\PBIMapaRecursosGPS\\TABULAR\",",
                "    #\"Filas filtradas\" = Table.SelectRows(Source, each ([Name] = \"AGRUPACIONPROVEEDORES.xlsx\")),",
                "    #\"Archivos ocultos filtrados1\" = Table.SelectRows(#\"Filas filtradas\", each [Attributes]?[Hidden]? <> true),",
                "    #\"Invocar función personalizada1\" = Table.AddColumn(#\"Archivos ocultos filtrados1\", \"Transformar archivo\", each #\"Transformar archivo\"([Content])),",
                "    #\"Columnas con nombre cambiado1\" = Table.RenameColumns(#\"Invocar función personalizada1\", {\"Name\", \"Source.Name\"}),",
                "    #\"Otras columnas quitadas1\" = Table.SelectColumns(#\"Columnas con nombre cambiado1\", {\"Source.Name\", \"Transformar archivo\"}),",
                "    #\"Columna de tabla expandida1\" = Table.ExpandTableColumn(#\"Otras columnas quitadas1\", \"Transformar archivo\", Table.ColumnNames(#\"Transformar archivo\"(#\"Archivo de ejemplo\"))),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columna de tabla expandida1\",{{\"Source.Name\", type text}, {\"ID PROVEEDOR\", Int64.Type}, {\"NOMBRE PROVEEDOR\", type text}, {\"GRUPO PROVEEDOR\", type text}}),",
                "    #\"Columnas quitadas\" = Table.RemoveColumns(#\"Tipo cambiado\",{\"Source.Name\"}),",
                "    #\"Tipo cambiado1\" = Table.TransformColumnTypes(#\"Columnas quitadas\",{{\"PROVEEDOR RAPPEL\", type text}, {\"% PROVEEDOR RAPPEL\", Percentage.Type}})",
                "in",
                "    #\"Tipo cambiado1\""
              ]
            }
          }
        ]
      },
      {
        "name": "AUXESTIMADOCIERRE",
        "isHidden": true,
        "columns": [
          {
            "name": "BUDGET CODE",
            "dataType": "string",
            "sourceColumn": "BUDGET CODE"
          },
          {
            "name": "PURCHASE ORDER NUMBER",
            "dataType": "int64",
            "sourceColumn": "PURCHASE ORDER NUMBER"
          },
          {
            "name": "Suma de TOTAL COST",
            "dataType": "double",
            "sourceColumn": "Suma de TOTAL COST",
            "summarizeBy": "sum"
          },
          {
            "type": "calculated",
            "name": "totalProy",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(SUM(AUXESTIMADOCIERRE[Suma de TOTAL COST]),ALLEXCEPT(AUXESTIMADOCIERRE,AUXESTIMADOCIERRE[BUDGET CODE]))"
          },
          {
            "name": "Suma de TOTAL COST EJERCICIO",
            "dataType": "double",
            "sourceColumn": "Suma de TOTAL COST EJERCICIO"
          },
          {
            "name": "EJERCICIO",
            "dataType": "int64",
            "sourceColumn": "EJERCICIO"
          },
          {
            "name": "CONTROL",
            "dataType": "string",
            "sourceColumn": "CONTROL"
          },
          {
            "type": "calculated",
            "name": "TotalProyEjercicio",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(SUM(AUXESTIMADOCIERRE[Suma de TOTAL COST EJERCICIO]),ALLEXCEPT(AUXESTIMADOCIERRE,AUXESTIMADOCIERRE[BUDGET CODE]))"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source=#\"Folder/\\\\axinfsusrv2\\compartes\\Compartes1\\PBIMapaRecursosGPS\\TABULAR\",",
                "    #\"Filas filtradas\" = Table.SelectRows(Source, each ([Name] = \"EstimadoCierre.xlsx\")),",
                "    #\"Archivos ocultos filtrados1\" = Table.SelectRows(#\"Filas filtradas\", each [Attributes]?[Hidden]? <> true),",
                "    #\"Invocar función personalizada1\" = Table.AddColumn(#\"Archivos ocultos filtrados1\", \"Transformar archivo (2)\", each #\"Transformar archivo (2)\"([Content])),",
                "    #\"Columnas con nombre cambiado1\" = Table.RenameColumns(#\"Invocar función personalizada1\", {\"Name\", \"Source.Name\"}),",
                "    #\"Otras columnas quitadas1\" = Table.SelectColumns(#\"Columnas con nombre cambiado1\", {\"Source.Name\", \"Transformar archivo (2)\"}),",
                "    #\"Columna de tabla expandida1\" = Table.ExpandTableColumn(#\"Otras columnas quitadas1\", \"Transformar archivo (2)\", Table.ColumnNames(#\"Transformar archivo (2)\"(#\"Archivo de ejemplo (2)\"))),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columna de tabla expandida1\",{{\"Source.Name\", type text}, {\"BUDGET CODE\", type text}, {\"PURCHASE ORDER NUMBER\", Int64.Type}, {\"Suma de TOTAL COST\", type number}}),",
                "    #\"Columnas quitadas\" = Table.RemoveColumns(#\"Tipo cambiado\",{\"Source.Name\"}),",
                "    #\"Filas filtradas1\" = Table.SelectRows(#\"Columnas quitadas\", each true),",
                "    #\"Tipo cambiado1\" = Table.TransformColumnTypes(#\"Filas filtradas1\",{{\"Suma de TOTAL COST EJERCICIO\", type number}}),",
                "    Redondeado = Table.TransformColumns(#\"Tipo cambiado1\",{{\"Suma de TOTAL COST EJERCICIO\", each Number.Round(_, 2), type number}}),",
                "    #\"Tipo cambiado2\" = Table.TransformColumnTypes(Redondeado,{{\"EJERCICIO\", Int64.Type}})",
                "in",
                "    #\"Tipo cambiado2\""
              ]
            }
          }
        ]
      },
      {
        "name": "AUX_PROVISION_FACTURA",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_PREVISION_FACTURA",
            "dataType": "int64",
            "sourceColumn": "ID_PREVISION_FACTURA"
          },
          {
            "name": "PERFIL_RECURSO",
            "dataType": "string",
            "sourceColumn": "PERFIL_RECURSO"
          },
          {
            "name": "ID_OT",
            "dataType": "int64",
            "sourceColumn": "ID_OT"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
                "    tabla = Value.NativeQuery(Source, ",
                "    \"",
                "SELECT id_prevision_factura,perfil_recurso, ubicacion_recurso ID_OT",
                "FROM contrato.prevision_factura\"),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(tabla,{{\"ID_OT\", Int64.Type}}),",
                "    #\"Errores reemplazados\" = Table.ReplaceErrorValues(#\"Tipo cambiado\", {{\"ID_OT\", null}}),",
                "    #\"Filas filtradas\" = Table.SelectRows(#\"Errores reemplazados\", each true),",
                "    #\"Valor reemplazado\" = Table.ReplaceValue(#\"Filas filtradas\",\"TEMPE\",\"TEMPE OUTLET\",Replacer.ReplaceText,{\"PERFIL_RECURSO\"}),",
                "    #\"Texto en mayúsculas\" = Table.TransformColumns(#\"Valor reemplazado\",{{\"PERFIL_RECURSO\", Text.Upper, type text}}),",
                "    #\"Texto recortado\" = Table.TransformColumns(#\"Texto en mayúsculas\",{{\"PERFIL_RECURSO\", Text.Trim, type text}}),",
                "    #\"Filas filtradas1\" = Table.SelectRows(#\"Texto recortado\", each true)",
                "in",
                "    #\"Filas filtradas1\""
              ]
            }
          }
        ]
      },
      {
        "name": "Pedido Fecha Recepcion",
        "columns": [
          {
            "name": "ID_LINEA_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "isKey": true,
            "sourceColumn": "ID_LINEA_PEDIDO",
            "summarizeBy": "none"
          },
          {
            "name": "Fecha Recepcion",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_RECEPCION",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"DECLARE GLOBAL TEMPORARY TABLE session.T1",
                "(ID_RECEPCION BIGINT,FECHA_HORA_RECEPCION TIMESTAMP)ON COMMIT PRESERVE ROWS not logged with replace;",
                "INSERT INTO session.T1",
                "(SELECT  ID_RECEPCION,FECHA_HORA_RECEPCION",
                "FROM AJENOS.RECEPCION R  ",
                " WHERE (r.fecha_hora_recepcion) >= current_timestamp -2 years",
                "with ur);",
                "DECLARE GLOBAL TEMPORARY TABLE session.T2",
                "( ID_ALBARAN_LINEA BIGINT,",
                "FECHA_RECEPCION TIMESTAMP",
                ")",
                "ON COMMIT PRESERVE ROWS not logged with replace;",
                "INSERT INTO session.T2(SELECT ALR.ID_ALBARAN_LINEA, MIN (R.FECHA_HORA_RECEPCION) AS FECHA_RECEPCION",
                "            FROM session.T1 R",
                "                 INNER JOIN AJENOS.ALBARAN_LINEA_RECEPCION ALR",
                "                    ON R.ID_RECEPCION = ALR.ID_RECEPCION",
                "GROUP BY ALR.ID_ALBARAN_LINEA WITH UR);",
                "SELECT PL.ID_PEDIDO_LINEA AS ID_LINEA_PEDIDO, MIN (REX.FECHA_RECEPCION) FECHA_RECEPCION",
                "      FROM AJENOS.ALBARAN_LINEA AL",
                "           INNER JOIN session.T2 REX",
                "              ON (AL.ID_ALBARAN_LINEA = REX.ID_ALBARAN_LINEA)",
                "           INNER JOIN AJENOS.PEDIDO_LINEA PL",
                "              ON (AL.ID_PEDIDO_LINEA = PL.ID_PEDIDO_LINEA)",
                "           INNER JOIN AJENOS.PEDIDO P ON (PL.ID_PEDIDO = P.ID_PEDIDO)",
                "      WHERE ID_DEPARTAMENTO_EMPRESA_GRUPO IN (24,",
                "                                              903,",
                "                                              801,",
                "                                              67,42, 942, 957, 1057, 113, 659, 110, 661, 643, 985, 1731, 506, 1823)",
                "      GROUP BY PL.ID_PEDIDO_LINEA",
                "      WITH UR\"),",
                "    #\"Fecha extraída\" = Table.TransformColumns(Origen,{{\"FECHA_RECEPCION\", DateTime.Date, type date}})",
                "in",
                "    #\"Fecha extraída\""
              ]
            }
          }
        ]
      },
      {
        "name": "AUXHASTAGPRODEQUIP",
        "isHidden": true,
        "columns": [
          {
            "name": "BUDGET CODE",
            "dataType": "string",
            "sourceColumn": "BUDGET CODE"
          },
          {
            "name": "HASTAG",
            "dataType": "string",
            "sourceColumn": "HASTAG"
          },
          {
            "name": "PRODUCTO",
            "dataType": "string",
            "sourceColumn": "PRODUCTO"
          },
          {
            "name": "EQUIPO",
            "dataType": "string",
            "sourceColumn": "EQUIPO"
          },
          {
            "name": "CONTROL (ID EQUIPO)",
            "dataType": "string",
            "sourceColumn": "CONTROL (ID EQUIPO)"
          },
          {
            "name": "DESCRIPTIVO BUDGET CODE",
            "dataType": "string",
            "sourceColumn": "DESCRIPTIVO BUDGET CODE"
          },
          {
            "name": "TIPO REPARTO EJECUCIÓN",
            "dataType": "string",
            "sourceColumn": "TIPO REPARTO EJECUCIÓN"
          },
          {
            "name": "TIPO REPARTO COMENTARIO",
            "dataType": "string",
            "sourceColumn": "TIPO REPARTO COMENTARIO"
          },
          {
            "name": "COMENTARIO SEGUIMIENTO PRESUPUESTO",
            "dataType": "string",
            "sourceColumn": "COMENTARIO SEGUIMIENTO PRESUPUESTO"
          },
          {
            "name": "FICHA PRESUPUESTO",
            "dataType": "string",
            "sourceColumn": "FICHA PRESUPUESTO"
          },
          {
            "name": "EJERCICIO",
            "dataType": "string",
            "sourceColumn": "EJERCICIO"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source=#\"Folder/\\\\axinfsusrv2\\compartes\\Compartes1\\PBIMapaRecursosGPS\\TABULAR\",",
                "    #\"Filas filtradas\" = Table.SelectRows(Source, each ([Name] = \"PROYECTO PRESUPUESTARIO EQUIPO PRODUCTO HASTAG.xlsx\")),",
                "    #\"Archivos ocultos filtrados1\" = Table.SelectRows(#\"Filas filtradas\", each [Attributes]?[Hidden]? <> true),",
                "    #\"Invocar función personalizada1\" = Table.AddColumn(#\"Archivos ocultos filtrados1\", \"Transformar archivo (3)\", each #\"Transformar archivo (3)\"([Content])),",
                "    #\"Columnas con nombre cambiado1\" = Table.RenameColumns(#\"Invocar función personalizada1\", {\"Name\", \"Source.Name\"}),",
                "    #\"Otras columnas quitadas1\" = Table.SelectColumns(#\"Columnas con nombre cambiado1\", {\"Source.Name\", \"Transformar archivo (3)\"}),",
                "    #\"Columna de tabla expandida1\" = Table.ExpandTableColumn(#\"Otras columnas quitadas1\", \"Transformar archivo (3)\", Table.ColumnNames(#\"Transformar archivo (3)\"(#\"Archivo de ejemplo (3)\"))),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columna de tabla expandida1\",{{\"Source.Name\", type text}, {\"BUDGET CODE\", type text}, {\"EQUIPO\", type any}, {\"HASTAG\", type text}, {\"PRODUCTO\", type any}}),",
                "    #\"Columnas quitadas\" = Table.RemoveColumns(#\"Tipo cambiado\",{\"Source.Name\"})",
                "in",
                "    #\"Columnas quitadas\""
              ]
            }
          }
        ]
      },
      {
        "name": "AUXPEDIDOHASTAGEQUIPPRO",
        "isHidden": true,
        "columns": [
          {
            "name": "PEDIDO",
            "dataType": "int64",
            "sourceColumn": "PEDIDO"
          },
          {
            "name": "EQUIPO",
            "dataType": "string",
            "sourceColumn": "EQUIPO"
          },
          {
            "name": "HASTAG",
            "dataType": "string",
            "sourceColumn": "HASTAG"
          },
          {
            "name": "PRODUCTO",
            "dataType": "string",
            "sourceColumn": "PRODUCTO"
          },
          {
            "name": "FABRICANTE",
            "dataType": "string",
            "sourceColumn": "FABRICANTE"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source=#\"Folder/\\\\axinfsusrv2\\compartes\\Compartes1\\PBIMapaRecursosGPS\\TABULAR\",",
                "    #\"Filas filtradas\" = Table.SelectRows(Source, each ([Name] = \"PEDIDO EQUIPO PRODUCTO HASTAG.xlsx\") and ([Folder Path] = \"\\\\axinfsusrv2\\compartes\\Compartes1\\PBIMapaRecursosGPS\\TABULAR\\\")),",
                "    #\"Archivos ocultos filtrados1\" = Table.SelectRows(#\"Filas filtradas\", each [Attributes]?[Hidden]? <> true),",
                "    #\"Invocar función personalizada1\" = Table.AddColumn(#\"Archivos ocultos filtrados1\", \"Transformar archivo (4)\", each #\"Transformar archivo (4)\"([Content])),",
                "    #\"Columnas con nombre cambiado1\" = Table.RenameColumns(#\"Invocar función personalizada1\", {\"Name\", \"Source.Name\"}),",
                "    #\"Otras columnas quitadas1\" = Table.SelectColumns(#\"Columnas con nombre cambiado1\", {\"Source.Name\", \"Transformar archivo (4)\"}),",
                "    #\"Columna de tabla expandida1\" = Table.ExpandTableColumn(#\"Otras columnas quitadas1\", \"Transformar archivo (4)\", Table.ColumnNames(#\"Transformar archivo (4)\"(#\"Archivo de ejemplo (4)\"))),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columna de tabla expandida1\",{{\"Source.Name\", type text}, {\"PEDIDO\", Int64.Type}, {\"EQUIPO\", type text}, {\"HASTAG\", type text}, {\"PRODUCTO\", type text}}),",
                "    #\"Columnas quitadas\" = Table.RemoveColumns(#\"Tipo cambiado\",{\"Source.Name\"}),",
                "    #\"Duplicados quitados\" = Table.Distinct(#\"Columnas quitadas\")",
                "in",
                "    #\"Duplicados quitados\""
              ]
            }
          }
        ]
      },
      {
        "name": "AUXPORCENTAJEACTIVACIONSIS",
        "isHidden": true,
        "columns": [
          {
            "name": "BUDGET COD",
            "dataType": "string",
            "sourceColumn": "BUDGET COD"
          },
          {
            "name": "EJERCICIO",
            "dataType": "int64",
            "sourceColumn": "EJERCICIO"
          },
          {
            "name": "PORCENTAJE ACTIVACIÓN",
            "dataType": "double",
            "sourceColumn": "PORCENTAJE ACTIVACIÓN"
          },
          {
            "name": "FECHA",
            "dataType": "dateTime",
            "sourceColumn": "FECHA"
          },
          {
            "name": "ACTIVO",
            "dataType": "string",
            "sourceColumn": "ACTIVO"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source=#\"Folder/\\\\axinfsusrv2\\compartes\\Compartes1\\PBIMapaRecursosGPS\\TABULAR\",",
                "    #\"Filas filtradas\" = Table.SelectRows(Source, each ([Name] = \"PROYECTO PRESUPUESTARIO PORCENTAJE ACTIVACION.xlsx\")),",
                "    #\"\\\\axinfsusrv2\\compartes\\Compartes1\\PBIMapaRecursosGPS\\TABULAR\\_PROYECTO PRESUPUESTARIO PORCENTAJE ACTIVACION xlsx\" = #\"Filas filtradas\"{[#\"Folder Path\"=\"\\\\axinfsusrv2\\compartes\\Compartes1\\PBIMapaRecursosGPS\\TABULAR\\\",Name=\"PROYECTO PRESUPUESTARIO PORCENTAJE ACTIVACION.xlsx\"]}[Content],",
                "    #\"Excel importado\" = Excel.Workbook(#\"\\\\axinfsusrv2\\compartes\\Compartes1\\PBIMapaRecursosGPS\\TABULAR\\_PROYECTO PRESUPUESTARIO PORCENTAJE ACTIVACION xlsx\"),",
                "    Hoja1_Sheet = #\"Excel importado\"{[Item=\"Hoja1\",Kind=\"Sheet\"]}[Data],",
                "    #\"Encabezados promovidos\" = Table.PromoteHeaders(Hoja1_Sheet, [PromoteAllScalars=true]),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Encabezados promovidos\",{{\"BUDGET COD\", type text}, {\"EJERCICIO\", Int64.Type}, {\"PORCENTAJE ACTIVACIÓN\", type number}, {\"FECHA\", type date}, {\"ACTIVO\", type text}})",
                "in",
                "    #\"Tipo cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "AUXPROYECTOTIPOCUENTA",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_PROY_CONTABLE",
            "dataType": "int64",
            "sourceColumn": "ID_PROY_CONTABLE"
          },
          {
            "name": "DESCRIPCION",
            "dataType": "string",
            "sourceColumn": "DESCRIPCION"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "     TIPO= Value.NativeQuery(Source, ",
                "    \"Select distinct id_proy_contable, ",
                "descripcion",
                "FROM",
                "(",
                "Select ",
                "id_proy_contable, ",
                "tp.descripcion, ",
                "importe,",
                "Row_number() over (partition by id_proy_contable order by importe desc) Orden",
                "FROM(",
                "select id_proy_contable, ",
                "id_tipo_presup , ",
                "sum((importe_presup_euro)/22 - 87419822676.37) importe",
                "FROM DMFINANCIERO.MIC_FACT_PRESUP_COMPRA_SIST",
                "where (id_proy_contable,id_ejercicio) in (select id_proy_contable, max(id_ejercicio) FROM DMFINANCIERO.MIC_FACT_PRESUP_COMPRA_SIST ",
                "WHERE ID_EJERCICIO<= CASE WHEN MONTH(sysdate)=1 OR (MONTH(SYSDATE)=2 AND DAY(SYSDATE)<15) THEN YEAR(SYSDATE)-1 ELSE YEAR(SYSDATE) END",
                "group by id_proy_contable) ",
                "group by id_proy_contable,",
                "id_tipo_presup) p",
                "JOIN dmfinanciero.dim_tipo_presup tp",
                "ON (p.id_tipo_presup=tp.id_tipo_presup))",
                "WHERE ORDEN=1",
                "\")",
                "   in",
                "    TIPO"
              ]
            }
          }
        ]
      },
      {
        "name": "Pedido Histórico",
        "columns": [
          {
            "name": "ID_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PEDIDO",
            "formatString": "0"
          },
          {
            "name": "Importe Historico",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "IMPORTE"
          },
          {
            "name": "Fecha Inicio",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_INI",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Fecha Fin",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_FIN",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "ID_PEDIDO_DATA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_PEDIDO], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Pedido Histórico'[ID_PEDIDO]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "ID_FECHA_PRESUPUESTARIA",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_FECHA_PRESUPUESTARIA], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Pedido Histórico'[ID_PEDIDO]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "ID_ESTADO_PEDIDO",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_ESTADO_PEDIDO], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Pedido Histórico'[ID_PEDIDO]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "ID_PROYECTO_CONTABLE",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_PROY_CONTABLE], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Pedido Histórico'[ID_PEDIDO]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "ID_EMPRESA_DESTINO",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_EMP_DEST], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Pedido Histórico'[ID_PEDIDO]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "ID_EMPRESA_PROVEEDOR",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_EMP_PROVEEDOR], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Pedido Histórico'[ID_PEDIDO]",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "ID_UNIDAD_COMPRA",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "CALCULATE (",
              "    FIRSTNONBLANK ( 'Pedido Compra Hecho'[ID_UNIDAD_COMPRA], TRUE () ),",
              "    FILTER (",
              "        'Pedido Compra Hecho',       'Pedido Compra Hecho'[COD_PEDIDO] = 'Pedido Histórico'[ID_PEDIDO]",
              "    )",
              ")"
            ]
          },
          {
            "name": "IMPORTE_SIN_ACUMULAR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "IMPORTE_SIN_ACUMULAR"
          },
          {
            "name": "Orden",
            "dataType": "int64",
            "sourceColumn": "ORDEN",
            "formatString": "0",
            "summarizeBy": "none"
          },
          {
            "name": "Orden Normal",
            "dataType": "int64",
            "sourceColumn": "ORDEN_NORMAL"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
                "    tabla = Value.NativeQuery(Source, ",
                "    \"",
                "SELECT ID_PEDIDO,",
                "IMPORTE,",
                "FECHA_INI,",
                "FECHA_FIN,",
                "IMPORTE_SIN_ACUMULAR,",
                "DENSE_RANK() OVER ( partition by id_pedido ORDER BY id_pedido,MONTH(fecha_ini)) Orden,",
                "ROW_NUMBER() over (partition by id_pedido order by id_pedido,TRUNC(FECHA_INI)) Orden_Normal",
                "FROM(",
                "SELECT P.ID_PEDIDO,",
                "SUM(PLH.IMPORTE_UNITARIO_PEDIDO) IMPORTE,",
                "TRUNC(FECHA_HORA_INICIO_VALIDEZ) FECHA_INI,",
                "TRUNC(FECHA_HORA_FIN_VALIDEZ) FECHA_FIN,",
                "SUM(PLH.IMPORTE_UNITARIO_PEDIDO) - coalesce(lag(SUM(PLH.IMPORTE_UNITARIO_PEDIDO)) over (partition by p.id_pedido order by p.id_pedido,TRUNC(FECHA_HORA_INICIO_VALIDEZ)), 0) IMPORTE_SIN_ACUMULAR",
                "FROM AJENOS.PEDIDO P",
                "JOIN AJENOS.PEDIDO_LINEA PL",
                "ON (P.ID_PEDIDO=PL.ID_PEDIDO AND ID_DEPARTAMENTO_EMPRESA_GRUPO in (24,903,67,42, 801, 942, 957, 1057, 113, 659, 110, 661, 643, 985, 1731, 506, 1823) AND YEAR(P.fecha_Alta)>2019)",
                "JOIN AJENOS.PEDIDO_LINEA_HISTORICO PLH",
                "ON (PL.ID_PEDIDO_LINEA=PLH.ID_PEDIDO_LINEA)",
                "GROUP BY",
                "P.ID_PEDIDO,",
                "TRUNC(FECHA_HORA_INICIO_VALIDEZ),",
                "TRUNC(FECHA_HORA_FIN_VALIDEZ))",
                "WHERE IMPORTE_SIN_ACUMULAR<>0\"),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(tabla,{{\"FECHA_INI\", type date}, {\"FECHA_FIN\", type date}})",
                "in",
                "    #\"Tipo cambiado\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Pedido Importe Historico €",
            "expression": " calculate(sum('Pedido Histórico'[Importe Historico]))",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Importe Historico Sin Acumular €",
            "expression": " calculate(sum('Pedido Histórico'[IMPORTE_SIN_ACUMULAR]))",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          }
        ]
      },
      {
        "name": "AUXPROYECTOAMBITO",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_PROYECTO",
            "dataType": "int64",
            "sourceColumn": "ID_PROYECTO"
          },
          {
            "name": "AMBITO",
            "dataType": "string",
            "sourceColumn": "AMBITO"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "     AMBITO= Value.NativeQuery(Source, ",
                "    \"SELECT DISTINCT ",
                "a13.ID_PROYECTO_CONTABLE ID_PROYECTO,",
                "MAX(a11.AMBITO)  AMBITO",
                "FROM\tDMFINANCIERO.MIC_FACT_PRESUP_COMPRA_SIST\ta11",
                "JOIN\tDMARQUITECTURASW.DIM_PROYECTO_CONTABLE\ta13",
                "ON (a11.ID_PROY_CONTABLE = a13.ID_PROYECTO_CONTABLE)",
                "WHERE\ta11.COD_PRESUP <> 0 AND  (ID_PROY_CONTABLE,ID_EJERCICIO) IN ",
                "(SELECT ID_PROY_CONTABLE, MAX(ID_EJERCICIO)",
                "FROM DMFINANCIERO.MIC_FACT_PRESUP_COMPRA_SIST ",
                "WHERE ID_EJERCICIO <= CASE WHEN MONTH(sysdate)=1 OR (MONTH(SYSDATE)=2 AND DAY(SYSDATE)<15) THEN YEAR(SYSDATE)-1 ELSE YEAR(SYSDATE) END",
                "GROUP BY ID_PROY_CONTABLE) ",
                "GROUP BY a13.ID_PROYECTO_CONTABLE\")",
                "   in",
                "    AMBITO"
              ]
            }
          }
        ]
      },
      {
        "name": "Tipo Agregado",
        "columns": [
          {
            "name": "Tipo Agregado",
            "dataType": "string",
            "sourceColumn": "DESCRIPCION"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Origen = Aux_Categoria_Presupuesto_Tipo_Agregado,",
                "    #\"Columnas quitadas\" = Table.RemoveColumns(Origen,{\"ID_INFOR_PRESUP\"}),",
                "    #\"Duplicados quitados\" = Table.Distinct(#\"Columnas quitadas\"),",
                "    #\"Consulta anexada\" = Table.Combine({#\"Duplicados quitados\", #\"Referencia Axuliar Descripción\"}),",
                "    #\"Duplicados quitados1\" = Table.Distinct(#\"Consulta anexada\"),",
                "    #\"Filas filtradas\" = Table.SelectRows(#\"Duplicados quitados1\", each [DESCRIPCION] <> null and [DESCRIPCION] <> \"\")",
                "in",
                "    #\"Filas filtradas\""
              ]
            }
          }
        ]
      },
      {
        "name": "AUX_PROYECTOCECO",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_PROYECTO",
            "dataType": "int64",
            "sourceColumn": "ID_PROYECTO"
          },
          {
            "name": "COD_PROYECTO",
            "dataType": "string",
            "sourceColumn": "COD_PROYECTO"
          },
          {
            "name": "CECO",
            "dataType": "int64",
            "sourceColumn": "CECO"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb26fin1\",",
                "    tabla = Value.NativeQuery(Source, ",
                "    \"SELECT ",
                "DISTINCT PRO.PROJECT_ID_DB2_COD ID_PROYECTO,",
                "PRO.CODE COD_PROYECTO, ",
                "MAX(AUXILIARY_ACCOUNT_ID) CECO",
                "FROM EVGEPRGP.PROJECT_FISCAL_YEAR P",
                "JOIN EVGEPRGP.PROJECT PRO",
                "ON (P.PROJECT_ID=PRO.PROJECT_ID)",
                "JOIN EVGEPRGP.AREA_FISCAL_YEAR A",
                "ON (P.AREA_FISCAL_YEAR_ID=A.AREA_FISCAL_YEAR_ID)",
                "WHERE (P.PROJECT_ID,FISCAL_YEAR) IN (SELECT PROJECT_ID, MAX(FISCAL_YEAR) FROM ",
                "EVGEPRGP.PROJECT_FISCAL_YEAR P",
                "JOIN EVGEPRGP.AREA_FISCAL_YEAR A",
                "ON (P.AREA_FISCAL_YEAR_ID=A.AREA_FISCAL_YEAR_ID)",
                "WHERE PRO.PROJECT_ID_DB2_COD IS NOT NULL AND FISCAL_YEAR <= CASE WHEN MONTH(SYSDATE)=1 OR (MONTH(SYSDATE)=2 AND DAY(SYSDATE)<15) THEN YEAR(SYSDATE)-1 ELSE YEAR(SYSDATE) END",
                "GROUP BY PROJECT_ID)",
                "GROUP BY PRO.PROJECT_ID_DB2_COD,PRO.CODE\")",
                "in",
                "    tabla"
              ]
            }
          }
        ]
      },
      {
        "name": "AUX_AREACECO",
        "isHidden": true,
        "columns": [
          {
            "name": "AREA",
            "dataType": "string",
            "sourceColumn": "AREA"
          },
          {
            "name": "ID_AREA",
            "dataType": "int64",
            "sourceColumn": "ID_AREA"
          },
          {
            "name": "CECO",
            "dataType": "string",
            "sourceColumn": "CECO"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb26fin1\",",
                "    tabla = Value.NativeQuery(Source, ",
                "    \"SELECT ",
                "A.DESCRIPTION AREA,",
                "A.AREA_ID ID_AREA,",
                "LISTAGG(DISTINCT AUXILIARY_ACCOUNT_ID, ', ')  AS CECO",
                "FROM EVGEPRGP.AREA_FISCAL_YEAR AFY",
                "JOIN EVGEPRGP.PROJECT_FISCAL_YEAR P",
                "ON (P.AREA_FISCAL_YEAR_ID=AFY.AREA_FISCAL_YEAR_ID)",
                "JOIN EVGEPRGP.AREA A",
                "ON (AFY.AREA_ID=A.AREA_ID)",
                "WHERE (A.AREA_ID,FISCAL_YEAR) IN (SELECT AREA_ID, MAX(FISCAL_YEAR) FROM ",
                "EVGEPRGP.PROJECT_FISCAL_YEAR P",
                "JOIN EVGEPRGP.AREA_FISCAL_YEAR A",
                "ON (P.AREA_FISCAL_YEAR_ID=A.AREA_FISCAL_YEAR_ID)",
                "WHERE FISCAL_YEAR <= CASE WHEN MONTH(SYSDATE)=1 OR (MONTH(SYSDATE)=2 AND DAY(SYSDATE)<15) THEN YEAR(SYSDATE)-1 ELSE YEAR(SYSDATE) END",
                "GROUP BY AREA_ID)",
                "GROUP BY A.DESCRIPTION, A.AREA_ID\")",
                "in",
                "    tabla"
              ]
            }
          }
        ]
      },
      {
        "name": "AUXReferenciaAxuliar",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_PEDIDO_LINEA",
            "dataType": "int64",
            "sourceColumn": "ID_PEDIDO_LINEA"
          },
          {
            "name": "REFERENCIA_AUXILIAR",
            "dataType": "string",
            "sourceColumn": "REFERENCIA_AUXILIAR"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"SELECT pl.id_pedido_linea AS ID_PEDIDO_LINEA, CASE WHEN a.referencia_auxiliar='' THEN 'DESCONOCIDO' ELSE a.referencia_auxiliar END REFERENCIA_AUXILIAR",
                "FROM ajenos.pedido p",
                "JOIN ajenos.pedido_linea pl on(p.id_pedido=pl.id_pedido)",
                "LEFT JOIN ajenos.ajeno a ON (a.id_Ajeno=pl.id_Ajeno)",
                "WHERE YEAR(p.fecha_alta)>=year(sysdate)-2 AND p.id_departamento_empresa_grupo in (24,903,67,42, 801, 942, 957, 1057, 113, 659, 110, 661, 643, 985, 1731, 506, 1823)\"),",
                "    #\"Duplicados quitados\" = Table.Distinct(Origen),",
                "    #\"Valor reemplazado\" = Table.ReplaceValue(#\"Duplicados quitados\",null,\"DESCONOCIDO\",Replacer.ReplaceValue,{\"REFERENCIA_AUXILIAR\"})",
                "in",
                "    #\"Valor reemplazado\""
              ]
            }
          }
        ]
      },
      {
        "name": "AUX_CADENAREFACTURA",
        "isHidden": true,
        "columns": [
          {
            "name": "ID_PEDIDO_LINEA",
            "dataType": "int64",
            "sourceColumn": "ID_PEDIDO_LINEA"
          },
          {
            "name": "CADENA",
            "dataType": "string",
            "sourceColumn": "CADENA"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
                "    tabla = Value.NativeQuery(Source, ",
                "    \"",
                "SELECT PL.ID_PEDIDO_LINEA, ",
                "CASE ",
                "WHEN UPPER(C2.NOMBRE)='LEFTIES' THEN 'LEFTIES'",
                "WHEN UPPER(C2.NOMBRE)='KIDDY''S CLASS' THEN 'KIDDY''S CLASS'",
                "WHEN UPPER(C2.NOMBRE)='TEMPE OUTLET' THEN  UPPER(C2.NOMBRE)",
                "ELSE UPPER(C.DESCRIPCION) END CADENA",
                "FROM AJENOS.PEDIDO P",
                "JOIN AJENOS.PEDIDO_LINEA PL",
                "ON P.ID_PEDIDO=PL.ID_PEDIDO",
                "JOIN AJENOS.LOCALIZACION_COMPRA LC",
                "ON LC.ID_LOCALIZACION_COMPRA = PL.ID_LOCALIZACION_COMPRA",
                "JOIN MAESTROS.GRUPO_CADENA C",
                "ON LC.ID_GRUPO_CADENA=C.ID_GRUPO_CADENA",
                "JOIN MAESTROS.CADENA C2",
                "ON LC.ID_CADENA=C2.ID_CADENA",
                "WHERE P.ID_DEPARTAMENTO_EMPRESA_GRUPO IN (24,903,67,42, 801, 942, 957, 1057, 113, 659, 110, 661, 643, 985, 1731, 506, 1823)",
                "AND YEAR(P.FECHA_ALTA)>year(sysdate)-2\")",
                "in",
                "    tabla"
              ]
            }
          }
        ]
      },
      {
        "name": "Tipo Importe",
        "columns": [
          {
            "name": "ID Tipo Importe",
            "dataType": "int64",
            "isUnique": true,
            "sourceColumn": "ID_TIPO_IMPORTE"
          },
          {
            "name": "Tipo Importe",
            "dataType": "string",
            "sourceColumn": "Tipo Importe",
            "sortByColumn": "ID Tipo Importe"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "     DIM_TIPO_IMPORTE = Value.NativeQuery(Source, ",
                "    \"",
                "SELECT  1 ID_TIPO_IMPORTE, 'Presupuesto' TIPO_IMPORTE FROM DUAL",
                "UNION",
                "SELECT  2 ID_TIPO_IMPORTE, 'Pedido' TIPO_IMPORTE FROM DUAL",
                "UNION ",
                "SELECT 3 ID_TIPO_IMPORTE, 'OT' TIPO_IMPORTE FROM DUAL",
                "UNION ",
                "SELECT 4 ID_TIPO_IMPORTE, 'Incurrido' TIPO_IMPORTE FROM DUAL",
                "\"),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(DIM_TIPO_IMPORTE,{{\"TIPO_IMPORTE\", \"Tipo Importe\"}}),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columnas con nombre cambiado\",{{\"ID_TIPO_IMPORTE\", Int64.Type}})",
                "   in",
                "    #\"Tipo cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Tipo Presupuesto",
        "columns": [
          {
            "name": "ID Tipo Presupuesto",
            "dataType": "int64",
            "sourceColumn": "ID Tipo Presupuesto"
          },
          {
            "name": "Tipo Presupuesto",
            "dataType": "string",
            "sourceColumn": "Tipo Presupuesto",
            "sortByColumn": "ID Tipo Presupuesto"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "     DIM_TIPO_PRESUPUESTO = Value.NativeQuery(Source, ",
                "    \"",
                "SELECT  0 ID_TIPO_PRESUPUESTO, 'Ppto. FY' TIPO_PRESUPUESTO FROM DUAL",
                "UNION",
                "SELECT  1 ID_TIPO_PRESUPUESTO, 'Ppto. OGD + Ppto. A' TIPO_PRESUPUESTO FROM DUAL",
                "UNION",
                "SELECT  2 ID_TIPO_PRESUPUESTO, 'Nuevo Proyecto No Presupuestado' TIPO_PRESUPUESTO FROM DUAL",
                "UNION",
                "SELECT  3 ID_TIPO_PRESUPUESTO, 'Estimado Cierre' TIPO_PRESUPUESTO FROM DUAL",
                "UNION",
                "SELECT  4 ID_TIPO_PRESUPUESTO, 'Pedido' TIPO_PRESUPUESTO FROM DUAL",
                "UNION ",
                "SELECT 5 ID_TIPO_PRESUPUESTO, 'OT' TIPO_PRESUPUESTO FROM DUAL",
                "UNION ",
                "SELECT 6 ID_TIPO_PRESUPUESTO, 'Incurrido' TIPO_PRESUPUESTO FROM DUAL",
                "\"),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(DIM_TIPO_PRESUPUESTO,{{\"ID_TIPO_PRESUPUESTO\", Int64.Type}}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"ID_TIPO_PRESUPUESTO\", \"ID Tipo Presupuesto\"}, {\"TIPO_PRESUPUESTO\", \"Tipo Presupuesto\"}})",
                "in",
                "    #\"Columnas con nombre cambiado\""
              ]
            }
          }
        ]
      },
      {
        "name": "Albarán Hecho",
        "columns": [
          {
            "name": "ID_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PEDIDO"
          },
          {
            "name": "ID_UNIDAD_COMPRA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_UNIDAD_COMPRA"
          },
          {
            "name": "ID_AJENO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_AJENO"
          },
          {
            "name": "ID_TIPO_GESTOR",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_TIPO_GESTOR"
          },
          {
            "name": "ID_DIVISA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_DIVISA"
          },
          {
            "name": "ID_ESTADO_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_ESTADO_PEDIDO"
          },
          {
            "name": "ID_ESTADO_LINEA_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_ESTADO_LINEA_PEDIDO"
          },
          {
            "name": "ID_CUENTA_PRINC",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_PRINC"
          },
          {
            "name": "ID_CUENTA_EMP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_EMP"
          },
          {
            "name": "ID_CODIGO_PRESUPUESTARIO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CODIGO_PRESUPUESTARIO"
          },
          {
            "name": "ID_PROY_CONTABLE",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_PROY_CONTABLE"
          },
          {
            "name": "UNIDADES",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "UNIDADES"
          },
          {
            "name": "UNIDADES_RECIBIDAS",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "UNIDADES_RECIBIDAS"
          },
          {
            "name": "ID_EMP_DEST",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMP_DEST"
          },
          {
            "name": "ID_CENTRO_DISTRIBUCION",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CENTRO_DISTRIBUCION"
          },
          {
            "name": "ID_EMP_PROVEEDOR",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_EMP_PROVEEDOR"
          },
          {
            "name": "CAMBIO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CAMBIO"
          },
          {
            "name": "ID_CUENTA_GRP",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_CUENTA_GRP"
          },
          {
            "name": "ID_FECHA_PEDIDO",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "ID_FECHA_PEDIDO"
          },
          {
            "name": "Fecha Hasta",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Fecha Hasta"
          },
          {
            "name": "Fecha Desde",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Fecha Desde"
          },
          {
            "name": "ID_FECHA_PRESUPUESTARIA",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "ID_FECHA_PRESUPUESTARIA"
          },
          {
            "name": "COD_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COD_PEDIDO"
          },
          {
            "name": "COD_LINEA_PEDIDO",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COD_LINEA_PEDIDO"
          },
          {
            "name": "Importe Pedido Euros",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Importe Pedido Euros"
          },
          {
            "name": "Importe Recepcionado Euros",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Importe Recepcionado Euros"
          },
          {
            "name": "Tipo Agregado",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Tipo Agregado"
          },
          {
            "name": "Fecha Recepción",
            "dataType": "dateTime",
            "sourceColumn": "FECHA_RECEPCION",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "PRECIO_UNITARIO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "PRECIO_UNITARIO"
          },
          {
            "name": "UNIDADES_RECEPCIONADAS",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "UNIDADES_RECEPCIONADAS"
          },
          {
            "name": "ID_ALBARAN",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_ALBARAN"
          },
          {
            "name": "ID_ALBARAN_LINEA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_ALBARAN_LINEA"
          },
          {
            "name": "ID_LOCALIZACION_COMPRA",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID_LOCALIZACION_COMPRA"
          },
          {
            "type": "calculated",
            "name": "ID_TIPO_IMPORTE",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "2"
          },
          {
            "type": "calculated",
            "name": "ID_TIPO_PRESUPUESTO",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "4"
          },
          {
            "type": "calculated",
            "name": "ID_CAMBIO",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "'Albarán Hecho'[ID_DIVISA]&'Albarán Hecho'[ID_FECHA_PRESUPUESTARIA]"
          },
          {
            "name": "IMPORTE_PEDIDO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "IMPORTE_PEDIDO"
          },
          {
            "name": "IMPORTE_RECEPCIONADO",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "IMPORTE_RECEPCIONADO"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Origen = Mic_Fact_Pedido_Compra_Sist,",
                "    #\"Otras columnas quitadas\" = Table.SelectColumns(Origen,{\"ID_PEDIDO\", \"ID_UNIDAD_COMPRA\", \"ID_AJENO\", \"ID_TIPO_GESTOR\", \"ID_DIVISA\", \"ID_ESTADO_PEDIDO\", \"ID_ESTADO_LINEA_PEDIDO\", \"ID_CUENTA_PRINC\", \"ID_CUENTA_EMP\", \"ID_CODIGO_PRESUPUESTARIO\", \"ID_PROY_CONTABLE\", \"UNIDADES\", \"UNIDADES_RECIBIDAS\", \"IMPORTE_PEDIDO\", \"IMPORTE_RECEPCIONADO\", \"ID_EMP_DEST\", \"ID_CENTRO_DISTRIBUCION\", \"ID_EMP_PROVEEDOR\", \"CAMBIO\", \"ID_CUENTA_GRP\", \"ID_FECHA_PEDIDO\", \"FECHA_HASTA\", \"FECHA_DESDE\", \"ID_FECHA_PRESUPUESTARIA\", \"COD_PEDIDO\", \"COD_LINEA_PEDIDO\", \"ID_LOCALIZACION_COMPRA\", \"Importe Pedido Euros\", \"Importe Recepcionado Euros\"}),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Otras columnas quitadas\",{{\"FECHA_DESDE\", \"Fecha Desde\"}, {\"FECHA_HASTA\", \"Fecha Hasta\"}}),  ",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columnas con nombre cambiado\",{{\"ID_PEDIDO\", Int64.Type}, {\"ID_DIVISA\", Int64.Type}, {\"ID_ESTADO_PEDIDO\", Int64.Type}, {\"ID_ESTADO_LINEA_PEDIDO\", Int64.Type}, {\"ID_CUENTA_PRINC\", Int64.Type}, {\"ID_CUENTA_EMP\", Int64.Type}, {\"ID_CUENTA_GRP\", Int64.Type}, {\"ID_UNIDAD_COMPRA\", Int64.Type}, {\"ID_AJENO\", Int64.Type}, {\"ID_TIPO_GESTOR\", Int64.Type}, {\"ID_CENTRO_DISTRIBUCION\", Int64.Type}, {\"ID_PROY_CONTABLE\", Int64.Type}, {\"ID_EMP_PROVEEDOR\", Int64.Type}, {\"ID_EMP_DEST\", Int64.Type}, {\"ID_CODIGO_PRESUPUESTARIO\", Int64.Type}, {\"Importe Pedido Euros\", Currency.Type}, {\"Importe Recepcionado Euros\", Currency.Type},{\"COD_PEDIDO\", Int64.Type}, {\"ID_FECHA_PEDIDO\", type date}}),",
                "    #\"Consultas combinadas\" = Table.NestedJoin(#\"Tipo cambiado\", {\"COD_LINEA_PEDIDO\"}, #\"Referencia Axuliar\", {\"ID_PEDIDO_LINEA\"}, \"Referencia Axuliar\", JoinKind.LeftOuter),",
                "    #\"Se expandió Referencia Axuliar\" = Table.ExpandTableColumn(#\"Consultas combinadas\", \"Referencia Axuliar\", {\"REFERENCIA_AUXILIAR\"}, {\"Tipo Agregado\"}),",
                "    #\"Valor reemplazado\" = Table.ReplaceValue(#\"Se expandió Referencia Axuliar\",null,\"DESCONOCIDO\",Replacer.ReplaceValue,{\"Tipo Agregado\"}),",
                "    Redondeado = Table.TransformColumns(#\"Valor reemplazado\",{{\"Importe Pedido Euros\", each Number.Round(_, 4), Currency.Type}}),",
                "    Redondeado1 = Table.TransformColumns(Redondeado,{{\"Importe Recepcionado Euros\", each Number.Round(_, 4), Currency.Type}}),",
                "    #\"Consultas combinadas1\" = Table.NestedJoin(Redondeado1, {\"COD_LINEA_PEDIDO\"}, #\"Albarán Hecho particion\", {\"ID_LINEA_PEDIDO\"}, \"Albarán Hecho particion\", JoinKind.LeftOuter),",
                "    #\"Se expandió Albarán Hecho particion\" = Table.ExpandTableColumn(#\"Consultas combinadas1\", \"Albarán Hecho particion\", {\"FECHA_RECEPCION\", \"PRECIO_UNITARIO\", \"UNIDADES_RECIBIDAS\", \"ID_ALBARAN\", \"ID_ALBARAN_LINEA\"}, {\"Albarán Hecho particion.FECHA_RECEPCION\", \"Albarán Hecho particion.PRECIO_UNITARIO\", \"Albarán Hecho particion.UNIDADES_RECIBIDAS\", \"Albarán Hecho particion.ID_ALBARAN\", \"Albarán Hecho particion.ID_ALBARAN_LINEA\"}),",
                "    #\"Columnas con nombre cambiado1\" = Table.RenameColumns(#\"Se expandió Albarán Hecho particion\",{{\"Albarán Hecho particion.FECHA_RECEPCION\", \"FECHA_RECEPCION\"}, {\"Albarán Hecho particion.PRECIO_UNITARIO\", \"PRECIO_UNITARIO\"}, {\"Albarán Hecho particion.UNIDADES_RECIBIDAS\", \"UNIDADES_RECEPCIONADAS\"}, {\"Albarán Hecho particion.ID_ALBARAN\", \"ID_ALBARAN\"}, {\"Albarán Hecho particion.ID_ALBARAN_LINEA\", \"ID_ALBARAN_LINEA\"}}),",
                "    #\"Tipo cambiado1\" = Table.TransformColumnTypes(#\"Columnas con nombre cambiado1\",{{\"ID_LOCALIZACION_COMPRA\", Int64.Type}})",
                "in",
                "    #\"Tipo cambiado1\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Pedido Albarán Recepcionado €",
            "expression": "CALCULATE( sumx('Albarán Hecho','Albarán Hecho'[PRECIO_UNITARIO]*'Albarán Hecho'[UNIDADES_RECEPCIONADAS]*'Albarán Hecho'[CAMBIO]),'Albarán Hecho'[ID_TIPO_GESTOR] = 2)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Albarán Importe €",
            "expression": " calculate(sum('Albarán Hecho'[Importe Pedido Euros]), 'Albarán Hecho'[ID_TIPO_GESTOR] = 2)",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Albarán Importe Global €",
            "expression": " calculate(sum('Albarán Hecho'[Importe Pedido Euros]))",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Albarán Recepcionado Global €",
            "expression": "CALCULATE( sumx('Albarán Hecho','Albarán Hecho'[PRECIO_UNITARIO]*'Albarán Hecho'[UNIDADES_RECEPCIONADAS]*'Albarán Hecho'[CAMBIO]))",
            "formatString": "#,0 \"€\";-#,0 \"€\";#,0 \"€\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"€ Español (España)\" Symbol=\"€\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Albarán Recepcionado Moneda Local",
            "expression": "CALCULATE( sumx('Albarán Hecho','Albarán Hecho'[PRECIO_UNITARIO]*'Albarán Hecho'[UNIDADES_RECEPCIONADAS]),'Albarán Hecho'[ID_TIPO_GESTOR] = 2)",
            "formatString": "#,0 \"\";-#,0 \"\";#,0 \"\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Albarán Importe Moneda Local",
            "expression": " calculate(sum('Albarán Hecho'[IMPORTE_PEDIDO]), 'Albarán Hecho'[ID_TIPO_GESTOR] = 2)",
            "formatString": "#,0 \"\";-#,0 \"\";#,0 \"\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Albarán Importe Global Moneda Local",
            "expression": " calculate(sum('Albarán Hecho'[IMPORTE_PEDIDO]))",
            "formatString": "#,0 \"\";-#,0 \"\";#,0 \"\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          },
          {
            "name": "Pedido Albarán Recepcionado Global Moneda Local",
            "expression": "CALCULATE( sumx('Albarán Hecho','Albarán Hecho'[PRECIO_UNITARIO]*'Albarán Hecho'[UNIDADES_RECEPCIONADAS]))",
            "formatString": "#,0 \"\";-#,0 \"\";#,0 \"\"",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"3082\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"3\" NegativePattern=\"8\" /></Format>"
              }
            ]
          }
        ]
      },
      {
        "name": "Localización Compra",
        "columns": [
          {
            "name": "ID_LOCALIZACION_COMPRA",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "ID_LOCALIZACION_COMPRA"
          },
          {
            "name": "ID Localización",
            "dataType": "int64",
            "sourceColumn": "ID Localización"
          },
          {
            "name": "Descripción Localización",
            "dataType": "string",
            "sourceColumn": "Descripción Localización"
          },
          {
            "name": "COD Tipo Localización",
            "dataType": "int64",
            "sourceColumn": "COD Tipo Localización"
          },
          {
            "name": "Descripción Tipo Localización",
            "dataType": "string",
            "sourceColumn": "Descripción Tipo Localización"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Oracle/exapre_rep\",",
                "    Origen = Value.NativeQuery(Source, ",
                "    \"SELECT ID_LOCALIZACION_COMPRA, ",
                "COD_LOCALIZACION_COMPRA ID_Localizacion,",
                "TO_CHAR(DESCRIPCION) Descripcion_Localizacion,",
                "COD_TIP_LOC_CMP, ",
                "TO_CHAR(DESCRIPCION_TIP_LOC_CMP) DESCRIPCION_TIP_LOC_CMP",
                "FROM dmfinanciero.dim_localizacion_compra",
                "UNION ALL ",
                "SELECT -1 ID_LOCALIZACION_COMPRA, ",
                "0 ID_Localizacion,",
                "'Presupuesto' Descripcion_Localización,",
                "0 COD_TIP_LOC_CMP,",
                "'Presupuesto' DESCRIPCION_TIP_LOC_CMP",
                "FROM DUAL\"),",
                "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(Origen,{{\"ID_LOCALIZACION\", \"ID Localización\"}, {\"DESCRIPCION_LOCALIZACION\", \"Descripción Localización\"}, {\"COD_TIP_LOC_CMP\", \"COD Tipo Localización\"}, {\"DESCRIPCION_TIP_LOC_CMP\", \"Descripción Tipo Localización\"}}),",
                "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columnas con nombre cambiado\",{{\"ID_LOCALIZACION_COMPRA\", Int64.Type}, {\"ID Localización\", Int64.Type}, {\"COD Tipo Localización\", Int64.Type}})",
                "in",
                "    #\"Tipo cambiado\""
              ]
            }
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "efe10b03-d363-4e27-8eff-67776923648c",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_DIVISA",
        "toTable": "Divisa",
        "toColumn": "ID_DIVISA"
      },
      {
        "name": "10c046ae-5bda-453b-b39c-d8caac1367b5",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_UNIDAD_COMPRA",
        "toTable": "Unidad Compra",
        "toColumn": "ID_UNIDAD_COMPRA"
      },
      {
        "name": "07bb4b13-eb10-4d14-a8bd-5c0aa195a430",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_FAM_AJENO",
        "toTable": "Ajeno Familia",
        "toColumn": "ID_FAM_AJENO"
      },
      {
        "name": "b9735fc5-827c-4643-88df-c99394bf7ab6",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_SUBFAM_AJENO",
        "toTable": "Ajeno Subfamilia",
        "toColumn": "ID_SUBFAM_AJENO"
      },
      {
        "name": "f1020540-a101-4edc-bb99-77958bed6eda",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_TIPO_PRESUP",
        "toTable": "Presupuesto Tipo",
        "toColumn": "ID_TIPO_PRESUP"
      },
      {
        "name": "8d354c80-f0d8-460f-83f9-eb917c56f6dc",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_EMP",
        "toTable": "Sociedad",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "4a02dc05-2573-4188-b5d1-82b8bb74d304",
        "fromTable": "Sociedad",
        "fromColumn": "ID_EMPRESA_GRUPO",
        "toTable": "Sociedad Grupo",
        "toColumn": "ID_EMPRESA_GRUPO"
      },
      {
        "name": "71c70fea-d0a1-437e-9a65-974e98f6defb",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_CUENTA_GRUPO",
        "toTable": "Cuenta Grupo",
        "toColumn": "ID_CUENTA_GRUPO"
      },
      {
        "name": "2c211c52-3160-482c-a1c0-0241e7c19f2e",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_CUENTA_EMP",
        "toTable": "Cuenta Local",
        "toColumn": "ID_CUENTA_EMPRESA"
      },
      {
        "name": "bc39db16-524f-4141-8b26-228aa0fc8141",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_CUENTA_PRINC",
        "toTable": "Cuenta Principal",
        "toColumn": "ID_CUENTA_PRINCIPAL"
      },
      {
        "name": "9b576a75-d712-4355-be00-389f91f7dd94",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_CODIGO_PRESUPUESTARIO",
        "toTable": "COP",
        "toColumn": "ID_CODIGO_PRESUPUESTARIO"
      },
      {
        "name": "0ec07310-4000-40ed-8756-b4f8dd49b0ed",
        "fromTable": "Sociedad Grupo",
        "fromColumn": "ID_CADENA",
        "toTable": "Sociedad Cadena",
        "toColumn": "ID_CADENA_AD"
      },
      {
        "name": "a0a5205d-6536-49f8-97d7-58fa33790ff7",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_ESTADO_PEDIDO",
        "toTable": "Pedido Estado",
        "toColumn": "ID_ESTADO_PEDIDO"
      },
      {
        "name": "42f983d3-6615-4b25-a2a6-1be7dc6c63a7",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_DIVISA",
        "toTable": "Divisa",
        "toColumn": "ID_DIVISA"
      },
      {
        "name": "d4b5a497-f0c6-4e76-9959-c15af6c1af83",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_PEDIDO",
        "toTable": "Pedido",
        "toColumn": "ID_PEDIDO"
      },
      {
        "name": "c8ef5921-d7ec-4eb9-9227-d1103d923afb",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_ESTADO_LINEA_PEDIDO",
        "toTable": "Pedido Estado Linea",
        "toColumn": "ID_ESTADO_LINEA_PEDIDO"
      },
      {
        "name": "81852c6f-771a-41f7-b3b0-ce6c4d47c68a",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_CUENTA_GRP",
        "toTable": "Cuenta Grupo",
        "toColumn": "ID_CUENTA_GRUPO"
      },
      {
        "name": "2d05aa81-4e39-4da8-8973-e3f96650fce3",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_CUENTA_EMP",
        "toTable": "Cuenta Local",
        "toColumn": "ID_CUENTA_EMPRESA"
      },
      {
        "name": "23f8b098-7c36-4074-bbde-722bfa568c8a",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_CUENTA_PRINC",
        "toTable": "Cuenta Principal",
        "toColumn": "ID_CUENTA_PRINCIPAL"
      },
      {
        "name": "7850f1cc-d854-4c71-bd01-d4d3dd803108",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_UNIDAD_COMPRA",
        "toTable": "Unidad Compra",
        "toColumn": "ID_UNIDAD_COMPRA"
      },
      {
        "name": "da73b667-c0bb-4cf1-92f8-059a7268daff",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_AJENO",
        "toTable": "Pedido Ajeno",
        "toColumn": "ID_AJENO"
      },
      {
        "name": "b5869fff-05ec-4673-9347-f9a64504f773",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_TIPO_GESTOR",
        "toTable": "Tipo Gestor",
        "toColumn": "ID_TIPO_GESTOR"
      },
      {
        "name": "91318cc5-8355-4ffe-9ab6-16d01ec87065",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_CENTRO_DISTRIBUCION",
        "toTable": "Centro Distribucion",
        "toColumn": "ID_LOCALIZACION_COMPRA"
      },
      {
        "name": "a8228cf3-444c-40d5-929c-d0335c878d0d",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_EMP_DEST",
        "toTable": "Sociedad",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "d59abe7e-bf26-4aea-b86b-35c2ba6f6187",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_CODIGO_PRESUPUESTARIO",
        "toTable": "COP",
        "toColumn": "ID_CODIGO_PRESUPUESTARIO"
      },
      {
        "name": "a8dfcdce-6f02-48a3-ae55-9478f7969bc6",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_EMP_PROVEEDOR",
        "toTable": "Empresa Proveedor",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "ea82fd17-bb5e-4ca1-9096-739fcae99a9d",
        "fromTable": "Pedido Ajeno",
        "fromColumn": "ID_SUBFAM_AJENO",
        "toTable": "Ajeno Subfamilia",
        "toColumn": "ID_SUBFAM_AJENO"
      },
      {
        "name": "89139d8a-2e7d-47ae-9943-caacf9a34d21",
        "fromTable": "Pedido Ajeno",
        "fromColumn": "ID_FAM_AJENO",
        "toTable": "Ajeno Familia",
        "toColumn": "ID_FAM_AJENO"
      },
      {
        "name": "47af5adc-3112-4cf2-9b44-c0de219ca291",
        "fromTable": "Proyecto Presupuestario",
        "fromColumn": "ID_AREA_SISTEMA",
        "toTable": "Area",
        "toColumn": "ID_AREA_SISTEMA"
      },
      {
        "name": "e0c1bcb0-18c5-49cb-b0fd-1cba86133698",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_PROY_CONTABLE",
        "toTable": "Proyecto Presupuestario",
        "toColumn": "ID_PROYECTO_CONTABLE"
      },
      {
        "name": "4cad7600-80ad-4afc-a047-4eb5060529de",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_PROY_CONTABLE",
        "toTable": "Proyecto Presupuestario",
        "toColumn": "ID_PROYECTO_CONTABLE"
      },
      {
        "name": "29e7c879-b9fa-40b3-a8c1-6d07c263d360",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_TIPO_SISTEMA_ORIGEN",
        "toTable": "Factura Tipo Sistema Origen",
        "toColumn": "ID_TIPO_SISTEMA_ORIGEN"
      },
      {
        "name": "1efbf91f-4531-4b54-878f-c5e8f2b5821a",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_EMP_PROVE_PEDIDO",
        "toTable": "Empresa Proveedor",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "2a9bfb0c-f71d-4b44-8f10-fe0c481894c0",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_RECEPTOR",
        "toTable": "Sociedad",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "3857b855-d769-4fa8-b61e-4121958b86fb",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_CD_PEDIDO",
        "toTable": "Centro Distribucion",
        "toColumn": "ID_LOCALIZACION_COMPRA"
      },
      {
        "name": "c701bcf8-a9f1-4208-a257-b2dd1509d4a2",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_UNI_COMPRA",
        "toTable": "Unidad Compra",
        "toColumn": "ID_UNIDAD_COMPRA"
      },
      {
        "name": "18473815-91d2-4254-a8f5-f0286081a82d",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_CUENTA_GRP",
        "toTable": "Cuenta Grupo",
        "toColumn": "ID_CUENTA_GRUPO"
      },
      {
        "name": "c91fc366-431c-43a8-8558-f5e333510506",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_CUENTA_PRINC",
        "toTable": "Cuenta Principal",
        "toColumn": "ID_CUENTA_PRINCIPAL"
      },
      {
        "name": "5ce75803-3708-4fad-839d-1c018c1f2015",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_ESTADO_PEDIDO",
        "toTable": "Pedido Estado",
        "toColumn": "ID_ESTADO_PEDIDO"
      },
      {
        "name": "a6105aa5-88c5-4113-af95-fd93a1e2df9d",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_CUENTA_EMP",
        "toTable": "Cuenta Local",
        "toColumn": "ID_CUENTA_EMPRESA"
      },
      {
        "name": "f4f356dc-e92b-4bf9-a57b-d99d51dc1f26",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_COD_PRESUPTARIO",
        "toTable": "COP",
        "toColumn": "ID_CODIGO_PRESUPUESTARIO"
      },
      {
        "name": "24082cef-66a9-4fa9-8622-84c0872d4b64",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_FAM_AJENO_PEDIDO",
        "toTable": "Ajeno Familia",
        "toColumn": "ID_FAM_AJENO"
      },
      {
        "name": "d7b9462d-8dc0-43cd-b9e2-33483baae801",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_SUBFAM_AJENO_PEDIDO",
        "toTable": "Ajeno Subfamilia",
        "toColumn": "ID_SUBFAM_AJENO"
      },
      {
        "name": "ddb77e40-a0ae-4e27-9944-3a1465413504",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_TIPO_GESTOR_PEDIDO",
        "toTable": "Tipo Gestor",
        "toColumn": "ID_TIPO_GESTOR"
      },
      {
        "name": "0fb2d73a-1fd9-419b-985b-12bc0b1740a6",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_PROY_PEDIDO",
        "toTable": "Proyecto Presupuestario",
        "toColumn": "ID_PROYECTO_CONTABLE"
      },
      {
        "name": "306ae746-1ca7-4490-b47f-60c9dc9991e7",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "FEHO_EJEC_FACTURA",
        "toTable": "Factura Fecha Ejecucion",
        "toColumn": "ID_FECHA"
      },
      {
        "name": "c9f2ca1b-76ee-4105-bcd7-83dc5b23ca2e",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "FECHA_ALTA_CIERRE",
        "toTable": "Factura Fecha Alta Cierre",
        "toColumn": "ID_FECHA"
      },
      {
        "name": "fde526d1-ffd3-4c75-a997-dd5c48fe38f8",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "EJERCICIO_CIERRE",
        "toTable": "Factura Ejercicio Cierre",
        "toColumn": "ID_EJERCICIO"
      },
      {
        "name": "743d7353-6c8d-4904-adc5-7af981f6b781",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "Fecha Presupuesto Ejercicio",
        "toTable": "Presupuesto Ejercicio Fecha",
        "toColumn": "ID_FECHA_PRESUPUESTARIA"
      },
      {
        "name": "c7a1b3a5-c53a-4ba7-a908-e98a2cc961d3",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_PEDIDO",
        "toTable": "Pedido",
        "toColumn": "ID_PEDIDO"
      },
      {
        "name": "b52ecd30-751b-4615-abd4-0124e00c8d64",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "FEHO_ALTA_FACTURA",
        "toTable": "Presupuesto Ejercicio Fecha",
        "toColumn": "ID_FECHA_PRESUPUESTARIA"
      },
      {
        "name": "2fc3a2d3-b0fc-437e-a770-684ff71d943d",
        "fromTable": "Proyecto Presupuestario",
        "fromColumn": "Proyecto Presupuestario Naturaleza ID",
        "toTable": "Proyecto Presupuestario Naturaleza",
        "toColumn": "Proyecto Presupuestario Naturaleza ID"
      },
      {
        "name": "d578eabc-cb2f-4759-a865-8bcf7a34427c",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_FECHA_PRESUPUESTARIA",
        "toTable": "Presupuesto Ejercicio Fecha",
        "toColumn": "ID_FECHA_PRESUPUESTARIA"
      },
      {
        "name": "de02a6b9-e58d-4baa-91ba-cc06224d24dc",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_EMPRESA",
        "toTable": "Empresa Proveedor",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "3a4659e7-7834-4d94-bc91-a12140bf1a6d",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_INFO_PREV_FACTURA",
        "toTable": "Factura Informacion Provision",
        "toColumn": "ID_INFO_PREV_FACTURA"
      },
      {
        "name": "cc561e4c-25a5-4bad-8464-aeedcdab7fab",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_ESTADO_FACTURA",
        "toTable": "Factura Estado",
        "toColumn": "ID_ESTADO_FACTURA"
      },
      {
        "name": "31cc41b3-0b2d-4eb4-bfd5-b253a5c28646",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_ESTADO_PEDIDO",
        "toTable": "Pedido Estado",
        "toColumn": "ID_ESTADO_PEDIDO"
      },
      {
        "name": "3600dd9f-0879-4a2f-b2c4-b7062dcc5940",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_ESTADO_FACTURA",
        "toTable": "Factura Estado",
        "toColumn": "ID_ESTADO_FACTURA"
      },
      {
        "name": "1f71e08e-fe62-44f6-aaee-9858a9be2fec",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_EMP_PROVE_PEDIDO",
        "toTable": "Empresa Proveedor",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "298ddccc-331e-4575-ae74-7daf9628d534",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_FAM_AJENO_PEDIDO",
        "toTable": "Ajeno Familia",
        "toColumn": "ID_FAM_AJENO"
      },
      {
        "name": "eb6a04c9-7b96-4632-9ffe-3f9f4143186a",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_INFO_PREV_FACTURA",
        "toTable": "Factura Informacion Provision",
        "toColumn": "ID_INFO_PREV_FACTURA"
      },
      {
        "name": "c4a2fde3-5ee6-439e-8ade-dfdc8af82544",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_PROY_PEDIDO",
        "toTable": "Proyecto Presupuestario",
        "toColumn": "ID_PROYECTO_CONTABLE"
      },
      {
        "name": "42bf66da-d00d-4a36-a7d5-bb6fe0cd1c4d",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_RECEPTOR",
        "toTable": "Sociedad",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "e7dd7b23-7284-494e-b999-61fb9761248c",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_SUBFAM_AJENO_PEDIDO",
        "toTable": "Ajeno Subfamilia",
        "toColumn": "ID_SUBFAM_AJENO"
      },
      {
        "name": "ecf102c3-4ffa-4de1-8051-bc842bcad2e8",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_TIPO_GESTOR_PEDIDO",
        "toTable": "Tipo Gestor",
        "toColumn": "ID_TIPO_GESTOR"
      },
      {
        "name": "cf680352-302a-4988-940f-ef0c6a146673",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_TIPO_SISTEMA_ORIGEN",
        "toTable": "Factura Tipo Sistema Origen",
        "toColumn": "ID_TIPO_SISTEMA_ORIGEN"
      },
      {
        "name": "a48b8e0f-0454-44ff-8d1c-6a7819d6d48d",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_UNI_COMPRA",
        "toTable": "Unidad Compra",
        "toColumn": "ID_UNIDAD_COMPRA"
      },
      {
        "name": "5df0b588-77f0-44c7-a852-3215d5226788",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_CUENTA_PRINC",
        "toTable": "Cuenta Principal",
        "toColumn": "ID_CUENTA_PRINCIPAL"
      },
      {
        "name": "d11bfea9-64e4-4c62-bbf8-5bdf4b38e530",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_CUENTA_GRP",
        "toTable": "Cuenta Grupo",
        "toColumn": "ID_CUENTA_GRUPO"
      },
      {
        "name": "a1022f6e-1f4e-4a69-b50c-8a727d499fc9",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_CUENTA_EMP",
        "toTable": "Cuenta Local",
        "toColumn": "ID_CUENTA_EMPRESA"
      },
      {
        "name": "cc7fb309-bd09-4cb2-a3e9-a2d49994c188",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_COD_PRESUPTARIO",
        "toTable": "COP",
        "toColumn": "ID_CODIGO_PRESUPUESTARIO"
      },
      {
        "name": "6ca1ecba-2ce8-4f8e-aa4d-65a773b436fb",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_CD_PEDIDO",
        "toTable": "Centro Distribucion",
        "toColumn": "ID_LOCALIZACION_COMPRA"
      },
      {
        "name": "06d2a7a5-e3ad-4c42-bd6e-c7c754d29768",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "EJERCICIO_CIERRE",
        "toTable": "Factura Ejercicio Cierre",
        "toColumn": "ID_EJERCICIO"
      },
      {
        "name": "bdc28497-90f1-448f-a916-371ed99b6da1",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "FECHA_ALTA_CIERRE",
        "toTable": "Factura Fecha Alta Cierre",
        "toColumn": "ID_FECHA"
      },
      {
        "name": "bee8ec92-e407-42a7-ac87-881ab303796f",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "FEHO_EJEC_FACTURA",
        "toTable": "Factura Fecha Ejecucion",
        "toColumn": "ID_FECHA"
      },
      {
        "name": "b29319ef-f0ac-4bcc-86b4-7e5b1329b29c",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "FECHA_DEVENGO",
        "toTable": "Presupuesto Ejercicio Fecha",
        "toColumn": "ID_FECHA_PRESUPUESTARIA"
      },
      {
        "name": "ce84419a-2d91-45db-9e75-3487b4e0e0b9",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "COD_ESTADO_FACTURA",
        "toTable": "Factura Estado",
        "toColumn": "ID_ESTADO_FACTURA"
      },
      {
        "name": "88d35660-fa5b-4764-8d3d-fb7cb7c3d4a4",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_PROVISION_FACTURA",
        "toTable": "Factura Informacion Provision",
        "toColumn": "ID_INFO_PREV_FACTURA"
      },
      {
        "name": "64ad1f04-fe8c-443f-b897-2d1dbc830da9",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "Fecha Presupuesto Ejercicio",
        "toTable": "Presupuesto Ejercicio Fecha",
        "toColumn": "ID_FECHA_PRESUPUESTARIA"
      },
      {
        "name": "5523ebb2-eea1-4bab-b413-5141f5070464",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "COD_FACTURA_ESTADO",
        "toTable": "Factura Estado",
        "toColumn": "ID_ESTADO_FACTURA"
      },
      {
        "name": "074e1275-76fd-4a8c-80d3-2247260b0dc1",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_CODIGO_PRESUPUESTARIO",
        "toTable": "COP",
        "toColumn": "ID_CODIGO_PRESUPUESTARIO"
      },
      {
        "name": "19281368-f5c0-46af-afc9-5d40fe2998dd",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_CUENTA_EMP",
        "toTable": "Cuenta Local",
        "toColumn": "ID_CUENTA_EMPRESA"
      },
      {
        "name": "c123a14d-ac23-49a5-9465-873c7b784ae0",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_CUENTA_GRUPO",
        "toTable": "Cuenta Grupo",
        "toColumn": "ID_CUENTA_GRUPO"
      },
      {
        "name": "ee4fe497-c6cc-45a2-a409-c57ae3e11885",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_CUENTA_PRINC",
        "toTable": "Cuenta Principal",
        "toColumn": "ID_CUENTA_PRINCIPAL"
      },
      {
        "name": "f523a3ff-a2f5-4179-8e2b-e6c5e2c66ded",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_EMP",
        "toTable": "Sociedad",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "91cd6a41-e120-4b23-920f-09361f02d495",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_EMPRESA",
        "toTable": "Empresa Proveedor",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "249b63d1-2798-4026-a27d-7314ed7a5a81",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_PEDIDO",
        "toTable": "Pedido",
        "toColumn": "ID_PEDIDO"
      },
      {
        "name": "47c0c31c-4490-420a-8ba5-96316c6c5885",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_FAM_AJENO",
        "toTable": "Ajeno Familia",
        "toColumn": "ID_FAM_AJENO"
      },
      {
        "name": "3379a04f-f4c4-47d2-9eb9-59c8037fccf3",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_PROVISION_FACTURA",
        "toTable": "Factura Informacion Provision",
        "toColumn": "ID_INFO_PREV_FACTURA"
      },
      {
        "name": "5cfc6b9d-6349-4d46-ac33-e31ba76f057a",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_PROY_CONTABLE",
        "toTable": "Proyecto Presupuestario",
        "toColumn": "ID_PROYECTO_CONTABLE"
      },
      {
        "name": "e5395faf-4368-4407-a25a-4aa3853a17f3",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_SUBFAM_AJENO",
        "toTable": "Ajeno Subfamilia",
        "toColumn": "ID_SUBFAM_AJENO"
      },
      {
        "name": "a12489ed-b504-46f6-b2db-d63dedc62470",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_TIPO_PRESUP",
        "toTable": "Presupuesto Tipo",
        "toColumn": "ID_TIPO_PRESUP"
      },
      {
        "name": "43858cb6-b543-4d48-bc26-7f53cd86b30d",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_UNIDAD_COMPRA",
        "toTable": "Unidad Compra",
        "toColumn": "ID_UNIDAD_COMPRA"
      },
      {
        "name": "4f218b1a-7a8a-4f42-b292-bd291fe16632",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_DIVISA",
        "toTable": "Divisa",
        "toColumn": "ID_DIVISA"
      },
      {
        "name": "1e559dc2-fcda-43be-bc52-b223230f2a59",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_PEDIDO",
        "toTable": "Pedido",
        "toColumn": "ID_PEDIDO"
      },
      {
        "name": "59fbdb83-e122-417a-a1fe-217873fae277",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_PROVISION_FACTURA",
        "toTable": "Factura Informacion Provision",
        "toColumn": "ID_INFO_PREV_FACTURA"
      },
      {
        "name": "6489b576-6905-4a99-98a8-45b148e87fd1",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "COD_ESTADO_FACTURA",
        "toTable": "Factura Estado",
        "toColumn": "ID_ESTADO_FACTURA"
      },
      {
        "name": "cc03739e-ccbe-42a7-8df7-c8fa8e539d08",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_ESTADO_PEDIDO",
        "toTable": "Pedido Estado",
        "toColumn": "ID_ESTADO_PEDIDO"
      },
      {
        "name": "097adc0d-c5ef-4a61-bd79-f10a6d27ec45",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_ESTADO_PEDIDO",
        "toTable": "Pedido Estado",
        "toColumn": "ID_ESTADO_PEDIDO"
      },
      {
        "name": "8d71ff86-ffff-4948-b297-22e4b320a261",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "FEHO_EJEC_FACTURA",
        "toTable": "Presupuesto Ejercicio Fecha",
        "toColumn": "ID_FECHA_PRESUPUESTARIA",
        "isActive": false
      },
      {
        "name": "be23de0e-4800-4a34-a1c4-cc1e9760a18c",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "Factura ID",
        "toTable": "Factura",
        "toColumn": "Factura ID"
      },
      {
        "name": "4d4e02fd-bb77-46eb-9bf6-c361785d5cff",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "COD_FACTURA",
        "toTable": "Factura",
        "toColumn": "Factura ID"
      },
      {
        "name": "95ed0849-c53e-4470-9fba-b36787fd941c",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "Factura ID",
        "toTable": "Factura",
        "toColumn": "Factura ID"
      },
      {
        "name": "fe06220f-e793-4d0c-8fff-4688dc9155e9",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "COD_FACTURA",
        "toTable": "Factura",
        "toColumn": "Factura ID"
      },
      {
        "name": "7f1f9a72-6b55-4ece-b6ce-74120ad087ba",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "COD_FACTURA",
        "toTable": "Factura",
        "toColumn": "Factura ID"
      },
      {
        "name": "735a4ad7-3ae6-46df-818a-c5c5d17e7ece",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_FACTURA",
        "toTable": "Factura",
        "toColumn": "Factura ID"
      },
      {
        "name": "b6275e3a-16f9-41ef-8b8f-a1847c368aee",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_ORDEN_TRABAJO_LINEA",
        "toTable": "Orden Trabajo",
        "toColumn": "Orden Trabajo Linea ID"
      },
      {
        "name": "12a61c22-338c-41c3-87ac-9028c5e1db7f",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_ORDEN_TRABAJO_LINEA",
        "toTable": "Orden Trabajo",
        "toColumn": "Orden Trabajo Linea ID"
      },
      {
        "name": "a16ec777-7cf0-43bb-a72a-d5106fa33b84",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_ORDEN_TRABAJO_LINEA",
        "toTable": "Orden Trabajo",
        "toColumn": "Orden Trabajo Linea ID"
      },
      {
        "name": "cf77ea4b-3994-4d8a-9829-b317b46184f0",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_ORDEN_TRABAJO_LINEA",
        "toTable": "Orden Trabajo",
        "toColumn": "Orden Trabajo Linea ID"
      },
      {
        "name": "637551cf-1826-4625-8865-bd2820c59c69",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_ESTADO_PEDIDO",
        "toTable": "Pedido Estado",
        "toColumn": "ID_ESTADO_PEDIDO"
      },
      {
        "name": "fe1ed528-6d9b-45e0-87f4-7766b1e08d28",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_EMP_DEST",
        "toTable": "Sociedad",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "d317639f-178c-4e9e-b31a-65718a74cacd",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_PROY_CONTABLE",
        "toTable": "Proyecto Presupuestario",
        "toColumn": "ID_PROYECTO_CONTABLE"
      },
      {
        "name": "d7768ddf-ce90-4d53-a1c6-2ddfa93be8c3",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_UNIDAD_COMPRA",
        "toTable": "Unidad Compra",
        "toColumn": "ID_UNIDAD_COMPRA"
      },
      {
        "name": "f1728ba0-4f0c-458a-8cca-831ac63600b1",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_EMP_PROVEEDOR",
        "toTable": "Empresa Proveedor",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "d4c2d7d3-e8ea-4aa4-aa6f-c9af0b2f2c32",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_PEDIDO_DATA",
        "toTable": "Pedido",
        "toColumn": "ID_PEDIDO"
      },
      {
        "name": "b8a534b3-a81d-4bbd-b8f7-dc34be35e0c2",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_DIVISA",
        "toTable": "Divisa",
        "toColumn": "ID_DIVISA"
      },
      {
        "name": "329e4fc3-b071-421e-a71c-89fe9f74fa24",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_ORDEN_TRABAJO_LINEA",
        "toTable": "Orden Trabajo",
        "toColumn": "Orden Trabajo Linea ID"
      },
      {
        "name": "2110468d-8192-49b5-99c5-1b1f063fc41d",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_ORDEN_TRABAJO_LINEA",
        "toTable": "Orden Trabajo",
        "toColumn": "Orden Trabajo Linea ID"
      },
      {
        "name": "8de867be-8a87-4737-a8aa-33bd02245f28",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_PEDIDO",
        "toTable": "Pedido",
        "toColumn": "ID_PEDIDO"
      },
      {
        "name": "945c3733-9ced-40f9-9474-eef2988fdd9b",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "TND_DEST",
        "toTable": "Tienda",
        "toColumn": "ID Tienda"
      },
      {
        "name": "2eb77f98-5533-473b-9fb1-f1dc41d4bab4",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "TND_DEST",
        "toTable": "Tienda",
        "toColumn": "ID Tienda"
      },
      {
        "name": "c283fa3a-32c9-45e5-ae22-a5b06aef7914",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_EMISOR",
        "toTable": "Factura Emisor",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "a7ad46ac-1935-4b8d-bb85-ac0bd2ec2d38",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_EMISOR",
        "toTable": "Factura Emisor",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "2f088b6f-fb4c-4c8c-b1c9-63ea2f6fc44d",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_CUENTA_GRP_PEDIDO",
        "toTable": "Cuenta Grupo Pedido",
        "toColumn": "ID_CUENTA_GRUPO"
      },
      {
        "name": "aa2afcd2-4063-4c0e-9c18-c6c067ca262a",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_CUENTA_GRP_PEDIDO",
        "toTable": "Cuenta Grupo Pedido",
        "toColumn": "ID_CUENTA_GRUPO"
      },
      {
        "name": "ca306a66-bbca-4fbb-a116-6cdfe2f8332e",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_CUENTA_GRP",
        "toTable": "Cuenta Grupo Pedido",
        "toColumn": "ID_CUENTA_GRUPO"
      },
      {
        "name": "01b3543d-652d-443c-8289-f36b7391c5e5",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_COD_PRESUP_PEDIDO",
        "toTable": "COP Pedido",
        "toColumn": "ID_CODIGO_PRESUPUESTARIO"
      },
      {
        "name": "7c3ddec4-e84d-48e0-9848-6f9dbf02ba73",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_COD_PRESUP_PEDIDO",
        "toTable": "COP Pedido",
        "toColumn": "ID_CODIGO_PRESUPUESTARIO"
      },
      {
        "name": "83de747d-36f3-4f76-83e8-1a7eaf09837f",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_CODIGO_PRESUPUESTARIO",
        "toTable": "COP Pedido",
        "toColumn": "ID_CODIGO_PRESUPUESTARIO"
      },
      {
        "name": "95f8725f-6ec7-4afa-875a-406fc928bb3d",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_CADENA_LOCAL",
        "toTable": "Cadena Local",
        "toColumn": "ID Cadena"
      },
      {
        "name": "89a11e3a-5bbb-4a45-915e-b2a3fba823bf",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_CADENA_LOCAL",
        "toTable": "Cadena Local",
        "toColumn": "ID Cadena"
      },
      {
        "name": "97442f7a-1ee3-49b8-b508-5bf49296ca28",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_CADENA_LOCAL",
        "toTable": "Cadena Local",
        "toColumn": "ID Cadena"
      },
      {
        "name": "e337c4e4-1c41-489f-a84f-404862ebedbf",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_MERCADO_LOCAL",
        "toTable": "Mercado Local",
        "toColumn": "ID Mercado"
      },
      {
        "name": "ae48b3ee-eea5-4847-9e19-dcda8849acb1",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_MERCADO_LOCAL",
        "toTable": "Mercado Local",
        "toColumn": "ID Mercado"
      },
      {
        "name": "c5bd6263-ba88-43a9-a9fb-1e507132e7cf",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_MERCADO_LOCAL",
        "toTable": "Mercado Local",
        "toColumn": "ID Mercado"
      },
      {
        "name": "50d6e56a-3a3c-4ed9-8993-3d1047508ea1",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "COD_LINEA_PEDIDO",
        "toTable": "Pedido Fecha Recepcion",
        "toColumn": "ID_LINEA_PEDIDO"
      },
      {
        "name": "9647e9a0-4cde-4e5b-98b4-e3de17b40e6f",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "COD_LINEA_PEDIDO",
        "toTable": "Pedido Fecha Recepcion",
        "toColumn": "ID_LINEA_PEDIDO"
      },
      {
        "name": "3cbc2042-545f-4cc1-8fe8-ba799249b89f",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "COD_LINEA_PEDIDO",
        "toTable": "Pedido Fecha Recepcion",
        "toColumn": "ID_LINEA_PEDIDO"
      },
      {
        "name": "5bbaa547-5ec0-4e1c-bfd3-57891e18a95e",
        "fromTable": "Pedido Histórico",
        "fromColumn": "ID_PEDIDO_DATA",
        "toTable": "Pedido",
        "toColumn": "ID_PEDIDO"
      },
      {
        "name": "cef092cc-fb4f-43a3-9742-56b0fdf81fe2",
        "fromTable": "Pedido Histórico",
        "fromColumn": "ID_FECHA_PRESUPUESTARIA",
        "toTable": "Presupuesto Ejercicio Fecha",
        "toColumn": "ID_FECHA_PRESUPUESTARIA"
      },
      {
        "name": "8b2d3cd8-d089-4784-88ea-79d51647eeb5",
        "fromTable": "Pedido Histórico",
        "fromColumn": "ID_UNIDAD_COMPRA",
        "toTable": "Unidad Compra",
        "toColumn": "ID_UNIDAD_COMPRA"
      },
      {
        "name": "25f431a3-e4aa-4eba-acbc-f80739d7c770",
        "fromTable": "Pedido Histórico",
        "fromColumn": "ID_EMPRESA_PROVEEDOR",
        "toTable": "Empresa Proveedor",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "ccd02b70-a442-471f-86ca-92a3a5e1cb9c",
        "fromTable": "Pedido Histórico",
        "fromColumn": "ID_PROYECTO_CONTABLE",
        "toTable": "Proyecto Presupuestario",
        "toColumn": "ID_PROYECTO_CONTABLE"
      },
      {
        "name": "0848f838-4f42-4d9a-9be5-d38b70b88be9",
        "fromTable": "Pedido Histórico",
        "fromColumn": "ID_ESTADO_PEDIDO",
        "toTable": "Pedido Estado",
        "toColumn": "ID_ESTADO_PEDIDO"
      },
      {
        "name": "a98cf929-9025-4507-ade7-7a123bada9cd",
        "fromTable": "Pedido Histórico",
        "fromColumn": "ID_EMPRESA_DESTINO",
        "toTable": "Sociedad",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "4deea6a8-8bf5-4a44-bf40-8370ac28cbad",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "Tipo Agregado",
        "toTable": "Tipo Agregado",
        "toColumn": "Tipo Agregado"
      },
      {
        "name": "5505d6c6-1f66-40b2-8c4d-a1cb3da8a9dc",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_ESTADO_FACTURA",
        "toTable": "Factura Estado",
        "toColumn": "ID_ESTADO_FACTURA"
      },
      {
        "name": "b91bcaa6-039d-4e30-8615-af18c3e72caf",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "Tipo Agregado",
        "toTable": "Tipo Agregado",
        "toColumn": "Tipo Agregado"
      },
      {
        "name": "a364dff4-5075-4572-a43d-1761ffadcfe8",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "Tipo Agregado",
        "toTable": "Tipo Agregado",
        "toColumn": "Tipo Agregado"
      },
      {
        "name": "8ffc31e6-90cb-48cf-b918-f6467c539e5a",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_CADENA",
        "toTable": "Cadena Local",
        "toColumn": "ID Cadena"
      },
      {
        "name": "0608db37-5eaa-4d3e-8ba2-1820424ec962",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_MERCADO",
        "toTable": "Mercado Local",
        "toColumn": "ID Mercado"
      },
      {
        "name": "1572d731-e743-4a6f-8faf-aacbb61820d1",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_Tipo Importe",
        "toTable": "Tipo Importe",
        "toColumn": "ID Tipo Importe"
      },
      {
        "name": "0b21af4b-25d1-4947-8793-80464005022a",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_Tipo Importe",
        "toTable": "Tipo Importe",
        "toColumn": "ID Tipo Importe"
      },
      {
        "name": "2809f360-45bc-4408-97fa-ca37fc093ba2",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_Tipo Importe",
        "toTable": "Tipo Importe",
        "toColumn": "ID Tipo Importe"
      },
      {
        "name": "8213cbdd-e11a-4ade-bc73-06486b4ea520",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_Tipo Importe",
        "toTable": "Tipo Importe",
        "toColumn": "ID Tipo Importe"
      },
      {
        "name": "577256de-3b7c-4788-83c5-9d3e67c8512f",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_Tipo Importe",
        "toTable": "Tipo Importe",
        "toColumn": "ID Tipo Importe"
      },
      {
        "name": "71edadab-f98a-4c39-aee9-4cfd473081e9",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_Tipo Importe",
        "toTable": "Tipo Importe",
        "toColumn": "ID Tipo Importe"
      },
      {
        "name": "45ced247-b47b-4dce-b93a-2bfe78eff377",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_INFO_PREV_FACTURA",
        "toTable": "Factura Informacion Provision",
        "toColumn": "ID_INFO_PREV_FACTURA"
      },
      {
        "name": "82ec85a1-6470-41ca-815c-b49b50656404",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "TipoPresupClas",
        "toTable": "Tipo Presupuesto",
        "toColumn": "ID Tipo Presupuesto"
      },
      {
        "name": "c4bcfe87-8351-4489-9f35-ab69888f3e18",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "TipoPresupClas",
        "toTable": "Tipo Presupuesto",
        "toColumn": "ID Tipo Presupuesto"
      },
      {
        "name": "9a472e0b-f5d5-4c19-9919-4b1f8254919e",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "TipoPresupClas",
        "toTable": "Tipo Presupuesto",
        "toColumn": "ID Tipo Presupuesto"
      },
      {
        "name": "e19f5a32-b952-405b-892c-041203b1823e",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "TipoPresupClas",
        "toTable": "Tipo Presupuesto",
        "toColumn": "ID Tipo Presupuesto"
      },
      {
        "name": "107677b9-6f2d-4fed-abcc-ecf021e05e3e",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "TipoPresupClas",
        "toTable": "Tipo Presupuesto",
        "toColumn": "ID Tipo Presupuesto"
      },
      {
        "name": "3bf20da3-90e4-409b-bbfd-365c484b378d",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "TipoPresupClas",
        "toTable": "Tipo Presupuesto",
        "toColumn": "ID Tipo Presupuesto"
      },
      {
        "name": "56c4f58c-d3c2-4c7c-b47d-7700bccb9722",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_CUENTA_GRP",
        "toTable": "Cuenta Grupo",
        "toColumn": "ID_CUENTA_GRUPO"
      },
      {
        "name": "dc68ee63-4d0f-4844-8d05-6d5bc94fa5ba",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_EMP_DEST",
        "toTable": "Sociedad",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "2d72bdee-9b6d-47c8-b62a-967ba9bdcf43",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_EMP_PROVEEDOR",
        "toTable": "Empresa Proveedor",
        "toColumn": "ID_EMPRESA"
      },
      {
        "name": "42a1464b-e821-4edd-831a-78eb0bd8538e",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_ESTADO_PEDIDO",
        "toTable": "Pedido Estado",
        "toColumn": "ID_ESTADO_PEDIDO"
      },
      {
        "name": "7a0785f8-8337-49bb-8724-9f8fe991bebd",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_FECHA_PRESUPUESTARIA",
        "toTable": "Presupuesto Ejercicio Fecha",
        "toColumn": "ID_FECHA_PRESUPUESTARIA"
      },
      {
        "name": "75f3180f-97c5-47e9-b850-cd7722c82665",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_PROY_CONTABLE",
        "toTable": "Proyecto Presupuestario",
        "toColumn": "ID_PROYECTO_CONTABLE"
      },
      {
        "name": "f37123d8-9361-4233-8618-23cf32bc7cfe",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_UNIDAD_COMPRA",
        "toTable": "Unidad Compra",
        "toColumn": "ID_UNIDAD_COMPRA"
      },
      {
        "name": "74ed0db3-3fe0-4d2f-a6c6-513563f50bc4",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_PEDIDO",
        "toTable": "Pedido",
        "toColumn": "ID_PEDIDO"
      },
      {
        "name": "81faf171-8373-487d-af87-09aa4c26d588",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_TIPO_GESTOR",
        "toTable": "Tipo Gestor",
        "toColumn": "ID_TIPO_GESTOR"
      },
      {
        "name": "b999a159-98e7-4033-8360-10d5152d74d9",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_PROY_CONTAB",
        "toTable": "Proyecto Presupuestario",
        "toColumn": "ID_PROYECTO_CONTABLE",
        "isActive": false
      },
      {
        "name": "07126783-e988-49b2-acd4-7ffe5d399897",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_LOCALIZACION_COMPRA",
        "toTable": "Localización Compra",
        "toColumn": "ID_LOCALIZACION_COMPRA"
      },
      {
        "name": "02c22057-f099-48de-8e4f-aa1e82350569",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_LOC_COMPRA_PEDIDO",
        "toTable": "Localización Compra",
        "toColumn": "ID_LOCALIZACION_COMPRA"
      },
      {
        "name": "01fc2b85-59ff-41b2-8929-a4fd305ad093",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_LOC_COMPRA_PEDIDO",
        "toTable": "Localización Compra",
        "toColumn": "ID_LOCALIZACION_COMPRA"
      },
      {
        "name": "8986ef78-97f6-49eb-beba-f0f548dffcfb",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_LOCALIZACION_COMPRA",
        "toTable": "Localización Compra",
        "toColumn": "ID_LOCALIZACION_COMPRA"
      },
      {
        "name": "cda23f95-fbd1-4aa0-9519-25f29d3e6d20",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_LOCALIZACION_COMPRA",
        "toTable": "Localización Compra",
        "toColumn": "ID_LOCALIZACION_COMPRA"
      },
      {
        "name": "bce33386-a18e-4eec-87a7-fc392a3dd9ac",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_LOCALIZACION_COMPRA",
        "toTable": "Localización Compra",
        "toColumn": "ID_LOCALIZACION_COMPRA"
      },
      {
        "name": "4abde71a-b92e-459a-bfe0-fcce0610d6bd",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_LOCALIZACION_COMPRA",
        "toTable": "Localización Compra",
        "toColumn": "ID_LOCALIZACION_COMPRA"
      },
      {
        "name": "d31ea642-418b-4178-922c-ce37e9ce445d",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_TIPO_IMPORTE",
        "toTable": "Tipo Importe",
        "toColumn": "ID Tipo Importe"
      },
      {
        "name": "8f6a0969-9068-4636-9077-9b62044fe573",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_TIPO_PRESUPUESTO",
        "toTable": "Tipo Presupuesto",
        "toColumn": "ID Tipo Presupuesto"
      },
      {
        "name": "3aee92ae-0aaf-4f6f-b016-86fec90a6792",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "PERIODO_EJECUCION",
        "toTable": "Presupuesto Ejercicio Fecha",
        "toColumn": "ID_FECHA_PRESUPUESTARIA"
      },
      {
        "name": "418e03e1-81a0-4bfb-b9f5-2267587b37b6",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_DIVISA",
        "toTable": "Divisa",
        "toColumn": "ID_DIVISA"
      },
      {
        "name": "72e729e8-2c2e-473b-96b4-81d0b12dff28",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_DIVISA",
        "toTable": "Divisa",
        "toColumn": "ID_DIVISA"
      },
      {
        "name": "f657be85-6bd6-4c91-8f04-919c74231ea5",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_CAMBIO",
        "toTable": "Divisa Cambio",
        "toColumn": "ID_CAMBIO"
      },
      {
        "name": "87dd36f8-cc0b-4fff-8bda-dd6f5b2f4d42",
        "fromTable": "Factura Compra Hecho",
        "fromColumn": "ID_CAMBIO",
        "toTable": "Divisa Cambio",
        "toColumn": "ID_CAMBIO"
      },
      {
        "name": "61e786ad-548f-4077-be89-b28b6f014c1c",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_CAMBIO",
        "toTable": "Divisa Cambio",
        "toColumn": "ID_CAMBIO"
      },
      {
        "name": "604ae958-833c-4ffc-b149-2f0df9736407",
        "fromTable": "Pedido Compra Hecho",
        "fromColumn": "ID_CAMBIO",
        "toTable": "Divisa Cambio",
        "toColumn": "ID_CAMBIO"
      },
      {
        "name": "0d51fa90-e326-4d0e-828c-f87dbbfebe66",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "ID_CAMBIO",
        "toTable": "Divisa Cambio",
        "toColumn": "ID_CAMBIO"
      },
      {
        "name": "15e5c985-5022-443e-8b07-5977dc756104",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "ID_CAMBIO",
        "toTable": "Divisa Cambio",
        "toColumn": "ID_CAMBIO"
      },
      {
        "name": "e15cac4b-34c5-43ea-9eb7-f6842e30e2bf",
        "fromTable": "Factura Compra Hecho Devengados",
        "fromColumn": "ID_CAMBIO",
        "toTable": "Divisa Cambio",
        "toColumn": "ID_CAMBIO"
      },
      {
        "name": "75715a88-d4c6-414c-aa51-6e676c980adb",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_DIVISA_DATA",
        "toTable": "Divisa",
        "toColumn": "ID_DIVISA"
      },
      {
        "name": "8840d6e6-e062-4a84-8052-d1037bd4f2f4",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_COP_PEDIDO",
        "toTable": "COP",
        "toColumn": "ID_CODIGO_PRESUPUESTARIO"
      },
      {
        "name": "0e1f74bf-6917-4c88-bd57-20de5fe73117",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_COP_PEDIDO",
        "toTable": "COP Pedido",
        "toColumn": "ID_CODIGO_PRESUPUESTARIO"
      },
      {
        "name": "3a01c57d-992b-4e7e-bc0b-e13e282231de",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_CUENTA_GRP_PEDIDO",
        "toTable": "Cuenta Grupo",
        "toColumn": "ID_CUENTA_GRUPO"
      },
      {
        "name": "7866143d-5ad4-4ca6-923e-c169731f25c1",
        "fromTable": "Orden Trabajo Hecho",
        "fromColumn": "ID_CUENTA_GRP_PEDIDO",
        "toTable": "Cuenta Grupo Pedido",
        "toColumn": "ID_CUENTA_GRUPO"
      },
      {
        "name": "3e2fc4ee-f749-448f-a0d8-a26de9e63b50",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_CODIGO_PRESUPUESTARIO",
        "toTable": "COP",
        "toColumn": "ID_CODIGO_PRESUPUESTARIO"
      },
      {
        "name": "7e2010b5-6abd-466a-9e9d-c233eb4a2b46",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_CODIGO_PRESUPUESTARIO",
        "toTable": "COP Pedido",
        "toColumn": "ID_CODIGO_PRESUPUESTARIO"
      },
      {
        "name": "c8440574-293a-437f-8ff6-954efdd06272",
        "fromTable": "Albarán Hecho",
        "fromColumn": "ID_CUENTA_GRP",
        "toTable": "Cuenta Grupo Pedido",
        "toColumn": "ID_CUENTA_GRUPO"
      },
      {
        "name": "e3c15b47-9eb2-4c4a-bea6-aa3f1b3bcef9",
        "fromTable": "Proyecto Presupuestario",
        "fromColumn": "ID_AREA_NEGO",
        "toTable": "Area Negocio",
        "toColumn": "ID_AREA_NEGO"
      },
      {
        "name": "73dba8af-3df4-451a-9cf8-6fce09aeeef6",
        "fromTable": "Presupuesto Compra Hecho Sin Devengar",
        "fromColumn": "TIPO_AGREGADO",
        "toTable": "Tipo Agregado",
        "toColumn": "Tipo Agregado"
      },
      {
        "name": "2c82811b-b1b6-4f67-aa56-004983e5e88a",
        "fromTable": "Presupuesto Compra Hecho",
        "fromColumn": "TIPO_AGREGADO",
        "toTable": "Tipo Agregado",
        "toColumn": "Tipo Agregado"
      }
    ],
    "perspectives": [
      {
        "name": "Presupuesto Compra",
        "tables": [
          {
            "name": "Cuenta Local",
            "columns": [
              {
                "name": "Cuenta Local ID"
              },
              {
                "name": "Cuenta Local"
              },
              {
                "name": "ID_CUENTA_EMPRESA"
              },
              {
                "name": "Cuenta Auxiliar"
              }
            ]
          },
          {
            "name": "Cuenta Grupo",
            "columns": [
              {
                "name": "Cuenta Grupo"
              },
              {
                "name": "Cuenta Grupo ID"
              },
              {
                "name": "ID_CUENTA_GRUPO"
              },
              {
                "name": "Cuenta Grupo Tipo"
              }
            ]
          },
          {
            "name": "Cuenta Principal",
            "columns": [
              {
                "name": "ID_CUENTA_PRINCIPAL"
              },
              {
                "name": "Cuenta Principal"
              },
              {
                "name": "Cuenta Principal ID"
              }
            ]
          },
          {
            "name": "Divisa",
            "columns": [
              {
                "name": "Divisa"
              },
              {
                "name": "Divisa ID"
              },
              {
                "name": "Divisa Simbolo"
              },
              {
                "name": "ID_DIVISA"
              }
            ]
          },
          {
            "name": "Sociedad",
            "columns": [
              {
                "name": "ID_EMPRESA_GRUPO"
              },
              {
                "name": "Sociedad"
              },
              {
                "name": "Sociedad ID"
              },
              {
                "name": "Sociedad Mercado"
              },
              {
                "name": "ID_EMPRESA"
              },
              {
                "name": "Sociedad Razon Social Completa"
              },
              {
                "name": "Sociedad Mercado ID"
              }
            ]
          },
          {
            "name": "Sociedad Grupo",
            "columns": [
              {
                "name": "ID_CADENA"
              },
              {
                "name": "ID_EMPRESA_GRUPO"
              },
              {
                "name": "Sociedad Grupo ID"
              },
              {
                "name": "Sociedad Grupo Mercado ID"
              },
              {
                "name": "Sociedad Grupo Razon Social"
              },
              {
                "name": "Sociedad Grupo Nombre Comercial"
              },
              {
                "name": "Sociedad Grupo Mercado ISO"
              },
              {
                "name": "Sociedad Grupo Mercado"
              }
            ]
          },
          {
            "name": "Presupuesto Tipo",
            "columns": [
              {
                "name": "ID_TIPO_PRESUP"
              },
              {
                "name": "Presupuesto Tipo ID"
              },
              {
                "name": "Presupuesto Tipo"
              }
            ]
          },
          {
            "name": "Unidad Compra",
            "columns": [
              {
                "name": "ID_UNIDAD_COMPRA"
              },
              {
                "name": "Unidad Compra"
              },
              {
                "name": "Unidad Compra ID"
              }
            ]
          },
          {
            "name": "Sociedad Cadena",
            "columns": [
              {
                "name": "ID_CADENA_AD"
              },
              {
                "name": "Sociedad Cadena"
              }
            ]
          },
          {
            "name": "Ajeno Familia",
            "columns": [
              {
                "name": "ID_FAM_AJENO"
              },
              {
                "name": "Ajeno Familia"
              },
              {
                "name": "Ajeno Familia ID"
              }
            ]
          },
          {
            "name": "Area Negocio",
            "columns": [
              {
                "name": "Area Negocio"
              },
              {
                "name": "Subarea Negocio"
              },
              {
                "name": "ID Area Negocio"
              },
              {
                "name": "ID Subarea Negocio"
              },
              {
                "name": "ID_AREA_NEGO"
              }
            ]
          },
          {
            "name": "Presupuesto Compra Hecho",
            "columns": [
              {
                "name": "ACTIVO"
              },
              {
                "name": "COD_PRESUP"
              },
              {
                "name": "COD_PRESUP_GPS"
              },
              {
                "name": "ID_CODIGO_PRESUPUESTARIO"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "ID_CUENTA_GRUPO"
              },
              {
                "name": "ID_CUENTA_PRINC"
              },
              {
                "name": "ID_DIVISA"
              },
              {
                "name": "ID_EMP"
              },
              {
                "name": "ID_FAM_AJENO"
              },
              {
                "name": "ID_INFOR_PRESUPUESTO"
              },
              {
                "name": "ID_PROY_CONTABLE"
              },
              {
                "name": "ID_SUBFAM_AJENO"
              },
              {
                "name": "ID_TIPO_PRESUP"
              },
              {
                "name": "ID_UNIDAD_COMPRA"
              },
              {
                "name": "IMPORTE_PRESUP"
              },
              {
                "name": "IMPORTE_PRESUP_EURO"
              },
              {
                "name": "UNIDADES_PRESUP"
              },
              {
                "name": "Fecha Presupuesto Ejercicio"
              },
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "CTAAUX"
              },
              {
                "name": "ID_EMPRESA_GRUPO"
              },
              {
                "name": "PCT_ACTIVA"
              },
              {
                "name": "COD_FACTURA"
              },
              {
                "name": "Es Presupuesto Anual"
              },
              {
                "name": "ID_EMPRESA"
              },
              {
                "name": "ID_MES"
              },
              {
                "name": "Orden Mes"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "Recepcionado €"
              },
              {
                "name": "CADENA"
              },
              {
                "name": "CLASIFICACION_PRESUP"
              },
              {
                "name": "TIPO_AGREGADO"
              }
            ],
            "measures": [
              {
                "name": "Presupuesto Numero"
              },
              {
                "name": "Presupuesto Importe €"
              },
              {
                "name": "Presupuesto Unidades"
              }
            ]
          },
          {
            "name": "Proyecto Presupuestario",
            "columns": [
              {
                "name": "Area Gestion"
              },
              {
                "name": "ID_AREA_SISTEMA"
              },
              {
                "name": "ID_PROYECTO_CONTABLE"
              },
              {
                "name": "Subarea Negocio"
              },
              {
                "name": "Proyecto Presupuestario"
              },
              {
                "name": "Proyecto Presupuestario ID"
              },
              {
                "name": "Proyecto Presupuestario ID & Descripcion"
              },
              {
                "name": "Proyecto Presupuestario Naturaleza ID"
              },
              {
                "name": "Proyecto Presupuestario Etiqueta"
              },
              {
                "name": "Proyecto Presupuestario Tipo Reparto"
              },
              {
                "name": "Responsable Proyecto"
              },
              {
                "name": "Porcentaje Activacion"
              },
              {
                "name": "Responsable Proyecto User ID"
              },
              {
                "name": "ID_AREA_NEGO"
              }
            ]
          },
          {
            "name": "Datos ejecucion ETL",
            "columns": [
              {
                "name": "Descripcion Proceso"
              },
              {
                "name": "Fecha Actualizacion Datos"
              },
              {
                "name": "Fecha Inicio Actualizacion Datos"
              },
              {
                "name": "ID_PROCESO_ETL"
              },
              {
                "name": "VALIDEZ"
              },
              {
                "name": "Versión Tabular"
              }
            ]
          },
          {
            "name": "Presupuesto Ejercicio Fecha",
            "columns": [
              {
                "name": "Día"
              },
              {
                "name": "Día Descripción Corta"
              },
              {
                "name": "Ejercicio Presupuestario"
              },
              {
                "name": "Ejercicio Presupuestario ID"
              },
              {
                "name": "ID_MES"
              },
              {
                "name": "ID_SEMESTRE_FISCAL"
              },
              {
                "name": "ID_TRIMESTRE_FISCAL"
              },
              {
                "name": "Mes Prespuestario"
              },
              {
                "name": "Semestre Presupuestario"
              },
              {
                "name": "Trimestre Presupuestario"
              },
              {
                "name": "Orden Mes Presupuesto"
              },
              {
                "name": "Semestre Presupuestario Nom Corto"
              },
              {
                "name": "Trimestre Presupuestario Nom Corto"
              },
              {
                "name": "ID_FECHA_PRESUPUESTARIA"
              },
              {
                "name": "Orden Mes"
              }
            ],
            "hierarchies": [
              {
                "name": "Ejercicio/Sem/Tri"
              }
            ]
          },
          {
            "name": "Pedido",
            "columns": [
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "Pedido"
              },
              {
                "name": "Pedido ID"
              },
              {
                "name": "Pedido ID  & Descripcion"
              },
              {
                "name": "Naturaleza Compra"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "Tipo Pedido"
              }
            ]
          },
          {
            "name": "Proyecto Presupuestario Naturaleza",
            "columns": [
              {
                "name": "Proyecto Presupuestario Naturaleza"
              },
              {
                "name": "Proyecto Presupuestario Naturaleza Descripcion Corta"
              },
              {
                "name": "Proyecto Presupuestario Naturaleza ID"
              }
            ]
          },
          {
            "name": "AUX_REPARTO_FACTURAS",
            "columns": [
              {
                "name": "ID_FACTURA_IMPUTACION_CONTABLE"
              },
              {
                "name": "ID_FACTURA"
              },
              {
                "name": "COD_CTA_AUX"
              },
              {
                "name": "Cadena"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "Mercado"
              },
              {
                "name": "TND_DEST"
              }
            ]
          },
          {
            "name": "AUX_REPARTO_PRESUPUESTO",
            "columns": [
              {
                "name": "Cadena"
              },
              {
                "name": "CTAAUX"
              },
              {
                "name": "ID_MES"
              },
              {
                "name": "ID_PRESUP"
              },
              {
                "name": "Mercado"
              },
              {
                "name": "CADENA_CRUCE"
              }
            ]
          },
          {
            "name": "AUX_SEGURIDAD_AREA",
            "columns": [
              {
                "name": "AREA"
              },
              {
                "name": "LOGINID"
              }
            ]
          },
          {
            "name": "AUX_SEGURIDAD_AREA_NEGOCIO",
            "columns": [
              {
                "name": "AREAN"
              },
              {
                "name": "LOGINID"
              }
            ]
          },
          {
            "name": "AUX_SEGURIDAD_SOCIEDAD",
            "columns": [
              {
                "name": "LOGINID"
              },
              {
                "name": "SOCIEDAD"
              }
            ]
          },
          {
            "name": "Factura Compra Hecho",
            "columns": [
              {
                "name": "Cadena Destino"
              },
              {
                "name": "COD_FCTR_IMPUTACION_CONTAB"
              },
              {
                "name": "Cumple Fecha Cierre"
              },
              {
                "name": "EJERCICIO_CIERRE"
              },
              {
                "name": "Factura ID"
              },
              {
                "name": "Factura Num"
              },
              {
                "name": "FACTURA_CABECERA_FILIAL"
              },
              {
                "name": "FACTURA_FILIAL"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "FECHA_ALTA_CIERRE"
              },
              {
                "name": "FEHO_ALTA_FACTURA"
              },
              {
                "name": "FEHO_ALTA_FACTURA_ORIGINAL"
              },
              {
                "name": "FEHO_EJEC_FACTURA"
              },
              {
                "name": "ID_CD_PEDIDO"
              },
              {
                "name": "ID_COD_PRESUPTARIO"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "ID_CUENTA_GRP"
              },
              {
                "name": "ID_CUENTA_GRP_PEDIDO"
              },
              {
                "name": "ID_CUENTA_PRINC"
              },
              {
                "name": "ID_DIVISA"
              },
              {
                "name": "ID_EMISOR"
              },
              {
                "name": "ID_EMP_DEST_PEDIDO"
              },
              {
                "name": "ID_EMP_PROVE_PEDIDO"
              },
              {
                "name": "ID_ESTADO_FACTURA"
              },
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "ID_FAM_AJENO_PEDIDO"
              },
              {
                "name": "ID_FORMA_PAGO"
              },
              {
                "name": "ID_INFO_PREV_FACTURA"
              },
              {
                "name": "ID_MES_CIERRE_FACTURA"
              },
              {
                "name": "ID_ORDEN_TRABAJO_LINEA"
              },
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "ID_PROY_PEDIDO"
              },
              {
                "name": "ID_RECEPTOR"
              },
              {
                "name": "ID_SUBFAM_AJENO_PEDIDO"
              },
              {
                "name": "ID_TIPO_GESTOR_PEDIDO"
              },
              {
                "name": "ID_TIPO_SISTEMA_ORIGEN"
              },
              {
                "name": "ID_UNI_COMPRA"
              },
              {
                "name": "Importe_Factura_sin_impto_euro"
              },
              {
                "name": "Mercado Destino"
              },
              {
                "name": "TND_DEST"
              },
              {
                "name": "ID_LOC_COMPRA_PEDIDO"
              },
              {
                "name": "ID_FECHA_FACTURA"
              },
              {
                "name": "IMPORTE_FACTURA_SIN_IMPTO"
              }
            ],
            "measures": [
              {
                "name": "% Inc Cierre vs Ppto Acum €"
              },
              {
                "name": "% Inc vs Ped €"
              },
              {
                "name": "% Inc vs Ppto €"
              },
              {
                "name": "Inc Cierre vs Ppto Acum €"
              },
              {
                "name": "Incurrido €"
              },
              {
                "name": "Incurrido € Cierre"
              },
              {
                "name": "Incurrido € Cierre Ejec"
              },
              {
                "name": "Incurrido Ajenos €"
              },
              {
                "name": "Incurrido Ajenos Cierre €"
              },
              {
                "name": "Incurrido Ajenos Cierre Abril"
              },
              {
                "name": "Incurrido Ajenos Cierre Agosto"
              },
              {
                "name": "Incurrido Ajenos Cierre Diciembre"
              },
              {
                "name": "Incurrido Ajenos Cierre Enero"
              },
              {
                "name": "Incurrido Ajenos Cierre Facturas"
              },
              {
                "name": "Incurrido Ajenos Cierre Febrero"
              },
              {
                "name": "Incurrido Ajenos Cierre Julio"
              },
              {
                "name": "Incurrido Ajenos Cierre Junio"
              },
              {
                "name": "Incurrido Ajenos Cierre Marzo"
              },
              {
                "name": "Incurrido Ajenos Cierre Mayo"
              },
              {
                "name": "Incurrido Ajenos Cierre Noviembre"
              },
              {
                "name": "Incurrido Ajenos Cierre Octubre"
              },
              {
                "name": "Incurrido Ajenos Cierre Provisiones"
              },
              {
                "name": "Incurrido Ajenos Cierre Septiembre"
              },
              {
                "name": "Incurrido Cierre Abril"
              },
              {
                "name": "Incurrido Cierre Agosto"
              },
              {
                "name": "Incurrido Cierre Diciembre"
              },
              {
                "name": "Incurrido Cierre Ejec Abril"
              },
              {
                "name": "Incurrido Cierre Ejec Agosto"
              },
              {
                "name": "Incurrido Cierre Ejec Diciembre"
              },
              {
                "name": "Incurrido Cierre Ejec Enero"
              },
              {
                "name": "Incurrido Cierre Ejec Febrero"
              },
              {
                "name": "Incurrido Cierre Ejec Julio"
              },
              {
                "name": "Incurrido Cierre Ejec Junio"
              },
              {
                "name": "Incurrido Cierre Ejec Marzo"
              },
              {
                "name": "Incurrido Cierre Ejec Mayo"
              },
              {
                "name": "Incurrido Cierre Ejec Noviembre"
              },
              {
                "name": "Incurrido Cierre Ejec Octubre"
              },
              {
                "name": "Incurrido Cierre Ejec Septiembre"
              },
              {
                "name": "Incurrido Cierre Enero"
              },
              {
                "name": "Incurrido Cierre Facturas"
              },
              {
                "name": "Incurrido Cierre Febrero"
              },
              {
                "name": "Incurrido Cierre Julio"
              },
              {
                "name": "Incurrido Cierre Junio"
              },
              {
                "name": "Incurrido Cierre Marzo"
              },
              {
                "name": "Incurrido Cierre Mayo"
              },
              {
                "name": "Incurrido Cierre Noviembre"
              },
              {
                "name": "Incurrido Cierre Octubre"
              },
              {
                "name": "Incurrido Cierre Provisiones"
              },
              {
                "name": "Incurrido Cierre Septiembre"
              },
              {
                "name": "Provisiones vs Facturas"
              }
            ]
          },
          {
            "name": "Factura Compra Hecho Devengados",
            "columns": [
              {
                "name": "Cadena Destino"
              },
              {
                "name": "COD_EMISOR"
              },
              {
                "name": "COD_FCTR_IMPUTACION_CONTAB"
              },
              {
                "name": "Cumple Fecha Cierre"
              },
              {
                "name": "EJERCICIO_CIERRE"
              },
              {
                "name": "Factura ID"
              },
              {
                "name": "Factura Num"
              },
              {
                "name": "FACTURA_CABECERA_FILIAL"
              },
              {
                "name": "FACTURA_FILIAL"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "FECHA_ALTA_CIERRE"
              },
              {
                "name": "FECHA_DEVENGO"
              },
              {
                "name": "FEHO_ALTA_FACTURA_ORIGINAL"
              },
              {
                "name": "FEHO_EJEC_FACTURA"
              },
              {
                "name": "ID_CD_PEDIDO"
              },
              {
                "name": "ID_COD_PRESUPTARIO"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "ID_CUENTA_GRP"
              },
              {
                "name": "ID_CUENTA_GRP_PEDIDO"
              },
              {
                "name": "ID_CUENTA_PRINC"
              },
              {
                "name": "ID_DIVISA"
              },
              {
                "name": "ID_EMISOR"
              },
              {
                "name": "ID_EMP_DEST_PEDIDO"
              },
              {
                "name": "ID_EMP_PROVE_PEDIDO"
              },
              {
                "name": "ID_ESTADO_FACTURA"
              },
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "ID_FAM_AJENO_PEDIDO"
              },
              {
                "name": "ID_FORMA_PAGO"
              },
              {
                "name": "ID_INFO_PREV_FACTURA"
              },
              {
                "name": "ID_MES_CIERRE_FACTURA"
              },
              {
                "name": "ID_ORDEN_TRABAJO_LINEA"
              },
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "ID_PROY_PEDIDO"
              },
              {
                "name": "ID_RECEPTOR"
              },
              {
                "name": "ID_SUBFAM_AJENO_PEDIDO"
              },
              {
                "name": "ID_TIPO_GESTOR_PEDIDO"
              },
              {
                "name": "ID_TIPO_SISTEMA_ORIGEN"
              },
              {
                "name": "ID_UNI_COMPRA"
              },
              {
                "name": "IMPORTE_DEVENGADO_EURO"
              },
              {
                "name": "Mercado Destino"
              },
              {
                "name": "TND_DEST"
              },
              {
                "name": "ID_FECHA_FACTURA"
              },
              {
                "name": "IMPORTE_DEVENGADO"
              }
            ],
            "measures": [
              {
                "name": "% Inc Cierre Devengados vs Ppto Acum €"
              },
              {
                "name": "% Inc vs Ped Devengados €"
              },
              {
                "name": "% Inc vs Ppto Devengados €"
              },
              {
                "name": "Inc Cierre Devengados vs Ppto Acum €"
              },
              {
                "name": "Incurrido Ajenos Cierre Devengado Facturas"
              },
              {
                "name": "Incurrido Ajenos Cierre Devengado Provisiones"
              },
              {
                "name": "Incurrido Ajenos Devengados €"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre €"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Abril"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Agosto"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Diciembre"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Enero"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Febrero"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Julio"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Junio"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Marzo"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Mayo"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Noviembre"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Octubre"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Septiembre"
              },
              {
                "name": "Incurrido Cierre Devengado Provisiones"
              },
              {
                "name": "Incurrido Devengado €"
              },
              {
                "name": "Incurrido Devengado € Cierre"
              },
              {
                "name": "Incurrido Devengado Cierre Abril"
              },
              {
                "name": "Incurrido Devengado Cierre Agosto"
              },
              {
                "name": "Incurrido Devengado Cierre Diciembre"
              },
              {
                "name": "Incurrido Devengado Cierre Enero"
              },
              {
                "name": "Incurrido Devengado Cierre Febrero"
              },
              {
                "name": "Incurrido Devengado Cierre Julio"
              },
              {
                "name": "Incurrido Devengado Cierre Junio"
              },
              {
                "name": "Incurrido Devengado Cierre Marzo"
              },
              {
                "name": "Incurrido Devengado Cierre Mayo"
              },
              {
                "name": "Incurrido Devengado Cierre Noviembre"
              },
              {
                "name": "Incurrido Devengado Cierre Octubre"
              },
              {
                "name": "Incurrido Devengado Cierre Septiembre"
              },
              {
                "name": "Incurrido Devengados Cierre Facturas"
              },
              {
                "name": "Incurrido Filial Franquicia"
              },
              {
                "name": "Provisiones vs Facturas Devengados"
              },
              {
                "name": "Refacturaciones"
              }
            ]
          }
        ]
      },
      {
        "name": "Pedido Compra",
        "tables": [
          {
            "name": "Cuenta Local",
            "columns": [
              {
                "name": "Cuenta Local ID"
              },
              {
                "name": "Cuenta Local"
              },
              {
                "name": "ID_CUENTA_EMPRESA"
              },
              {
                "name": "Cuenta Auxiliar"
              }
            ]
          },
          {
            "name": "Cuenta Principal",
            "columns": [
              {
                "name": "ID_CUENTA_PRINCIPAL"
              },
              {
                "name": "Cuenta Principal"
              },
              {
                "name": "Cuenta Principal ID"
              }
            ]
          },
          {
            "name": "Area",
            "columns": [
              {
                "name": "Area ID"
              },
              {
                "name": "ID_AREA_SISTEMA"
              },
              {
                "name": "ID_RESPONSABLE_AREA"
              },
              {
                "name": "ID_RECURSO_PROYECTO"
              },
              {
                "name": "Departamento"
              },
              {
                "name": "Area"
              }
            ]
          },
          {
            "name": "Unidad Compra",
            "columns": [
              {
                "name": "ID_UNIDAD_COMPRA"
              },
              {
                "name": "Unidad Compra"
              },
              {
                "name": "Unidad Compra ID"
              }
            ]
          },
          {
            "name": "Divisa",
            "columns": [
              {
                "name": "Divisa"
              },
              {
                "name": "Divisa ID"
              },
              {
                "name": "Divisa Simbolo"
              },
              {
                "name": "ID_DIVISA"
              }
            ]
          },
          {
            "name": "Pedido Estado",
            "columns": [
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "Pedido Estado ID"
              },
              {
                "name": "Pedido Estado anterior"
              },
              {
                "name": "Pedido Estado"
              }
            ]
          },
          {
            "name": "Sociedad",
            "columns": [
              {
                "name": "ID_EMPRESA_GRUPO"
              },
              {
                "name": "Sociedad"
              },
              {
                "name": "Sociedad ID"
              },
              {
                "name": "Sociedad Mercado"
              },
              {
                "name": "ID_EMPRESA"
              },
              {
                "name": "Sociedad Razon Social Completa"
              },
              {
                "name": "Sociedad Mercado ID"
              }
            ]
          },
          {
            "name": "Sociedad Cadena",
            "columns": [
              {
                "name": "ID_CADENA_AD"
              },
              {
                "name": "Sociedad Cadena"
              }
            ]
          },
          {
            "name": "Pedido",
            "columns": [
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "Pedido ID"
              },
              {
                "name": "Pedido"
              },
              {
                "name": "Pedido ID  & Descripcion"
              },
              {
                "name": "Naturaleza Compra"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "Tipo Pedido"
              }
            ]
          },
          {
            "name": "Pedido Estado Linea",
            "columns": [
              {
                "name": "ID_ESTADO_LINEA_PEDIDO"
              },
              {
                "name": "Pedido Estado Linea ID"
              },
              {
                "name": "Pedido Estado Linea"
              }
            ]
          },
          {
            "name": "Pedido Ajeno",
            "columns": [
              {
                "name": "Pedido Ajeno"
              },
              {
                "name": "Pedido Ajeno ID"
              },
              {
                "name": "Pedido Ajeno Descripcion Tecnica"
              },
              {
                "name": "Pedido Ajeno Nombre"
              },
              {
                "name": "ID_AJENO"
              },
              {
                "name": "ID_SUBFAM_AJENO"
              },
              {
                "name": "ID_FAM_AJENO"
              }
            ]
          },
          {
            "name": "Tipo Gestor",
            "columns": [
              {
                "name": "ID_TIPO_GESTOR"
              },
              {
                "name": "Tipo Gestor"
              },
              {
                "name": "Tipo Gestor ID"
              }
            ]
          },
          {
            "name": "Centro Distribucion",
            "columns": [
              {
                "name": "ID_LOCALIZACION_COMPRA"
              },
              {
                "name": "Centro Destribucion"
              }
            ]
          },
          {
            "name": "COP",
            "columns": [
              {
                "name": "ID_CODIGO_PRESUPUESTARIO"
              },
              {
                "name": "COP ID"
              },
              {
                "name": "COP"
              }
            ]
          },
          {
            "name": "Empresa Proveedor",
            "columns": [
              {
                "name": "ID_EMPRESA"
              },
              {
                "name": "Empresa Proveedor"
              },
              {
                "name": "Mercado Proveedor"
              },
              {
                "name": "Empresa Proveedor ID"
              },
              {
                "name": "Empresa Proveedor Razon Social"
              },
              {
                "name": "Empresa Proveedor Razon Social Completa"
              },
              {
                "name": "Nombre Comercial"
              },
              {
                "name": "Tipo Empresa"
              }
            ]
          },
          {
            "name": "Sociedad Grupo",
            "columns": [
              {
                "name": "Sociedad Grupo ID"
              },
              {
                "name": "Sociedad Grupo Mercado"
              },
              {
                "name": "Sociedad Grupo Mercado ID"
              },
              {
                "name": "Sociedad Grupo Mercado ISO"
              },
              {
                "name": "Sociedad Grupo Nombre Comercial"
              },
              {
                "name": "Sociedad Grupo Razon Social"
              },
              {
                "name": "ID_CADENA"
              },
              {
                "name": "ID_EMPRESA_GRUPO"
              }
            ]
          },
          {
            "name": "Ajeno Familia",
            "columns": [
              {
                "name": "ID_FAM_AJENO"
              },
              {
                "name": "Ajeno Familia"
              },
              {
                "name": "Ajeno Familia ID"
              }
            ]
          },
          {
            "name": "Ajeno Subfamilia",
            "columns": [
              {
                "name": "ID_SUBFAM_AJENO"
              },
              {
                "name": "Ajeno Subfamilia"
              },
              {
                "name": "Ajeno Subfamilia ID"
              }
            ]
          },
          {
            "name": "Area Negocio",
            "columns": [
              {
                "name": "Area Negocio"
              },
              {
                "name": "Subarea Negocio"
              },
              {
                "name": "ID Area Negocio"
              },
              {
                "name": "ID Subarea Negocio"
              },
              {
                "name": "ID_AREA_NEGO"
              }
            ]
          },
          {
            "name": "Pedido Compra Hecho",
            "columns": [
              {
                "name": "ID_DIVISA"
              },
              {
                "name": "ID_ESTADO_LINEA_PEDIDO"
              },
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "ID_CUENTA_PRINC"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "ID_CUENTA_GRP"
              },
              {
                "name": "ID_UNIDAD_COMPRA"
              },
              {
                "name": "ID_AJENO"
              },
              {
                "name": "ID_TIPO_GESTOR"
              },
              {
                "name": "ID_PROY_CONTABLE"
              },
              {
                "name": "ID_CENTRO_DISTRIBUCION"
              },
              {
                "name": "ID_CODIGO_PRESUPUESTARIO"
              },
              {
                "name": "ID_EMP_DEST"
              },
              {
                "name": "ID_EMP_PROVEEDOR"
              },
              {
                "name": "UNIDADES"
              },
              {
                "name": "UNIDADES_RECIBIDAS"
              },
              {
                "name": "Importe Pedido Euros"
              },
              {
                "name": "Importe Recepcionado Euros"
              },
              {
                "name": "ID_FECHA_PEDIDO"
              },
              {
                "name": "ID_FECHA_PRESUPUESTARIA"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "COD_PEDIDO"
              },
              {
                "name": "COD_LINEA_PEDIDO"
              },
              {
                "name": "Tipo Agregado"
              },
              {
                "name": "CAMBIO"
              },
              {
                "name": "ID_LOCALIZACION_COMPRA"
              },
              {
                "name": "IMPORTE_PEDIDO"
              },
              {
                "name": "IMPORTE_RECEPCIONADO"
              }
            ],
            "measures": [
              {
                "name": "Pedido Unidades"
              },
              {
                "name": "Pedido Importe Recepcionado Global €"
              },
              {
                "name": "Pedido Numero"
              },
              {
                "name": "Pedido Unidades Recepcionadas"
              },
              {
                "name": "Pedido Importe Global €"
              },
              {
                "name": "Pedido Importe €"
              },
              {
                "name": "Ped vs Ppto"
              }
            ]
          },
          {
            "name": "Proyecto Presupuestario",
            "columns": [
              {
                "name": "Area Gestion"
              },
              {
                "name": "ID_AREA_SISTEMA"
              },
              {
                "name": "ID_PROYECTO_CONTABLE"
              },
              {
                "name": "Subarea Negocio"
              },
              {
                "name": "Proyecto Presupuestario"
              },
              {
                "name": "Proyecto Presupuestario ID"
              },
              {
                "name": "Proyecto Presupuestario ID & Descripcion"
              },
              {
                "name": "Proyecto Presupuestario Naturaleza ID"
              },
              {
                "name": "Proyecto Presupuestario Etiqueta"
              },
              {
                "name": "Proyecto Presupuestario Tipo Reparto"
              },
              {
                "name": "Responsable Proyecto"
              },
              {
                "name": "Porcentaje Activacion"
              },
              {
                "name": "Responsable Proyecto User ID"
              },
              {
                "name": "ID_AREA_NEGO"
              }
            ]
          },
          {
            "name": "Datos ejecucion ETL",
            "columns": [
              {
                "name": "Descripcion Proceso"
              },
              {
                "name": "Fecha Actualizacion Datos"
              },
              {
                "name": "Fecha Inicio Actualizacion Datos"
              },
              {
                "name": "ID_PROCESO_ETL"
              },
              {
                "name": "VALIDEZ"
              },
              {
                "name": "Versión Tabular"
              }
            ]
          },
          {
            "name": "Proyecto Presupuestario Naturaleza",
            "columns": [
              {
                "name": "Proyecto Presupuestario Naturaleza"
              },
              {
                "name": "Proyecto Presupuestario Naturaleza Descripcion Corta"
              },
              {
                "name": "Proyecto Presupuestario Naturaleza ID"
              }
            ]
          },
          {
            "name": "Presupuesto Ejercicio Fecha",
            "columns": [
              {
                "name": "Día"
              },
              {
                "name": "Día Descripción Corta"
              },
              {
                "name": "Ejercicio Presupuestario"
              },
              {
                "name": "Ejercicio Presupuestario ID"
              },
              {
                "name": "ID_MES"
              },
              {
                "name": "ID_SEMESTRE_FISCAL"
              },
              {
                "name": "ID_TRIMESTRE_FISCAL"
              },
              {
                "name": "Mes Prespuestario"
              },
              {
                "name": "Orden Mes Presupuesto"
              },
              {
                "name": "Semestre Presupuestario"
              },
              {
                "name": "Trimestre Presupuestario"
              },
              {
                "name": "Semestre Presupuestario Nom Corto"
              },
              {
                "name": "Trimestre Presupuestario Nom Corto"
              },
              {
                "name": "ID_FECHA_PRESUPUESTARIA"
              },
              {
                "name": "Orden Mes"
              }
            ],
            "hierarchies": [
              {
                "name": "Ejercicio/Sem/Tri"
              }
            ]
          },
          {
            "name": "AUX_REPARTO_FACTURAS",
            "columns": [
              {
                "name": "Cadena"
              },
              {
                "name": "COD_CTA_AUX"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "ID_FACTURA"
              },
              {
                "name": "ID_FACTURA_IMPUTACION_CONTABLE"
              },
              {
                "name": "Mercado"
              },
              {
                "name": "TND_DEST"
              }
            ]
          },
          {
            "name": "AUX_REPARTO_PRESUPUESTO",
            "columns": [
              {
                "name": "Cadena"
              },
              {
                "name": "CTAAUX"
              },
              {
                "name": "ID_MES"
              },
              {
                "name": "ID_PRESUP"
              },
              {
                "name": "Mercado"
              },
              {
                "name": "CADENA_CRUCE"
              }
            ]
          },
          {
            "name": "AUX_SEGURIDAD_AREA",
            "columns": [
              {
                "name": "AREA"
              },
              {
                "name": "LOGINID"
              }
            ]
          },
          {
            "name": "AUX_SEGURIDAD_AREA_NEGOCIO",
            "columns": [
              {
                "name": "AREAN"
              },
              {
                "name": "LOGINID"
              }
            ]
          },
          {
            "name": "AUX_SEGURIDAD_SOCIEDAD",
            "columns": [
              {
                "name": "LOGINID"
              },
              {
                "name": "SOCIEDAD"
              }
            ]
          },
          {
            "name": "Cadena Local",
            "columns": [
              {
                "name": "Cadena"
              },
              {
                "name": "ID Cadena"
              }
            ]
          },
          {
            "name": "Orden Trabajo Hecho",
            "columns": [
              {
                "name": "CMB"
              },
              {
                "name": "DESCRIPCION"
              },
              {
                "name": "ESTADO_OT"
              },
              {
                "name": "Fecha Alta"
              },
              {
                "name": "Fecha Ejecución"
              },
              {
                "name": "Fecha Hora Expedición"
              },
              {
                "name": "ID_DIVISA"
              },
              {
                "name": "ID_DIVISA_DATA"
              },
              {
                "name": "ID_EMP_DEST"
              },
              {
                "name": "ID_EMP_PROVEEDOR"
              },
              {
                "name": "ID_ESTADO_OT"
              },
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "ID_FACTURA"
              },
              {
                "name": "ID_FECHA_FECHA_PRESUPUESTARIA"
              },
              {
                "name": "ID_ORDEN_TRABAJO"
              },
              {
                "name": "ID_ORDEN_TRABAJO_LINEA"
              },
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "ID_PEDIDO_DATA"
              },
              {
                "name": "ID_PEDIDO_LINEA"
              },
              {
                "name": "ID_PROY_CONTABLE"
              },
              {
                "name": "ID_UNIDAD_COMPRA"
              },
              {
                "name": "PRECIO_UNITARIO"
              },
              {
                "name": "UNIDADES_PROVEEDOR"
              },
              {
                "name": "USUARIO_ALTA"
              }
            ],
            "measures": [
              {
                "name": "Importe OT"
              }
            ]
          },
          {
            "name": "Factura Compra Hecho",
            "columns": [
              {
                "name": "Cadena Destino"
              },
              {
                "name": "COD_FCTR_IMPUTACION_CONTAB"
              },
              {
                "name": "Cumple Fecha Cierre"
              },
              {
                "name": "EJERCICIO_CIERRE"
              },
              {
                "name": "Factura ID"
              },
              {
                "name": "Factura Num"
              },
              {
                "name": "FACTURA_CABECERA_FILIAL"
              },
              {
                "name": "FACTURA_FILIAL"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "FECHA_ALTA_CIERRE"
              },
              {
                "name": "FEHO_ALTA_FACTURA"
              },
              {
                "name": "FEHO_ALTA_FACTURA_ORIGINAL"
              },
              {
                "name": "FEHO_EJEC_FACTURA"
              },
              {
                "name": "ID_CD_PEDIDO"
              },
              {
                "name": "ID_COD_PRESUPTARIO"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "ID_CUENTA_GRP"
              },
              {
                "name": "ID_CUENTA_GRP_PEDIDO"
              },
              {
                "name": "ID_CUENTA_PRINC"
              },
              {
                "name": "ID_DIVISA"
              },
              {
                "name": "ID_EMISOR"
              },
              {
                "name": "ID_EMP_DEST_PEDIDO"
              },
              {
                "name": "ID_EMP_PROVE_PEDIDO"
              },
              {
                "name": "ID_ESTADO_FACTURA"
              },
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "ID_FAM_AJENO_PEDIDO"
              },
              {
                "name": "ID_FORMA_PAGO"
              },
              {
                "name": "ID_INFO_PREV_FACTURA"
              },
              {
                "name": "ID_MES_CIERRE_FACTURA"
              },
              {
                "name": "ID_ORDEN_TRABAJO_LINEA"
              },
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "ID_PROY_PEDIDO"
              },
              {
                "name": "ID_RECEPTOR"
              },
              {
                "name": "ID_SUBFAM_AJENO_PEDIDO"
              },
              {
                "name": "ID_TIPO_GESTOR_PEDIDO"
              },
              {
                "name": "ID_TIPO_SISTEMA_ORIGEN"
              },
              {
                "name": "ID_UNI_COMPRA"
              },
              {
                "name": "Importe_Factura_sin_impto_euro"
              },
              {
                "name": "Mercado Destino"
              },
              {
                "name": "TND_DEST"
              },
              {
                "name": "ID_LOC_COMPRA_PEDIDO"
              },
              {
                "name": "ID_FECHA_FACTURA"
              },
              {
                "name": "IMPORTE_FACTURA_SIN_IMPTO"
              }
            ],
            "measures": [
              {
                "name": "% Inc Cierre vs Ppto Acum €"
              },
              {
                "name": "% Inc vs Ped €"
              },
              {
                "name": "% Inc vs Ppto €"
              },
              {
                "name": "Inc Cierre vs Ppto Acum €"
              },
              {
                "name": "Incurrido €"
              },
              {
                "name": "Incurrido € Cierre"
              },
              {
                "name": "Incurrido € Cierre Ejec"
              },
              {
                "name": "Incurrido Ajenos €"
              },
              {
                "name": "Incurrido Ajenos Cierre €"
              },
              {
                "name": "Incurrido Ajenos Cierre Abril"
              },
              {
                "name": "Incurrido Ajenos Cierre Agosto"
              },
              {
                "name": "Incurrido Ajenos Cierre Diciembre"
              },
              {
                "name": "Incurrido Ajenos Cierre Enero"
              },
              {
                "name": "Incurrido Ajenos Cierre Facturas"
              },
              {
                "name": "Incurrido Ajenos Cierre Febrero"
              },
              {
                "name": "Incurrido Ajenos Cierre Julio"
              },
              {
                "name": "Incurrido Ajenos Cierre Junio"
              },
              {
                "name": "Incurrido Ajenos Cierre Marzo"
              },
              {
                "name": "Incurrido Ajenos Cierre Mayo"
              },
              {
                "name": "Incurrido Ajenos Cierre Noviembre"
              },
              {
                "name": "Incurrido Ajenos Cierre Octubre"
              },
              {
                "name": "Incurrido Ajenos Cierre Provisiones"
              },
              {
                "name": "Incurrido Ajenos Cierre Septiembre"
              },
              {
                "name": "Incurrido Cierre Abril"
              },
              {
                "name": "Incurrido Cierre Agosto"
              },
              {
                "name": "Incurrido Cierre Diciembre"
              },
              {
                "name": "Incurrido Cierre Ejec Abril"
              },
              {
                "name": "Incurrido Cierre Ejec Agosto"
              },
              {
                "name": "Incurrido Cierre Ejec Diciembre"
              },
              {
                "name": "Incurrido Cierre Ejec Enero"
              },
              {
                "name": "Incurrido Cierre Ejec Febrero"
              },
              {
                "name": "Incurrido Cierre Ejec Julio"
              },
              {
                "name": "Incurrido Cierre Ejec Junio"
              },
              {
                "name": "Incurrido Cierre Ejec Marzo"
              },
              {
                "name": "Incurrido Cierre Ejec Mayo"
              },
              {
                "name": "Incurrido Cierre Ejec Noviembre"
              },
              {
                "name": "Incurrido Cierre Ejec Octubre"
              },
              {
                "name": "Incurrido Cierre Ejec Septiembre"
              },
              {
                "name": "Incurrido Cierre Enero"
              },
              {
                "name": "Incurrido Cierre Facturas"
              },
              {
                "name": "Incurrido Cierre Febrero"
              },
              {
                "name": "Incurrido Cierre Julio"
              },
              {
                "name": "Incurrido Cierre Junio"
              },
              {
                "name": "Incurrido Cierre Marzo"
              },
              {
                "name": "Incurrido Cierre Mayo"
              },
              {
                "name": "Incurrido Cierre Noviembre"
              },
              {
                "name": "Incurrido Cierre Octubre"
              },
              {
                "name": "Incurrido Cierre Provisiones"
              },
              {
                "name": "Incurrido Cierre Septiembre"
              },
              {
                "name": "Provisiones vs Facturas"
              }
            ]
          },
          {
            "name": "Factura Compra Hecho Devengados",
            "columns": [
              {
                "name": "Cadena Destino"
              },
              {
                "name": "COD_EMISOR"
              },
              {
                "name": "COD_FCTR_IMPUTACION_CONTAB"
              },
              {
                "name": "Cumple Fecha Cierre"
              },
              {
                "name": "EJERCICIO_CIERRE"
              },
              {
                "name": "Factura ID"
              },
              {
                "name": "Factura Num"
              },
              {
                "name": "FACTURA_CABECERA_FILIAL"
              },
              {
                "name": "FACTURA_FILIAL"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "FECHA_ALTA_CIERRE"
              },
              {
                "name": "FECHA_DEVENGO"
              },
              {
                "name": "FEHO_ALTA_FACTURA_ORIGINAL"
              },
              {
                "name": "FEHO_EJEC_FACTURA"
              },
              {
                "name": "ID_CD_PEDIDO"
              },
              {
                "name": "ID_COD_PRESUPTARIO"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "ID_CUENTA_GRP"
              },
              {
                "name": "ID_CUENTA_GRP_PEDIDO"
              },
              {
                "name": "ID_CUENTA_PRINC"
              },
              {
                "name": "ID_DIVISA"
              },
              {
                "name": "ID_EMISOR"
              },
              {
                "name": "ID_EMP_DEST_PEDIDO"
              },
              {
                "name": "ID_EMP_PROVE_PEDIDO"
              },
              {
                "name": "ID_ESTADO_FACTURA"
              },
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "ID_FAM_AJENO_PEDIDO"
              },
              {
                "name": "ID_FORMA_PAGO"
              },
              {
                "name": "ID_INFO_PREV_FACTURA"
              },
              {
                "name": "ID_MES_CIERRE_FACTURA"
              },
              {
                "name": "ID_ORDEN_TRABAJO_LINEA"
              },
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "ID_PROY_PEDIDO"
              },
              {
                "name": "ID_RECEPTOR"
              },
              {
                "name": "ID_SUBFAM_AJENO_PEDIDO"
              },
              {
                "name": "ID_TIPO_GESTOR_PEDIDO"
              },
              {
                "name": "ID_TIPO_SISTEMA_ORIGEN"
              },
              {
                "name": "ID_UNI_COMPRA"
              },
              {
                "name": "IMPORTE_DEVENGADO_EURO"
              },
              {
                "name": "Mercado Destino"
              },
              {
                "name": "TND_DEST"
              },
              {
                "name": "ID_FECHA_FACTURA"
              },
              {
                "name": "IMPORTE_DEVENGADO"
              }
            ],
            "measures": [
              {
                "name": "% Inc Cierre Devengados vs Ppto Acum €"
              },
              {
                "name": "% Inc vs Ped Devengados €"
              },
              {
                "name": "% Inc vs Ppto Devengados €"
              },
              {
                "name": "Inc Cierre Devengados vs Ppto Acum €"
              },
              {
                "name": "Incurrido Ajenos Cierre Devengado Facturas"
              },
              {
                "name": "Incurrido Ajenos Cierre Devengado Provisiones"
              },
              {
                "name": "Incurrido Ajenos Devengados €"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre €"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Abril"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Agosto"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Diciembre"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Enero"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Febrero"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Julio"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Junio"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Marzo"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Mayo"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Noviembre"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Octubre"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Septiembre"
              },
              {
                "name": "Incurrido Cierre Devengado Provisiones"
              },
              {
                "name": "Incurrido Devengado €"
              },
              {
                "name": "Incurrido Devengado € Cierre"
              },
              {
                "name": "Incurrido Devengado Cierre Abril"
              },
              {
                "name": "Incurrido Devengado Cierre Agosto"
              },
              {
                "name": "Incurrido Devengado Cierre Diciembre"
              },
              {
                "name": "Incurrido Devengado Cierre Enero"
              },
              {
                "name": "Incurrido Devengado Cierre Febrero"
              },
              {
                "name": "Incurrido Devengado Cierre Julio"
              },
              {
                "name": "Incurrido Devengado Cierre Junio"
              },
              {
                "name": "Incurrido Devengado Cierre Marzo"
              },
              {
                "name": "Incurrido Devengado Cierre Mayo"
              },
              {
                "name": "Incurrido Devengado Cierre Noviembre"
              },
              {
                "name": "Incurrido Devengado Cierre Octubre"
              },
              {
                "name": "Incurrido Devengado Cierre Septiembre"
              },
              {
                "name": "Incurrido Devengados Cierre Facturas"
              },
              {
                "name": "Incurrido Filial Franquicia"
              },
              {
                "name": "Provisiones vs Facturas Devengados"
              },
              {
                "name": "Refacturaciones"
              }
            ]
          }
        ]
      },
      {
        "name": "Factura Compra",
        "tables": [
          {
            "name": "Area",
            "columns": [
              {
                "name": "Area ID"
              },
              {
                "name": "ID_AREA_SISTEMA"
              },
              {
                "name": "ID_RESPONSABLE_AREA"
              },
              {
                "name": "ID_RECURSO_PROYECTO"
              },
              {
                "name": "Departamento"
              },
              {
                "name": "Area"
              }
            ]
          },
          {
            "name": "Cuenta Local",
            "columns": [
              {
                "name": "Cuenta Local ID"
              },
              {
                "name": "Cuenta Local"
              },
              {
                "name": "ID_CUENTA_EMPRESA"
              },
              {
                "name": "Cuenta Auxiliar"
              }
            ]
          },
          {
            "name": "Cuenta Grupo",
            "columns": [
              {
                "name": "Cuenta Grupo"
              },
              {
                "name": "Cuenta Grupo ID"
              },
              {
                "name": "ID_CUENTA_GRUPO"
              },
              {
                "name": "Cuenta Grupo Tipo"
              }
            ]
          },
          {
            "name": "Cuenta Principal",
            "columns": [
              {
                "name": "ID_CUENTA_PRINCIPAL"
              },
              {
                "name": "Cuenta Principal"
              },
              {
                "name": "Cuenta Principal ID"
              }
            ]
          },
          {
            "name": "Unidad Compra",
            "columns": [
              {
                "name": "ID_UNIDAD_COMPRA"
              },
              {
                "name": "Unidad Compra"
              },
              {
                "name": "Unidad Compra ID"
              }
            ]
          },
          {
            "name": "Divisa",
            "columns": [
              {
                "name": "Divisa"
              },
              {
                "name": "Divisa ID"
              },
              {
                "name": "Divisa Simbolo"
              },
              {
                "name": "ID_DIVISA"
              }
            ]
          },
          {
            "name": "Factura Estado",
            "columns": [
              {
                "name": "ID_ESTADO_FACTURA"
              },
              {
                "name": "Factura Estado"
              },
              {
                "name": "Factura Estado Agrupado"
              },
              {
                "name": "Factura Estado ID"
              },
              {
                "name": "Factura vs Provision"
              }
            ],
            "hierarchies": [
              {
                "name": "Factura Grupo - Estado"
              }
            ]
          },
          {
            "name": "Pedido Estado",
            "columns": [
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "Pedido Estado anterior"
              },
              {
                "name": "Pedido Estado ID"
              },
              {
                "name": "Pedido Estado"
              }
            ]
          },
          {
            "name": "Sociedad",
            "columns": [
              {
                "name": "ID_EMPRESA_GRUPO"
              },
              {
                "name": "Sociedad"
              },
              {
                "name": "Sociedad ID"
              },
              {
                "name": "Sociedad Mercado"
              },
              {
                "name": "ID_EMPRESA"
              },
              {
                "name": "Sociedad Razon Social Completa"
              },
              {
                "name": "Sociedad Mercado ID"
              }
            ],
            "hierarchies": [
              {
                "name": "Mercado - Sociedad"
              }
            ]
          },
          {
            "name": "Sociedad Cadena",
            "columns": [
              {
                "name": "ID_CADENA_AD"
              },
              {
                "name": "Sociedad Cadena"
              }
            ]
          },
          {
            "name": "Factura Informacion Provision",
            "columns": [
              {
                "name": "Provision Factura Codigo"
              },
              {
                "name": "Provision Factura ID"
              },
              {
                "name": "Provision Factura Descripcion"
              },
              {
                "name": "Provision Revierte"
              },
              {
                "name": "ID_INFO_PREV_FACTURA"
              }
            ]
          },
          {
            "name": "Factura Tipo Sistema Origen",
            "columns": [
              {
                "name": "ID_TIPO_SISTEMA_ORIGEN"
              },
              {
                "name": "Factura Tipo Sistema Origen ID"
              },
              {
                "name": "Factura Tipo Sistema Origen Descripcion"
              },
              {
                "name": "Factura Tipo Sistema Origen Nombre"
              }
            ]
          },
          {
            "name": "Pedido",
            "columns": [
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "Pedido"
              },
              {
                "name": "Pedido ID"
              },
              {
                "name": "Pedido ID  & Descripcion"
              },
              {
                "name": "Naturaleza Compra"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "Tipo Pedido"
              },
              {
                "name": "Fecha Alta Pedido"
              }
            ]
          },
          {
            "name": "Sociedad Grupo",
            "columns": [
              {
                "name": "Sociedad Grupo ID"
              },
              {
                "name": "Sociedad Grupo Mercado"
              },
              {
                "name": "Sociedad Grupo Mercado ID"
              },
              {
                "name": "Sociedad Grupo Mercado ISO"
              },
              {
                "name": "Sociedad Grupo Nombre Comercial"
              },
              {
                "name": "Sociedad Grupo Razon Social"
              },
              {
                "name": "ID_CADENA"
              },
              {
                "name": "ID_EMPRESA_GRUPO"
              }
            ]
          },
          {
            "name": "Empresa Proveedor",
            "columns": [
              {
                "name": "Empresa Proveedor"
              },
              {
                "name": "ID_EMPRESA"
              },
              {
                "name": "Mercado Proveedor"
              },
              {
                "name": "Empresa Proveedor ID"
              },
              {
                "name": "Empresa Proveedor Razon Social"
              },
              {
                "name": "Empresa Proveedor Razon Social Completa"
              },
              {
                "name": "Empresa Proveedor ID & Razon Social Completa"
              },
              {
                "name": "Tipo Empresa"
              }
            ]
          },
          {
            "name": "Centro Distribucion",
            "columns": [
              {
                "name": "Centro Destribucion"
              },
              {
                "name": "ID_LOCALIZACION_COMPRA"
              }
            ]
          },
          {
            "name": "COP",
            "columns": [
              {
                "name": "ID_CODIGO_PRESUPUESTARIO"
              },
              {
                "name": "COP ID"
              },
              {
                "name": "COP"
              }
            ]
          },
          {
            "name": "Ajeno Familia",
            "columns": [
              {
                "name": "ID_FAM_AJENO"
              },
              {
                "name": "Ajeno Familia"
              },
              {
                "name": "Ajeno Familia ID"
              }
            ]
          },
          {
            "name": "Ajeno Subfamilia",
            "columns": [
              {
                "name": "ID_SUBFAM_AJENO"
              },
              {
                "name": "Ajeno Subfamilia"
              },
              {
                "name": "Ajeno Subfamilia ID"
              }
            ]
          },
          {
            "name": "Tipo Gestor",
            "columns": [
              {
                "name": "ID_TIPO_GESTOR"
              },
              {
                "name": "Tipo Gestor"
              },
              {
                "name": "Tipo Gestor ID"
              }
            ]
          },
          {
            "name": "Area Negocio",
            "columns": [
              {
                "name": "Area Negocio"
              },
              {
                "name": "Subarea Negocio"
              },
              {
                "name": "ID Area Negocio"
              },
              {
                "name": "ID Subarea Negocio"
              },
              {
                "name": "ID_AREA_NEGO"
              }
            ]
          },
          {
            "name": "Proyecto Presupuestario",
            "columns": [
              {
                "name": "ID_PROYECTO_CONTABLE"
              },
              {
                "name": "Area Gestion"
              },
              {
                "name": "Subarea Negocio"
              },
              {
                "name": "ID_AREA_SISTEMA"
              },
              {
                "name": "Proyecto Presupuestario"
              },
              {
                "name": "Proyecto Presupuestario ID"
              },
              {
                "name": "Proyecto Presupuestario ID & Descripcion"
              },
              {
                "name": "Proyecto Presupuestario Naturaleza ID"
              },
              {
                "name": "Proyecto Presupuestario Etiqueta"
              },
              {
                "name": "Proyecto Presupuestario Tipo Reparto"
              },
              {
                "name": "Responsable Proyecto"
              },
              {
                "name": "Porcentaje Activacion"
              },
              {
                "name": "Responsable Proyecto User ID"
              },
              {
                "name": "ID_AREA_NEGO"
              }
            ]
          },
          {
            "name": "Factura Compra Hecho",
            "columns": [
              {
                "name": "ID_DIVISA"
              },
              {
                "name": "ID_ESTADO_FACTURA"
              },
              {
                "name": "ID_TIPO_GESTOR_PEDIDO"
              },
              {
                "name": "ID_TIPO_SISTEMA_ORIGEN"
              },
              {
                "name": "Factura Num"
              },
              {
                "name": "ID_FORMA_PAGO"
              },
              {
                "name": "ID_INFO_PREV_FACTURA"
              },
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "ID_EMP_DEST_PEDIDO"
              },
              {
                "name": "ID_EMP_PROVE_PEDIDO"
              },
              {
                "name": "ID_RECEPTOR"
              },
              {
                "name": "ID_CD_PEDIDO"
              },
              {
                "name": "ID_UNI_COMPRA"
              },
              {
                "name": "ID_CUENTA_GRP"
              },
              {
                "name": "ID_CUENTA_PRINC"
              },
              {
                "name": "ID_CUENTA_GRP_PEDIDO"
              },
              {
                "name": "ID_PROY_PEDIDO"
              },
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "Importe_Factura_sin_impto_euro"
              },
              {
                "name": "FACTURA_CABECERA_FILIAL"
              },
              {
                "name": "FACTURA_FILIAL"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "ID_COD_PRESUPTARIO"
              },
              {
                "name": "ID_FAM_AJENO_PEDIDO"
              },
              {
                "name": "ID_SUBFAM_AJENO_PEDIDO"
              },
              {
                "name": "Factura ID"
              },
              {
                "name": "EJERCICIO_CIERRE"
              },
              {
                "name": "FEHO_ALTA_FACTURA"
              },
              {
                "name": "FEHO_EJEC_FACTURA"
              },
              {
                "name": "FECHA_ALTA_CIERRE"
              },
              {
                "name": "Cumple Fecha Cierre"
              },
              {
                "name": "ID_MES_CIERRE_FACTURA"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "FEHO_ALTA_FACTURA_ORIGINAL"
              },
              {
                "name": "COD_FCTR_IMPUTACION_CONTAB"
              },
              {
                "name": "ID_EMISOR"
              },
              {
                "name": "TND_DEST"
              },
              {
                "name": "Cadena Destino"
              },
              {
                "name": "ID_ORDEN_TRABAJO_LINEA"
              },
              {
                "name": "Mercado Destino"
              },
              {
                "name": "ID_LOC_COMPRA_PEDIDO"
              },
              {
                "name": "ID_FECHA_FACTURA"
              },
              {
                "name": "IMPORTE_FACTURA_SIN_IMPTO"
              }
            ],
            "measures": [
              {
                "name": "Incurrido €"
              },
              {
                "name": "% Inc vs Ped €"
              },
              {
                "name": "% Inc vs Ppto €"
              },
              {
                "name": "Incurrido Ajenos €"
              },
              {
                "name": "% Inc Cierre vs Ppto Acum €"
              },
              {
                "name": "Inc Cierre vs Ppto Acum €"
              },
              {
                "name": "Incurrido € Cierre"
              },
              {
                "name": "Incurrido € Cierre Ejec"
              },
              {
                "name": "Incurrido Ajenos Cierre €"
              },
              {
                "name": "Incurrido Ajenos Cierre Abril"
              },
              {
                "name": "Incurrido Ajenos Cierre Agosto"
              },
              {
                "name": "Incurrido Ajenos Cierre Diciembre"
              },
              {
                "name": "Incurrido Ajenos Cierre Enero"
              },
              {
                "name": "Incurrido Ajenos Cierre Facturas"
              },
              {
                "name": "Incurrido Ajenos Cierre Febrero"
              },
              {
                "name": "Incurrido Ajenos Cierre Julio"
              },
              {
                "name": "Incurrido Ajenos Cierre Junio"
              },
              {
                "name": "Incurrido Ajenos Cierre Marzo"
              },
              {
                "name": "Incurrido Ajenos Cierre Mayo"
              },
              {
                "name": "Incurrido Ajenos Cierre Noviembre"
              },
              {
                "name": "Incurrido Ajenos Cierre Octubre"
              },
              {
                "name": "Incurrido Ajenos Cierre Provisiones"
              },
              {
                "name": "Incurrido Ajenos Cierre Septiembre"
              },
              {
                "name": "Incurrido Cierre Abril"
              },
              {
                "name": "Incurrido Cierre Agosto"
              },
              {
                "name": "Incurrido Cierre Diciembre"
              },
              {
                "name": "Incurrido Cierre Ejec Abril"
              },
              {
                "name": "Incurrido Cierre Ejec Agosto"
              },
              {
                "name": "Incurrido Cierre Ejec Diciembre"
              },
              {
                "name": "Incurrido Cierre Ejec Enero"
              },
              {
                "name": "Incurrido Cierre Ejec Febrero"
              },
              {
                "name": "Incurrido Cierre Ejec Julio"
              },
              {
                "name": "Incurrido Cierre Ejec Junio"
              },
              {
                "name": "Incurrido Cierre Ejec Marzo"
              },
              {
                "name": "Incurrido Cierre Ejec Mayo"
              },
              {
                "name": "Incurrido Cierre Ejec Noviembre"
              },
              {
                "name": "Incurrido Cierre Ejec Octubre"
              },
              {
                "name": "Incurrido Cierre Ejec Septiembre"
              },
              {
                "name": "Incurrido Cierre Enero"
              },
              {
                "name": "Incurrido Cierre Facturas"
              },
              {
                "name": "Incurrido Cierre Febrero"
              },
              {
                "name": "Incurrido Cierre Julio"
              },
              {
                "name": "Incurrido Cierre Junio"
              },
              {
                "name": "Incurrido Cierre Marzo"
              },
              {
                "name": "Incurrido Cierre Mayo"
              },
              {
                "name": "Incurrido Cierre Noviembre"
              },
              {
                "name": "Incurrido Cierre Octubre"
              },
              {
                "name": "Incurrido Cierre Provisiones"
              },
              {
                "name": "Incurrido Cierre Septiembre"
              },
              {
                "name": "Provisiones vs Facturas"
              }
            ]
          },
          {
            "name": "Factura Fecha Ejecucion",
            "columns": [
              {
                "name": "Factura Fecha Ejecucion Descripcion"
              },
              {
                "name": "Factura Fecha Ejecucion"
              },
              {
                "name": "Factura Fecha Ejecucion Ejercicio"
              },
              {
                "name": "ID_EJERCICIO"
              },
              {
                "name": "ID_FECHA"
              },
              {
                "name": "ID_MES"
              },
              {
                "name": "ID_SEMESTRE"
              },
              {
                "name": "ID_TRIMESTRE"
              },
              {
                "name": "Factura Fecha Ejecucion Semestre"
              },
              {
                "name": "Factura Fecha Ejecucion Trimestre"
              },
              {
                "name": "Factura Fecha Ejecucion Mes"
              }
            ],
            "hierarchies": [
              {
                "name": "Ejercicio - Trimestre - Semestre- Mes - Dia"
              }
            ]
          },
          {
            "name": "Factura Fecha Alta Cierre",
            "columns": [
              {
                "name": "ID_FECHA"
              },
              {
                "name": "Factura Fecha Alta Cierre"
              },
              {
                "name": "Factura Fecha Alta Cierre Descripcion"
              },
              {
                "name": "ID_MES"
              },
              {
                "name": "Factura Mes Alta Cierre"
              },
              {
                "name": "ID_TRIMESTRE"
              },
              {
                "name": "Factura Trimestre Alta Cierre"
              },
              {
                "name": "ID_SEMESTRE"
              },
              {
                "name": "Factura Semestre Alta Cierre"
              },
              {
                "name": "ID_EJERCICIO"
              },
              {
                "name": "Factura Ejercicio Alta Cierre"
              }
            ]
          },
          {
            "name": "Datos ejecucion ETL",
            "columns": [
              {
                "name": "ID_PROCESO_ETL"
              },
              {
                "name": "Descripcion Proceso"
              },
              {
                "name": "Fecha Inicio Actualizacion Datos"
              },
              {
                "name": "Fecha Actualizacion Datos"
              },
              {
                "name": "VALIDEZ"
              },
              {
                "name": "Versión Tabular"
              }
            ]
          },
          {
            "name": "Factura Ejercicio Cierre",
            "columns": [
              {
                "name": "Factura Ejercicio Cierre"
              },
              {
                "name": "ID_EJERCICIO"
              }
            ]
          },
          {
            "name": "Factura",
            "columns": [
              {
                "name": "Factura ID"
              },
              {
                "name": "Factura Num"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "Fecha Alta Factura"
              },
              {
                "name": "Fecha Ejecucion Factura"
              },
              {
                "name": "Fecha Factura"
              },
              {
                "name": "INVOICE TYPE"
              }
            ]
          },
          {
            "name": "Proyecto Presupuestario Naturaleza",
            "columns": [
              {
                "name": "Proyecto Presupuestario Naturaleza"
              },
              {
                "name": "Proyecto Presupuestario Naturaleza Descripcion Corta"
              },
              {
                "name": "Proyecto Presupuestario Naturaleza ID"
              }
            ]
          },
          {
            "name": "Presupuesto Ejercicio Fecha",
            "columns": [
              {
                "name": "Semestre Presupuestario"
              },
              {
                "name": "Orden Mes Presupuesto"
              },
              {
                "name": "Mes Prespuestario"
              },
              {
                "name": "Mes Corto Presupuestario"
              },
              {
                "name": "ID_TRIMESTRE_FISCAL"
              },
              {
                "name": "ID_SEMESTRE_FISCAL"
              },
              {
                "name": "ID_MES"
              },
              {
                "name": "Ejercicio Presupuestario ID"
              },
              {
                "name": "Ejercicio Presupuestario"
              },
              {
                "name": "Día Descripción Corta"
              },
              {
                "name": "Día"
              },
              {
                "name": "Trimestre Presupuestario"
              },
              {
                "name": "ID_FECHA_PRESUPUESTARIA"
              }
            ],
            "hierarchies": [
              {
                "name": "Ejercicio/Sem/Tri"
              }
            ]
          },
          {
            "name": "Factura Compra Hecho Devengados",
            "columns": [
              {
                "name": "Cumple Fecha Cierre"
              },
              {
                "name": "EJERCICIO_CIERRE"
              },
              {
                "name": "Factura ID"
              },
              {
                "name": "Factura Num"
              },
              {
                "name": "FACTURA_CABECERA_FILIAL"
              },
              {
                "name": "FACTURA_FILIAL"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "FECHA_ALTA_CIERRE"
              },
              {
                "name": "FECHA_DEVENGO"
              },
              {
                "name": "FEHO_ALTA_FACTURA_ORIGINAL"
              },
              {
                "name": "FEHO_EJEC_FACTURA"
              },
              {
                "name": "ID_CD_PEDIDO"
              },
              {
                "name": "ID_COD_PRESUPTARIO"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "ID_CUENTA_GRP"
              },
              {
                "name": "ID_CUENTA_GRP_PEDIDO"
              },
              {
                "name": "ID_CUENTA_PRINC"
              },
              {
                "name": "ID_DIVISA"
              },
              {
                "name": "ID_EMP_DEST_PEDIDO"
              },
              {
                "name": "ID_EMP_PROVE_PEDIDO"
              },
              {
                "name": "ID_ESTADO_FACTURA"
              },
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "ID_FAM_AJENO_PEDIDO"
              },
              {
                "name": "ID_FORMA_PAGO"
              },
              {
                "name": "ID_INFO_PREV_FACTURA"
              },
              {
                "name": "ID_MES_CIERRE_FACTURA"
              },
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "ID_PROY_PEDIDO"
              },
              {
                "name": "ID_RECEPTOR"
              },
              {
                "name": "ID_SUBFAM_AJENO_PEDIDO"
              },
              {
                "name": "ID_TIPO_GESTOR_PEDIDO"
              },
              {
                "name": "ID_TIPO_SISTEMA_ORIGEN"
              },
              {
                "name": "ID_UNI_COMPRA"
              },
              {
                "name": "IMPORTE_DEVENGADO_EURO"
              },
              {
                "name": "COD_FCTR_IMPUTACION_CONTAB"
              },
              {
                "name": "TND_DEST"
              },
              {
                "name": "ID_EMISOR"
              },
              {
                "name": "Cadena Destino"
              },
              {
                "name": "COD_EMISOR"
              },
              {
                "name": "ID_ORDEN_TRABAJO_LINEA"
              },
              {
                "name": "Mercado Destino"
              },
              {
                "name": "ID_FECHA_FACTURA"
              },
              {
                "name": "IMPORTE_DEVENGADO"
              }
            ],
            "measures": [
              {
                "name": "Incurrido Devengado €"
              },
              {
                "name": "Incurrido Devengado € Cierre"
              },
              {
                "name": "Incurrido Devengado Cierre Abril"
              },
              {
                "name": "Incurrido Devengado Cierre Agosto"
              },
              {
                "name": "Incurrido Devengado Cierre Diciembre"
              },
              {
                "name": "Incurrido Devengado Cierre Enero"
              },
              {
                "name": "Incurrido Devengado Cierre Febrero"
              },
              {
                "name": "Incurrido Devengado Cierre Julio"
              },
              {
                "name": "Incurrido Devengado Cierre Junio"
              },
              {
                "name": "Incurrido Devengado Cierre Marzo"
              },
              {
                "name": "Incurrido Devengado Cierre Mayo"
              },
              {
                "name": "Incurrido Devengado Cierre Noviembre"
              },
              {
                "name": "Incurrido Devengado Cierre Octubre"
              },
              {
                "name": "% Inc Cierre Devengados vs Ppto Acum €"
              },
              {
                "name": "% Inc vs Ped Devengados €"
              },
              {
                "name": "% Inc vs Ppto Devengados €"
              },
              {
                "name": "Inc Cierre Devengados vs Ppto Acum €"
              },
              {
                "name": "Incurrido Ajenos Cierre Devengado Facturas"
              },
              {
                "name": "Incurrido Ajenos Cierre Devengado Provisiones"
              },
              {
                "name": "Incurrido Ajenos Devengados €"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre €"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Abril"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Agosto"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Diciembre"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Enero"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Febrero"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Julio"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Junio"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Marzo"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Mayo"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Noviembre"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Octubre"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Septiembre"
              },
              {
                "name": "Incurrido Cierre Devengado Provisiones"
              },
              {
                "name": "Incurrido Devengado Cierre Septiembre"
              },
              {
                "name": "Incurrido Devengados Cierre Facturas"
              },
              {
                "name": "Incurrido Filial Franquicia"
              },
              {
                "name": "Provisiones vs Facturas Devengados"
              },
              {
                "name": "Refacturaciones"
              }
            ]
          },
          {
            "name": "AUX_REPARTO_FACTURAS",
            "columns": [
              {
                "name": "Cadena"
              },
              {
                "name": "COD_CTA_AUX"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "ID_FACTURA"
              },
              {
                "name": "ID_FACTURA_IMPUTACION_CONTABLE"
              },
              {
                "name": "Mercado"
              },
              {
                "name": "TND_DEST"
              }
            ]
          },
          {
            "name": "AUX_REPARTO_PRESUPUESTO",
            "columns": [
              {
                "name": "Cadena"
              },
              {
                "name": "CTAAUX"
              },
              {
                "name": "ID_MES"
              },
              {
                "name": "ID_PRESUP"
              },
              {
                "name": "Mercado"
              },
              {
                "name": "CADENA_CRUCE"
              }
            ]
          },
          {
            "name": "AUX_SEGURIDAD_AREA",
            "columns": [
              {
                "name": "AREA"
              },
              {
                "name": "LOGINID"
              }
            ]
          },
          {
            "name": "AUX_SEGURIDAD_AREA_NEGOCIO",
            "columns": [
              {
                "name": "AREAN"
              },
              {
                "name": "LOGINID"
              }
            ]
          },
          {
            "name": "AUX_SEGURIDAD_SOCIEDAD",
            "columns": [
              {
                "name": "LOGINID"
              },
              {
                "name": "SOCIEDAD"
              }
            ]
          },
          {
            "name": "Cadena Local",
            "columns": [
              {
                "name": "Cadena"
              },
              {
                "name": "ID Cadena"
              }
            ]
          },
          {
            "name": "Orden Trabajo Hecho",
            "columns": [
              {
                "name": "CMB"
              },
              {
                "name": "DESCRIPCION"
              },
              {
                "name": "ESTADO_OT"
              },
              {
                "name": "Fecha Alta"
              },
              {
                "name": "Fecha Ejecución"
              },
              {
                "name": "Fecha Hora Expedición"
              },
              {
                "name": "ID_DIVISA"
              },
              {
                "name": "ID_DIVISA_DATA"
              },
              {
                "name": "ID_EMP_DEST"
              },
              {
                "name": "ID_EMP_PROVEEDOR"
              },
              {
                "name": "ID_ESTADO_OT"
              },
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "ID_FACTURA"
              },
              {
                "name": "ID_FECHA_FECHA_PRESUPUESTARIA"
              },
              {
                "name": "ID_ORDEN_TRABAJO"
              },
              {
                "name": "ID_ORDEN_TRABAJO_LINEA"
              },
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "ID_PEDIDO_DATA"
              },
              {
                "name": "ID_PEDIDO_LINEA"
              },
              {
                "name": "ID_PROY_CONTABLE"
              },
              {
                "name": "ID_UNIDAD_COMPRA"
              },
              {
                "name": "PRECIO_UNITARIO"
              },
              {
                "name": "UNIDADES_PROVEEDOR"
              },
              {
                "name": "USUARIO_ALTA"
              }
            ],
            "measures": [
              {
                "name": "Importe OT"
              }
            ]
          }
        ]
      },
      {
        "name": "Presupuestos Pedidos Facturas",
        "tables": [
          {
            "name": "Pedido Compra Hecho",
            "columns": [
              {
                "name": "ID_AJENO"
              },
              {
                "name": "ID_CENTRO_DISTRIBUCION"
              },
              {
                "name": "ID_CODIGO_PRESUPUESTARIO"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "ID_CUENTA_GRP"
              },
              {
                "name": "ID_CUENTA_PRINC"
              },
              {
                "name": "ID_DIVISA"
              },
              {
                "name": "ID_EMP_DEST"
              },
              {
                "name": "ID_EMP_PROVEEDOR"
              },
              {
                "name": "ID_ESTADO_LINEA_PEDIDO"
              },
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "ID_PROY_CONTABLE"
              },
              {
                "name": "ID_TIPO_GESTOR"
              },
              {
                "name": "ID_UNIDAD_COMPRA"
              },
              {
                "name": "Importe Pedido Euros"
              },
              {
                "name": "Importe Recepcionado Euros"
              },
              {
                "name": "UNIDADES"
              },
              {
                "name": "UNIDADES_RECIBIDAS"
              },
              {
                "name": "ID_FECHA_PEDIDO"
              },
              {
                "name": "ID_FECHA_PRESUPUESTARIA"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "COD_ESTADO_FACTURA"
              },
              {
                "name": "ID_PROVISION_FACTURA"
              },
              {
                "name": "COD_FACTURA"
              },
              {
                "name": "ID_ORDEN_TRABAJO_LINEA"
              },
              {
                "name": "COD_PEDIDO"
              },
              {
                "name": "IMPORTE_PEDIDO"
              },
              {
                "name": "IMPORTE_RECEPCIONADO"
              }
            ],
            "measures": [
              {
                "name": "Ped vs Ppto"
              },
              {
                "name": "Pedido Importe €"
              },
              {
                "name": "Pedido Importe Global €"
              },
              {
                "name": "Pedido Importe Recepcionado Global €"
              },
              {
                "name": "Pedido Numero"
              },
              {
                "name": "Pedido Unidades"
              },
              {
                "name": "Pedido Unidades Recepcionadas"
              },
              {
                "name": "Pedido +15%"
              }
            ]
          },
          {
            "name": "Presupuesto Compra Hecho",
            "columns": [
              {
                "name": "ACTIVO"
              },
              {
                "name": "COD_PRESUP"
              },
              {
                "name": "COD_PRESUP_GPS"
              },
              {
                "name": "ID_CODIGO_PRESUPUESTARIO"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "ID_CUENTA_GRUPO"
              },
              {
                "name": "ID_CUENTA_PRINC"
              },
              {
                "name": "ID_DIVISA"
              },
              {
                "name": "ID_EMP"
              },
              {
                "name": "ID_FAM_AJENO"
              },
              {
                "name": "ID_INFOR_PRESUPUESTO"
              },
              {
                "name": "ID_PROY_CONTABLE"
              },
              {
                "name": "ID_SUBFAM_AJENO"
              },
              {
                "name": "ID_TIPO_PRESUP"
              },
              {
                "name": "ID_UNIDAD_COMPRA"
              },
              {
                "name": "IMPORTE_PRESUP"
              },
              {
                "name": "IMPORTE_PRESUP_EURO"
              },
              {
                "name": "UNIDADES_PRESUP"
              },
              {
                "name": "Fecha Presupuesto Ejercicio"
              },
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "CTAAUX"
              },
              {
                "name": "ID_EMPRESA_GRUPO"
              },
              {
                "name": "PCT_ACTIVA"
              },
              {
                "name": "COD_FACTURA"
              },
              {
                "name": "Es Presupuesto Anual"
              },
              {
                "name": "ID_EMPRESA"
              },
              {
                "name": "ID_MES"
              },
              {
                "name": "Orden Mes"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "COD_ESTADO_FACTURA"
              },
              {
                "name": "ID_PROVISION_FACTURA"
              },
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "ID_ORDEN_TRABAJO_LINEA"
              },
              {
                "name": "Recepcionado €"
              },
              {
                "name": "Cadena Destino"
              },
              {
                "name": "Mercado Destino"
              }
            ],
            "measures": [
              {
                "name": "Presupuesto Importe €"
              },
              {
                "name": "Presupuesto Numero"
              },
              {
                "name": "Presupuesto Unidades"
              },
              {
                "name": "Presupuesto Acumulado"
              },
              {
                "name": "Presupuesto Enero €"
              },
              {
                "name": "Presupuesto Febrero €"
              },
              {
                "name": "Presupuesto Marzo €"
              },
              {
                "name": "Presupuesto Abril €"
              },
              {
                "name": "Presupuesto Mayo €"
              },
              {
                "name": "Presupuesto Junio €"
              },
              {
                "name": "Presupuesto Julio €"
              },
              {
                "name": "Presupuesto Agosto €"
              },
              {
                "name": "Presupuesto Septiembre €"
              },
              {
                "name": "Presupuesto Octubre €"
              },
              {
                "name": "Presupuesto Noviembre €"
              },
              {
                "name": "Presupuesto Diciembre €"
              }
            ]
          },
          {
            "name": "Cuenta Grupo",
            "columns": [
              {
                "name": "Cuenta Grupo ID"
              },
              {
                "name": "Cuenta Grupo"
              },
              {
                "name": "ID_CUENTA_GRUPO"
              },
              {
                "name": "Cuenta Grupo Tipo"
              },
              {
                "name": "Cuenta Grupo ID & Descripcion"
              }
            ]
          },
          {
            "name": "Sociedad",
            "columns": [
              {
                "name": "ID_EMPRESA"
              },
              {
                "name": "ID_EMPRESA_GRUPO"
              },
              {
                "name": "Sociedad"
              },
              {
                "name": "Sociedad ID"
              },
              {
                "name": "Sociedad Mercado"
              },
              {
                "name": "Sociedad Razon Social Completa"
              },
              {
                "name": "Sociedad Mercado ID"
              }
            ],
            "hierarchies": [
              {
                "name": "Mercado - Sociedad"
              }
            ]
          },
          {
            "name": "Factura Compra Hecho",
            "columns": [
              {
                "name": "FACTURA_CABECERA_FILIAL"
              },
              {
                "name": "FACTURA_FILIAL"
              },
              {
                "name": "ID_CD_PEDIDO"
              },
              {
                "name": "ID_COD_PRESUPTARIO"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "ID_CUENTA_GRP"
              },
              {
                "name": "ID_CUENTA_GRP_PEDIDO"
              },
              {
                "name": "ID_CUENTA_PRINC"
              },
              {
                "name": "ID_DIVISA"
              },
              {
                "name": "ID_EMP_DEST_PEDIDO"
              },
              {
                "name": "ID_EMP_PROVE_PEDIDO"
              },
              {
                "name": "ID_ESTADO_FACTURA"
              },
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "ID_FAM_AJENO_PEDIDO"
              },
              {
                "name": "ID_FORMA_PAGO"
              },
              {
                "name": "ID_INFO_PREV_FACTURA"
              },
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "ID_PROY_PEDIDO"
              },
              {
                "name": "ID_RECEPTOR"
              },
              {
                "name": "ID_SUBFAM_AJENO_PEDIDO"
              },
              {
                "name": "ID_TIPO_GESTOR_PEDIDO"
              },
              {
                "name": "ID_TIPO_SISTEMA_ORIGEN"
              },
              {
                "name": "ID_UNI_COMPRA"
              },
              {
                "name": "Importe_Factura_sin_impto_euro"
              },
              {
                "name": "Factura Num"
              },
              {
                "name": "Factura ID"
              },
              {
                "name": "EJERCICIO_CIERRE"
              },
              {
                "name": "FEHO_ALTA_FACTURA"
              },
              {
                "name": "FEHO_EJEC_FACTURA"
              },
              {
                "name": "FECHA_ALTA_CIERRE"
              },
              {
                "name": "Cumple Fecha Cierre"
              },
              {
                "name": "ID_MES_CIERRE_FACTURA"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "FEHO_ALTA_FACTURA_ORIGINAL"
              },
              {
                "name": "ID_ORDEN_TRABAJO_LINEA"
              },
              {
                "name": "Cadena Destino"
              },
              {
                "name": "Mercado Destino"
              },
              {
                "name": "COD_FCTR_IMPUTACION_CONTAB"
              },
              {
                "name": "ID_EMISOR"
              },
              {
                "name": "TND_DEST"
              },
              {
                "name": "ID_LOC_COMPRA_PEDIDO"
              },
              {
                "name": "ID_FECHA_FACTURA"
              },
              {
                "name": "IMPORTE_FACTURA_SIN_IMPTO"
              }
            ],
            "measures": [
              {
                "name": "% Inc vs Ped €"
              },
              {
                "name": "% Inc vs Ppto €"
              },
              {
                "name": "Incurrido €"
              },
              {
                "name": "Incurrido Ajenos €"
              },
              {
                "name": "Incurrido € Cierre"
              },
              {
                "name": "Provisiones vs Facturas"
              },
              {
                "name": "Incurrido Cierre Enero"
              },
              {
                "name": "Incurrido Cierre Febrero"
              },
              {
                "name": "Incurrido Cierre Marzo"
              },
              {
                "name": "Incurrido Cierre Abril"
              },
              {
                "name": "Incurrido Cierre Mayo"
              },
              {
                "name": "Incurrido Cierre Junio"
              },
              {
                "name": "Incurrido Cierre Julio"
              },
              {
                "name": "Incurrido Cierre Agosto"
              },
              {
                "name": "Incurrido Cierre Septiembre"
              },
              {
                "name": "Incurrido Cierre Octubre"
              },
              {
                "name": "Incurrido Cierre Noviembre"
              },
              {
                "name": "Incurrido Cierre Diciembre"
              },
              {
                "name": "% Inc Cierre vs Ppto Acum €"
              },
              {
                "name": "Inc Cierre vs Ppto Acum €"
              },
              {
                "name": "Incurrido Cierre Facturas"
              },
              {
                "name": "Incurrido Cierre Provisiones"
              },
              {
                "name": "Incurrido Ajenos Cierre €"
              },
              {
                "name": "Incurrido Ajenos Cierre Abril"
              },
              {
                "name": "Incurrido Ajenos Cierre Enero"
              },
              {
                "name": "Incurrido Ajenos Cierre Febrero"
              },
              {
                "name": "Incurrido Ajenos Cierre Marzo"
              },
              {
                "name": "Incurrido Ajenos Cierre Mayo"
              },
              {
                "name": "Incurrido Ajenos Cierre Junio"
              },
              {
                "name": "Incurrido Ajenos Cierre Agosto"
              },
              {
                "name": "Incurrido Ajenos Cierre Septiembre"
              },
              {
                "name": "Incurrido Ajenos Cierre Octubre"
              },
              {
                "name": "Incurrido Ajenos Cierre Noviembre"
              },
              {
                "name": "Incurrido Ajenos Cierre Diciembre"
              },
              {
                "name": "Incurrido Ajenos Cierre Provisiones"
              },
              {
                "name": "Incurrido Ajenos Cierre Facturas"
              },
              {
                "name": "Incurrido Ajenos Cierre Julio"
              },
              {
                "name": "Incurrido € Cierre Ejec"
              },
              {
                "name": "Incurrido Cierre Ejec Enero"
              },
              {
                "name": "Incurrido Cierre Ejec Febrero"
              },
              {
                "name": "Incurrido Cierre Ejec Abril"
              },
              {
                "name": "Incurrido Cierre Ejec Mayo"
              },
              {
                "name": "Incurrido Cierre Ejec Junio"
              },
              {
                "name": "Incurrido Cierre Ejec Julio"
              },
              {
                "name": "Incurrido Cierre Ejec Agosto"
              },
              {
                "name": "Incurrido Cierre Ejec Septiembre"
              },
              {
                "name": "Incurrido Cierre Ejec Octubre"
              },
              {
                "name": "Incurrido Cierre Ejec Noviembre"
              },
              {
                "name": "Incurrido Cierre Ejec Diciembre"
              },
              {
                "name": "Incurrido Cierre Ejec Marzo"
              }
            ]
          },
          {
            "name": "Proyecto Presupuestario",
            "columns": [
              {
                "name": "Area Gestion"
              },
              {
                "name": "ID_AREA_SISTEMA"
              },
              {
                "name": "ID_PROYECTO_CONTABLE"
              },
              {
                "name": "Proyecto Presupuestario"
              },
              {
                "name": "Proyecto Presupuestario ID"
              },
              {
                "name": "Proyecto Presupuestario ID & Descripcion"
              },
              {
                "name": "Subarea Negocio"
              },
              {
                "name": "Proyecto Presupuestario Naturaleza ID"
              },
              {
                "name": "Proyecto Presupuestario Etiqueta"
              },
              {
                "name": "Proyecto Presupuestario Tipo Reparto"
              },
              {
                "name": "Responsable Proyecto"
              },
              {
                "name": "Porcentaje Activacion"
              },
              {
                "name": "Responsable Proyecto User ID"
              },
              {
                "name": "ID_AREA_NEGO"
              }
            ]
          },
          {
            "name": "Ajeno Familia",
            "columns": [
              {
                "name": "Ajeno Familia"
              },
              {
                "name": "Ajeno Familia ID"
              },
              {
                "name": "ID_FAM_AJENO"
              }
            ]
          },
          {
            "name": "Ajeno Subfamilia",
            "columns": [
              {
                "name": "Ajeno Subfamilia"
              },
              {
                "name": "Ajeno Subfamilia ID"
              },
              {
                "name": "ID_SUBFAM_AJENO"
              }
            ]
          },
          {
            "name": "Area Negocio",
            "columns": [
              {
                "name": "Area Negocio"
              },
              {
                "name": "Subarea Negocio"
              },
              {
                "name": "ID Area Negocio"
              },
              {
                "name": "ID Subarea Negocio"
              },
              {
                "name": "ID_AREA_NEGO"
              }
            ]
          },
          {
            "name": "Area",
            "columns": [
              {
                "name": "Area ID"
              },
              {
                "name": "Departamento"
              },
              {
                "name": "ID_AREA_SISTEMA"
              },
              {
                "name": "ID_RECURSO_PROYECTO"
              },
              {
                "name": "ID_RESPONSABLE_AREA"
              },
              {
                "name": "Area"
              }
            ]
          },
          {
            "name": "Centro Distribucion",
            "columns": [
              {
                "name": "Centro Destribucion"
              },
              {
                "name": "ID_LOCALIZACION_COMPRA"
              }
            ]
          },
          {
            "name": "COP",
            "columns": [
              {
                "name": "COP"
              },
              {
                "name": "COP ID"
              },
              {
                "name": "ID_CODIGO_PRESUPUESTARIO"
              }
            ]
          },
          {
            "name": "Cuenta Local",
            "columns": [
              {
                "name": "Cuenta Local"
              },
              {
                "name": "Cuenta Local ID"
              },
              {
                "name": "Cuenta Local ID &  Descripcion"
              },
              {
                "name": "ID_CUENTA_EMPRESA"
              }
            ]
          },
          {
            "name": "Cuenta Principal",
            "columns": [
              {
                "name": "Cuenta Principal"
              },
              {
                "name": "Cuenta Principal ID"
              },
              {
                "name": "Cuenta Principal ID & Descripcion"
              },
              {
                "name": "ID_CUENTA_PRINCIPAL"
              }
            ]
          },
          {
            "name": "Divisa",
            "columns": [
              {
                "name": "Divisa"
              },
              {
                "name": "Divisa ID"
              },
              {
                "name": "Divisa Simbolo"
              },
              {
                "name": "ID_DIVISA"
              }
            ]
          },
          {
            "name": "Empresa Proveedor",
            "columns": [
              {
                "name": "Empresa Proveedor"
              },
              {
                "name": "Empresa Proveedor ID"
              },
              {
                "name": "Empresa Proveedor ID & Razon Social Completa"
              },
              {
                "name": "Empresa Proveedor Razon Social"
              },
              {
                "name": "Empresa Proveedor Razon Social Completa"
              },
              {
                "name": "ID_EMPRESA"
              },
              {
                "name": "Mercado Proveedor"
              },
              {
                "name": "Tipo Empresa"
              }
            ]
          },
          {
            "name": "Sociedad Cadena",
            "columns": [
              {
                "name": "ID_CADENA_AD"
              },
              {
                "name": "Sociedad Cadena"
              }
            ]
          },
          {
            "name": "Sociedad Grupo",
            "columns": [
              {
                "name": "ID_CADENA"
              },
              {
                "name": "ID_EMPRESA_GRUPO"
              },
              {
                "name": "Sociedad Grupo ID"
              },
              {
                "name": "Sociedad Grupo Mercado"
              },
              {
                "name": "Sociedad Grupo Mercado ID"
              },
              {
                "name": "Sociedad Grupo Mercado ISO"
              },
              {
                "name": "Sociedad Grupo Nombre Comercial"
              },
              {
                "name": "Sociedad Grupo Razon Social"
              }
            ]
          },
          {
            "name": "Unidad Compra",
            "columns": [
              {
                "name": "ID_UNIDAD_COMPRA"
              },
              {
                "name": "Unidad Compra"
              },
              {
                "name": "Unidad Compra ID"
              }
            ]
          },
          {
            "name": "Factura Estado",
            "columns": [
              {
                "name": "Factura Estado"
              },
              {
                "name": "Factura Estado Agrupado"
              },
              {
                "name": "Factura Estado ID"
              },
              {
                "name": "ID_ESTADO_FACTURA"
              },
              {
                "name": "Factura vs Provision"
              }
            ],
            "hierarchies": [
              {
                "name": "Factura Grupo - Estado"
              }
            ]
          },
          {
            "name": "Factura Fecha Alta Cierre",
            "columns": [
              {
                "name": "Factura Ejercicio Alta Cierre"
              },
              {
                "name": "Factura Fecha Alta Cierre"
              },
              {
                "name": "Factura Fecha Alta Cierre Descripcion"
              },
              {
                "name": "Factura Mes Alta Cierre"
              },
              {
                "name": "Factura Semestre Alta Cierre"
              },
              {
                "name": "Factura Trimestre Alta Cierre"
              },
              {
                "name": "ID_EJERCICIO"
              },
              {
                "name": "ID_FECHA"
              },
              {
                "name": "ID_MES"
              },
              {
                "name": "ID_SEMESTRE"
              },
              {
                "name": "ID_TRIMESTRE"
              }
            ]
          },
          {
            "name": "Datos ejecucion ETL",
            "columns": [
              {
                "name": "Descripcion Proceso"
              },
              {
                "name": "Fecha Actualizacion Datos"
              },
              {
                "name": "Fecha Inicio Actualizacion Datos"
              },
              {
                "name": "ID_PROCESO_ETL"
              },
              {
                "name": "VALIDEZ"
              },
              {
                "name": "Versión Tabular"
              }
            ]
          },
          {
            "name": "Factura Ejercicio Cierre",
            "columns": [
              {
                "name": "Factura Ejercicio Cierre"
              },
              {
                "name": "ID_EJERCICIO"
              }
            ]
          },
          {
            "name": "Presupuesto Ejercicio Fecha",
            "columns": [
              {
                "name": "Día"
              },
              {
                "name": "Día Descripción Corta"
              },
              {
                "name": "ID_TRIMESTRE_FISCAL"
              },
              {
                "name": "Trimestre Presupuestario"
              },
              {
                "name": "ID_SEMESTRE_FISCAL"
              },
              {
                "name": "Semestre Presupuestario"
              },
              {
                "name": "Ejercicio Presupuestario ID"
              },
              {
                "name": "Ejercicio Presupuestario"
              },
              {
                "name": "ID_MES"
              },
              {
                "name": "Mes Prespuestario"
              },
              {
                "name": "Mes Corto Presupuestario"
              },
              {
                "name": "Semestre Presupuestario Nom Corto"
              },
              {
                "name": "Trimestre Presupuestario Nom Corto"
              },
              {
                "name": "ID_FECHA_PRESUPUESTARIA"
              },
              {
                "name": "Orden Mes"
              }
            ],
            "hierarchies": [
              {
                "name": "Ejercicio/Sem/Tri"
              }
            ]
          },
          {
            "name": "Pedido",
            "columns": [
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "Pedido"
              },
              {
                "name": "Pedido ID"
              },
              {
                "name": "Pedido ID  & Descripcion"
              },
              {
                "name": "Naturaleza Compra"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "Tipo Pedido"
              },
              {
                "name": "Fecha Alta Pedido"
              }
            ]
          },
          {
            "name": "Factura",
            "columns": [
              {
                "name": "Factura ID"
              },
              {
                "name": "Factura Num"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "Fecha Alta Factura"
              },
              {
                "name": "Fecha Ejecucion Factura"
              },
              {
                "name": "Fecha Factura"
              },
              {
                "name": "INVOICE TYPE"
              }
            ]
          },
          {
            "name": "Proyecto Presupuestario Naturaleza",
            "columns": [
              {
                "name": "Proyecto Presupuestario Naturaleza"
              },
              {
                "name": "Proyecto Presupuestario Naturaleza Descripcion Corta"
              },
              {
                "name": "Proyecto Presupuestario Naturaleza ID"
              }
            ]
          },
          {
            "name": "Presupuesto Tipo",
            "columns": [
              {
                "name": "Presupuesto Tipo ID"
              },
              {
                "name": "Presupuesto Tipo"
              },
              {
                "name": "ID_TIPO_PRESUP"
              }
            ]
          },
          {
            "name": "Factura Informacion Provision",
            "columns": [
              {
                "name": "Provision Factura Codigo"
              },
              {
                "name": "Provision Factura Descripcion"
              },
              {
                "name": "Provision Factura ID"
              },
              {
                "name": "Provision Revierte"
              },
              {
                "name": "ID_INFO_PREV_FACTURA"
              }
            ]
          },
          {
            "name": "Factura Compra Hecho Devengados",
            "columns": [
              {
                "name": "ID_ESTADO_FACTURA"
              },
              {
                "name": "ID_RECEPTOR"
              },
              {
                "name": "ID_FORMA_PAGO"
              },
              {
                "name": "ID_DIVISA"
              },
              {
                "name": "ID_TIPO_SISTEMA_ORIGEN"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "ID_COD_PRESUPTARIO"
              },
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "ID_UNI_COMPRA"
              },
              {
                "name": "ID_CUENTA_PRINC"
              },
              {
                "name": "ID_PROY_PEDIDO"
              },
              {
                "name": "ID_FAM_AJENO_PEDIDO"
              },
              {
                "name": "ID_SUBFAM_AJENO_PEDIDO"
              },
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "ID_TIPO_GESTOR_PEDIDO"
              },
              {
                "name": "ID_EMP_DEST_PEDIDO"
              },
              {
                "name": "ID_EMP_PROVE_PEDIDO"
              },
              {
                "name": "ID_CD_PEDIDO"
              },
              {
                "name": "Factura ID"
              },
              {
                "name": "Factura Num"
              },
              {
                "name": "FEHO_ALTA_FACTURA_ORIGINAL"
              },
              {
                "name": "FEHO_EJEC_FACTURA"
              },
              {
                "name": "ID_INFO_PREV_FACTURA"
              },
              {
                "name": "FECHA_ALTA_CIERRE"
              },
              {
                "name": "EJERCICIO_CIERRE"
              },
              {
                "name": "ID_CUENTA_GRP"
              },
              {
                "name": "ID_CUENTA_GRP_PEDIDO"
              },
              {
                "name": "FACTURA_CABECERA_FILIAL"
              },
              {
                "name": "FACTURA_FILIAL"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "Cumple Fecha Cierre"
              },
              {
                "name": "ID_MES_CIERRE_FACTURA"
              },
              {
                "name": "FECHA_DEVENGO"
              },
              {
                "name": "IMPORTE_DEVENGADO_EURO"
              },
              {
                "name": "ID_ORDEN_TRABAJO_LINEA"
              },
              {
                "name": "Cadena Destino"
              },
              {
                "name": "Mercado Destino"
              },
              {
                "name": "COD_EMISOR"
              },
              {
                "name": "COD_FCTR_IMPUTACION_CONTAB"
              },
              {
                "name": "ID_EMISOR"
              },
              {
                "name": "TND_DEST"
              },
              {
                "name": "ID_FECHA_FACTURA"
              },
              {
                "name": "IMPORTE_DEVENGADO"
              }
            ],
            "measures": [
              {
                "name": "Incurrido Devengado €"
              },
              {
                "name": "Incurrido Devengado € Cierre"
              },
              {
                "name": "Incurrido Devengado Cierre Abril"
              },
              {
                "name": "Incurrido Devengado Cierre Agosto"
              },
              {
                "name": "Incurrido Devengado Cierre Diciembre"
              },
              {
                "name": "Incurrido Devengado Cierre Enero"
              },
              {
                "name": "Incurrido Devengado Cierre Febrero"
              },
              {
                "name": "Incurrido Devengado Cierre Julio"
              },
              {
                "name": "Incurrido Devengado Cierre Junio"
              },
              {
                "name": "Incurrido Devengado Cierre Marzo"
              },
              {
                "name": "Incurrido Devengado Cierre Mayo"
              },
              {
                "name": "Incurrido Devengado Cierre Noviembre"
              },
              {
                "name": "Incurrido Devengado Cierre Octubre"
              },
              {
                "name": "Incurrido Devengado Cierre Septiembre"
              },
              {
                "name": "Incurrido Ajenos Devengados €"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre €"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Abril"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Agosto"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Diciembre"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Enero"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Febrero"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Junio"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Marzo"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Mayo"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Octubre"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Septiembre"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Noviembre"
              },
              {
                "name": "% Inc vs Ped Devengados €"
              },
              {
                "name": "% Inc vs Ppto Devengados €"
              },
              {
                "name": "Inc Cierre Devengados vs Ppto Acum €"
              },
              {
                "name": "% Inc Cierre Devengados vs Ppto Acum €"
              },
              {
                "name": "Provisiones vs Facturas Devengados"
              },
              {
                "name": "Incurrido Ajenos Devengados Cierre Julio"
              },
              {
                "name": "Incurrido Cierre Devengado Provisiones"
              },
              {
                "name": "Incurrido Devengados Cierre Facturas"
              },
              {
                "name": "Incurrido Ajenos Cierre Devengado Provisiones"
              },
              {
                "name": "Incurrido Ajenos Cierre Devengado Facturas"
              },
              {
                "name": "Refacturaciones"
              },
              {
                "name": "Incurrido Filial Franquicia"
              }
            ]
          },
          {
            "name": "Presupuesto Compra Hecho Sin Devengar",
            "columns": [
              {
                "name": "ID_PRESUP"
              },
              {
                "name": "COD_PRESUP"
              },
              {
                "name": "COD_PRESUP_GPS"
              },
              {
                "name": "ID_CODIGO_PRESUPUESTARIO"
              },
              {
                "name": "ID_INFOR_PRESUPUESTO"
              },
              {
                "name": "IMPORTE_PRESUP_EURO"
              },
              {
                "name": "ID_CUENTA_PRINC"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "ID_MES"
              },
              {
                "name": "ID_TIPO_PRESUP"
              },
              {
                "name": "ID_EMP"
              },
              {
                "name": "ID_PROY_CONTABLE"
              },
              {
                "name": "ID_DIVISA"
              },
              {
                "name": "ID_UNIDAD_COMPRA"
              },
              {
                "name": "ID_SUBFAM_AJENO"
              },
              {
                "name": "ID_FAM_AJENO"
              },
              {
                "name": "ACTIVO"
              },
              {
                "name": "UNIDADES_PRESUP"
              },
              {
                "name": "ID_CUENTA_GRUPO"
              },
              {
                "name": "CTAAUX"
              },
              {
                "name": "ID_EMPRESA_GRUPO"
              },
              {
                "name": "PCT_ACTIVA"
              },
              {
                "name": "Fecha Desde"
              },
              {
                "name": "Fecha Hasta"
              },
              {
                "name": "Importe sin Devengar"
              },
              {
                "name": "Devengo"
              },
              {
                "name": "Ejercicio sin Devengar"
              },
              {
                "name": "Fecha Presupuesto Ejercicio"
              },
              {
                "name": "Es Presupuesto Anual"
              },
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "COD_FACTURA"
              },
              {
                "name": "ID_EMPRESA"
              },
              {
                "name": "Orden Mes"
              },
              {
                "name": "COD_FACTURA_ESTADO"
              },
              {
                "name": "ID_PROVISION_FACTURA"
              },
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "ID_ORDEN_TRABAJO_LINEA"
              }
            ],
            "measures": [
              {
                "name": "Presupuesto Numero Devengo"
              },
              {
                "name": "Presupuesto Unidades Devengado"
              },
              {
                "name": "Presupuesto Importe Sin Devengar €"
              },
              {
                "name": "Presupuesto Acumulado sin Devengar"
              }
            ]
          },
          {
            "name": "Pedido Estado",
            "columns": [
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "Pedido Estado anterior"
              },
              {
                "name": "Pedido Estado ID"
              },
              {
                "name": "Pedido Estado"
              }
            ]
          },
          {
            "name": "Pedido Estado Linea",
            "columns": [
              {
                "name": "ID_ESTADO_LINEA_PEDIDO"
              },
              {
                "name": "Pedido Estado Linea"
              },
              {
                "name": "Pedido Estado Linea ID"
              }
            ]
          },
          {
            "name": "AUX_SEGURIDAD_AREA",
            "columns": [
              {
                "name": "AREA"
              },
              {
                "name": "LOGINID"
              }
            ]
          },
          {
            "name": "AUX_SEGURIDAD_SOCIEDAD",
            "columns": [
              {
                "name": "SOCIEDAD"
              },
              {
                "name": "LOGINID"
              }
            ]
          },
          {
            "name": "Orden Trabajo Hecho",
            "columns": [
              {
                "name": "ID_ORDEN_TRABAJO"
              },
              {
                "name": "ID_ORDEN_TRABAJO_LINEA"
              },
              {
                "name": "ID_PEDIDO"
              },
              {
                "name": "ID_PEDIDO_LINEA"
              },
              {
                "name": "ID_FACTURA"
              },
              {
                "name": "Fecha Hora Expedición"
              },
              {
                "name": "Fecha Alta"
              },
              {
                "name": "DESCRIPCION"
              },
              {
                "name": "PRECIO_UNITARIO"
              },
              {
                "name": "UNIDADES_PROVEEDOR"
              },
              {
                "name": "ID_DIVISA"
              },
              {
                "name": "Fecha Ejecución"
              },
              {
                "name": "ID_ESTADO_OT"
              },
              {
                "name": "ESTADO_OT"
              },
              {
                "name": "ID_EMP_DEST"
              },
              {
                "name": "ID_EMP_PROVEEDOR"
              },
              {
                "name": "ID_UNIDAD_COMPRA"
              },
              {
                "name": "ID_PROY_CONTABLE"
              },
              {
                "name": "ID_ESTADO_PEDIDO"
              },
              {
                "name": "ID_DIVISA_DATA"
              },
              {
                "name": "CMB"
              },
              {
                "name": "ID_PEDIDO_DATA"
              },
              {
                "name": "ID_FECHA_FECHA_PRESUPUESTARIA"
              },
              {
                "name": "USUARIO_ALTA"
              }
            ],
            "measures": [
              {
                "name": "Importe OT"
              }
            ]
          },
          {
            "name": "Divisa Cambio",
            "columns": [
              {
                "name": "ID_DIVISA_CMB"
              },
              {
                "name": "ID_FECHA_CMB"
              },
              {
                "name": "Cambio"
              }
            ]
          },
          {
            "name": "Orden Trabajo",
            "columns": [
              {
                "name": "Orden Trabajo ID"
              },
              {
                "name": "Orden Trabajo Linea ID"
              },
              {
                "name": "Descripción"
              },
              {
                "name": "Orden Trabajo Estado"
              },
              {
                "name": "Fecha Hora Expedición"
              },
              {
                "name": "Fecha Alta"
              },
              {
                "name": "Fecha Ejecución"
              },
              {
                "name": "Usuario Alta"
              },
              {
                "name": "Fecha Ejecución Original"
              },
              {
                "name": "Periodo Ejecución"
              }
            ]
          },
          {
            "name": "AUX_SEGURIDAD_AREA_NEGOCIO",
            "columns": [
              {
                "name": "AREAN"
              },
              {
                "name": "LOGINID"
              }
            ]
          },
          {
            "name": "AUX_REPARTO_FACTURAS",
            "columns": [
              {
                "name": "ID_FACTURA_IMPUTACION_CONTABLE"
              },
              {
                "name": "ID_FACTURA"
              },
              {
                "name": "COD_CTA_AUX"
              },
              {
                "name": "TND_DEST"
              },
              {
                "name": "ID_CUENTA_EMP"
              },
              {
                "name": "Cadena"
              },
              {
                "name": "Mercado"
              }
            ]
          },
          {
            "name": "AUX_REPARTO_PRESUPUESTO",
            "columns": [
              {
                "name": "ID_PRESUP"
              },
              {
                "name": "CTAAUX"
              },
              {
                "name": "ID_MES"
              },
              {
                "name": "Cadena"
              },
              {
                "name": "Mercado"
              },
              {
                "name": "CADENA_CRUCE"
              }
            ]
          },
          {
            "name": "Mercado Local",
            "columns": [
              {
                "name": "ID Mercado"
              },
              {
                "name": "Mercado"
              }
            ]
          },
          {
            "name": "Cadena Local",
            "columns": [
              {
                "name": "ID Cadena"
              },
              {
                "name": "Cadena"
              }
            ]
          },
          {
            "name": "Tienda",
            "columns": [
              {
                "name": "ID Tienda"
              },
              {
                "name": "Tienda"
              },
              {
                "name": "Tienda Corta"
              }
            ]
          },
          {
            "name": "Factura Emisor",
            "columns": [
              {
                "name": "ID_EMPRESA"
              },
              {
                "name": "Emisor ID"
              },
              {
                "name": "Emisor"
              }
            ]
          }
        ]
      }
    ],
    "roles": [
      {
        "name": "Rol_Admin",
        "description": "Rol Administrador",
        "modelPermission": "administrator"
      },
      {
        "name": "Rol_Usuarios",
        "description": "Rol de los usuarios de Tabular con acceso total",
        "modelPermission": "read"
      },
      {
        "name": "Rol_Usuarios_Area",
        "description": "Rol de los usuarios de Tabular con acceso por Area",
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "Area",
            "filterExpression": [
              "",
              "Area[Area ID]",
              "    = IF(LOOKUPVALUE(",
              "        AUX_SEGURIDAD_AREA[AREA],",
              "        AUX_SEGURIDAD_AREA[LOGINID], USERNAME (),",
              "        AUX_SEGURIDAD_AREA[AREA], Area[Area ID])=0,-1,LOOKUPVALUE(",
              "        AUX_SEGURIDAD_AREA[AREA],",
              "        AUX_SEGURIDAD_AREA[LOGINID], USERNAME (),",
              "        AUX_SEGURIDAD_AREA[AREA], Area[Area ID])",
              "    ) "
            ]
          }
        ]
      },
      {
        "name": "Rol_Usuarios_Sociedad",
        "description": "Rol de los usuarios de Tabular con acceso por Sociedad",
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "Sociedad",
            "filterExpression": [
              "    ",
              "Sociedad[Sociedad ID]",
              "    = IF(LOOKUPVALUE (",
              "        AUX_SEGURIDAD_SOCIEDAD[Sociedad],",
              "        AUX_SEGURIDAD_SOCIEDAD[LOGINID], USERNAME (),",
              "        AUX_SEGURIDAD_SOCIEDAD[Sociedad], Sociedad[Sociedad ID])=0,-1,LOOKUPVALUE (",
              "        AUX_SEGURIDAD_SOCIEDAD[Sociedad],",
              "        AUX_SEGURIDAD_SOCIEDAD[LOGINID], USERNAME (),",
              "        AUX_SEGURIDAD_SOCIEDAD[Sociedad], Sociedad[Sociedad ID])",
              "    )"
            ]
          }
        ]
      },
      {
        "name": "Rol_Usuarios_Area_Negocio",
        "description": "Rol de los usuarios de Tabular con acceso por Area de Negocio",
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "Area Negocio",
            "filterExpression": [
              "'Area Negocio'[ID Area Negocio]",
              "    = IF(LOOKUPVALUE(",
              "        AUX_SEGURIDAD_AREA_NEGOCIO[AREAN],",
              "        AUX_SEGURIDAD_AREA_NEGOCIO[LOGINID], USERNAME (),",
              "        AUX_SEGURIDAD_AREA_NEGOCIO[AREAN],'Area Negocio'[ID Area Negocio])=0,-1,LOOKUPVALUE(",
              "        AUX_SEGURIDAD_AREA_NEGOCIO[AREAN],",
              "        AUX_SEGURIDAD_AREA_NEGOCIO[LOGINID], USERNAME (),",
              "        AUX_SEGURIDAD_AREA_NEGOCIO[AREAN], 'Area Negocio'[ID Area Negocio])",
              ")"
            ]
          }
        ]
      }
    ],
    "expressions": [
      {
        "name": "Mes",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"TVDLDoMwDPuXnjkw3hwL66ZO0EylTALE///GnGRCu9iO3URNjsPkJjM2rHb645s5swOYGRdcJGX2CwkKyIcbokZQV0sJNdu4kzJQOyoePkQ/KQNL8Wt5t+nzDViJ3UC91uBJGViL30o9/Xwe1ojf8dgnLYlUAFsJeqjFvZN3M76rBbDT/Xh1GtOqERSw14h3D/S5+qB5yVxTPsDdj1cKzSlucH4B\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [MES_ID = _t, Mes = _t, #\"Mes Corta\" = _t, Columna1 = _t]),",
          "    #\"Tipo cambiado\" = Table.TransformColumnTypes(Origen,{{\"MES_ID\", Int64.Type}, {\"Mes\", type text}, {\"Mes Corta\", type text}, {\"Columna1\", Int64.Type}}),",
          "    #\"Columnas con nombre cambiado\" = \" = Table.RenameColumns(#\"\"Tipo cambiado\"\",{{\"\"Columna1\"\", \"\"Orden Mes Presupuesto\"\"}})\"",
          "in",
          "    #\"Columnas con nombre cambiado\""
        ]
      },
      {
        "name": "Dim_Area_Sistema",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"select ID_AREA_SISTEMA, DESCRIPCION_AREA_SISTEMAS, ID_RESPONSABLE_AREA, DESCRIPCION_DEPARTAMENTO,",
          "\tCOD_AREA_SIST from DMARQUITECTURASW.DIM_AREA_SISTEMA\"),",
          "#\"Tipo cambiado\" = Table.TransformColumnTypes(Origen,{{\"ID_AREA_SISTEMA\", Int64.Type}, {\"ID_RESPONSABLE_AREA\", Int64.Type}})",
          "in",
          "    #\"Tipo cambiado\""
        ]
      },
      {
        "name": "Area Sistema",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = Table.NestedJoin(Dim_Area_Sistema, {\"ID_RESPONSABLE_AREA\"}, Dim_Responsable_Area, {\"ID_RECURSO_PROYECTO\"}, \"Dim_Responsable_Area\", JoinKind.LeftOuter),",
          "    #\"Se expandió Dim_Responsable_Area\" = Table.ExpandTableColumn(Origen, \"Dim_Responsable_Area\", {\"ID_RECURSO_PROYECTO\", \"DESCRIPCION\", \"LOGIN_RECURSO_PROYECTO\"}, {\"Dim_Responsable_Area.ID_RECURSO_PROYECTO\", \"Dim_Responsable_Area.DESCRIPCION\", \"Dim_Responsable_Area.LOGIN_RECURSO_PROYECTO\"}),",
          "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Se expandió Dim_Responsable_Area\",{{\"Dim_Responsable_Area.ID_RECURSO_PROYECTO\", Int64.Type}, {\"Dim_Responsable_Area.DESCRIPCION\", type text}, {\"Dim_Responsable_Area.LOGIN_RECURSO_PROYECTO\", type text}}),",
          "    #\"Poner En Mayúsculas Cada Palabra\" = Table.TransformColumns(#\"Tipo cambiado\",{{\"Dim_Responsable_Area.DESCRIPCION\", Text.Proper, type text}}),",
          "    #\"Texto en mayúsculas\" = Table.TransformColumns(#\"Poner En Mayúsculas Cada Palabra\",{{\"Dim_Responsable_Area.LOGIN_RECURSO_PROYECTO\", Text.Upper, type text}}),",
          "   ",
          "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Texto en mayúsculas\",{{\"DESCRIPCION_AREA_SISTEMAS\", \"Area Sistema\"}, {\"COD_AREA_SIST\", \"Area Sistema Codigo\"}, {\"Dim_Responsable_Area.DESCRIPCION\", \"Responsable Area Sistema\"}, {\"Dim_Responsable_Area.LOGIN_RECURSO_PROYECTO\", \"Responsable Area Sistema Login\"}, {\"Dim_Responsable_Area.ID_RECURSO_PROYECTO\", \"ID_RECURSO_PROYECTO\"}})",
          "in",
          "    #\"Columnas con nombre cambiado\""
        ]
      },
      {
        "name": "Dim_Cuenta_Empresa_Presupuesto",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"select ID_CUENTA_EMPRESA,COD_CTA_N7, DESC_CUENTA_LARGA_N7, COD_CTA_AUXILIAR",
          "       from  DMCONTABLE.DIM_CUENTA_EMPRESA C  where Exists  ( select 1 from  DMFINANCIERO.MIC_FACT_PRESUP_COMPRA_SIST F WHERE C.ID_CUENTA_EMPRESA= F.ID_CUENTA_EMP)\")",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Dim_Cuenta_Empresa_Pedido",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"select ID_CUENTA_EMPRESA, COD_CTA_N7, DESC_CUENTA_LARGA_N7, COD_CTA_AUXILIAR",
          "       from  DMCONTABLE.DIM_CUENTA_EMPRESA C where Exists  ( select 1 from  DMFINANCIERO.MIC_FACT_PEDIDO_COMPRA_SIST F WHERE C.ID_CUENTA_EMPRESA= F.ID_CUENTA_EMP)\")",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Dim_Cuenta_Empresa_Factura",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"select ID_CUENTA_EMPRESA, COD_CTA_N7, DESC_CUENTA_LARGA_N7, COD_CTA_AUXILIAR",
          "       from  DMCONTABLE.DIM_CUENTA_EMPRESA C where Exists  ( select 1 from  DMFINANCIERO.MIC_FACT_PRESUP_COMPRA_SIST F WHERE C.ID_CUENTA_EMPRESA= F.ID_CUENTA_EMP)\")",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Dim_Cuenta_Empresa",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = Table.Combine({Dim_Cuenta_Empresa_Presupuesto, Dim_Cuenta_Empresa_Pedido, Dim_Cuenta_Empresa_Factura})",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Cuenta Empresa",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = Dim_Cuenta_Empresa,",
          "    #\"Duplicados quitados\" = Table.Distinct(Origen, {\"ID_CUENTA_EMPRESA\"})",
          "in",
          "    #\"Duplicados quitados\""
        ]
      },
      {
        "name": "Dim_Cuenta_Principal_Presupuesto",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"select c.ID_CUENTA_PRINCIPAL, C.DESCRIPCION,c.COD_CTA_PRINCIPAL from DMCONTABLE.DIM_CUENTA_PRINCIPAL c",
          "where  Exists  ( select 1 from  DMFINANCIERO.MIC_FACT_PRESUP_COMPRA_SIST F WHERE C.ID_CUENTA_PRINCIPAL = F.ID_CUENTA_PRINC)\")",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Dim_Cuenta_Principal_Pedido",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"select c.ID_CUENTA_PRINCIPAL, C.DESCRIPCION,c.COD_CTA_PRINCIPAL from DMCONTABLE.DIM_CUENTA_PRINCIPAL c",
          "where  Exists  ( select 1 from  DMFINANCIERO.MIC_FACT_PEDIDO_COMPRA_SIST F WHERE C.ID_CUENTA_PRINCIPAL = F.ID_CUENTA_PRINC)\")",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Dim_Cuenta_Principal_Factura",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"select c.ID_CUENTA_PRINCIPAL, C.DESCRIPCION,c.COD_CTA_PRINCIPAL from DMCONTABLE.DIM_CUENTA_PRINCIPAL c",
          "where  Exists  ( select 1 from  DMFINANCIERO.MIC_FACT_FACTURA_SISTEMAS F WHERE C.ID_CUENTA_PRINCIPAL = F.ID_CUENTA_PRINC)\")",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Dim_Cuenta_Principal",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = Table.Combine({Dim_Cuenta_Principal_Presupuesto, Dim_Cuenta_Principal_Pedido, Dim_Cuenta_Principal_Factura}),",
          "    #\"Duplicados quitados\" = Table.Distinct(Origen, {\"ID_CUENTA_PRINCIPAL\"})",
          "in",
          "    #\"Duplicados quitados\""
        ]
      },
      {
        "name": "Cuenta Principal",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = Dim_Cuenta_Principal,",
          "    #\"Otras columnas quitadas\" = Table.SelectColumns(Origen,{\"ID_CUENTA_PRINCIPAL\", \"DESCRIPCION\", \"COD_CTA_PRINCIPAL\"}),",
          "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Otras columnas quitadas\",{{\"ID_CUENTA_PRINCIPAL\", Int64.Type}}),",
          "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"DESCRIPCION\", \"Cuenta Principal\"}, {\"COD_CTA_PRINCIPAL\", \"Cuenta Principal Codigo\"}})",
          "in",
          "    #\"Columnas con nombre cambiado\""
        ]
      },
      {
        "name": "Dim_Responsable_Area",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"select ID_RECURSO_PROYECTO, DESCRIPCION, LOGIN_RECURSO_PROYECTO from DMARQUITECTURASW.DIM_RECURSO_PROYECTO\")",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Mic_Fact_Pedido_Compra_Sist",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    /*DMFINANCIERO = Source{[Schema=\"DMFINANCIERO\"]}[Data],",
          "    MIC_FACT_PEDIDO_COMPRA_SIST1 = DMFINANCIERO{[Name=\"MIC_FACT_PEDIDO_COMPRA_SIST\"]}[Data],*/",
          "\tMIC_FACT_PEDIDO_COMPRA_SIST1 = Value.NativeQuery(Source, ",
          "    \"SELECT ",
          "        ID_PEDIDO,",
          "        ID_UNIDAD_COMPRA, ",
          "        ID_AJENO, ",
          "        ID_TIPO_GESTOR, ",
          "        ID_DIVISA, ",
          "        ID_ESTADO_PEDIDO,",
          "        ID_ESTADO_LINEA_PEDIDO, ",
          "        ID_CUENTA_PRINC, ",
          "        ID_CUENTA_EMP, ",
          "        ID_CODIGO_PRESUPUESTARIO,",
          "        ID_PROY_CONTABLE, ",
          "        UNIDADES, ",
          "        UNIDADES_RECIBIDAS, ",
          "        IMPORTE_PEDIDO, ",
          "        IMPORTE_RECEPCIONADO, ",
          "        ID_EMP_DEST, ",
          "        ID_CENTRO_DISTRIBUCION, ",
          "        ID_EMP_PROVEEDOR, ",
          "        CAMBIO, ",
          "        ID_CUENTA_GRP,",
          "        ID_FECHA_PEDIDO,",
          "        COD_CTAAUX,",
          "\t\tFECHA_HASTA,",
          "        FECHA_DESDE,",
          "        ID_FECHA_PRESUPUESTARIA,",
          "        COD_PEDIDO,",
          "        COD_LINEA_PEDIDO,",
          "        ID_LOCALIZACION_COMPRA",
          "   FROM (",
          "      select ",
          "            ID_PEDIDO, ",
          "            ID_UNIDAD_COMPRA, ",
          "            ID_AJENO, ",
          "            ID_TIPO_GESTOR, ",
          "            ID_DIVISA, ",
          "            ID_ESTADO_PEDIDO,",
          "            ID_ESTADO_LINEA_PEDIDO, ",
          "            ID_CUENTA_PRINC, ",
          "            ID_CUENTA_EMP, ",
          "            ID_CODIGO_PRESUPUESTARIO,",
          "            ID_PROY_CONTABLE, ",
          "            UNIDADES, ",
          "            UNIDADES_RECIBIDAS, ",
          "            IMPORTE_PEDIDO, ",
          "            IMPORTE_RECEPCIONADO, ",
          "            ID_EMP_DEST, ",
          "            ID_CENTRO_DISTRIBUCION, ",
          "            ID_EMP_PROVEEDOR, ",
          "            CAMBIO, ",
          "            ID_CUENTA_GRP,",
          "            ID_FECHA_PEDIDO,",
          "            COD_CTAAUX,",
          "            FECHA_HASTA,",
          "            FECHA_DESDE,",
          "            EJERCICIO,",
          "            CASE ",
          "                WHEN ID_FECHA_PEDIDO IS NULL OR FECHA_DESDE  IS NULL THEN ",
          "                  TRUNC(COALESCE(FECHA_DESDE,ID_FECHA_PEDIDO))",
          "                WHEN ID_FECHA_PEDIDO >= FECHA_DESDE THEN ",
          "                    TRUNC(ID_FECHA_PEDIDO)",
          "                ELSE ",
          "                   TRUNC(FECHA_DESDE)",
          "             END ID_FECHA_PRESUPUESTARIA,",
          "             COD_PEDIDO,",
          "             COD_LINEA_PEDIDO,",
          "             ID_LOCALIZACION_COMPRA",
          "             from DMFINANCIERO.MIC_FACT_PEDIDO_COMPRA_SIST )\t\"),",
          "    #\"Añadir Columna Importe Pedido Euros\" = Table.AddColumn(#\"MIC_FACT_PEDIDO_COMPRA_SIST1\", \"Importe Pedido Euros\", each [IMPORTE_PEDIDO] * [CAMBIO]),",
          "    #\"Añadir Columna Importe Recepcionado Euros\" = Table.AddColumn(#\"Añadir Columna Importe Pedido Euros\", \"Importe Recepcionado Euros\", each [IMPORTE_RECEPCIONADO] * [CAMBIO]),",
          "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Añadir Columna Importe Recepcionado Euros\",{{\"ID_FECHA_PEDIDO\", type date}, {\"ID_CUENTA_GRP\", Int64.Type}, {\"ID_PEDIDO\", Int64.Type}, {\"ID_UNIDAD_COMPRA\", Int64.Type}, {\"ID_AJENO\", Int64.Type}, {\"ID_TIPO_GESTOR\", Int64.Type}, {\"ID_DIVISA\", Int64.Type}, {\"ID_ESTADO_PEDIDO\", Int64.Type}, {\"ID_ESTADO_LINEA_PEDIDO\", Int64.Type}, {\"ID_CUENTA_PRINC\", Int64.Type}, {\"ID_CUENTA_EMP\", Int64.Type}, {\"ID_CODIGO_PRESUPUESTARIO\", Int64.Type}, {\"ID_PROY_CONTABLE\", Int64.Type}, {\"ID_EMP_DEST\", Int64.Type}, {\"ID_CENTRO_DISTRIBUCION\", Int64.Type}, {\"ID_EMP_PROVEEDOR\", Int64.Type}, {\"Importe Pedido Euros\", type number}, {\"Importe Recepcionado Euros\", type number}, {\"ID_FECHA_PRESUPUESTARIA\", type date}, {\"FECHA_DESDE\", type date}, {\"COD_PEDIDO\", Int64.Type}})",
          "in",
          "    #\"Tipo cambiado\""
        ]
      },
      {
        "name": "Mic_Fact_Factura_Sistemas",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    /*DMFINANCIERO = Source{[Schema=\"DMFINANCIERO\"]}[Data],",
          "    MIC_FACT_FACTURA_SISTEMAS1 = DMFINANCIERO{[Name=\"MIC_FACT_FACTURA_SISTEMAS\"]}[Data],*/",
          "     MIC_FACT_FACTURA_SISTEMAS1 = Value.NativeQuery(Source, ",
          "    \"",
          "select ",
          "IMPORTE_FACTURA_SIN_IMPTO,",
          "ABONO,",
          "CMB,",
          "ID_ESTADO_FACTURA, ",
          "ID_RECEPTOR, ",
          "ID_FORMA_PAGO, ",
          "ID_DIVISA, ",
          "ID_TIPO_SISTEMA_ORIGEN, ",
          "ID_CUENTA_EMP, ",
          "ID_COD_PRESUPTARIO, ",
          "ID_PEDIDO, ",
          "ID_UNI_COMPRA, ",
          "ID_CUENTA_PRINC, ",
          "ID_PROY_PEDIDO, ",
          "ID_FAM_AJENO_PEDIDO, ",
          "ID_SUBFAM_AJENO_PEDIDO, ",
          "ID_ESTADO_PEDIDO, ",
          "ID_TIPO_GESTOR_PEDIDO, ",
          "ID_EMP_DEST_PEDIDO, ",
          "ID_EMP_PROVE_PEDIDO, ",
          "ID_CD_PEDIDO, ",
          "Case when id_info_prev_factura<>10361 THEN COD_FACTURA*10 ELSE COD_FACTURA END COD_FACTURA, ",
          "NUM_FACTURA, ",
          "ID_FECHA_FACTURA,",
          "TRUNC(FEHO_ALTA_FACTURA) AS FEHO_ALTA_FACTURA_ORIGINAL, ",
          "CASE WHEN TRUNC(FEHO_EJEC_FACTURA)=TO_DATE('09/09/9999','DD/MM/YYYY') THEN TRUNC(FEHO_ALTA_FACTURA) ELSE TRUNC(FEHO_EJEC_FACTURA) END FEHO_EJEC_FACTURA, ",
          "ID_INFO_PREV_FACTURA, ",
          "FECHA_ALTA_CIERRE, ",
          "EJERCICIO_CIERRE, ",
          "ID_CUENTA_GRP, ",
          "ID_CUENTA_GRP_PEDIDO,",
          "FACTURA_CABECERA_FILIAL, ",
          "FACTURA_FILIAL, ",
          "ES_PROFORMA,",
          "FECHA_DESDE,",
          "FECHA_HASTA,",
          "CASE",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('01/02/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/03/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/02/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/03/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/04/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/03/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/04/2020' ,'DD/MM/RRRR') AND  TO_DATE('04/05/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/04/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('05/05/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/06/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/05/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/06/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/07/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/06/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/07/2020' ,'DD/MM/RRRR') AND  TO_DATE('03/08/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/07/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('04/08/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/09/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/08/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/09/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/10/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/09/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/10/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/11/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/10/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/11/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/12/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/11/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/12/2020' ,'DD/MM/RRRR') AND  TO_DATE('04/01/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/12/2020' ,'DD/MM/RRRR')   ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('05/01/2021' ,'DD/MM/RRRR') AND  TO_DATE('02/02/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/01/2021' ,'DD/MM/RRRR')",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/02/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/03/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/02/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('05/03/2021' ,'DD/MM/RRRR') AND  TO_DATE('08/04/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/03/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('09/04/2021' ,'DD/MM/RRRR') AND  TO_DATE('05/05/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/04/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('06/05/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/06/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/05/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('05/06/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/07/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/06/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('07/07/2021' ,'DD/MM/RRRR') AND  TO_DATE('05/08/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/07/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('06/08/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/09/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/08/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('07/09/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/10/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/09/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('07/10/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/11/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/10/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('05/11/2021' ,'DD/MM/RRRR') AND  TO_DATE('07/12/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/11/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('08/12/2021' ,'DD/MM/RRRR') AND  TO_DATE('07/01/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/12/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('08/01/2022' ,'DD/MM/RRRR') AND  TO_DATE('03/02/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/01/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('04/02/2022' ,'DD/MM/RRRR') AND  TO_DATE('07/03/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/02/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('08/03/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/04/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/03/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('07/04/2022' ,'DD/MM/RRRR') AND  TO_DATE('05/05/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/04/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('06/05/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/06/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/05/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('07/06/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/07/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/06/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('07/07/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/08/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/07/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('05/08/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/09/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/08/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('07/09/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/10/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/09/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('05/10/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/11/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/10/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('05/11/2022' ,'DD/MM/RRRR') AND  TO_DATE('02/12/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/11/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/12/2022' ,'DD/MM/RRRR') AND  TO_DATE('05/01/2023' ,'DD/MM/RRRR') THEN TO_DATE('01/12/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('06/01/2023' ,'DD/MM/RRRR') AND  TO_DATE('03/02/2023' ,'DD/MM/RRRR') THEN TO_DATE('01/01/2023' ,'DD/MM/RRRR') ",
          "   ELSE (FEHO_ALTA_FACTURA) END FEHO_ALTA_FACTURA,",
          "   COD_FCTR_IMPUTACION_CONTAB,",
          "   ID_EMISOR,",
          "   TND_DEST,",
          "ID_COD_PRESUP_PEDIDO,",
          "TRUNC(FECHA_ALTA_CIERRE, 'MM') FECHA_ALTA_CIERRE_INI,",
          "COD_LINEA_PEDIDO,",
          "ID_LOC_COMPRA_PEDIDO",
          "from DMFINANCIERO.MIC_FACT_FACTURA_SISTEMAS ",
          "where COALESCE(ES_PROFORMA,0)=0 AND ID_ESTADO_FACTURA <> 17",
          " \"),",
          "    #\"Columna condicional agregada\" = Table.AddColumn(MIC_FACT_FACTURA_SISTEMAS1, \"FEHO_EJEC_ALTA_ANALISIS\", each [FEHO_ALTA_FACTURA] ),",
          "    #\"Personalizada agregada\" = Table.AddColumn(#\"Columna condicional agregada\", \"Importe_Factura_sin_impto_euro\", each [IMPORTE_FACTURA_SIN_IMPTO]* [CMB]),",
          "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Personalizada agregada\",{{\"FEHO_ALTA_FACTURA\", type date}, {\"FEHO_EJEC_FACTURA\", type date}, {\"FEHO_EJEC_ALTA_ANALISIS\", type date}, {\"Importe_Factura_sin_impto_euro\", type number}, {\"FECHA_DESDE\", type date}, {\"FECHA_HASTA\", type date}}),",
          "    #\"Filas filtradas\" = Table.SelectRows(#\"Tipo cambiado\", each true),",
          "    #\"Mes insertado\" = Table.AddColumn(#\"Filas filtradas\", \"Mes\", each Date.Month([FEHO_ALTA_FACTURA]), Int64.Type),",
          "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Mes insertado\",{{\"Mes\", \"Mes Fecha ALta condición\"}}),",
          "    #\"Tipo cambiado1\" = Table.TransformColumnTypes(#\"Columnas con nombre cambiado\",{{\"FEHO_ALTA_FACTURA_ORIGINAL\", type date}}),",
          "    #\"Fecha extraída\" = Table.TransformColumns(#\"Tipo cambiado1\",{{\"FECHA_ALTA_CIERRE\", DateTime.Date, type date}}),",
          "    #\"Columna condicional agregada1\" = Table.AddColumn(#\"Fecha extraída\", \"Cumple Fecha Cierre\", each if [FEHO_ALTA_FACTURA_ORIGINAL] < [FECHA_ALTA_CIERRE] then 1 else 0),",
          "    #\"Tipo cambiado2\" = Table.TransformColumnTypes(#\"Columna condicional agregada1\",{{\"FECHA_ALTA_CIERRE_INI\", type date}}),",
          "    #\"Columna condicional agregada2\" = Table.AddColumn(#\"Tipo cambiado2\", \"Cumple Fecha Cierre Ini\", each if [FEHO_ALTA_FACTURA_ORIGINAL] < [FECHA_ALTA_CIERRE_INI] then 1 else 0),",
          "    #\"Fecha extraída1\" = Table.TransformColumns(#\"Columna condicional agregada2\",{{\"ID_FECHA_FACTURA\", DateTime.Date, type date}})",
          "in",
          "    #\"Fecha extraída1\""
        ]
      },
      {
        "name": "Dim_info_Prev_Factura",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"select f.ID_INFO_PREV_FACTURA,",
          "f.COD_PREV_FACTURA,",
          "f.DESCRIPCION,",
          "f.CODIGO_PREV_FACTURA,",
          "case when fp.ID_FECHA_PREV_PROVE=to_date('01/01/9999','dd/mm/yyyy') OR fp.ID_FECHA_PREV_PROVE is null then 'NO' else 'SI' end PROVISION_REVIERTE",
          "from DMFINANCIERO.dim_info_Prev_Factura f",
          "left join DMFINANCIERO.FACT_PREV_FACTURA fp",
          "ON (F.ID_INFO_PREV_FACTURA=FP.ID_INFO_PREV_FACTURA)",
          "UNION ",
          "SELECT ",
          "-1 ID_INFO_PREV_FACTURA,",
          "-1 COD_PREV_FACTURA,",
          "'Presupuesto' DESCRIPCION,",
          "'Presupuesto' CODIGO_PREV_FACTURA,",
          "'NO' PROVISION_REVIERTE",
          "FROM DUAL",
          "UNION ",
          "SELECT ",
          "-2 ID_INFO_PREV_FACTURA,",
          "-2 COD_PREV_FACTURA,",
          "'Pedido' DESCRIPCION,",
          "'Pedido' CODIGO_PREV_FACTURA,",
          "'NO' PROVISION_REVIERTE",
          "FROM DUAL\"),",
          "    #\"Columna condicional agregada\" = Table.AddColumn(Origen, \"Provision Factura ID\", each if [COD_PREV_FACTURA] = 0 then \"Detalle Acumulado de Facturas\" else if [COD_PREV_FACTURA] = -1 then \"Presupuesto\" else if [COD_PREV_FACTURA] = -2 then \"Pedido\" else [DESCRIPCION]),",
          "    #\"Columna condicional agregada1\" = Table.AddColumn(#\"Columna condicional agregada\", \"Provision Factura Descripcion\", each if [COD_PREV_FACTURA] = 0 then \"Detalle Acumulado de Facturas\" else if [COD_PREV_FACTURA] = -1 then \"Presupuesto\" else if [COD_PREV_FACTURA] = -2 then \"Pedido\" else  [CODIGO_PREV_FACTURA]& \" \" &  [DESCRIPCION])",
          "in",
          "    #\"Columna condicional agregada1\""
        ]
      },
      {
        "name": "Responsables Proyecto Area",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    tabla = Value.NativeQuery(Source, ",
          "    \"SELECT ",
          "P.ID_PROYECTO_CONTABLE PROYECTO_GPS,",
          "UPPER(RP.DESCRIPCION) RESPONSABLE_PROYECTO_SISTEMAS,",
          "UPPER(RA.DESCRIPCION) RESPONSABLE_AREA,",
          "RP.LOGIN_RECURSO_PROYECTO  RESPONSABLE_PROYECTO_SISTEMAS_USER_ID",
          "FROM DMARQUITECTURASW.DIM_PROYECTO_CONTABLE P",
          "LEFT JOIN DMARQUITECTURASW.DIM_RECURSO_PROYECTO RP",
          "ON (P.ID_RECURSO_RESPON_SIS_PROY=RP.ID_RECURSO_PROYECTO)",
          "LEFT JOIN DMARQUITECTURASW.DIM_RECURSO_PROYECTO RA",
          "ON (P.ID_RECURSO_RESPON_SIS_PROY=RA.ID_RECURSO_PROYECTO)\")",
          "in",
          "    tabla"
        ]
      },
      {
        "name": "Dim_Proyecto_Contable",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    DMARQUITECTURASW = Source{[Schema=\"DMARQUITECTURASW\"]}[Data],",
          "    DIM_PROYECTO_CONTABLE =DMARQUITECTURASW{[Name=\"DIM_PROYECTO_CONTABLE\"]}[Data],",
          "    #\"Otras columnas quitadas\" = Table.SelectColumns(DIM_PROYECTO_CONTABLE,{\"ID_PROYECTO_CONTABLE\", \"DESCRIPCION\", \"COD_PROYECTO_SIS\", \"AREA_GESTION\", \"AREA_NEGOCIO\", \"ID_AREA_SISTEMA\", \"COD_PROY_CONTRABLE_MAE\", \"COD_NATURALEZA_PROY\", \"DESC_NATURALEZA_PROY\", \"DESC_CORTA_NATURALEZA_PROY\", \"TIPO_REPARTO\", \"PCT_ACTIVA\", \"ETIQUETA_PROYECTO\",\"ID_AREA_NEGO\"}),",
          "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Otras columnas quitadas\",{{\"ID_PROYECTO_CONTABLE\", Int64.Type},  {\"ID_AREA_SISTEMA\", Int64.Type}, {\"COD_NATURALEZA_PROY\", Int64.Type}, {\"COD_PROY_CONTRABLE_MAE\", Int64.Type}}),",
          "    #\"Añadir Columna Proyecto Presupuestario\" = Table.AddColumn(#\"Tipo cambiado\", \"Proyecto Presupuestario\", each if [DESCRIPCION] = null then \"Desconocido\" else [DESCRIPCION]),",
          "    #\"Añadir Columna Proyecto Presupuestario ID\" = Table.AddColumn(#\"Añadir Columna Proyecto Presupuestario\", \"Proyecto Presupuestario ID\", each if [COD_PROYECTO_SIS] = null then \"Desconocido\" else [COD_PROYECTO_SIS]),",
          "    #\"Añadir Columna Proyecto Presupuestario ID & Descripcion\" = Table.AddColumn(#\"Añadir Columna Proyecto Presupuestario ID\", \"Proyecto Presupuestario ID & Descripcion\", each if [COD_PROYECTO_SIS] = null then    [Proyecto Presupuestario]",
          "else ",
          "[Proyecto Presupuestario ID] &\" \" & [Proyecto Presupuestario]),",
          "    #\"Añadir Columna Proyecto Presupuestario Naturaleza ID\" = Table.AddColumn(#\"Añadir Columna Proyecto Presupuestario ID & Descripcion\", \"Proyecto Presupuestario Naturaleza ID\", each if [COD_NATURALEZA_PROY] = null then -1 else [COD_NATURALEZA_PROY]),",
          "    #\"Añadir Columna Proyecto Presupuestario Naturaleza\" = Table.AddColumn(#\"Añadir Columna Proyecto Presupuestario Naturaleza ID\", \"Proyecto Presupuestario Naturaleza\", each if [COD_NATURALEZA_PROY] = null then \"No Consta\" else if [COD_NATURALEZA_PROY] = -1 then \"No Consta\" else [DESC_NATURALEZA_PROY]),",
          "    #\"Añadir Columna Proyecto Presupuestario Naturaleza Descripcion Corta\" = Table.AddColumn(#\"Añadir Columna Proyecto Presupuestario Naturaleza\", \"Proyecto Presupuestario Naturaleza Descripcion Corta\", each if [COD_NATURALEZA_PROY] = null then \"No Consta\" else if [COD_NATURALEZA_PROY] = -1 then \"No Consta\" else [DESC_CORTA_NATURALEZA_PROY]),",
          "    #\"Añadir Columna Proyecto Presupuestario Etiqueta\" = Table.AddColumn(#\"Añadir Columna Proyecto Presupuestario Naturaleza Descripcion Corta\", \"Proyecto Presupuestario Etiqueta\", each if [ETIQUETA_PROYECTO] = null then null else [ETIQUETA_PROYECTO]),",
          "    #\"Añadir Columna Proyecto Presupuestario Tipo RepartoProyecto Presupuestario Tipo Reparto\" = Table.AddColumn(#\"Añadir Columna Proyecto Presupuestario Etiqueta\", \"Proyecto Presupuestario Tipo Reparto\", each if [TIPO_REPARTO] = null then null else [TIPO_REPARTO]),",
          "    #\"Añadir Columna Porcentaje Activación\" = Table.AddColumn(#\"Añadir Columna Proyecto Presupuestario Tipo RepartoProyecto Presupuestario Tipo Reparto\", \"Porcentaje Activacion ID\", each if [PCT_ACTIVA] = null then 0 else Number.Round([PCT_ACTIVA],4)),",
          "    #\"Tipo cambiado Columnas Añadidas\" = Table.TransformColumnTypes(#\"Añadir Columna Porcentaje Activación\",{{\"ID_PROYECTO_CONTABLE\", Int64.Type}, {\"Proyecto Presupuestario Naturaleza ID\", Int64.Type}, {\"Proyecto Presupuestario Naturaleza\", type text}, {\"Proyecto Presupuestario Naturaleza Descripcion Corta\", type text}, {\"Proyecto Presupuestario Etiqueta\", type text}, {\"Proyecto Presupuestario Tipo Reparto\", type text}, {\"Proyecto Presupuestario ID\", type text}, {\"Proyecto Presupuestario ID & Descripcion\", type text}, {\"Proyecto Presupuestario\", type text}, {\"Porcentaje Activacion ID\", type number}}),",
          "    #\"Columnas quitadas\" = Table.RemoveColumns(#\"Tipo cambiado Columnas Añadidas\",{\"COD_NATURALEZA_PROY\", \"DESC_NATURALEZA_PROY\", \"DESC_CORTA_NATURALEZA_PROY\", \"ETIQUETA_PROYECTO\", \"TIPO_REPARTO\", \"DESCRIPCION\", \"COD_PROYECTO_SIS\", \"PCT_ACTIVA\"})",
          "in",
          "    #\"Columnas quitadas\""
        ]
      },
      {
        "name": "Proyecto Contable y Responsables",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = Table.NestedJoin(Dim_Proyecto_Contable, {\"COD_PROY_CONTRABLE_MAE\"}, #\"Responsables Proyecto Area\", {\"PROYECTO_GPS\"}, \"Responsables Proyecto Area\", JoinKind.LeftOuter),",
          "    #\"Otras columnas quitadas\" = Table.SelectColumns(Origen,{\"ID_PROYECTO_CONTABLE\", \"AREA_GESTION\", \"AREA_NEGOCIO\", \"ID_AREA_SISTEMA\", \"COD_PROY_CONTRABLE_MAE\", \"ID_AREA_NEGO\", \"Proyecto Presupuestario\", \"Proyecto Presupuestario ID\", \"Proyecto Presupuestario ID & Descripcion\", \"Proyecto Presupuestario Naturaleza ID\", \"Proyecto Presupuestario Etiqueta\", \"Proyecto Presupuestario Tipo Reparto\", \"Porcentaje Activacion ID\", \"Responsables Proyecto Area\"}),",
          "    #\"Se expandió Responsables Proyecto Area\" = Table.ExpandTableColumn(#\"Otras columnas quitadas\", \"Responsables Proyecto Area\", {\"RESPONSABLE_PROYECTO_SISTEMAS\", \"RESPONSABLE_AREA\", \"RESPONSABLE_PROYECTO_SISTEMAS_USER_ID\"}, {\"Responsables Proyecto Area.RESPONSABLE_PROYECTO_SISTEMAS\", \"Responsables Proyecto Area.RESPONSABLE_AREA\", \"Responsables Proyecto Area.RESPONSABLE_PROYECTO_SISTEMAS_USER_ID\"}),",
          "    #\"Añadir Columna Responsable Proyecto Sistemas\" = Table.AddColumn(#\"Se expandió Responsables Proyecto Area\", \"Responsable Proyecto Sistemas\", each if [Responsables Proyecto Area.RESPONSABLE_PROYECTO_SISTEMAS] = null then \"Desconocido\" else [Responsables Proyecto Area.RESPONSABLE_PROYECTO_SISTEMAS]),",
          "    #\"Añadir Columna Responsable Area Sistemas\" = Table.AddColumn(#\"Añadir Columna Responsable Proyecto Sistemas\", \"Responsable Area Sistemas\", each if [Responsables Proyecto Area.RESPONSABLE_AREA] = null then \"Desconocido\" else [Responsables Proyecto Area.RESPONSABLE_AREA]),",
          "    #\"Columna condicional agregada\" = Table.AddColumn(#\"Añadir Columna Responsable Area Sistemas\", \"Responsable Proyecto User ID\", each if [Responsables Proyecto Area.RESPONSABLE_PROYECTO_SISTEMAS_USER_ID] = null then \"Desconocido\" else [Responsables Proyecto Area.RESPONSABLE_PROYECTO_SISTEMAS_USER_ID]),",
          "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columna condicional agregada\",{{\"Responsable Area Sistemas\", type text}, {\"Responsable Proyecto Sistemas\", type text}}),",
          "    #\"Columnas quitadas\" = Table.RemoveColumns(#\"Tipo cambiado\",{\"Responsables Proyecto Area.RESPONSABLE_PROYECTO_SISTEMAS\", \"Responsables Proyecto Area.RESPONSABLE_AREA\", \"Responsable Area Sistemas\", \"COD_PROY_CONTRABLE_MAE\"})",
          "in",
          "    #\"Columnas quitadas\""
        ]
      },
      {
        "name": "Factura Cuenta Grupo/Partition",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"select ID_CUENTA_GRUPO, COD_CTA_GRUPO, COD_CTA_GRUPO_N1, COD_CTA_GRUPO_N2, COD_CTA_GRUPO_N3, COD_CTA_GRUPO_N4, DESC_LARGA_CTA_GRUPO_N1, DESC_LARGA_CTA_GRUPO_N2, DESC_LARGA_CTA_GRUPO_N3, DESC_LARGA_CTA_GRUPO_N4",
          "       from  DMCONTABLE.DIM_CUENTA_GRUPO C where Exists  ( select 1 from  DMFINANCIERO.MIC_FACT_FACTURA_SISTEMAS F WHERE C.ID_CUENTA_GRUPO= F.ID_CUENTA_GRP)",
          "\"),",
          "    #\"Columna condicional agregada\" = Table.AddColumn(Origen, \"Tipo Cuenta Grupo Pedido\", each if [COD_CTA_GRUPO_N4] = \"6029\" then \"INV\" else if not Text.StartsWith([COD_CTA_GRUPO_N4], \"6\") then \"INV\" else \"GASTO\"),",
          "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Columna condicional agregada\",{{\"ID_CUENTA_GRUPO\", Int64.Type}})",
          "in",
          "    #\"Tipo cambiado\""
        ]
      },
      {
        "name": "Presupuesto Compras Anuales",
        "kind": "m",
        "expression": [
          "let",
          " Source = #\"Oracle/exapre_rep\",",
          " ",
          "     MIC_FACT_PRESUPUESTO_ANUAL = Value.NativeQuery(Source, ",
          "    \"",
          "SELECT ID_PRESUP, COD_PRESUP, COD_PRESUP_GPS, ID_CODIGO_PRESUPUESTARIO, ID_INFOR_PRESUPUESTO, ID_CUENTA_PRINC, ID_CUENTA_EMP,",
          "ID_EJERCICIO, ID_MES,ID_MES_PRESUPUESTARIO, ID_TIPO_PRESUP, ID_EMP, ID_PROY_CONTABLE, ID_DIVISA, ID_UNIDAD_COMPRA, ID_SUBFAM_AJENO, ID_FAM_AJENO, ACTIVO, CADENA, clasificacion_presup, TIPO_AGREGADO,",
          "((CASE",
          "WHEN ID_MES_PRESUPUESTARIO = 12 THEN",
          "((IMPORTE_PRESUP/22) - 87419822676.37) - (round((((IMPORTE_PRESUP/22) - 87419822676.37) /12),6) * 11 )",
          "ELSE",
          "round((((IMPORTE_PRESUP/22) - 87419822676.37) /12),6)",
          "end ) + 87419822676.37 ) * 22 AS IMPORTE_PRESUP,",
          "((CASE",
          "WHEN ID_MES_PRESUPUESTARIO = 12 THEN",
          "((IMPORTE_PRESUP_EURO/22) - 87419822676.37) - (round((((IMPORTE_PRESUP_EURO/22) - 87419822676.37) /12),6) * 11 )",
          "ELSE",
          "round((((IMPORTE_PRESUP_EURO/22) - 87419822676.37) /12),6)",
          "end ) + 87419822676.37 ) * 22 AS IMPORTE_PRESUP_EURO,",
          "UNIDADES_PRESUP, ID_CUENTA_GRUPO,",
          "ctaaux,id_empresa_grupo, pct_Activa, fecha_desde, fecha_hasta",
          "from dmfinanciero.MIC_FACT_PRESUP_COMPRA_SIST",
          "p cross join ( select 1 AS ID_MES_PRESUPUESTARIO FROM DUAL",
          "UNION ALL",
          "select 2 FROM DUAL",
          "UNION ALL",
          "select 3 FROM DUAL",
          "UNION ALL",
          "select 4 FROM DUAL",
          "UNION ALL",
          "select 5 FROM DUAL",
          "UNION ALL",
          "select 6 FROM DUAL",
          "UNION ALL",
          "select 7 FROM DUAL",
          "UNION ALL",
          "select 8 FROM DUAL",
          "UNION ALL",
          "select 9 FROM DUAL",
          "UNION ALL",
          "select 10 FROM DUAL",
          "UNION ALL",
          "select 11 FROM DUAL",
          "UNION ALL",
          "select 12 FROM DUAL) M",
          "where p.id_mes= 0",
          "\"),",
          "   #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"MIC_FACT_PRESUPUESTO_ANUAL\",{{\"ID_EMP\", Int64.Type}, {\"ID_TIPO_PRESUP\", Int64.Type}, {\"ID_PROY_CONTABLE\", Int64.Type}, {\"ID_DIVISA\", Int64.Type}, {\"ID_UNIDAD_COMPRA\", Int64.Type}, {\"ID_CODIGO_PRESUPUESTARIO\", Int64.Type}, {\"ID_CUENTA_PRINC\", Int64.Type}, {\"ID_CUENTA_EMP\", Int64.Type}, {\"ID_CUENTA_GRUPO\", Int64.Type}, {\"ID_INFOR_PRESUPUESTO\", Int64.Type}, {\"IMPORTE_PRESUP_EURO\", type number}, {\"IMPORTE_PRESUP\", type number}, {\"ID_SUBFAM_AJENO\", Int64.Type}, {\"ID_FAM_AJENO\", Int64.Type}, {\"ID_EJERCICIO\", Int64.Type}, {\"ID_MES\", Int64.Type}}),",
          "    #\"Filas filtradas\" = Table.SelectRows(#\"Tipo cambiado\", each ([COD_PRESUP] <> 0)),",
          "    #\"Columna condicional agregada\" = Table.AddColumn(#\"Filas filtradas\", \"Fecha Presupuesto Ejercicio\", each if [ID_MES_PRESUPUESTARIO] = 1 then \"01/\" & Number.ToText([ID_MES_PRESUPUESTARIO])&\"/\"& Number.ToText([ID_EJERCICIO]+1) else \"01/\" & Number.ToText([ID_MES_PRESUPUESTARIO])&\"/\"& Number.ToText([ID_EJERCICIO])),",
          "    #\"Tipo cambiado1\" = Table.TransformColumnTypes(#\"Columna condicional agregada\",{{\"Fecha Presupuesto Ejercicio\", type date}}),",
          "    #\"Otras columnas quitadas\" = Table.SelectColumns(#\"Tipo cambiado1\",{\"ID_PRESUP\", \"COD_PRESUP\", \"COD_PRESUP_GPS\", \"ID_CODIGO_PRESUPUESTARIO\", \"ID_INFOR_PRESUPUESTO\", \"ID_CUENTA_PRINC\", \"ID_CUENTA_EMP\", \"ID_TIPO_PRESUP\", \"ID_EMP\", \"ID_PROY_CONTABLE\", \"ID_DIVISA\", \"ID_UNIDAD_COMPRA\", \"ID_SUBFAM_AJENO\", \"ID_FAM_AJENO\", \"ACTIVO\", \"CADENA\", \"CLASIFICACION_PRESUP\", \"IMPORTE_PRESUP\", \"IMPORTE_PRESUP_EURO\", \"UNIDADES_PRESUP\", \"ID_CUENTA_GRUPO\", \"CTAAUX\", \"ID_EMPRESA_GRUPO\", \"FECHA_DESDE\", \"FECHA_HASTA\", \"Fecha Presupuesto Ejercicio\"}),",
          "    #\"Personalizada agregada\" = Table.AddColumn(#\"Otras columnas quitadas\", \"Es Presupuesto Anual\", each 1),",
          "    #\"Tipo cambiado2\" = Table.TransformColumnTypes(#\"Personalizada agregada\",{{\"Es Presupuesto Anual\", type logical}})",
          "in",
          "    #\"Tipo cambiado2\""
        ]
      },
      {
        "name": "Dim_Factura",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"SELECT DISTINCT CASE WHEN id_info_prev_factura<>10361 THEN COD_FACTURA*10 ELSE COD_FACTURA END COD_FACTURA, ",
          "NUM_FACTURA, ",
          "FECHA_DESDE Fecha_Desde,",
          "FECHA_HASTA Fecha_Hasta, ",
          "FEHO_EJEC_FACTURA, ",
          "TRUNC(FEHO_ALTA_FACTURA) AS FEHO_ALTA_FACTURA_ORIGINAL, ",
          "ID_FECHA_FACTURA, ",
          "CASE WHEN ABONO=1 THEN 'CREDIT NOTE' ELSE 'INVOICE' END INVOICE_TYPE",
          "FROM DMFINANCIERO.MIC_FACT_FACTURA_SISTEMAS \"),",
          "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(Origen,{{\"FECHA_DESDE\", \"Fecha_Desde\"}, {\"FECHA_HASTA\", \"Fecha_Hasta\"}, {\"INVOICE_TYPE\", \"INVOICE TYPE\"}})",
          "in",
          "    #\"Columnas con nombre cambiado\""
        ]
      },
      {
        "name": "Dim_Factura_NA",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45W0jVU0lEKKEotLi0oTS0uyQfyoCg2FgA=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [COD_FACTURA = _t, NUM_FACTURA = _t, Fecha_Desde = _t, Fecha_Hasta = _t, #\"INVOICE TYPE\" = _t]),",
          "    #\"Tipo cambiado\" = Table.TransformColumnTypes(Origen,{{\"Fecha_Desde\", type datetime}, {\"Fecha_Hasta\", type datetime}})",
          "in",
          "    #\"Tipo cambiado\""
        ]
      },
      {
        "name": "Pedido_NA",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45W0jVU0oEQAUWpxaUFpanFJfkYPBCKjQUA\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [ID_PEDIDO = _t, #\"Pedido ID\" = _t, Pedido = _t, #\"Pedido Codigo & Descripcion\" = _t, Fecha_Desde = _t, Fecha_Hasta = _t]),",
          "    #\"Tipo cambiado\" = Table.TransformColumnTypes(Origen,{{\"ID_PEDIDO\", Int64.Type}, {\"Pedido ID\", Int64.Type}, {\"Pedido\", type text}, {\"Pedido Codigo & Descripcion\", type text}, {\"Fecha_Desde\", type datetime}, {\"Fecha_Hasta\", type datetime}})",
          "in",
          "    #\"Tipo cambiado\""
        ]
      },
      {
        "name": "Proyecto Presupuestario/Partition",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = #\"Proyecto Contable y Responsables\",",
          "    #\"Otras columnas quitadas\" = Table.SelectColumns(Origen,{\"ID_PROYECTO_CONTABLE\", \"AREA_GESTION\", \"AREA_NEGOCIO\", \"ID_AREA_SISTEMA\", \"ID_AREA_NEGO\", \"Proyecto Presupuestario\", \"Proyecto Presupuestario ID\", \"Proyecto Presupuestario ID & Descripcion\", \"Proyecto Presupuestario Naturaleza ID\", \"Proyecto Presupuestario Etiqueta\", \"Proyecto Presupuestario Tipo Reparto\", \"Porcentaje Activacion ID\", \"Responsable Proyecto Sistemas\", \"Responsable Proyecto User ID\"}),",
          "#\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Otras columnas quitadas\",{{\"AREA_GESTION\", \"Area Gestion\"}, {\"AREA_NEGOCIO\", \"Subarea Negocio\"}, {\"Responsable Proyecto Sistemas\", \"Responsable Proyecto\"}})",
          "  ",
          "in",
          "   #\"Columnas con nombre cambiado\""
        ]
      },
      {
        "name": "Presupuesto Mercado Destino",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    Origen = Value.NativeQuery(Source, ",
          "        \"SELECT IP.ID_INFOR_PRESUP,D.COD_CATEG_PRESUP,D.DESCRIPCION",
          "    FROM DMFINANCIERO.DIM_CATEG_PRESUP D",
          "    join    DMFINANCIERO.AUX_PRESUP_CATEG    AP",
          "    on     (AP.ID_CATEG_PRESUP = D.ID_CATEG_PRESUP)",
          "    join DMFINANCIERO.dim_infor_preSup IP",
          "    on (AP.id_presup=IP.id_infor_presup)",
          "    WHERE D.COD_TIPO_CATEG=27 and d.descripcion_tipo_categ<>'DESCONOCIDO'\"),",
          "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(Origen,{{\"DESCRIPCION\", \"Mercado Destino\"}, {\"COD_CATEG_PRESUP\", \"Mercado Destino ID\"}})",
          "   ",
          "in",
          "   #\"Columnas con nombre cambiado\""
        ]
      },
      {
        "name": "Mic_Fact_Factura_Sistemas_Devengados",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "    /*DMFINANCIERO = Source{[Schema=\"DMFINANCIERO\"]}[Data],",
          "    MIC_FACT_FACTURA_SISTEMAS1 = DMFINANCIERO{[Name=\"MIC_FACT_FACTURA_SISTEMAS\"]}[Data],*/",
          "     MIC_FACT_FACTURA_SISTEMAS1 = Value.NativeQuery(Source, ",
          "    \" SELECT IMPORTE_FACTURA_SIN_IMPTO,",
          "ABONO,",
          "CMB,",
          "ID_ESTADO_FACTURA,",
          "ID_RECEPTOR,",
          "ID_FORMA_PAGO,",
          "ID_DIVISA,",
          "ID_TIPO_SISTEMA_ORIGEN,",
          "ID_CUENTA_EMP,",
          "ID_COD_PRESUPTARIO,",
          "ID_PEDIDO,",
          "ID_UNI_COMPRA,",
          "ID_CUENTA_PRINC,",
          "ID_PROY_CONTAB,",
          "ID_PROY_PEDIDO,",
          "ID_FAM_AJENO_PEDIDO,",
          "ID_SUBFAM_AJENO_PEDIDO,",
          "ID_ESTADO_PEDIDO,",
          "ID_TIPO_GESTOR_PEDIDO,",
          "ID_EMP_DEST_PEDIDO,",
          "ID_EMP_PROVE_PEDIDO,",
          "ID_CD_PEDIDO,",
          "COD_FACTURA,",
          "NUM_FACTURA,",
          "FEHO_ALTA_FACTURA_ORIGINAL,",
          "FEHO_EJEC_FACTURA,",
          "ID_INFO_PREV_FACTURA,",
          "FECHA_ALTA_CIERRE,",
          "EJERCICIO_CIERRE,",
          "ID_CUENTA_GRP,",
          "ID_CUENTA_GRP_PEDIDO,",
          "FACTURA_CABECERA_FILIAL,",
          "FACTURA_FILIAL,",
          "ES_PROFORMA,",
          "FECHA_DESDE,",
          "FECHA_HASTA,",
          "COD_CTAAUX,",
          "TND_DEST,",
          "COD_FCTR_IMPUTACION_CONTAB,",
          "IMPORTE_DEVENGADO,",
          "FECHA_DEVENGO,",
          "ID_EMISOR,",
          "ID_COD_PRESUP_PEDIDO,",
          "COD_LINEA_PEDIDO,",
          "ID_LOC_COMPRA_PEDIDO,",
          "ID_FECHA_FACTURA",
          "FROM(SELECT IMPORTE_FACTURA_SIN_IMPTO,",
          "ABONO,",
          "CMB,",
          "ID_ESTADO_FACTURA,",
          "ID_RECEPTOR,",
          "ID_FORMA_PAGO,",
          "ID_DIVISA,",
          "ID_TIPO_SISTEMA_ORIGEN,",
          "ID_CUENTA_EMP,",
          "ID_COD_PRESUPTARIO,",
          "ID_PEDIDO,",
          "ID_UNI_COMPRA,",
          "ID_CUENTA_PRINC,",
          "ID_PROY_CONTAB,",
          "ID_PROY_PEDIDO,",
          "ID_FAM_AJENO_PEDIDO,",
          "ID_SUBFAM_AJENO_PEDIDO,",
          "ID_ESTADO_PEDIDO,",
          "ID_TIPO_GESTOR_PEDIDO,",
          "ID_EMP_DEST_PEDIDO,",
          "ID_EMP_PROVE_PEDIDO,",
          "ID_CD_PEDIDO,",
          "Case when id_info_prev_factura<>10361 THEN COD_FACTURA*10 ELSE COD_FACTURA END COD_FACTURA,",
          "NUM_FACTURA,",
          "CASE WHEN  trunc(FEHO_ALTA_FACTURA_ORIGINAL,'MM')>trunc(fecha_devengo) THEN FEHO_ALTA_FACTURA_ORIGINAL ELSE TO_DATE('15/'||to_char(fecha_devengo,'MM/YYYY'),'DD/MM/YYYY') END FEHO_ALTA_FACTURA_ORIGINAL,",
          "FEHO_EJEC_FACTURA,",
          "ID_INFO_PREV_FACTURA,",
          "FECHA_ALTA_CIERRE,",
          "EJERCICIO_CIERRE,",
          "ID_CUENTA_GRP,",
          "ID_CUENTA_GRP_PEDIDO,",
          "FACTURA_CABECERA_FILIAL,",
          "FACTURA_FILIAL,",
          "ES_PROFORMA,",
          "FECHA_DESDE,",
          "FECHA_HASTA,",
          "COD_CTAAUX,",
          "TND_DEST,",
          "COD_FCTR_IMPUTACION_CONTAB,",
          "CASE ",
          "  WHEN  TRUNC(FECHA_DEVENGO)=TRUNC(CASE WHEN DAY(Fecha_hasta)<=25 THEN ADD_MONTHS(TRUNC(LAST_DAY(fecha_hasta)),-1) else TRUNC(LAST_DAY(fecha_hasta))  END,'MM') THEN ",
          "    IMPORTE_FACTURA_SIN_IMPTO - (round(IMPORTE_FACTURA_SIN_IMPTO/MESES,2) * (MESES-1)) ",
          "  ELSE ",
          "    round(IMPORTE_FACTURA_SIN_IMPTO/MESES,2)",
          "END IMPORTE_DEVENGADO,",
          "CASE WHEN  trunc(FEHO_ALTA_FACTURA_ORIGINAL,'MM')>trunc(fecha_devengo)THEN CASE ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('01/02/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/03/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/02/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('05/03/2021' ,'DD/MM/RRRR') AND  TO_DATE('08/04/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/03/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('09/04/2021' ,'DD/MM/RRRR') AND  TO_DATE('05/05/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/04/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('06/05/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/06/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/05/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('05/06/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/07/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/06/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('07/07/2021' ,'DD/MM/RRRR') AND  TO_DATE('05/08/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/07/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('06/08/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/09/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/08/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('07/09/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/10/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/09/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('07/10/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/11/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/10/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('05/11/2021' ,'DD/MM/RRRR') AND  TO_DATE('07/12/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/11/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('08/12/2021' ,'DD/MM/RRRR') AND  TO_DATE('07/01/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/12/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('08/01/2022' ,'DD/MM/RRRR') AND  TO_DATE('03/02/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/01/2022' ,'DD/MM/RRRR')",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('04/02/2022' ,'DD/MM/RRRR') AND  TO_DATE('07/03/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/02/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('08/03/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/04/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/03/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('07/04/2022' ,'DD/MM/RRRR') AND  TO_DATE('05/05/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/04/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('06/05/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/06/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/05/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('07/06/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/07/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/06/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('07/07/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/08/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/07/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('05/08/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/09/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/08/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('07/09/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/10/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/09/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('05/10/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/11/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/10/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('05/11/2022' ,'DD/MM/RRRR') AND  TO_DATE('02/12/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/11/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('03/12/2022' ,'DD/MM/RRRR') AND  TO_DATE('05/01/2023' ,'DD/MM/RRRR') THEN TO_DATE('01/12/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('06/01/2023' ,'DD/MM/RRRR') AND  TO_DATE('03/02/2023' ,'DD/MM/RRRR') THEN TO_DATE('01/01/2023' ,'DD/MM/RRRR')",
          "   ELSE (FEHO_ALTA_FACTURA_ORIGINAL) END ELSE FECHA_DEVENGO END FECHA_DEVENGO,",
          "ID_EMISOR,",
          "ID_COD_PRESUP_PEDIDO,",
          "COD_LINEA_PEDIDO,",
          "ID_LOC_COMPRA_PEDIDO,",
          "ID_FECHA_FACTURA",
          "FROM(",
          "SELECT F.IMPORTE_FACTURA_SIN_IMPTO,",
          "F.ABONO,",
          "F.CMB,",
          "F.ID_ESTADO_FACTURA,",
          "F.ID_RECEPTOR,",
          "F.ID_FORMA_PAGO,",
          "F.ID_DIVISA,",
          "F.ID_TIPO_SISTEMA_ORIGEN,",
          "F.ID_CUENTA_EMP,",
          "F.ID_COD_PRESUPTARIO,",
          "F.ID_PEDIDO,",
          "F.ID_UNI_COMPRA,",
          "F.ID_CUENTA_PRINC,",
          "F.ID_PROY_CONTAB,",
          "F.ID_PROY_PEDIDO,",
          "F.ID_FAM_AJENO_PEDIDO,",
          "F.ID_SUBFAM_AJENO_PEDIDO,",
          "F.ID_ESTADO_PEDIDO,",
          "F.ID_TIPO_GESTOR_PEDIDO,",
          "F.ID_EMP_DEST_PEDIDO,",
          "F.ID_EMP_PROVE_PEDIDO,",
          "F.ID_CD_PEDIDO,",
          "F.COD_FACTURA,",
          "F.NUM_FACTURA,",
          "TRUNC(F.FEHO_ALTA_FACTURA) AS FEHO_ALTA_FACTURA_ORIGINAL,",
          "CASE WHEN TRUNC(F.FEHO_EJEC_FACTURA)=TO_DATE('09/09/9999','DD/MM/YYYY') THEN TRUNC(F.FEHO_ALTA_FACTURA) ELSE TRUNC(F.FEHO_EJEC_FACTURA) END FEHO_EJEC_FACTURA, ",
          "F.ID_INFO_PREV_FACTURA,",
          "F.FECHA_ALTA_CIERRE,",
          "F.EJERCICIO_CIERRE,",
          "F.ID_CUENTA_GRP,",
          "F.ID_CUENTA_GRP_PEDIDO,",
          "F.FACTURA_CABECERA_FILIAL,",
          "F.FACTURA_FILIAL,",
          "F.ES_PROFORMA,",
          "F.FECHA_DESDE,",
          "F.FECHA_HASTA,",
          "F.COD_CTAAUX,",
          "F.TND_DEST,",
          "F.COD_FCTR_IMPUTACION_CONTAB,",
          "--CEIL(MONTHS_BETWEEN(TRUNC(LAST_DAY(fecha_hasta)),TRUNC((fecha_desde),'MM')))-1 MESES,",
          "CEIL(MONTHS_BETWEEN(",
          "CASE WHEN DAY(Fecha_hasta)<=25 THEN ADD_MONTHS(TRUNC(LAST_DAY(fecha_hasta)),-1) else TRUNC(LAST_DAY(fecha_hasta))  END,",
          "CASE WHEN DAY(Fecha_desde)<=25 THEN TRUNC((fecha_desde),'MM') else ADD_MONTHS(TRUNC((fecha_desde),'MM'),1) END)) MESES, ",
          "F.IMPORTE_FACTURA_SIN_IMPTO IMPORTE_DEVENGADO,",
          "T.ID_EJERCICIO_FISCAL EJERCICIO_DEVENGO,",
          "T.ID_FECHA FECHA_DEVENGO,",
          "F.ID_EMISOR,",
          "F.ID_COD_PRESUP_PEDIDO,",
          "F.COD_LINEA_PEDIDO,",
          "F.ID_LOC_COMPRA_PEDIDO,",
          "F.ID_FECHA_FACTURA",
          "FROM DMFINANCIERO.MIC_FACT_FACTURA_SISTEMAS F",
          "JOIN (select MIN(ID_FECHA) ID_FECHA,",
          "ID_EJERCICIO_FISCAL from DMFINANCIERO.DIM_TIEMPO group by ID_EJERCICIO_FISCAL,YEAR(ID_FECHA),MONTH(ID_FECHA)) T",
          "ON (T.ID_FECHA BETWEEN CASE WHEN DAY(Fecha_desde)<=25 THEN TRUNC((fecha_desde),'MM') else ADD_MONTHS(TRUNC((fecha_desde),'MM'),1) END",
          "AND CASE WHEN DAY(Fecha_hasta)<=25 THEN ADD_MONTHS(TRUNC(LAST_DAY(fecha_hasta)),-1) else TRUNC(LAST_DAY(fecha_hasta))  END) ",
          "JOIN DMCONTABLE.DIM_CUENTA_GRUPO CG",
          "ON (F.ID_CUENTA_GRP=CG.ID_CUENTA_GRUPO)",
          "WHERE F.FECHA_DESDE IS NOT NULL AND F.FECHA_HASTA IS NOT NULL AND CG.COD_CTA_GRUPO_N4 in(6215,6222,6296) AND (T.ID_EJERCICIO_FISCAL>2020 OR trunc(f.feho_Alta_factura)>TRUNC(TO_DATE('02/02/2021','DD/MM/YYYY')))))",
          "WHERE TRUNC(FECHA_DEVENGO)>=TRUNC(TO_DATE('01/02/2022','DD/MM/YYYY'))",
          "UNION ALL",
          "SELECT IMPORTE_FACTURA_SIN_IMPTO,",
          "ABONO,",
          "CMB,",
          "ID_ESTADO_FACTURA,",
          "ID_RECEPTOR,",
          "ID_FORMA_PAGO,",
          "ID_DIVISA,",
          "ID_TIPO_SISTEMA_ORIGEN,",
          "ID_CUENTA_EMP,",
          "ID_COD_PRESUPTARIO,",
          "ID_PEDIDO,",
          "ID_UNI_COMPRA,",
          "ID_CUENTA_PRINC,",
          "ID_PROY_CONTAB,",
          "ID_PROY_PEDIDO,",
          "ID_FAM_AJENO_PEDIDO,",
          "ID_SUBFAM_AJENO_PEDIDO,",
          "ID_ESTADO_PEDIDO,",
          "ID_TIPO_GESTOR_PEDIDO,",
          "ID_EMP_DEST_PEDIDO,",
          "ID_EMP_PROVE_PEDIDO,",
          "ID_CD_PEDIDO,",
          "COD_FACTURA,",
          "NUM_FACTURA,",
          "FEHO_ALTA_FACTURA_ORIGINAL,",
          "FEHO_EJEC_FACTURA,",
          "ID_INFO_PREV_FACTURA,",
          "FECHA_ALTA_CIERRE,",
          "EJERCICIO_CIERRE,",
          "ID_CUENTA_GRP,",
          "ID_CUENTA_GRP_PEDIDO,",
          "FACTURA_CABECERA_FILIAL,",
          "FACTURA_FILIAL,",
          "ES_PROFORMA,",
          "FECHA_DESDE,",
          "FECHA_HASTA,",
          "COD_CTAAUX,",
          "TND_DEST,",
          "COD_FCTR_IMPUTACION_CONTAB,",
          "SUM(IMPORTE_DEVENGADO) IMPORTE_DEVENGADO,",
          "TRUNC(FECHA_DEVENGO,'MM') FECHA_DEVENGO,",
          "ID_EMISOR,",
          "ID_COD_PRESUP_PEDIDO,",
          "COD_LINEA_PEDIDO,",
          "ID_LOC_COMPRA_PEDIDO,",
          "ID_FECHA_FACTURA",
          "FROM(SELECT IMPORTE_FACTURA_SIN_IMPTO,",
          "ABONO,",
          "CMB,",
          "ID_ESTADO_FACTURA,",
          "ID_RECEPTOR,",
          "ID_FORMA_PAGO,",
          "ID_DIVISA,",
          "ID_TIPO_SISTEMA_ORIGEN,",
          "ID_CUENTA_EMP,",
          "ID_COD_PRESUPTARIO,",
          "ID_PEDIDO,",
          "ID_UNI_COMPRA,",
          "ID_CUENTA_PRINC,",
          "ID_PROY_CONTAB,",
          "ID_PROY_PEDIDO,",
          "ID_FAM_AJENO_PEDIDO,",
          "ID_SUBFAM_AJENO_PEDIDO,",
          "ID_ESTADO_PEDIDO,",
          "ID_TIPO_GESTOR_PEDIDO,",
          "ID_EMP_DEST_PEDIDO,",
          "ID_EMP_PROVE_PEDIDO,",
          "ID_CD_PEDIDO,",
          "Case when id_info_prev_factura<>10361 THEN COD_FACTURA*10 ELSE COD_FACTURA END COD_FACTURA,",
          "NUM_FACTURA,",
          "CASE WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL)>TRUNC(fecha_devengo) THEN FEHO_ALTA_FACTURA_ORIGINAL ELSE TO_DATE('15/'||to_char(fecha_devengo,'MM/YYYY'),'DD/MM/YYYY') END FEHO_ALTA_FACTURA_ORIGINAL,",
          "FEHO_EJEC_FACTURA,",
          "ID_INFO_PREV_FACTURA,",
          "FECHA_ALTA_CIERRE,",
          "EJERCICIO_CIERRE,",
          "ID_CUENTA_GRP,",
          "ID_CUENTA_GRP_PEDIDO,",
          "FACTURA_CABECERA_FILIAL,",
          "FACTURA_FILIAL,",
          "ES_PROFORMA,",
          "FECHA_DESDE,",
          "FECHA_HASTA,",
          "COD_CTAAUX,",
          "TND_DEST,",
          "COD_FCTR_IMPUTACION_CONTAB,",
          "CASE ",
          "  WHEN TRUNC(FECHA_DEVENGO)=TRUNC(FECHA_HASTA) THEN ",
          "    IMPORTE_FACTURA_SIN_IMPTO - (round(IMPORTE_FACTURA_SIN_IMPTO/DIAS,2) * (DIAS-1)) ",
          "  ELSE ",
          "    round(IMPORTE_FACTURA_SIN_IMPTO/DIAS,2)",
          "END IMPORTE_DEVENGADO,",
          "CASE WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL)>TRUNC(fecha_devengo) THEN CASE ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('01/02/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/03/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/02/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('05/03/2021' ,'DD/MM/RRRR') AND  TO_DATE('08/04/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/03/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('09/04/2021' ,'DD/MM/RRRR') AND  TO_DATE('05/05/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/04/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('06/05/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/06/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/05/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('05/06/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/07/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/06/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('07/07/2021' ,'DD/MM/RRRR') AND  TO_DATE('05/08/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/07/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('06/08/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/09/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/08/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('07/09/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/10/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/09/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('07/10/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/11/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/10/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('05/11/2021' ,'DD/MM/RRRR') AND  TO_DATE('07/12/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/11/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('08/12/2021' ,'DD/MM/RRRR') AND  TO_DATE('07/01/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/12/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('08/01/2022' ,'DD/MM/RRRR') AND  TO_DATE('03/02/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/01/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('04/02/2022' ,'DD/MM/RRRR') AND  TO_DATE('07/03/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/02/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('08/03/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/04/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/03/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('07/04/2022' ,'DD/MM/RRRR') AND  TO_DATE('05/05/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/04/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('06/05/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/06/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/05/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('07/06/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/07/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/06/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('07/07/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/08/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/07/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('05/08/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/09/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/08/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('07/09/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/10/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/09/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('05/10/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/11/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/10/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('05/11/2022' ,'DD/MM/RRRR') AND  TO_DATE('02/12/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/11/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('03/12/2022' ,'DD/MM/RRRR') AND  TO_DATE('05/01/2023' ,'DD/MM/RRRR') THEN TO_DATE('01/12/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA_ORIGINAL) BETWEEN  TO_DATE('06/01/2023' ,'DD/MM/RRRR') AND  TO_DATE('03/02/2023' ,'DD/MM/RRRR') THEN TO_DATE('01/01/2023' ,'DD/MM/RRRR')",
          "   ELSE (FEHO_ALTA_FACTURA_ORIGINAL) END ELSE FECHA_DEVENGO END FECHA_DEVENGO,",
          "ID_EMISOR,",
          "ID_COD_PRESUP_PEDIDO,",
          "COD_LINEA_PEDIDO,",
          "ID_LOC_COMPRA_PEDIDO,",
          "ID_FECHA_FACTURA",
          "FROM(",
          "SELECT F.IMPORTE_FACTURA_SIN_IMPTO,",
          "F.ABONO,",
          "F.CMB,",
          "F.ID_ESTADO_FACTURA,",
          "F.ID_RECEPTOR,",
          "F.ID_FORMA_PAGO,",
          "F.ID_DIVISA,",
          "F.ID_TIPO_SISTEMA_ORIGEN,",
          "F.ID_CUENTA_EMP,",
          "F.ID_COD_PRESUPTARIO,",
          "F.ID_PEDIDO,",
          "F.ID_UNI_COMPRA,",
          "F.ID_CUENTA_PRINC,",
          "F.ID_PROY_CONTAB,",
          "F.ID_PROY_PEDIDO,",
          "F.ID_FAM_AJENO_PEDIDO,",
          "F.ID_SUBFAM_AJENO_PEDIDO,",
          "F.ID_ESTADO_PEDIDO,",
          "F.ID_TIPO_GESTOR_PEDIDO,",
          "F.ID_EMP_DEST_PEDIDO,",
          "F.ID_EMP_PROVE_PEDIDO,",
          "F.ID_CD_PEDIDO,",
          "F.COD_FACTURA,",
          "F.NUM_FACTURA,",
          "TRUNC(F.FEHO_ALTA_FACTURA) AS FEHO_ALTA_FACTURA_ORIGINAL,",
          "CASE WHEN TRUNC(F.FEHO_EJEC_FACTURA)=TO_DATE('09/09/9999','DD/MM/YYYY') THEN TRUNC(F.FEHO_ALTA_FACTURA) ELSE TRUNC(F.FEHO_EJEC_FACTURA) END FEHO_EJEC_FACTURA, ",
          "F.ID_INFO_PREV_FACTURA,",
          "F.FECHA_ALTA_CIERRE,",
          "F.EJERCICIO_CIERRE,",
          "F.ID_CUENTA_GRP,",
          "F.ID_CUENTA_GRP_PEDIDO,",
          "F.FACTURA_CABECERA_FILIAL,",
          "F.FACTURA_FILIAL,",
          "F.ES_PROFORMA,",
          "F.FECHA_DESDE,",
          "F.FECHA_HASTA,",
          "F.COD_CTAAUX,",
          "F.TND_DEST,",
          "F.COD_FCTR_IMPUTACION_CONTAB,",
          "(TRUNC(F.FECHA_HASTA) - TRUNC(F.FECHA_DESDE))+1 DIAS,",
          "F.IMPORTE_FACTURA_SIN_IMPTO IMPORTE_DEVENGADO,",
          "T.ID_EJERCICIO_FISCAL EJERCICIO_DEVENGO,",
          "T.ID_FECHA FECHA_DEVENGO,",
          "F.ID_EMISOR,",
          "F.ID_COD_PRESUP_PEDIDO,",
          "F.COD_LINEA_PEDIDO,",
          "F.ID_LOC_COMPRA_PEDIDO,",
          "F.ID_FECHA_FACTURA",
          "FROM DMFINANCIERO.MIC_FACT_FACTURA_SISTEMAS F",
          "JOIN (select * from DMFINANCIERO.DIM_TIEMPO) T",
          "ON (T.ID_FECHA BETWEEN TRUNC(F.FECHA_DESDE) AND TRUNC(F.FECHA_HASTA))",
          "JOIN DMCONTABLE.DIM_CUENTA_GRUPO CG",
          "ON (F.ID_CUENTA_GRP=CG.ID_CUENTA_GRUPO)",
          "WHERE F.FECHA_DESDE IS NOT NULL AND F.FECHA_HASTA IS NOT NULL AND CG.COD_CTA_GRUPO_N4 in(6215,6222,6296) AND (T.ID_EJERCICIO_FISCAL>2020 OR trunc(f.feho_Alta_factura)>TRUNC(TO_DATE('02/02/2021','DD/MM/YYYY')))))",
          "WHERE TRUNC(FECHA_DEVENGO)<TRUNC(TO_DATE('01/02/2022','DD/MM/YYYY'))",
          "GROUP BY ",
          "IMPORTE_FACTURA_SIN_IMPTO,",
          "ABONO,",
          "CMB,",
          "ID_ESTADO_FACTURA,",
          "ID_RECEPTOR,",
          "ID_FORMA_PAGO,",
          "ID_DIVISA,",
          "ID_TIPO_SISTEMA_ORIGEN,",
          "ID_CUENTA_EMP,",
          "ID_COD_PRESUPTARIO,",
          "ID_PEDIDO,",
          "ID_UNI_COMPRA,",
          "ID_CUENTA_PRINC,",
          "ID_PROY_CONTAB,",
          "ID_PROY_PEDIDO,",
          "ID_FAM_AJENO_PEDIDO,",
          "ID_SUBFAM_AJENO_PEDIDO,",
          "ID_ESTADO_PEDIDO,",
          "ID_TIPO_GESTOR_PEDIDO,",
          "ID_EMP_DEST_PEDIDO,",
          "ID_EMP_PROVE_PEDIDO,",
          "ID_CD_PEDIDO,",
          "COD_FACTURA,",
          "NUM_FACTURA,",
          "FEHO_ALTA_FACTURA_ORIGINAL,",
          "FEHO_EJEC_FACTURA,",
          "ID_INFO_PREV_FACTURA,",
          "FECHA_ALTA_CIERRE,",
          "EJERCICIO_CIERRE,",
          "ID_CUENTA_GRP,",
          "ID_CUENTA_GRP_PEDIDO,",
          "FACTURA_CABECERA_FILIAL,",
          "FACTURA_FILIAL,",
          "ES_PROFORMA,",
          "FECHA_DESDE,",
          "FECHA_HASTA,",
          "COD_CTAAUX,",
          "TND_DEST,",
          "COD_FCTR_IMPUTACION_CONTAB,",
          "TRUNC(FECHA_DEVENGO,'MM'),",
          "ID_EMISOR,",
          "ID_COD_PRESUP_PEDIDO,",
          "COD_LINEA_PEDIDO,",
          "ID_LOC_COMPRA_PEDIDO,",
          "ID_FECHA_FACTURA",
          "UNION ALL",
          "SELECT ",
          "F.IMPORTE_FACTURA_SIN_IMPTO,",
          "F.ABONO,",
          "F.CMB,",
          "F.ID_ESTADO_FACTURA,",
          "F.ID_RECEPTOR,",
          "F.ID_FORMA_PAGO,",
          "F.ID_DIVISA,",
          "F.ID_TIPO_SISTEMA_ORIGEN,",
          "F.ID_CUENTA_EMP,",
          "F.ID_COD_PRESUPTARIO,",
          "F.ID_PEDIDO,",
          "F.ID_UNI_COMPRA,",
          "F.ID_CUENTA_PRINC,",
          "F.ID_PROY_CONTAB,",
          "F.ID_PROY_PEDIDO,",
          "F.ID_FAM_AJENO_PEDIDO,",
          "F.ID_SUBFAM_AJENO_PEDIDO,",
          "F.ID_ESTADO_PEDIDO,",
          "F.ID_TIPO_GESTOR_PEDIDO,",
          "F.ID_EMP_DEST_PEDIDO,",
          "F.ID_EMP_PROVE_PEDIDO,",
          "F.ID_CD_PEDIDO,",
          "Case when F.id_info_prev_factura<>10361 THEN F.COD_FACTURA*10 ELSE F.COD_FACTURA END COD_FACTURA,",
          "F.NUM_FACTURA,",
          "TRUNC(F.FEHO_ALTA_FACTURA) AS FEHO_ALTA_FACTURA_ORIGINAL,",
          "CASE WHEN TRUNC(F.FEHO_EJEC_FACTURA)=TO_DATE('09/09/9999','DD/MM/YYYY') THEN TRUNC(F.FEHO_ALTA_FACTURA) ELSE TRUNC(F.FEHO_EJEC_FACTURA) END FEHO_EJEC_FACTURA, ",
          "F.ID_INFO_PREV_FACTURA,",
          "F.FECHA_ALTA_CIERRE,",
          "F.EJERCICIO_CIERRE,",
          "F.ID_CUENTA_GRP,",
          "F.ID_CUENTA_GRP_PEDIDO,",
          "F.FACTURA_CABECERA_FILIAL,",
          "F.FACTURA_FILIAL,",
          "F.ES_PROFORMA,",
          "F.FECHA_DESDE,",
          "F.FECHA_HASTA,",
          "F.COD_CTAAUX,",
          "F.TND_DEST,",
          "F.COD_FCTR_IMPUTACION_CONTAB,",
          "F.IMPORTE_FACTURA_SIN_IMPTO IMPORTE_DEVENGADO,",
          "CASE",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('01/02/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/03/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/02/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/03/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/04/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/03/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/04/2020' ,'DD/MM/RRRR') AND  TO_DATE('04/05/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/04/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('05/05/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/06/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/05/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/06/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/07/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/06/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/07/2020' ,'DD/MM/RRRR') AND  TO_DATE('03/08/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/07/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('04/08/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/09/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/08/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/09/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/10/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/09/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/10/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/11/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/10/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/11/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/12/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/11/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/12/2020' ,'DD/MM/RRRR') AND  TO_DATE('04/01/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/12/2020' ,'DD/MM/RRRR')   ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('05/01/2021' ,'DD/MM/RRRR') AND  TO_DATE('02/02/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/01/2021' ,'DD/MM/RRRR')",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/02/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/03/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/02/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('05/03/2021' ,'DD/MM/RRRR') AND  TO_DATE('08/04/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/03/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('09/04/2021' ,'DD/MM/RRRR') AND  TO_DATE('05/05/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/04/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('06/05/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/06/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/05/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('05/06/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/07/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/06/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('07/07/2021' ,'DD/MM/RRRR') AND  TO_DATE('05/08/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/07/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('06/08/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/09/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/08/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('07/09/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/10/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/09/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('07/10/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/11/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/10/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('05/11/2021' ,'DD/MM/RRRR') AND  TO_DATE('07/12/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/11/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('08/12/2021' ,'DD/MM/RRRR') AND  TO_DATE('07/01/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/12/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('08/01/2022' ,'DD/MM/RRRR') AND  TO_DATE('03/02/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/01/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('04/02/2022' ,'DD/MM/RRRR') AND  TO_DATE('07/03/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/02/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('08/03/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/04/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/03/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('07/04/2022' ,'DD/MM/RRRR') AND  TO_DATE('05/05/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/04/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('06/05/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/06/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/05/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('07/06/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/07/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/06/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('07/07/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/08/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/07/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('05/08/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/09/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/08/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('07/09/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/10/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/09/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('05/10/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/11/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/10/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('05/11/2022' ,'DD/MM/RRRR') AND  TO_DATE('02/12/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/11/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('03/12/2022' ,'DD/MM/RRRR') AND  TO_DATE('05/01/2023' ,'DD/MM/RRRR') THEN TO_DATE('01/12/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FEHO_ALTA_FACTURA) BETWEEN  TO_DATE('06/01/2023' ,'DD/MM/RRRR') AND  TO_DATE('03/02/2023' ,'DD/MM/RRRR') THEN TO_DATE('01/01/2023' ,'DD/MM/RRRR') ",
          "   ELSE (FEHO_ALTA_FACTURA) END FECHA_DEVENGO,",
          "   F.ID_EMISOR,",
          "F.ID_COD_PRESUP_PEDIDO,",
          "F.COD_LINEA_PEDIDO,",
          "F.ID_LOC_COMPRA_PEDIDO,",
          "F.ID_FECHA_FACTURA",
          "FROM DMFINANCIERO.MIC_FACT_FACTURA_SISTEMAS F",
          "LEFT JOIN DMCONTABLE.DIM_CUENTA_GRUPO CG",
          "ON (F.ID_CUENTA_GRP=CG.ID_CUENTA_GRUPO)",
          "where COALESCE(F.ES_PROFORMA,0)=0 AND F.ID_ESTADO_FACTURA <> 17 AND (F.FECHA_DESDE IS NULL OR F.FECHA_HASTA IS NULL OR CG.COD_CTA_GRUPO_N4 not in(6215,6222,6296) OR F.ID_CUENTA_GRP=0 OR ",
          "CASE WHEN TRUNC(F.FEHO_ALTA_FACTURA) BETWEEN TO_DATE('05/01/2021' ,'DD/MM/RRRR') AND TO_DATE('02/02/2021' ,'DD/MM/RRRR') THEN 2020 ELSE EJERCICIO END <2021) \"),",
          "    #\"Columna condicional agregada\" = Table.AddColumn(MIC_FACT_FACTURA_SISTEMAS1, \"FEHO_EJEC_DEVEN_ANALISIS\", each [FECHA_DEVENGO] ),",
          "    #\"Personalizada agregada\" = Table.AddColumn(#\"Columna condicional agregada\", \"IMPORTE_DEVENGADO_EURO\", each [IMPORTE_DEVENGADO]* [CMB]),",
          "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Personalizada agregada\",{{\"ABONO\", Int64.Type}, {\"ID_ESTADO_FACTURA\", Int64.Type}, {\"ID_RECEPTOR\", Int64.Type}, {\"ID_FORMA_PAGO\", Int64.Type}, {\"ID_TIPO_SISTEMA_ORIGEN\", Int64.Type}, {\"ID_COD_PRESUPTARIO\", Int64.Type}, {\"ID_PEDIDO\", Int64.Type}, {\"ID_UNI_COMPRA\", Int64.Type}, {\"ID_CUENTA_PRINC\", Int64.Type}, {\"ID_ESTADO_PEDIDO\", Int64.Type}, {\"ID_CD_PEDIDO\", Int64.Type}, {\"FEHO_ALTA_FACTURA_ORIGINAL\", type date}, {\"FEHO_EJEC_FACTURA\", type date}, {\"FECHA_ALTA_CIERRE\", type date}, {\"EJERCICIO_CIERRE\", Int64.Type}, {\"FACTURA_FILIAL\", Int64.Type}, {\"ES_PROFORMA\", Int64.Type}, {\"FECHA_DESDE\", type date}, {\"FECHA_HASTA\", type date}, {\"FECHA_DEVENGO\", type date}, {\"IMPORTE_DEVENGADO_EURO\", type number}, {\"FEHO_EJEC_DEVEN_ANALISIS\", type date}, {\"COD_FCTR_IMPUTACION_CONTAB\", Int64.Type}}),",
          "    #\"Filas filtradas\" = Table.SelectRows(#\"Tipo cambiado\", each true),",
          "    #\"Mes insertado\" = Table.AddColumn(#\"Filas filtradas\", \"Mes\", each Date.Month([FECHA_DEVENGO]), Int64.Type),",
          "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Mes insertado\",{{\"Mes\", \"Mes Fecha Devengo condición\"}}),",
          "    #\"Fecha extraída\" = Table.TransformColumns(#\"Columnas con nombre cambiado\",{{\"FECHA_ALTA_CIERRE\", DateTime.Date, type date}}),",
          "    #\"Columna condicional agregada1\" = Table.AddColumn(#\"Fecha extraída\", \"Cumple Fecha Cierre\", each if [FEHO_ALTA_FACTURA_ORIGINAL] < [FECHA_ALTA_CIERRE] then 1 else 0),",
          "    #\"Fecha extraída1\" = Table.TransformColumns(#\"Columna condicional agregada1\",{{\"ID_FECHA_FACTURA\", DateTime.Date, type date}})",
          "in",
          "    #\"Fecha extraída1\""
        ]
      },
      {
        "name": "Factura Compra Hecho Devengados",
        "kind": "m",
        "expression": [
          "let",
          "     Origen = Mic_Fact_Factura_Sistemas_Devengados,",
          "    #\"Otras columnas quitadas\" = Table.SelectColumns(Origen,{\"ID_ESTADO_FACTURA\", \"ID_RECEPTOR\", \"ID_FORMA_PAGO\", \"ID_DIVISA\", \"ID_TIPO_SISTEMA_ORIGEN\", \"ID_CUENTA_EMP\", \"ID_COD_PRESUPTARIO\", \"ID_PEDIDO\", \"ID_UNI_COMPRA\", \"ID_CUENTA_PRINC\", \"ID_PROY_PEDIDO\", \"ID_FAM_AJENO_PEDIDO\", \"ID_SUBFAM_AJENO_PEDIDO\", \"ID_ESTADO_PEDIDO\", \"ID_TIPO_GESTOR_PEDIDO\", \"ID_EMP_DEST_PEDIDO\", \"ID_EMP_PROVE_PEDIDO\", \"ID_CD_PEDIDO\", \"COD_FACTURA\", \"NUM_FACTURA\", \"FEHO_ALTA_FACTURA_ORIGINAL\", \"FEHO_EJEC_FACTURA\", \"ID_INFO_PREV_FACTURA\", \"FECHA_ALTA_CIERRE\", \"EJERCICIO_CIERRE\", \"ID_CUENTA_GRP\", \"ID_CUENTA_GRP_PEDIDO\", \"FACTURA_CABECERA_FILIAL\", \"FACTURA_FILIAL\", \"FECHA_DESDE\", \"FECHA_HASTA\", \"TND_DEST\", \"COD_FCTR_IMPUTACION_CONTAB\", \"ID_EMISOR\", \"Cumple Fecha Cierre\"}),",
          "    #\"Personalizada agregada\" = Table.AddColumn(#\"Otras columnas quitadas\", \"ID_MES_CIERRE_FACTURA\", each 1),",
          "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Personalizada agregada\",{{\"FECHA_DESDE\", \"Fecha Desde\"}, {\"FECHA_HASTA\", \"Fecha Hasta\"}})",
          "",
          " in",
          "   #\"Columnas con nombre cambiado\""
        ]
      },
      {
        "name": "Presupuesto Compra Hecho Sin Devengar/Partition",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "     MIC_FACT_PRESUPUESTO_NO_ANUAL = Value.NativeQuery(Source, ",
          "    \"",
          "SELECT ID_PRESUP, COD_PRESUP, COD_PRESUP_GPS, IMPORTE_PRESUP_EURO,ID_CODIGO_PRESUPUESTARIO, ID_INFOR_PRESUPUESTO, ID_CUENTA_PRINC, ID_CUENTA_EMP, ID_MES, ID_TIPO_PRESUP, ID_EMP, ID_PROY_CONTABLE, ID_DIVISA, ID_UNIDAD_COMPRA, ID_SUBFAM_AJENO, ID_FAM_AJENO, ACTIVO, UNIDADES_PRESUP, ID_CUENTA_GRUPO, ctaaux, id_empresa_grupo, pct_Activa, fecha_desde, fecha_hasta, IMPORTE_FACTURA, DEVENGO, EJERCICIO_FACTURA ,Clasificacion_presup",
          "FROM dmfinanciero.MIC_FACT_PRESUP_COMPRA_SIST p",
          "WHERE p.id_mes <> 0\"),",
          "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"MIC_FACT_PRESUPUESTO_NO_ANUAL\",{{\"ID_EMP\", Int64.Type}, {\"ID_TIPO_PRESUP\", Int64.Type}, {\"ID_PROY_CONTABLE\", Int64.Type}, {\"ID_DIVISA\", Int64.Type}, {\"ID_UNIDAD_COMPRA\", Int64.Type}, {\"ID_CODIGO_PRESUPUESTARIO\", Int64.Type}, {\"ID_CUENTA_PRINC\", Int64.Type}, {\"ID_CUENTA_EMP\", Int64.Type}, {\"ID_CUENTA_GRUPO\", Int64.Type}, {\"ID_INFOR_PRESUPUESTO\", Int64.Type},  {\"ID_SUBFAM_AJENO\", Int64.Type}, {\"IMPORTE_FACTURA\", type number}, {\"ID_FAM_AJENO\", Int64.Type}, {\"ID_MES\", Int64.Type}}),",
          "    #\"Filas filtradas\" = Table.SelectRows(#\"Tipo cambiado\", each ([COD_PRESUP] <> 0)),",
          "    #\"Añadir Columna FEHO_FECHA_ALTA\" = Table.AddColumn(#\"Filas filtradas\", \"Fecha Presupuesto Ejercicio\", each if [ID_MES] = 1 then \"01/\" & Number.ToText([ID_MES])&\"/\"& Number.ToText([EJERCICIO_FACTURA]+1) else \"01/\" & Number.ToText([ID_MES])&\"/\"& Number.ToText([EJERCICIO_FACTURA])),",
          "    #\"Personalizada agregada\" = Table.AddColumn(#\"Añadir Columna FEHO_FECHA_ALTA\", \"Es Presupuesto Anual\", each 0),",
          "    #\"Tipo cambiado2\" = Table.TransformColumnTypes(#\"Personalizada agregada\",{{\"Es Presupuesto Anual\", type logical}}),",
          "    #\"Consulta anexada\" = Table.Combine({#\"Tipo cambiado2\", #\"Presupuesto Compras Anuales sin Devengar\"}),",
          "    #\"Tipo cambiado1\" = Table.TransformColumnTypes(#\"Consulta anexada\",{{\"ID_PRESUP\", Int64.Type}, {\"ACTIVO\", Int64.Type}, {\"Fecha Presupuesto Ejercicio\", type date}}),",
          "    #\"Otras columnas quitadas\" = Table.SelectColumns(#\"Tipo cambiado1\",{\"ID_PRESUP\", \"COD_PRESUP\", \"COD_PRESUP_GPS\", \"IMPORTE_PRESUP_EURO\", \"ID_CODIGO_PRESUPUESTARIO\", \"ID_INFOR_PRESUPUESTO\", \"ID_CUENTA_PRINC\", \"ID_CUENTA_EMP\", \"ID_MES\", \"ID_TIPO_PRESUP\", \"ID_EMP\", \"ID_PROY_CONTABLE\", \"ID_DIVISA\", \"ID_UNIDAD_COMPRA\", \"ID_SUBFAM_AJENO\", \"ID_FAM_AJENO\", \"ACTIVO\", \"UNIDADES_PRESUP\", \"ID_CUENTA_GRUPO\", \"CTAAUX\", \"ID_EMPRESA_GRUPO\", \"PCT_ACTIVA\", \"FECHA_DESDE\", \"FECHA_HASTA\", \"IMPORTE_FACTURA\", \"DEVENGO\", \"EJERCICIO_FACTURA\", \"CLASIFICACION_PRESUP\", \"Fecha Presupuesto Ejercicio\", \"Es Presupuesto Anual\"}),",
          "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Otras columnas quitadas\",{{\"FECHA_DESDE\", \"Fecha Desde\"}, {\"FECHA_HASTA\", \"Fecha Hasta\"}, {\"IMPORTE_FACTURA\", \"Importe sin Devengar\"}, {\"DEVENGO\", \"Devengo\"}, {\"EJERCICIO_FACTURA\", \"Ejercicio sin Devengar\"}}),",
          "    #\"Personalizada agregada1\" = Table.AddColumn(#\"Columnas con nombre cambiado\", \"ID_PEDIDO\", each -1),",
          "    #\"Tipo cambiado3\" = Table.TransformColumnTypes(#\"Personalizada agregada1\",{{\"ID_PEDIDO\", Int64.Type}}),",
          "    #\"Personalizada agregada2\" = Table.AddColumn(#\"Tipo cambiado3\", \"COD_FACTURA\", each -1),",
          "    #\"Tipo cambiado4\" = Table.TransformColumnTypes(#\"Personalizada agregada2\",{{\"COD_FACTURA\", Int64.Type}}),",
          "    #\"Personalizada agregada3\" = Table.AddColumn(#\"Tipo cambiado4\", \"ID_EMPRESA\", each -1),",
          "    #\"Tipo cambiado5\" = Table.TransformColumnTypes(#\"Personalizada agregada3\",{{\"ID_EMPRESA\", Int64.Type}}),",
          "    #\"Columna condicional agregada\" = Table.AddColumn(#\"Tipo cambiado5\", \"Orden Mes\", each if [ID_MES] = 1 then 13 else if [ID_MES] = 2 then 1 else if [ID_MES] = 3 then 2 else if [ID_MES] = 4 then 3 else if [ID_MES] = 5 then 4 else if [ID_MES] = 6 then 5 else if [ID_MES] = 7 then 6 else if [ID_MES] = 8 then 7 else if [ID_MES] = 9 then 8 else if [ID_MES] = 10 then 9 else if [ID_MES] = 11 then 10 else if [ID_MES] = 12 then 11 else null),",
          "\t#\"Tipo cambiado6\" = Table.TransformColumnTypes(#\"Columna condicional agregada\",{{\"Orden Mes\", Int64.Type}}),",
          "  #\"Consultas combinadas\" = Table.NestedJoin(#\"Tipo cambiado6\", {\"ID_INFOR_PRESUPUESTO\"}, Aux_Categoria_Presupuesto_Tipo_Agregado, {\"ID_INFOR_PRESUP\"}, \"Aux_Categoria_Presupuesto_Tipo_Agregado\", JoinKind.LeftOuter),",
          "    #\"Se expandió Aux_Categoria_Presupuesto_Tipo_Agregado\" = Table.ExpandTableColumn(#\"Consultas combinadas\", \"Aux_Categoria_Presupuesto_Tipo_Agregado\", {\"DESCRIPCION\"}, {\"DESCRIPCION\"}),",
          "    #\"Valor reemplazado\" = Table.ReplaceValue(#\"Se expandió Aux_Categoria_Presupuesto_Tipo_Agregado\",null,\"DECONOCIDO\",Replacer.ReplaceValue,{\"DESCRIPCION\"})",
          "in",
          "    #\"Valor reemplazado\""
        ]
      },
      {
        "name": "Presupuesto Compras Anuales sin Devengar",
        "kind": "m",
        "expression": [
          "let",
          " Source = #\"Oracle/exapre_rep\",",
          " ",
          "     MIC_FACT_PRESUPUESTO_ANUAL = Value.NativeQuery(Source, ",
          "    \"",
          "SELECT ID_PRESUP, COD_PRESUP, IMPORTE_PRESUP_EURO, COD_PRESUP_GPS, ID_CODIGO_PRESUPUESTARIO, ID_INFOR_PRESUPUESTO, ID_CUENTA_PRINC, ID_CUENTA_EMP,",
          " ID_MES,ID_MES_PRESUPUESTARIO, ID_TIPO_PRESUP, ID_EMP, ID_PROY_CONTABLE, ID_DIVISA, ID_UNIDAD_COMPRA, ID_SUBFAM_AJENO, ID_FAM_AJENO, ACTIVO,",
          "UNIDADES_PRESUP, ID_CUENTA_GRUPO,",
          "ctaaux,id_empresa_grupo, pct_Activa, fecha_desde, fecha_hasta,",
          "((CASE",
          "WHEN ID_MES_PRESUPUESTARIO = 12 THEN",
          "((IMPORTE_FACTURA/22) - 87419822676.37) - (round((((IMPORTE_FACTURA/22) - 87419822676.37) /12),6) * 11 )",
          "ELSE",
          "round((((IMPORTE_FACTURA/22) - 87419822676.37) /12),6)",
          "end ) + 87419822676.37 ) * 22 AS IMPORTE_FACTURA, DEVENGO, EJERCICIO_FACTURA, Clasificacion_presup,TIPO_AGREGADO\t\t\t\t\t\t\t\t\t\t\t\t\t ",
          "from dmfinanciero.MIC_FACT_PRESUP_COMPRA_SIST",
          "p cross join ( select 1 AS ID_MES_PRESUPUESTARIO FROM DUAL",
          "UNION ALL",
          "select 2 FROM DUAL",
          "UNION ALL",
          "select 3 FROM DUAL",
          "UNION ALL",
          "select 4 FROM DUAL",
          "UNION ALL",
          "select 5 FROM DUAL",
          "UNION ALL",
          "select 6 FROM DUAL",
          "UNION ALL",
          "select 7 FROM DUAL",
          "UNION ALL",
          "select 8 FROM DUAL",
          "UNION ALL",
          "select 9 FROM DUAL",
          "UNION ALL",
          "select 10 FROM DUAL",
          "UNION ALL",
          "select 11 FROM DUAL",
          "UNION ALL",
          "select 12 FROM DUAL) M",
          "where p.id_mes= 0",
          "\"),",
          "   #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"MIC_FACT_PRESUPUESTO_ANUAL\",{{\"ID_EMP\", Int64.Type}, {\"ID_TIPO_PRESUP\", Int64.Type}, {\"ID_PROY_CONTABLE\", Int64.Type}, {\"ID_DIVISA\", Int64.Type}, {\"ID_UNIDAD_COMPRA\", Int64.Type}, {\"ID_CODIGO_PRESUPUESTARIO\", Int64.Type}, {\"ID_CUENTA_PRINC\", Int64.Type}, {\"ID_CUENTA_EMP\", Int64.Type}, {\"ID_CUENTA_GRUPO\", Int64.Type}, {\"ID_INFOR_PRESUPUESTO\", Int64.Type}, {\"ID_SUBFAM_AJENO\", Int64.Type}, {\"ID_FAM_AJENO\", Int64.Type},{\"ID_MES\", Int64.Type},{\"IMPORTE_FACTURA\", type number}}),",
          "    #\"Filas filtradas\" = Table.SelectRows(#\"Tipo cambiado\", each ([COD_PRESUP] <> 0)),",
          "    #\"Columna condicional agregada\" = Table.AddColumn(#\"Filas filtradas\", \"Fecha Presupuesto Ejercicio\", each if [ID_MES_PRESUPUESTARIO] = 1 then \"01/\" & Number.ToText([ID_MES_PRESUPUESTARIO])&\"/\"& Number.ToText([EJERCICIO_FACTURA]+1) else \"01/\" & Number.ToText([ID_MES_PRESUPUESTARIO])&\"/\"& Number.ToText([EJERCICIO_FACTURA])),",
          "    #\"Tipo cambiado1\" = Table.TransformColumnTypes(#\"Columna condicional agregada\",{{\"Fecha Presupuesto Ejercicio\", type date}}),",
          "    #\"Otras columnas quitadas\" = Table.SelectColumns(#\"Tipo cambiado1\",{\"ID_PRESUP\", \"COD_PRESUP\", \"IMPORTE_PRESUP_EURO\", \"COD_PRESUP_GPS\", \"ID_CODIGO_PRESUPUESTARIO\", \"ID_INFOR_PRESUPUESTO\", \"ID_CUENTA_PRINC\", \"ID_CUENTA_EMP\", \"ID_TIPO_PRESUP\", \"ID_EMP\", \"ID_PROY_CONTABLE\", \"ID_DIVISA\", \"ID_UNIDAD_COMPRA\", \"ID_SUBFAM_AJENO\", \"ID_FAM_AJENO\", \"ACTIVO\", \"UNIDADES_PRESUP\", \"ID_CUENTA_GRUPO\", \"FECHA_DESDE\", \"FECHA_HASTA\", \"IMPORTE_FACTURA\", \"DEVENGO\", \"EJERCICIO_FACTURA\", \"CLASIFICACION_PRESUP\", \"Fecha Presupuesto Ejercicio\"}),",
          "    #\"Personalizada agregada\" = Table.AddColumn(#\"Otras columnas quitadas\", \"Es Presupuesto Anual\", each 1),",
          "    #\"Tipo cambiado2\" = Table.TransformColumnTypes(#\"Personalizada agregada\",{{\"Es Presupuesto Anual\", type logical}})",
          "in",
          "    #\"Tipo cambiado2\""
        ]
      },
      {
        "name": "AUX_SEGURIDAD_AREA",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"SELECT --AUX_SSO_AREA",
          "VALOR AS AREA,",
          "UPPER(DESCRIPCION_USUARIO) AS LOGINID",
          "FROM APLICACION.APLICACION_USUARIO_ATRIBUTO_MULTIVALUADO_VALOR",
          "WHERE ID_APLICACION = 'AppTabularAgileyOrganizacion'",
          "AND DESCRIPCION_ATRIBUTO_MULTIVALUADO='area' ",
          "AND VALOR <> ''",
          "WITH UR\")",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "AUX_SEGURIDAD_SOCIEDAD",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"SELECT --AUX_SSO_SOCIEDAD",
          "VALOR AS SOCIEDAD,",
          "UPPER(DESCRIPCION_USUARIO) AS LOGINID",
          "FROM APLICACION.APLICACION_USUARIO_ATRIBUTO_MULTIVALUADO_VALOR",
          "WHERE ID_APLICACION = 'AppTabularAgileyOrganizacion'",
          "AND DESCRIPCION_ATRIBUTO_MULTIVALUADO='sociedad' ",
          "AND VALOR <> ''",
          "WITH UR\")",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Ordenes de Trabajo Hechos/Partition",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
          "    tabla = Value.NativeQuery(Source, ",
          "    \"SELECT ID_ORDEN_TRABAJO,",
          "ID_ORDEN_TRABAJO_LINEA,",
          "ID_PEDIDO,",
          "ID_PEDIDO_LINEA,",
          "ID_FACTURA,",
          "FECHA_HORA_EXPEDICION, ",
          "FECHA_ALTA, ",
          "DESCRIPCION, ",
          "PRECIO_UNITARIO, ",
          "UNIDADES_PROVEEDOR,",
          "ID_DIVISA, ",
          "FECHA_EJECUCION,",
          "CASE",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('01/02/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/03/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/02/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/03/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/04/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/03/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/04/2020' ,'DD/MM/RRRR') AND  TO_DATE('04/05/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/04/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('05/05/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/06/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/05/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/06/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/07/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/06/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/07/2020' ,'DD/MM/RRRR') AND  TO_DATE('03/08/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/07/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('04/08/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/09/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/08/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/09/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/10/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/09/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/10/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/11/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/10/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/11/2020' ,'DD/MM/RRRR') AND  TO_DATE('02/12/2020' ,'DD/MM/RRRR') THEN TO_DATE('01/11/2020' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/12/2020' ,'DD/MM/RRRR') AND  TO_DATE('04/01/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/12/2020' ,'DD/MM/RRRR')   ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('05/01/2021' ,'DD/MM/RRRR') AND  TO_DATE('02/02/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/01/2021' ,'DD/MM/RRRR')",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/02/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/03/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/02/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('05/03/2021' ,'DD/MM/RRRR') AND  TO_DATE('08/04/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/03/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('09/04/2021' ,'DD/MM/RRRR') AND  TO_DATE('05/05/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/04/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('06/05/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/06/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/05/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('05/06/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/07/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/06/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('07/07/2021' ,'DD/MM/RRRR') AND  TO_DATE('05/08/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/07/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('06/08/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/09/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/08/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('07/09/2021' ,'DD/MM/RRRR') AND  TO_DATE('06/10/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/09/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('07/10/2021' ,'DD/MM/RRRR') AND  TO_DATE('04/11/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/10/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('05/11/2021' ,'DD/MM/RRRR') AND  TO_DATE('07/12/2021' ,'DD/MM/RRRR') THEN TO_DATE('01/11/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('08/12/2021' ,'DD/MM/RRRR') AND  TO_DATE('07/01/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/12/2021' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('08/01/2022' ,'DD/MM/RRRR') AND  TO_DATE('03/02/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/01/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('04/02/2022' ,'DD/MM/RRRR') AND  TO_DATE('07/03/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/02/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('08/03/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/04/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/03/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('07/04/2022' ,'DD/MM/RRRR') AND  TO_DATE('05/05/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/04/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('06/05/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/06/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/05/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('07/06/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/07/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/06/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('07/07/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/08/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/07/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('05/08/2022' ,'DD/MM/RRRR') AND  TO_DATE('06/09/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/08/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('07/09/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/10/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/09/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('05/10/2022' ,'DD/MM/RRRR') AND  TO_DATE('04/11/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/10/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('05/11/2022' ,'DD/MM/RRRR') AND  TO_DATE('02/12/2022' ,'DD/MM/RRRR') THEN TO_DATE('01/11/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('03/12/2022' ,'DD/MM/RRRR') AND  TO_DATE('05/01/2023' ,'DD/MM/RRRR') THEN TO_DATE('01/12/2022' ,'DD/MM/RRRR') ",
          "   WHEN TRUNC(FECHA_EJECUCION) BETWEEN  TO_DATE('06/01/2023' ,'DD/MM/RRRR') AND  TO_DATE('03/02/2023' ,'DD/MM/RRRR') THEN TO_DATE('01/01/2023' ,'DD/MM/RRRR') ",
          "   ELSE (FECHA_EJECUCION) END PERIODO_EJECUCION,",
          "ID_ESTADO_OT,",
          "ESTADO_OT,",
          "USUARIO_ALTA,",
          "count(id_factura) OVER (PARTITION BY ID_ORDEN_TRABAJO_LINEA) CONTADOR",
          "FROM(",
          "SELECT OT.ID_ORDEN_TRABAJO,",
          "OTL.ID_ORDEN_TRABAJO_LINEA,",
          "P.ID_PEDIDO,",
          "PL.ID_PEDIDO_LINEA,",
          "F.ID_FACTURA,",
          "TRUNC(OT.FECHA_HORA_EXPEDICION) FECHA_HORA_EXPEDICION, ",
          "TRUNC(OT.FECHA_ALTA) FECHA_ALTA, ",
          "OTL.DESCRIPCION, ",
          "OTL.PRECIO_UNITARIO_PROVEEDOR PRECIO_UNITARIO, ",
          "OTL.UNIDADES_PROVEEDOR,",
          "OTL.ID_DIVISA, ",
          "COALESCE(TRUNC(FECHA_HORA_RESOLUCION_PROVEEDOR),TRUNC(OT.FECHA_HORA_EXPEDICION))  FECHA_EJECUCION,",
          "MEA.ID_TIPO_ESTADO_ACTUAL ID_ESTADO_OT,",
          "TEI.DESCRIPCION ESTADO_OT,",
          "OT.USUARIO_ALTA",
          "FROM AJENOS.PEDIDO P",
          "JOIN AJENOS.PEDIDO_LINEA PL",
          "ON P.ID_PEDIDO=PL.ID_PEDIDO",
          "JOIN AJENOS.ORDEN_TRABAJO_LINEA OTL",
          "ON PL.ID_PEDIDO_LINEA=OTL.ID_PEDIDO_LINEA AND OTL.ID_TIPO_ESTADO not in (605,710)",
          "JOIN AJENOS.ORDEN_TRABAJO OT",
          "ON OT.ID_ORDEN_TRABAJO=OTL.ID_ORDEN_TRABAJO",
          "LEFT JOIN FACTURAS.FACTURA_LINEA_AJENOS F",
          "ON F.ID_ORDEN_TRABAJO_LINEA = OTL.ID_ORDEN_TRABAJO_LINEA",
          "JOIN AJENOS.MAQUINA_ESTADO_AJENOS MEA ",
          "ON MEA.ID_MAQUINA_ESTADO_AJENOS = OTL.ID_MAQUINA_ESTADO_AJENOS_FACTURACION AND MEA.ID_TIPO_ESTADO_ACTUAL in (704,701,703)",
          "JOIN AJENOS.MAQUINA_ESTADO_AJENOS MEA2 ",
          "ON MEA2.ID_MAQUINA_ESTADO_AJENOS = OT.ID_MAQUINA_ESTADO_AJENOS_RECEPCION AND MEA2.ID_TIPO_ESTADO_ACTUAL not in (709)",
          "JOIN MAESTROS.TIPO_ESTADO TE ",
          "ON TE.ID_TIPO_ESTADO = MEA.ID_TIPO_ESTADO_ACTUAL  AND TE.ID_TIPO_MAQUINA_ESTADO = 97",
          "JOIN MAESTROS.TIPO_ESTADO_IDIOMA TEI ",
          "ON TE.ID_TIPO_ESTADO = TEI.ID_TIPO_ESTADO AND TEI.ID_IDIOMA = 3",
          "WHERE P.ID_DEPARTAMENTO_EMPRESA_GRUPO in (24,903,67,42, 801, 942, 957, 1057, 113, 659, 110, 661, 643, 985, 1731, 506, 1823) AND YEAR(P.FECHA_ALTA)>=2019 With ur)\")",
          "in",
          "    tabla"
        ]
      },
      {
        "name": "AUX_SEGURIDAD_AREA_NEGOCIO",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"SELECT --AUX_SSO_AREA",
          "VALOR AS AREAN,",
          "UPPER(DESCRIPCION_USUARIO) AS LOGINID",
          "FROM APLICACION.APLICACION_USUARIO_ATRIBUTO_MULTIVALUADO_VALOR",
          "WHERE ID_APLICACION = 'AppTabularAgileyOrganizacion'",
          "AND DESCRIPCION_ATRIBUTO_MULTIVALUADO='areas_negocio' ",
          "AND VALOR <> ''",
          "WITH UR\"),",
          "    #\"Tipo cambiado\" = Table.TransformColumnTypes(Origen,{{\"AREA\", Int64.Type}})",
          "in",
          "    #\"Tipo cambiado\""
        ]
      },
      {
        "name": "CADENA_LOCAL",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"Oracle/exapre_rep\",",
          "     DIM_CADENA_LOCAL = Value.NativeQuery(Source, ",
          "    \"Select  CASE WHEN ID_CADENA in(4,8) THEN ID_CADENA+10 ELSE ID_CADENA_AD END ID_CADENA,",
          "CASE WHEN ID_CADENA in(4,8) THEN CADENA ELSE CADENA_AD END CADENA",
          "FROM DMCOMERCIAL.DIM_CADENA",
          "UNION",
          "SELECT  0 ID_CADENA, 'INDITEX' CADENA FROM DUAL",
          "UNION",
          "SELECT  -1 ID_CADENA, 'MULTICADENA' CADENA FROM DUAL",
          "UNION ",
          "SELECT -2 ID_CADENA, 'DESCONOCIDO' CADENA FROM DUAL",
          "\")",
          "   in",
          "    DIM_CADENA_LOCAL"
        ]
      },
      {
        "name": "Parámetro1",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = #\"Archivo de ejemplo\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Archivo de ejemplo\", Type=\"Binary\", IsParameterQueryRequired=true]",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Transformar archivo de ejemplo",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = Excel.Workbook(Parámetro1, null, true),",
          "    #\"GRUPOS IDENTIFICADOS_Sheet\" = Origen{[Item=\"GRUPOS IDENTIFICADOS\",Kind=\"Sheet\"]}[Data],",
          "    #\"Encabezados promovidos\" = Table.PromoteHeaders(#\"GRUPOS IDENTIFICADOS_Sheet\", [PromoteAllScalars=true])",
          "in",
          "    #\"Encabezados promovidos\""
        ]
      },
      {
        "name": "Archivo de ejemplo",
        "kind": "m",
        "expression": [
          "let",
          "    Source=#\"Folder/\\\\axinfsusrv2\\compartes\\Compartes1\\PBIMapaRecursosGPS\\TABULAR\",",
          "    #\"Filas filtradas\" = Table.SelectRows(Source, each ([Name] = \"AGRUPACIONPROVEEDORES.xlsx\")),",
          "    Navegación1 = #\"Filas filtradas\"{0}[Content]",
          "in",
          "    Navegación1"
        ]
      },
      {
        "name": "Transformar archivo",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = (Parámetro1) => let",
          "        Origen = Excel.Workbook(Parámetro1, null, true),",
          "        #\"GRUPOS IDENTIFICADOS_Sheet\" = Origen{[Item=\"GRUPOS IDENTIFICADOS\",Kind=\"Sheet\"]}[Data],",
          "        #\"Encabezados promovidos\" = Table.PromoteHeaders(#\"GRUPOS IDENTIFICADOS_Sheet\", [PromoteAllScalars=true])",
          "    in",
          "        #\"Encabezados promovidos\"",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Parámetro2",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = #\"Archivo de ejemplo (2)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Archivo de ejemplo (2)\", Type=\"Binary\", IsParameterQueryRequired=true]",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Transformar archivo de ejemplo (2)",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = Excel.Workbook(Parámetro2, null, true),",
          "    Hoja1_Sheet = Origen{[Item=\"Hoja1\",Kind=\"Sheet\"]}[Data],",
          "    #\"Encabezados promovidos\" = Table.PromoteHeaders(Hoja1_Sheet, [PromoteAllScalars=true])",
          "in",
          "    #\"Encabezados promovidos\""
        ]
      },
      {
        "name": "Archivo de ejemplo (2)",
        "kind": "m",
        "expression": [
          "let",
          "    Source=#\"Folder/\\\\axinfsusrv2\\compartes\\Compartes1\\PBIMapaRecursosGPS\\TABULAR\",",
          "    #\"Filas filtradas\" = Table.SelectRows(Source, each ([Name] = \"EstimadoCierre.xlsx\")),",
          "    Navegación1 = #\"Filas filtradas\"{0}[Content]",
          "in",
          "    Navegación1"
        ]
      },
      {
        "name": "Transformar archivo (2)",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = (Parámetro2) => let",
          "        Origen = Excel.Workbook(Parámetro2, null, true),",
          "        Hoja1_Sheet = Origen{[Item=\"Hoja1\",Kind=\"Sheet\"]}[Data],",
          "        #\"Encabezados promovidos\" = Table.PromoteHeaders(Hoja1_Sheet, [PromoteAllScalars=true])",
          "    in",
          "        #\"Encabezados promovidos\"",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Parámetro3",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = #\"Archivo de ejemplo (3)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Archivo de ejemplo (3)\", Type=\"Binary\", IsParameterQueryRequired=true]",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Transformar archivo de ejemplo (3)",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = Excel.Workbook(Parámetro3, null, true),",
          "    Hoja1_Sheet = Origen{[Item=\"Hoja1\",Kind=\"Sheet\"]}[Data],",
          "    #\"Encabezados promovidos\" = Table.PromoteHeaders(Hoja1_Sheet, [PromoteAllScalars=true])",
          "in",
          "    #\"Encabezados promovidos\""
        ]
      },
      {
        "name": "Archivo de ejemplo (3)",
        "kind": "m",
        "expression": [
          "let",
          "    Source=#\"Folder/\\\\axinfsusrv2\\compartes\\Compartes1\\PBIMapaRecursosGPS\\TABULAR\",",
          "    #\"Filas filtradas\" = Table.SelectRows(Source, each ([Name] = \"PROYECTO PRESUPUESTARIO EQUIPO PRODUCTO HASTAG.xlsx\")),",
          "    Navegación1 = #\"Filas filtradas\"{0}[Content]",
          "in",
          "    Navegación1"
        ]
      },
      {
        "name": "Transformar archivo (3)",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = (Parámetro3) => let",
          "        Origen = Excel.Workbook(Parámetro3, null, true),",
          "        Hoja1_Sheet = Origen{[Item=\"Hoja1\",Kind=\"Sheet\"]}[Data],",
          "        #\"Encabezados promovidos\" = Table.PromoteHeaders(Hoja1_Sheet, [PromoteAllScalars=true])",
          "    in",
          "        #\"Encabezados promovidos\"",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Parámetro4",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = #\"Archivo de ejemplo (4)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Archivo de ejemplo (4)\", Type=\"Binary\", IsParameterQueryRequired=true]",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Transformar archivo de ejemplo (4)",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = Excel.Workbook(Parámetro4, null, true),",
          "    Hoja1_Sheet = Origen{[Item=\"Hoja1\",Kind=\"Sheet\"]}[Data],",
          "    #\"Encabezados promovidos\" = Table.PromoteHeaders(Hoja1_Sheet, [PromoteAllScalars=true])",
          "in",
          "    #\"Encabezados promovidos\""
        ]
      },
      {
        "name": "Archivo de ejemplo (4)",
        "kind": "m",
        "expression": [
          "let",
          "    Source=#\"Folder/\\\\axinfsusrv2\\compartes\\Compartes1\\PBIMapaRecursosGPS\\TABULAR\",",
          "    #\"Filas filtradas\" = Table.SelectRows(Source, each ([Name] = \"PEDIDO EQUIPO PRODUCTO HASTAG.xlsx\")),",
          "    Navegación1 = #\"Filas filtradas\"{0}[Content]",
          "in",
          "    Navegación1"
        ]
      },
      {
        "name": "Transformar archivo (4)",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = (Parámetro4) => let",
          "        Origen = Excel.Workbook(Parámetro4, null, true),",
          "        Hoja1_Sheet = Origen{[Item=\"Hoja1\",Kind=\"Sheet\"]}[Data],",
          "        #\"Encabezados promovidos\" = Table.PromoteHeaders(Hoja1_Sheet, [PromoteAllScalars=true])",
          "    in",
          "        #\"Encabezados promovidos\"",
          "in",
          "    Origen"
        ]
      },
      {
        "name": "Referencia Axuliar",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"SELECT pl.id_pedido_linea AS ID_PEDIDO_LINEA, CASE WHEN a.referencia_auxiliar='' THEN 'DESCONOCIDO' ELSE a.referencia_auxiliar END REFERENCIA_AUXILIAR",
          "FROM ajenos.pedido p",
          "JOIN ajenos.pedido_linea pl on(p.id_pedido=pl.id_pedido)",
          "LEFT JOIN ajenos.ajeno a ON (a.id_Ajeno=pl.id_Ajeno)",
          "WHERE YEAR(p.fecha_alta)>=year(sysdate)-2 AND p.id_departamento_empresa_grupo in(24,903,67,42, 801, 942, 957, 1057, 113, 659, 110, 661, 643, 985, 1731, 506, 1823)\"),",
          "    #\"Duplicados quitados\" = Table.Distinct(Origen)",
          "in",
          "    #\"Duplicados quitados\""
        ]
      },
      {
        "name": "Aux_Categoria_Presupuesto_Tipo_Agregado",
        "kind": "m",
        "expression": [
          "let",
          " Source = #\"Oracle/exapre_rep\",",
          " ",
          "     MIC_FACT_PRESUPUESTO_ANUAL = Value.NativeQuery(Source, ",
          "    \"SELECT DISTINCT",
          "ID_INFOR_PRESUPUESTO ID_INFOR_PRESUP,",
          "TIPO_AGREGADO",
          "FROM DMFINANCIERO.MIC_FACT_PRESUP_COMPRA_SIST",
          "WHERE TIPO_AGREGADO IS NOT NULL\"),",
          "    #\"Consulta anexada\" = Table.Combine({MIC_FACT_PRESUPUESTO_ANUAL, Aux_Categoría_Presupuesto_Tipo_Agregado_NA}),",
          "    #\"Filas ordenadas\" = Table.Sort(#\"Consulta anexada\",{{\"ID_INFOR_PRESUP\", Order.Ascending}}),",
          "    #\"Tipo cambiado\" = Table.TransformColumnTypes(#\"Filas ordenadas\",{{\"ID_INFOR_PRESUP\", Int64.Type}}),",
          "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Tipo cambiado\",{{\"TIPO_AGREGADO\", \"DESCRIPCION\"}})",
          "in",
          "    #\"Columnas con nombre cambiado\""
        ]
      },
      {
        "name": "Aux_Categoría_Presupuesto_Tipo_Agregado_NA",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45W0jVU0lFycQ129vfzd/Z08VeKjQUA\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [ID_INFOR_PRESUP = _t, TIPO_AGREGADO = _t]),",
          "    #\"Tipo cambiado\" = Table.TransformColumnTypes(Origen,{{\"ID_INFOR_PRESUP\", Int64.Type}})",
          "in",
          "    #\"Tipo cambiado\""
        ]
      },
      {
        "name": "Dim Presupuesto Categoría Tipo Agregado",
        "kind": "m",
        "expression": [
          "let",
          "    Origen = Aux_Categoria_Presupuesto_Tipo_Agregado,",
          "    #\"Columnas quitadas\" = Table.RemoveColumns(Origen,{\"ID_INFOR_PRESUP\", \"ID_CATEG_PRESUP_PADRE\", \"COD_CATEG_PRESUP\", \"COD_TIPO_CATEG\", \"DESCRIPCION_TIPO_CATEG\"}),",
          "    #\"Duplicados quitados\" = Table.Distinct(#\"Columnas quitadas\")",
          "in",
          "    #\"Duplicados quitados\""
        ]
      },
      {
        "name": "Referencia Axuliar Descripción",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"SELECT pl.id_pedido_linea AS ID_PEDIDO_LINEA, CASE WHEN a.referencia_auxiliar='' THEN 'DESCONOCIDO' ELSE a.referencia_auxiliar END REFERENCIA_AUXILIAR",
          "FROM ajenos.pedido p",
          "JOIN ajenos.pedido_linea pl on(p.id_pedido=pl.id_pedido)",
          "LEFT JOIN ajenos.ajeno a ON (a.id_Ajeno=pl.id_Ajeno)",
          "WHERE YEAR(p.fecha_alta)>=year(sysdate)-2 AND p.id_departamento_empresa_grupo in (24,903,67,42, 801, 942, 957, 1057, 113, 659, 110, 661, 643, 985, 1731, 506, 1823)\"),",
          "    #\"Duplicados quitados\" = Table.Distinct(Origen),",
          "    #\"Columnas quitadas\" = Table.RemoveColumns(#\"Duplicados quitados\",{\"ID_PEDIDO_LINEA\"}),",
          "    #\"Duplicados quitados1\" = Table.Distinct(#\"Columnas quitadas\"),",
          "    #\"Filas filtradas\" = Table.SelectRows(#\"Duplicados quitados1\", each [REFERENCIA_AUXILIAR] <> null),",
          "    #\"Columnas con nombre cambiado\" = Table.RenameColumns(#\"Filas filtradas\",{{\"REFERENCIA_AUXILIAR\", \"DESCRIPCION\"}})",
          "in",
          "    #\"Columnas con nombre cambiado\""
        ]
      },
      {
        "name": "Albarán Hecho particion",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"OleDb/provider=IBMDADB2 DB2COPY1;data source=INDITEX;location=axpredb22\",",
          "    Origen = Value.NativeQuery(Source, ",
          "    \"DECLARE GLOBAL TEMPORARY TABLE session.T1",
          "(ID_RECEPCION BIGINT,FECHA_HORA_RECEPCION TIMESTAMP ,UNIDADES_RECIBIDAS BIGINT)ON COMMIT PRESERVE ROWS not logged with replace;",
          "INSERT INTO session.T1",
          "(SELECT  ID_RECEPCION,FECHA_HORA_RECEPCION, UNIDADES_RECIBIDAS",
          "FROM AJENOS.RECEPCION R  ",
          " WHERE (r.fecha_hora_recepcion) >= current_timestamp -2 years",
          "with ur);",
          "DECLARE GLOBAL TEMPORARY TABLE session.T2",
          "( ID_ALBARAN_LINEA BIGINT,",
          "FECHA_RECEPCION TIMESTAMP,",
          "UNIDADES_RECIBIDAS BIGINT",
          ")",
          "ON COMMIT PRESERVE ROWS not logged with replace;",
          "INSERT INTO session.T2(SELECT ALR.ID_ALBARAN_LINEA, R.FECHA_HORA_RECEPCION AS FECHA_RECEPCION, R.UNIDADES_RECIBIDAS AS UNIDADES_RECIBIDAS",
          "            FROM session.T1 R",
          "                 INNER JOIN AJENOS.ALBARAN_LINEA_RECEPCION ALR",
          "                    ON R.ID_RECEPCION = ALR.ID_RECEPCION WITH UR);",
          "SELECT DISTINCT pl.id_pedido,PL.ID_PEDIDO_LINEA AS ID_LINEA_PEDIDO, REX.FECHA_RECEPCION FECHA_RECEPCION, al.precio_unitario, REX.UNIDADES_RECIBIDAS, AL.ID_ALBARAN, AL.ID_ALBARAN_LINEA",
          "      FROM AJENOS.ALBARAN_LINEA AL",
          "           INNER JOIN session.T2 REX",
          "              ON (AL.ID_ALBARAN_LINEA = REX.ID_ALBARAN_LINEA)",
          "           INNER JOIN AJENOS.PEDIDO_LINEA PL",
          "              ON (AL.ID_PEDIDO_LINEA = PL.ID_PEDIDO_LINEA)",
          "           INNER JOIN AJENOS.PEDIDO P ON (PL.ID_PEDIDO = P.ID_PEDIDO)",
          "      WHERE ID_DEPARTAMENTO_EMPRESA_GRUPO IN (24,",
          "                                              903,",
          "                                              801,",
          "                                              67,42, 942, 957, 1057, 113, 659, 110, 661, 643, 985, 1731, 506, 1823)",
          "      WITH UR\"),",
          "    #\"Fecha extraída\" = Table.TransformColumns(Origen,{{\"FECHA_RECEPCION\", DateTime.Date, type date}})",
          "in",
          "    #\"Fecha extraída\""
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "500"
      }
    ]
  }
}